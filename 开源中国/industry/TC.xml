<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-綜合資訊</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 12 Jul 2024 13:11:27 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>開源日報 | FB 開源 C++框架 Ocean；程序員起訴 GitHub 後續；開源 AI 智能眼鏡；大模型「四小龍」；英偉達有的 AMD 也要有</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.7.12&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/301677/facebook-research-ocean&quot;&gt;Facebook 開源 C++ 框架 Ocean：用於計算機視覺和增強現實&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Ocean 是&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#374151&quot;&gt;Facebook 內部用於&lt;strong&gt;計算機視覺 (CV) 和增強現實 (AR)&amp;nbsp;&lt;/strong&gt;應用程序開發的開源 C++ 框架。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#374151&quot;&gt;Ocean 主要使用 C++ 編寫，且不依賴於特定平台，&lt;/span&gt;用於執行各種任務，包括計算機視覺、幾何、媒體處理、網絡和渲染。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;1292&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5f006526bba6436099e19221ceb275bb79a.png&quot; width=&quot;1960&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/301682&quot;&gt;螞蟻集團開源 EchoMimic：支持為人像照片對口型、生成肖像動畫視頻&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;EchoMimic 具備較高的穩定性和自然度，通過融合音頻和麪部標誌點（面部關鍵特徵和結構，通常位於眼、鼻、嘴等位置）的特徵，可生成更符合真實面部運動和表情變化的視頻。其支持單獨使用音頻或面部標誌點生成肖像視頻，也支持將音頻和人像照片相結合做出 「對口型」 一般的效果。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a6d4669d64643dba560ee92bb37c78c9634.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOnbekbL5i%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;英偉達開源混合 Mamba-Transformer 視覺骨幹架構&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;英偉達公開了 MambaVision 的 PyTorch 實現：混合 Mamba-Transformer 視覺骨幹。MambaVision 採用分層架構，同時使用自關注（self-attention）和混合模塊。&lt;/p&gt; 
  &lt;p&gt;視覺骨幹架構（Vision backbone）是視覺網絡中用來提取特徵的部分，在獲取分析內容後，利用提取的特徵完成各種任務，比如圖像分割、目標檢測等。&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/301731/github-copilot-ms-openai-dmca&quot; target=&quot;news&quot;&gt;程序員起訴微軟、GitHub 和 OpenAI 有了後續：法官駁回大部分索賠要求&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2022 年 11 月，一羣程序員對微軟、GitHub 和 OpenAI&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/216453/github-is-being-sued&quot;&gt;提起集體訴訟&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，指控 GitHub Copilot 違反版權法，在沒有適當歸屬或遵守開源許可的情況下使用了他們的代碼。&lt;/span&gt;在當時，這被視為可能改變生成式 AI 行業遊戲規則的事件，但後來情況發生了變化。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;7 月 5 日，法官 Jon Tigar 對原告的又一批索賠做出了&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fregmedia.co.uk%2F2024%2F07%2F08%2Fgithub_copilot_dismiss.pdf&quot; target=&quot;_blank&quot;&gt;裁決&lt;/a&gt;。總體而言，GitHub、微軟和 OpenAI 都取得了勝利。三項訴索賠要求被駁回，只有一項獲準繼續審理。根據微軟和 GitHub 律師的統計，目前總共只剩下兩項指控。&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FRW9ZmKcq64y-4FNsWp7skw&quot; target=&quot;_blank&quot;&gt;奔跑了五年，就為做一件難而正確的事，繼續奔跑！&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;五年前的今天，我做了一艱難的決定，將開發了兩年多的時序大數據處理平台 TDengine 的核心代碼全部開源。沒想到的是，TDengine 開源後迅速引起了開發者的高度關注，在 GitHub 全球趨勢排行榜上多次排名第一。截止到今天，TDengine 在 GitHub 上的 Star 已經超過 23k, Fork 數超過 4.8k, 在全球檢測到的安裝實例數超過 56 萬，遍佈全球 60 多個國家和地區。&lt;/p&gt; 
     &lt;p&gt;這些數字讓我這個年過 50 但仍然衝在 coding 第一線的老程序員興奮不已，因為有人 Star、有人用，它説明我們沒日沒夜開發的代碼，給大家帶來了價值。海量的用戶羣，是對一個程序員工作的最大回報。今天借開源五週年之際，回顧一下 TDengine 的整個發展旅程，與眾多的開發者和創業者分享。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;愛倒騰的程序員&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6444741184%2FOncy7E2y7&quot; target=&quot;_blank&quot;&gt;低成本的開源 AI 智能眼鏡&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;一款開源的低成本的 AI 智能眼鏡，成本僅需 25 美元（國內的替代品物料可以做到百元左右），就可以將普通的眼鏡升級成 AI 智能眼鏡。它支持錄製視頻、識別物體和翻譯文本等功能，但需要與電腦配合使用，暫不支持在鏡片上顯示內容。&lt;/p&gt; 
    &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-87f625e3485fdebff2c6eeb6c2c2cdb0579.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
    &lt;p&gt;GitHub：github.com/BasedHardware/OpenGlass&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   - 微博&amp;nbsp;
   &lt;strong&gt;林亦 LYi&lt;/strong&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FOnbAE81Uw&quot; target=&quot;_blank&quot;&gt;類似 ChatGPT 且適用於蘋果設備的客戶端&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;Enchanted 是一個開源的、兼容 Ollama 的優雅 macOS/iOS/visionOS 應用程序，適用於使用 Llama 2、Mistral、Vicuna、Starling 等私有託管模型。它本質上是一個 ChatGPT 應用界面，可以連接到您的私有模型。Enchanted 的目標是提供一個產品，能夠在 iOS 生態系統（包括 macOS、iOS、Watch 和 Vision Pro）中，實現無過濾、安全、私密和多模態的使用體驗。&lt;/p&gt; 
    &lt;p&gt;項目地址：&lt;span style=&quot;background-color:#ffffff; color:#636363&quot;&gt;github.com/AugustDev/enchanted&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;寶玉 xp&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5648162302%2FOn5ESmDmO&quot; target=&quot;_blank&quot;&gt;多模態 Agent 框架 - OmAgent 開源&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;OmAgent 是一個多模態智能體系統，專注於利用多模態大語言模型能力以及其他多模態算法來做一些有趣的事。OmAgent 項目包含一個專為解決多模態任務而設計的輕量級智能體框架 omagent_core。項目利用這個框架搭建了超長複雜視頻理解系統——OmAgent，當然你可以利用它實現你的任何想法。&lt;/p&gt; 
     &lt;p&gt;項目：github.com/om-ai-lab/OmAgent/blob/main/README_ZH.md&lt;br&gt; 論文：arxiv.org/abs/2406.16620&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;黃建同學&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F7517400647%2F1c0126e4705905fgts&quot; target=&quot;_blank&quot;&gt;智能汽車亟待繫好網絡「安全帶」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#4d4f53; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4d4f53&quot;&gt;自動駕駛技術產業化進程正在加速。作為人工智能賦能汽車業的典型應用場景，自動駕駛既是汽車業變革的明確方向，又是數字經濟與實體經濟深度融合的新賽道，也是發展新質生產力的重要領域。在驚歎「自動駕駛已經進化到這種程度」的同時，更應關注的是自動駕駛技術的安全性，是我國「車路雲一體化」技術路線帶來的產業機會。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;經濟參考報&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1804338793968622355%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;誰才是大模型「四小龍」？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;有一種説法是，智譜 AI、月之暗面、百川智能、面壁智能，這四家公司是新的「四小龍」，在 6 月中旬舉辦的 2024 智源大會上，四位 CEO 首次同台，「四小龍」的説法就傳開了。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;還有人説中國有「大模型五虎」：百川智能、智譜 AI、月之暗面、MiniMax、雲從科技。這裏邊把面壁智能剔除了。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;定焦&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_7399555658_1b90c424a020018crm.html&quot; target=&quot;_blank&quot;&gt;專訪北京超算：國產芯片 15 天左右可跑通大模型，高端算力仍需各方努力&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;算力與數據，是支撐超大規模訓練模型發展的兩大基礎設施。面對全球追逐大模型熱潮，高端 AI 芯片短缺，算力問題也成為各行業實現人工智能普惠的最大難點。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;紅星資本局&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.21jingji.com%2Farticle%2F20240711%2Fherald%2F7ce5468393eaadb9e88a1e57d188e627.html&quot; target=&quot;_blank&quot;&gt;AI 算力價格調查：價格迴歸下的供需平衡術&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1d1d1d&quot;&gt;需求高企的同時，行業也在階段性發生變化。從國內市場來看，今年以來，隨着國內對算力供需關係平衡的預期，部分算力價格開始鬆動。一方面，有供應鏈的消息稱，英偉達為了吸引客戶，將 H20 單卡價格從 12.5 萬下降至 10 萬左右；另一方面，從 AI 服務器角度來看，當前也存在一定的價格回調。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;21 世紀經濟報道&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_6192937794_17120bb42020029iy6.html&quot; target=&quot;_blank&quot;&gt;大模型玩具，AI 硬件的第一個突破口&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;在硬件中搭載大模型的思路，並不難想到，幾乎所有的教育公司都會在產品中注入 AI，尤其是「雙減」後，面向義務教育階段的學科培訓受限，教育硬件成為行業玩家掘金的重點。學習機、詞典筆、甚至是早教機、故事機、單詞卡等小品類硬件都成為各家發力的對象，內容之外，AI 就是其最大賣點。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;界面&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8b9eRg2t67i&quot; target=&quot;_blank&quot;&gt;蘇媽擲 48 億現金吞下 AI 模型公司，英偉達有的 AMD 也要有&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;CUDA 成功的一個因素是他們擁有一支內部研究團隊，這支團隊使用 CUDA 做一些創新。有時將這些創新轉化為產品（如 OptiX），更多地是為了展示硬件能力以及提供實現方法……&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;不知道 AMD 對這次收購有何打算，但可以看到擁有一個內部的大模型團隊為客戶創建模型、進行基準測試並改進產品可能帶來很大的價值。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;參考消息網&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmojolicious%2Fmojo.js&quot; target=&quot;_blank&quot;&gt;mojolicious/mojo.js&lt;/a&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;242&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-85e623be091bf63457ad6c1b9248ad84332.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmojolicious%2Fmojo.js&quot; target=&quot;_blank&quot;&gt;https://github.com/mojolicious/mojo.js&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;mojo.js 是 Node.js 實時 Web 框架，可將它視作採用 TypeScript 重寫的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/p/mojolicious&quot;&gt;Mojolicious&lt;/a&gt;。mojo.js 使用了所有最新的 JavaScript 特性，專為聚焦超媒體 (hypermedia) 的後端 Web 服務精心設計。&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://my.oschina.net/u/4090830/blog/11471110&quot; target=&quot;_blank&quot;&gt;探討打造「高可用架構」祕籍&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;高可用性的文章多如牛毛，看得人眼花繚亂。今天，咱們換個花樣，以終為始，來聊聊如何實現系統業務的高可用性這個宏偉目標。本文覆蓋高可用架構設計、常見架構模式、高可用開發運維、大促高可用保障、業務高可用、COE 覆盤等方面的理念和思考。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;262&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11vqPVYDsCSUWk11LU.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用戶觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8UrsjXMqg1vt2HlRArLZig&quot; target=&quot;_blank&quot;&gt;JetBrains IDE 全系列採用新的默認「皮膚」：即將面向所有用戶提供&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：能不能把內存佔用改改，淨整些花裏胡哨的&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：他用 java 內存佔用再優化也好不到哪去&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：越來越像 vs code&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：應該説是 vscode 設計的確實好&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：和現在的 2024.1 看不出任何區別&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：就是默認開啓新 UI 了而已。。原本是默認不開啓的。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：趕緊把 clione nova 搞好合並進 clion 這才是正事。fleet 還沒有正式版啊，還要多久&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：不是已經合了嗎？還有 nova 嗎？&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：還是喜歡 Material ui&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：用了幾天，還是不習慣&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：rider 開大項目比 vs 還要卡，我以為 vs 的設計器已經夠卡了，rider 比他還卡，不過看在 rider 代碼補全機制比較優秀還是忍忍&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 12：能不能便宜點&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 13：我都用了 1、2 年新 UI 了，特別棒！比經典的 UI 清爽多了！很喜歡！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 14：不知道什麼時候 visual studio 也能跟上，idea 這個模式開小窗口的時候很友好&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 15：Fira code 字體在新 ui 裏顯示不太正常，字符間距格外的小&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 16：新 UI 我倒是挺喜歡，新終端做的不好，用起來很卡&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 17：降低了視覺複雜性，增高了操作複雜性。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FxdoLGPPNbwt2ot46d24_SQ&quot; target=&quot;_blank&quot;&gt;VidHub 播放器禁止播放版權受保護的視頻&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：&lt;/span&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;我覺得應該備案過的視頻才能被播放&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：&lt;/span&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;逼着每個程序員自己寫一個的節奏&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：&lt;/span&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;保護過頭，屬於是溺愛了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：&lt;/span&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;看了消息説今天更新了版本去掉了這個版權檢測&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：&lt;/span&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;退款！&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/301675/spring-framework-6-1-11-released&quot; target=&quot;_blank&quot;&gt;Spring Framework 6.1.11 發佈&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：想當年，第一次用的時候，就一個 spring.jar&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：Spring 6 都出來了，我們公司還在用 Spring 3&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301808</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301808</guid>
            <pubDate>Fri, 12 Jul 2024 10:19:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>探討打造「高可用架構」祕籍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用性的文章多如牛毛，看得人眼花繚亂。今天，咱們換個花樣，以終為始，來聊聊如何實現系統業務的高可用性這個宏偉目標。本文覆蓋&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;高可用架構設計、常見架構模式、高可用開發運維、大促高可用保障、業務高可用、COE 覆盤等&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;方面的理念和思考。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用性是個宏大的主題，覆蓋的領域廣泛。我們要聊的，都是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;實實在在的團隊實踐經驗和教訓&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本文不包含異地多活等議題。現在，讓我們一起踏上這場關於高可用性的探索之旅吧！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:rgba(255, 255, 255, 0.86); color:#07133e&quot;&gt;為了您的閲讀體驗，請先查看大綱，注意本文篇幅較長，涵蓋了大量細節和分析，需要您花費更多的時間來閲讀。謝謝！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一、高可用概念&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;先來介紹下高可用到底多高算高哈，wiki 上對高可用（High Availability）的定義：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;High availability (HA) is a characteristic of a system which aims to ensure an agreed level of operational performance, usually uptime, for a higher than normal period.&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用（High Availability）是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系統所能提供無故障服務的一種能力&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。業界衡量系統可用性的方式主要有 2 種：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;時間緯度的系統可用性。 請求緯度的系統可用性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、時間緯度的系統可用性&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;談可用性不需要繞來繞去，大家只談 SLA 即可。業界度量高可用能力也有統一標準：判斷宕機時間，並以此計算出每年系統可用時間達到幾個 9，來判斷高可用架構是否健壯。具體如下表所示：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11nfqLENYxcaCIIAQ.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一般來説，我們的觀念裏一個服務至少要做到 99.9% 才稱為基本上可用，是合格性產品。否則基本很難被別人使用。一般大家都在談年 SLA，但是年 SLA 對研發來説一般沒有任何實際工程指導意義。我們更應該看重的是季度 SLA，甚至月 SLA，甚至周 SLA。這所帶來的挑戰就更大了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這裏為什麼要加 99.95% 呢？第 2 章節會説明&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;請求緯度的系統可用性&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;任何一家互聯網公司，都是有流量的低峯期和高峯期，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在低峯期停機 1 分鐘和高峯期停機 1 分鐘，對業務影響的結果完全不同&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。因此，可以基於一種&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更加科學的度量方式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;來評估，即基於一段時間（比如 1 年）的停機影響的請求量佔比進行評估。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;這也是為什麼要求每個團隊在業務低谷期進行上線發佈的原因，同時也是為什麼大促期間問題等級更嚴重的原因。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系統高可用性 = 成功請求數 / 總的請求數&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;。比如&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;系統可用性 99.9%：表示 1000 個請求中允許 1000 * (1- 99.9%) = 1 個請求出錯。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_5&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;二、高可用目標&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;企業給用戶提供能力，需要滿足用戶的訴求。如下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;從用戶體驗角度出發，第一需要確保服務穩定性，第二需要確保功能正確性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;從企業防資損角度出發，第一需要確保應用高可用，第二需要確保業務高可用。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11vqPVYDsCSUWk11LU.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那我們應該如何來系統的分解「提升 SLA」這一個難題呢。我們不能僅僅從系統結構（主備架構、集羣架構等）的角度出發，而應該&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;從業務的視角來考慮高可用的架構設計，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用最終還是迴歸到系統穩定性的建設目標（「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降發生&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」和「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降影響&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、穩定性建設的最終目標&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這裏我引入兩個工業級別的概念 MTBF 和 MTTR。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;MTBF 就是 Mean Time Between Failures 的縮寫, 名為平均失效間隔， 它是指系統有多長時間壞一次。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;MTTR 就是 Mean Time To Repair 的縮寫，名為平均修復時間，它是指修復系統並將其恢復到完整功能所需的時間量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降發生，即降低故障發生的概率，也即對應上面提高 MTBF。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過冗餘設計的思想來實現應用架構的高可用能力保障，同時通過可靠的基礎設施組件，來將應用的高可用能力轉移到基礎設施來提供。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降影響，即降低故障發生後的影響範圍，也即對應上面降低 MTTR。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;早感知，快定位，急止損，優改進。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有了這兩個概念， 我們就可以提出：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11pdvPIi0ut0adibz.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一個服務的可用度，取決於 MTBF 和 MTTR 這兩個因子。從這個公式出發，結合實際情況，就很好理清高可用架構的基本路數了。那就是： &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;要麼提高 MTBF, 要麼降低 MTTR。除此之外別無他法。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、高可用需要考慮的因素&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;回覆下第一章節高可用為什麼要加 99.95% 這個問題。因為 3 個 9（宕機 8.76 小時）對於物流生產環境的影響比較大，但 4 個 9（宕機 52 分鐘）對大部分系統來説又要求太高，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;基於成本和業務容忍度考慮&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，故提出了一個折中的 99.9N（N=5,6,7,8)% 的可用性概念。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;成本&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;系統可用性越高，對你的系統要求也越高，你付出的硬件和人力成本和代價也會越高。需要思考比如從 99.95% 提升到 99.99% 成本是多少，收益是多少，性價比如何？還不如花時間降低 MTTR，否則 MTTR 平均修復時間延長反過來導致可用率降低。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;而對於一些服務並不需要達到那麼高的可用性，因此就可以為這些服務設置較低的可用性目標。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;1、穩定比省錢更重要，所有省錢的前提都是需要保證系統穩定性。但也需要杜絕過度浪費。 2、穩定性壓倒一切，穩定性是 1，其他的是 0，如果沒有穩定性，就什麼都沒有了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;業務容忍度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;系統可用性也需要考慮業務的容忍度。比如支持冪等的服務增加重試提高成功率&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;對於京東結算頁支付功能來説，任何一個請求的失敗都有可能帶來資金的損失，因此對於這類的服務，對於錯誤的容忍度是比較低的，也就要求系統可用性較高 (比如 99.99+%）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;對於常用的商品詳情頁話術展示等而言，即使請求一次失敗也是，可以接受的，下次再請求成功就可以了。因此對於這些業務來説，業務容忍度較高，系統可用性不要求一定要很高（比如 3 個 9）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_8&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、面向業務的高可用目標&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#303030&quot;&gt;在實際的操作和討論過程中，發現這幾個 9 的指標雖然簡單，但是並不能直觀的理解，而且對於我們分析問題和設計方案沒有很強的指導意義，因此我們決定找更加容易理解和操作的目標。結合上面説的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;穩定性的建設目標（「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降發生&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」和「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降影響&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」），出了一個可量化、可衡量、可操作的 2 個高可用目標：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降發生&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;」：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;儘量避免發生問題，618 和 11 大促 0 問題，半年最多發生 1 次問題（P7） &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不出問題當然是高可用的首要目標了，不然的話天天出問題，恢復的再快也沒意義。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降影響&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;：快速恢復業務，30 分鐘內恢復業務（優先止血）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;特別注意這裏我們強調的是「恢復業務」，而不是「解決問題」。很多人在處理生產問題或者故障的時候有一個誤區：那就是一定要找到問題根因，然後解決。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;這樣計算下來一年不可用的時間大約就是 60 分鐘，正好契合 4 個 9 的業界通用的可用性目標。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在這 2 年的項目執行過程中，這個目標真的是非常有用，非常具有指導意義，具體表現為：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;團隊目標聚焦於業務，而不是聚焦於技術，以結果為導向，確保最終效果不會走偏。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;將目標自頂向下分解&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。比如需求改造上線，從 PRD》架構》編碼》測試》發佈，等很容易就得出要做的事情了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;上線結果導向&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。比如上線發佈是否有灰度、回滾、驗證功能？線上有問題多久可快速恢復止血等？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;綜上所述，我們應該從業務角度出發，降發生概率和降影響，否則 MTTR（平均修復時長）高，反過來影響可用率，比如本來服務可用率是 99.95，由於 MTTR 增加，導致高可用降低到 99.9%。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_9&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;三、高可用架構設計原則&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;保持簡單，使問題易於發現，快速解決。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;價值迴歸，成本收益要合理。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h2_10&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、解耦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;耦合度過高是軟件設計中的一大隱患，也是導致系統可用性問題的主要原因&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。記得在大學老師就講「高內聚、低耦合」。大到系統設計小到 API 接口方法。核心都是降低不同模塊間的耦合度，避免&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&quot;牽一髮而動全身&quot;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。一個高度耦合的系統，一旦發生微小的改動，就可能導致意想不到的 bug 和系統崩潰。在這種情況下，即使是最基本的功能維護也會變得非常困難，更不用説實現高可用性了。因此，降低耦合度對於提高系統的可維護性和可用性至關重要。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.1、組件的低耦合原則&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;無循環依賴原則：技術組件之間不能存在循環依賴，即 A 組件不能依賴於 B 組件，同時 B 組件又依賴於 A 組件。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;穩定依賴原則：被依賴的組件應儘量保持穩定，儘量減少因業務需求變化而導致的變化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;穩定抽象原則：為了使組件更加穩定，組件需要具備更高的抽象性，不牽扯具體業務需求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2、面向對象的低耦合原則&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;開閉原則：對修改封閉、對擴展開放，即對象可以擴展新功能，但不能修改原有代碼。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;依賴倒置原則：高層對象不應直接依賴於低層對象，而是應依賴於抽象接口，而抽象接口屬於高層。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;接口隔離原則：不要強迫使用者依賴他們不需要的方法，應該使用接口來隔離方法。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1： 時效上游核心是獲取訂單下傳庫房時間和妥投時間，Promise 內部分為時效域、產能域（訂單佔用倉庫/站點產能），全程跟蹤話術，時效持久化（一線業務）等。基於解耦的原則，優先保障時效、產能域。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;❌待改進案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1：0/1 級線上應用報線程池耗盡，基本原因：es 性能下降導致 jsf 接口 tp99 升高，下游超時時間重試，jsf 線程池被異常接口方法佔用無法釋放，導致其他接口報出線程池耗盡問題。 根本原因：非 0/1 級應用的功能【模糊查詢 es 耗性能的功能】放在 0/1 級應用中，未良好的解耦。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 2：JMQ 和 JSF 接口混合在應用，MQ 消費性能差導致 MQ 積壓，需要重啓服務，但由於有 JSF，導致恢復 JSF 較慢，基本原因：JMQ 環節監控服務,MQ 相關服務性能下降,會導致消息積壓,同時導致其提供的 Jsf 接口性能下降,影響可用率，根本原因：Jmq 服務與 Jsf 服務未解耦，應該拆封,遷移其中的 16 個 Jsf 接口。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_11&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、隔離&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;解耦是邏輯上的分割，但隔離是物理上的分割&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。比如常見的微服務架構，微服務把系統拆分很多業務子系統，各自獨立開發、部署、通過 RPC（比如 JSF）或者 MQ 進行依賴調用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;隔離使得系統間關係更加清晰，故障可以更加隔離開來，問題的發現與解決也更加快速，系統的可用性也更高。下面講下常見的讀寫分類和線程隔離。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.1、讀寫分離&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;讀寫隔離通常是指將讀操作和寫操作分離到不同的服務或實例中處理，比如常見的 MYSQL 數據庫讀寫分離,這個就不細説了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;注意點：如果數據庫主從存在延遲，需要根據業務評估是否可以讀從庫，比如支付金融行業需要數據強一致性，很多是讀主庫的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2、線程隔離&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;線程隔離通常是指線程池的隔離，在應用系統內部，將不同請求分類發送給不同的線程池，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;當某個服務出現故障時，可以根據預先設定的熔斷策略阻斷線程的繼續執行&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;比如 JSF 接口 A 和接口 B 共用相同的線程池，當接口 A 的訪問量激增時，接口 C 的處理效率就會被影響，進而可能產生雪崩效應；使用線程隔離機制，可以將接口 A 和接口 B 做一個很好的隔離。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;注意：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;隔離必須在低耦合的建設基礎原則上進行才有意義&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3b4351&quot;&gt;。如果組件之間的耦合關係千頭萬緒、混亂不堪，隔離只會讓這種情況亂上加亂。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1： 一個應用提供 N 個相關聯的接口，通過 JSF 線程池配置方法的併發大小參數 concurrents，隔離開防止影響其他方法調用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;❌待改進案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1： 現象：數據庫模糊查詢，由於數據庫量大，SQL 未加索引，導致系統卡頓，基本原因：未加索引，導致數據庫 cpu 高，進而影響線上業務，根本原因：數據庫讀寫未分類，如果主從同步延遲可接受範圍內，需要 mysql 讀寫分類，讀的再慢也不能影響線上寫邏輯，如果線上場景讀也是簡單的讀操作&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_12&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、依賴&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;依賴原則是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;去除依賴、弱化依賴、控制依賴。多一個依賴多一分風險。能不依賴則不依賴，能異步弱依賴不要同步強依賴&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過對核心鏈路內外部服務依賴進行治理，我們的目標是實現以下兩個關鍵目標：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;非核心業務故障不影響核心業務&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：通過優化服務依賴關係，確保非核心業務的故障不會對核心業務造成影響。這可以通過輸出服務、應用及場景的依賴關係來實現，包括強弱依賴關係的明確劃分。同時，我們會定期進行全量強弱依賴驗證，以確保核心服務、應用及場景相關上下游依賴的強弱合理清晰。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.提高系統的穩定性：通過弱依賴出現各類異常（包括但不限於超時、失敗等）場景時的容錯邏輯和應急預案，有效避免弱依賴故障對核心業務的影響。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;附：依賴關係和 UMP 服務可用率關係圖&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11BZXNfdfvj92Sn1Q.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_13&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4、異步&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;異步可以認為是在隔離的基礎上進一步解耦&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，將物理上已經分割的組件之間的依賴關係進一步切斷，使故障無法擴散，提高系統可用性。異步在架構上的實現手段主要是使用 MQ 消息隊列。對於那些必須確認服務調用才能繼續下一步操作的應用不適宜異步調用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;比如獲取下傳庫房時效接口，通過異步的方式處理非黃金鍊路業務邏輯，比如訂單時效全程跟蹤發送、定時時效數據庫持久化等。通過異步 MQ 發送消息的形式不影響接口核心流量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1： 現象：promise 對外提供的時效域 JSF 接口 TP99 抖動頻繁，根本原因：是因為發送 JMQ 抖動導致，解決方案：把之前發送 MQ 強依賴改成弱依賴，最終結果：接口 tp99 有明顯下降並且無抖動跳點，性能比較平穩，備註，橘色代表改造前同步發送 MQ 消息，tp99 在 25ms 以上並且抖動比較頻繁，藍色代表改造後採用異步發送 MQ 消息，tp99 保持平穩在 10ms 左右，並且沒有抖動跳點&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-07-02-09-26nvzo07r8Zr9VdlT.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_14&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5、重試&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;超時是一件很容易被忽視的事情，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;超時控制的本質是 fail fast，良好的超時控制可以儘快清空高延遲的請求，儘快釋放資源避免請求堆積。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;對於網絡抖動這種情況，解決的辦法之一就是重試。但重試存在風險，它可能會解決故障，也可能會放大故障。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;需要注意的是，可以重試的服務必須是冪等的，否則是有風險的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。所謂冪等，即服務重複調用和調用一次產生的結果是相同的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;重試方式：同步重試、異步重試&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;重試次數：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;應評估系統的實際情況和業務需求來設置最大重試次數：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;設置過低，可能無法有效地處理該錯誤；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;設置過高，同樣可能造成系統資源的浪費&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.1、重試算法策略：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;線性間隔：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;每次重試間隔時間是固定的，比如每 1s 重試一次。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;線性間隔+隨機時間：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;加入隨機時間可以在線性間隔時間的基礎上波動一個百分比的時間，防止&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;多個請求在同一時間請求&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;指數間隔：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;間隔時間是指數型遞增，例如等待 3s、9s、27s 後重試。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;指數間隔+隨機時間：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;在指數遞增的基礎上添加一個波動時間&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2、重試風暴：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;ServiceA ---retry*3-----&amp;gt; ServiceB ---retry*3-----&amp;gt; ServiceC ---retry*3-----&amp;gt; DB&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;通過上面調用關係簡單介紹下重試風暴：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這樣在一次業務請求中，對 DB 的訪問可能達到 3^(n) 次&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;此時負載高的 DB 便被捲進了重試風暴中，最終很可能導致服務雪崩。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;應該怎麼避免重試風暴呢？可採用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;限制鏈路重試&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;多級鏈路中如果每層都配置重試可能導致調用量指數級擴大；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;核心是限制每層都發生重試，理想情況下只有最下游服務發生重試；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;Google SRE 中指出了 Google 內部使用特殊錯誤碼的方式來實現。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;關於 Google SRE 的實現方式，大致細節如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;統一約定一個特殊的 status code ，它表示：調用失敗，但別重試；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;任何一級重試失敗後，生成該 status code 並返回給上層；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;上層收到該 status code 後停止對這個下游的重試，並將錯誤碼再傳給自己的上層。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;該方法可以有效避免重試風暴，但請求鏈路上需要上下游服務約定好重試狀態碼並耦合對應的邏輯。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_15&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;6、熔斷&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;重試主要解決偶發的因素導致的單次調用失敗，但是如果某個服務器一直不穩定，甚至已經宕機，再請求這個服務器或者進行重試都沒有意義了。所以為了保證系統整體的高可用，對於不穩定或者宕機的服務器需要進行熔斷。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;服務熔斷是在分佈式系統中避免從系統局部的、小規模的故障，最終導致全局性的後果的手段。它是通過快速失敗（Fail Fast）的機制，避免請求大量阻塞，從而保護調用方。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;熔斷的主要方式是使用斷路器阻斷對故障服務器的調用，斷路器狀態圖如下。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-1169ZdEBQh39A9g0HS.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;斷路器有三種狀態，關閉、打開、半開。斷路器正常情況下是關閉狀態，每次服務調用後都通知斷路器。如果失敗了，失敗計數器就+1，如果超過開關閾值，斷路器就打開，這個時候就不再請求這個服務了。過一段時間，達到斷路器預設的時間窗口後，斷路器進入半開狀態，發送一個請求到該服務，如果服務調用成功，那麼説明服務恢復，斷路器進入關閉狀態，即正常狀態；如果服務調用失敗，那麼説明服務故障還沒修復，斷路器繼續進入到打開狀態，服務不可用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1：promsie 調用 gis 進行熔斷處理 Sentinel 熔斷的降級處理方法，與 Hystrix 非常相似。只需要使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;@SentinelResource&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;註解的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;span&gt;fallback&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;屬性來指定具體的方法名即可&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;@SentinelResource&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;value &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; GET_FENCE_RESOURCE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;fallback &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&quot;getFenceIdFallback&quot;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;String&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;getFenceId&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;GisAgingFenceRequest&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; gisAgingFenceRequest&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;//內部代碼邏輯&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;String&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;getFenceIdFallback&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;GisAgingFenceRequest&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; gisAgingFenceRequest&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;//內部熔斷降級邏輯&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_16&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;7、降級&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;降級是從系統功能角度出發，人為或自動地將某些不重要的功能停掉或者簡化，以降低系統負載，這部分釋放的資源可以去支撐更核心的功能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;目的是為了提升系統的可用性，同時要尋找到用戶體驗與降級成本的平衡點；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降級屬於有損操作。簡而言之，棄卒保帥。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降級策略：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;降級一般在應急預案、大促期間使用。降級策略如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11YqbExGuB09YAYkO.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降級的注意點：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#303030&quot;&gt;1.每個服務都需要制定自己的降級策略，根據服務不同的優先級來設定降級方案，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;緊急情況下可以通過啓用降級開關關閉非核心功能，損失一定的客戶體驗，以確保核心關鍵業務的服務可用性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.對業務進行仔細的梳理和分析，哪些是核心流程必須保證的，哪些是可以犧牲的，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;幹掉一些次要功能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。比如電商功能大促期間可以把評論關閉或者簡化評論流程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3.什麼指標下能進行降級：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;吞吐量、響應時間、失敗次數等達到一個閾值才進行降級處理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4.降級最簡單的就是在業務代碼中配置一個開關或者做成配置中心模式，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;直接在配置中心上更改配置&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，推送到相應的服務。比如 DUCC 開關技術。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1：Promise 日常會通過詳細地址獲取 GIS 圍欄信息，該接口 tp99 大概在 120ms 左右，在大促期間會通過 ducc 開關進行降級不調用，業務可接受的範圍。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;❌待改進案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1：線上出現問題後，無法通過人工幹預的形式快速止血。其中的人工幹預指的是 ducc 開關，界面配置等方式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_17&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;8、限流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;預期外的突發流量總會出現，對我們系統可承載的容量造成巨大沖擊，極端情況下甚至會導致系統雪崩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在高併發場景下，如果系統的訪問量超過了系統的承受能力，可以通過限流對系統進行保護&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3b4351&quot;&gt;。限流是指對進入系統的用戶請求進行流量限制，如果訪問量超過了系統的最大處理能力，就會丟棄一部分用戶請求，保證整個系統可用。這樣雖然有一部分用戶的請求被丟棄，但大部分用戶還是可以訪問系統的，總比整個系統崩潰，所有的用戶都不可用要好。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;主流的限流算法有:&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;計數器法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;漏桶算法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;令牌桶算法（JSF 限流模式之一）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;滑動時間窗口算法（JSF 限流模式之一）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;熔斷&amp;amp;降級&amp;amp;限流:&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;&lt;strong&gt;&lt;span&gt;熔斷和限流都可以認為是降級的一種方式&lt;/span&gt;&lt;/strong&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;降級依靠犧牲一部分功能或體驗保住容量，而限流則是依靠犧牲一部分流量來保住容量。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#333333&quot;&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;限流的通用性會更強一些，因為每個服務理論上都可以設置限流，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;但並不是每個服務都能降級。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;案例 1：服務被打掛了，應急處理標準處理流程：限流、重啓和擴容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt; 1、首先確認限流是否生效，通過限流將自己保護住； 2、限流生效之後再對服務重啓，因為服務被打掛了之後線程被夯住，機器宕機，需要快速通過重啓恢復服務； 3、服務重啓之後再是擴容，限流：針對集羣限流，可以通過自身系統的承載能力進行集羣 total 限流，先保護好自己系統；針對應用進行限流，希望達到限流值 80% 左右的時候能有預警，前置處理以免影響到實際業務；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;案例 2：關於限流如何配置&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt; 比如服務 A1、A2、A3、AN 調用服務 B。服務 B 要對 A 進行限流，那限流值配置多少合適呢？這個話題很難，沒有標準答案，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#393c5a&quot;&gt;固定 QPS 這種限流方案存在痛點太多：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;以下是個人看法，不一定對&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;限流的目的是保護自己，服務 B 需要通過性能壓測，自身能抗的最大量是多少（比如 CPU 達到 60% 的時候吞吐量）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果服務 B 只提供 1 個 JSF 接口，則評估最大吞吐量比較簡單。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果是 N 個接口呢，沒有特別好的辦法，可根據 N 接口日常流量趨勢圖評估，但不一定要按流量比來壓測，還是參考單個接口壓測峯值來評估。因為哪天 B 服務新增加了 1 個接口，或者某個接口調用量增加了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;服務 B 需要針對 total 限流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;5.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;核心服務 A 和 B 溝通限流值，可參考歷史峯值，業務發展趨勢圖，峯值趨勢圖.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#222222&quot;&gt;6.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#222222&quot;&gt;限流閾值會隨着環境的變化而變化，比如內部接口改造等等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;7.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;限流閾值提前報警，而不是等觸發了限流才來報警，這時候已經晚了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;8.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果是切量，則需要 AB 溝通切量的流量，隨着切量比例越來越大，需要進行擴容，最終限流總值增加&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;9.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;切記注意別因為某個不起眼的接口打爆系統&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;10.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;限流值需要定期更新 review 維護&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#393c5a&quot;&gt;案例 3：相對與固定 QPS 限流機制，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;自適應限流機制是基於併發度進行限流，自適應限流算法在運行過程中會自動評估 Provider 單機性能瓶頸，根據 Provider 單機承載能力自動調整併發度完成限流&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#393c5a&quot;&gt;。具體可參考&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fsd.jd.com%2Farticle%2F28380%3FshareId%3D39712%26isHideShareButton%3D1&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#080b31&quot;&gt;JSF 再突破，1.7.8 支持自適應限流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;❌待改進案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;服務 A 和服務 B 溝通一個限流值，直接拍腦門配置。可能溝通的值本來就是錯的，線上出現過好幾次類似案例&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_18&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;9、補償&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;補償是在故障發生後，如何彌補錯誤或者避免損失擴大。比如將處理失敗的請求放入一個專門的補償隊列，等待失敗原因消除後進行補償，重新處理。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因為補償已經是一個額外流程了，既然能夠走這個額外流程，説明時效性並不是第一考慮的因素，所以&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;做補償的核心要點是：寧可慢，不可錯&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;做補償的主流方式是事務補償和重試，以下會被稱作回滾和重試。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;補償最典型的使用場景是事務補償。在一個分佈式應用中，多個相關事務操作可能分佈在不同的服務器上，如果某個服務器處理失敗，那麼整個事務就是不完整的。按照傳統的事務處理思路，需要進行事務回滾，即將已經成功的操作也恢復到事務以前的狀態，保證事務的一致性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;傳統的事務回滾主要依賴數據庫的特性，當事務失敗的時候，數據庫執行自己的 undo 日誌，就可以將同一個事務的多條數據記錄恢復到事務之初的狀態。但是分佈式服務沒有 undo 日誌，所以需要開發專門的事務補償代碼，當分佈式事務失效的時候，調用事務補償服務，將事務狀態恢復如初。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_19&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;10、故障轉移&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;故障轉移（failover）是一種&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;高可用性策略，用於在系統組件發生故障時保持服務的連續性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。以下是一些理論知識點：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;定義&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：故障轉移是指在活動服務或應用意外終止時，自動啓用冗餘或備用的服務器、系統、硬件或網絡來接替工作的過程。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;目的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：其主要目的是確保系統的連續運行和數據的完整性，減少因系統故障導致的服務中斷時間。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;類型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：故障轉移可以分為熱備（Hot Standby）和冷備（Cold Standby）。熱備指的是備用系統隨時準備接管工作，通常與主系統同步更新；冷備則是在主系統故障後才開始啓動並接管工作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;實現方式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：故障轉移可以通過多種技術實現，如使用負載均衡器、集羣技術或者具有冗餘配置的網絡組件。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;5.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;應用範圍&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：故障轉移可以應用於各種系統組件，包括但不限於處理機、服務器、網絡連接、存儲設備等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1：jimdb 讀操作的 failover 機制，比如 jimdb 的 config7 配置讀組是 s2,s4,s3，如果 s2 實例掛了，可讀 s4 節點，s4 節點掛了讀 s3 節點&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;❌待改進案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1：JIMDB 節點 config 讀組配置單點 s2 實例，如果 s2 實例有問題，則無法故障轉移&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_20&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;11、緩存&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;緩存一般用於高性能，但同樣也適用高可用，在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#2c3e50&quot;&gt;接口緩存是應對大併發量請求，提高系統吞吐量，保證系統可用性的有效手段。基本原理是，在系統內部，對於某部分請求參數和請求路徑完成相同的請求的結果進行緩存，在週期時間內，這部分相同的請求的結果將會直接從緩存中讀取，減少業務處理過程的負載。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;接口緩存同樣有着它不適用的場景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;接口緩存犧牲了數據的強一致性，對於實時性要求高的系統並不適用。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;接口緩存加快的是相同請求的請求速率，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;對於請求差異化較大的系統同樣無能為力，過多的緩存反而會大量浪費系統內存等資源。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1：應用定時任務刷緩存的時候，如果緩存刷新時間較長，應該使用雙緩存區，先將待刷緩存的集羣流量摘掉切走，待刷完緩存之後再重新將流量切回來，再對另一個集羣進行同樣操作；使用本地緩存同理；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;❌待改進案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 1、不管業務系統如何，直接上分佈式緩存 Redis，本地緩存。架構其實是越簡單越好，能不引入新的組件則不引入，案例 2、應用啓動從 redis 加載數據到本地緩存，擴容期間機器較多，同時加載導致 Redis 壓力大，並且本地緩存大小巨大，是否合理呢？ 案例 3、用 java 註解的方式，把數據庫數據存入 redis 緩存，但由於代碼編寫問題其實註解一直未生效，在流量峯值期間導致穿透打爆 mysql 數據庫（來源 COE 報告）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h1_21&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;四、常見的架構模式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;span id=&quot;OSC_h2_22&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主備複製&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製和主備複製只有一字之差，區別在於：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;主從複製模式中，從機要承擔讀操作&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製要點：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;存在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一主多從&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主機負責讀&amp;amp;寫，並定期複製數據給從機。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;從機只負責讀。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一旦主機宕機，可以通過人工手段，將其中一個從節點作為主節點。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11VN2Vt2l1ekpoBKw.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;優點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製架構中，主機故障時，讀操作相關的業務可以繼續運行。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製架構中，從機提供讀操作，發揮了硬件的性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;缺點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製架構中，客戶端需要感知主從關係，並將不同的操作發給不同的機器進行處理，複雜度比主備複製要高。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製架構中，從機提供讀業務，如果主從複製延遲比較大，業務會因為數據不一致出現問題。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主從複製架構中，故障時需要人工幹預。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;適用場景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;綜合主從複製的優缺點，一般情況下，寫少讀多的業務使用主從複製的存儲架構比較多。例如新聞網站這類業務，此類業務的讀操作數量是寫操作數量的 10 倍甚至 100 倍以上。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;日常的 mysql 主從讀寫分類模式，這個沒什麼好講的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;❌待改進案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;目前有部分系統用 mysql 來存儲日誌 MySql 關係型數據庫存儲的是結構化數據，核心是為了保持存儲數據的完整性和一致性，主要用於業務生產數據的存儲，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;對於日誌等非業務生產數據，不要存儲到 Mysql 中（成本高，得不償失），更不要同業務生產數據混用存儲中間件，避免非業務數據查詢/寫入導致存儲中間件性能下降影響到生產。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt; 日誌這類非生產數據可以存儲到 HBase，定期自動清理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_23&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、集羣&amp;amp;分區&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在主備複製和主從複製模式中，都由一個共性問題：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;每個機器上存儲的都是全量數據&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。但是，單機的數據存儲量總是有上限的，當數據量上升為 TB 級甚至 PB 級數據，單機終究有無法支撐的時候。這時，就需要對數據進行分片（sharding）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分片後的節點可以視為一個獨立的子集，針對子集，任然需要保證高可用。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11WlXFd6YmO211KYEb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_24&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、冗餘設計&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分佈式系統中單點故障不可取的，而降低單點故障的不二法門就是冗餘設計，通過多點部署的方式，並且最好是部署在不同的物理位置，避免單機房中多點同時失敗。冗餘設計不僅可以提高服務的吞吐量，還可以在出現災難時快速恢復。目前常見的冗餘設計有&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;主從設計和對等治理設計&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，主從設計又可以細分為一主多從、多主多從。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;冗餘設計中一個不可避免的問題是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;考慮分佈式系統中數據的一致性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，多個節點中冗餘的數據追求強一致性還是最終一致性。即使節點提供無狀態服務，也需要藉助外部服務，比如數據庫、分佈式緩存等維護數據狀態。根據分佈式系統下節點數據同步的基本原理 CAP(Consistency (一致性)、Availablity (可用性)、Partition tolerance (分區容忍性) 三個指標不可同時滿足)，數據強一致性的系統無法保證高可用性，最典型的例子就是 Zookeeper 保證了集羣數據的強一致性，但是放棄了集羣的高可用性。Eureka 點對點對等的設計保證了服務註冊與發現中心的高可用性，但是犧牲了數據的強一致性，降級為數據的最終一致性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;N + 2 就是説平時如果一個服務需要 1 個實例正常提供服務，那麼我們就在生產環境上應該部署 1 + 2 = 3 個節點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。大家可能覺得 N + 1 很合理，也就是有個熱備份系統，比較能夠接受。但是你要想到：服務 N + 1 部署只能提供熱備容災，發佈的時候就失去保護了，並且如果其中 1 台機器故障則變單點了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;從另一個角度來講，服務 N + 2 説的是在丟失兩個最大的實例的同時，依然可以維持業務的正常運轉。尤其廊坊或者匯天機器過保機器故障概率大。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_25&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;五、高可用開發運維&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上面講了很多通用的高可用架構原則和常見的行業架構模式，但回到文章開頭我們高可用的目標，結合日常工作，大部分都是在現有系統上進行需求開發，如果保障日常需求開發上線的高可用呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;接着説説上面的 MTBF （平均失效間隔）吧。請各位想一下，影響服務 MTBF 的三大因素！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;發佈&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;發佈&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;還是發佈上線&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一般服務只要你不去碰它（代碼&amp;amp;配置）一年都不會壞一次。上線發佈更新越頻繁，壞的可能性就越大。凡是，軟件都有 BUG。發佈新版本，新功能上線就是 MTBF 最大的敵人。關於開發運維從團隊穩定性文化建設、日常需求關注點、發佈流程、報警管理四個方面來説。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_26&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、團隊高可用穩定性文化建設&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;首先小組團隊核心功能業務，必須有 Backup 至少 2+人掌握，否則人員單點是個最大問題&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h3_27&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.1、地基要打牢&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;穩定性建設工作重在預防&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，根據多年的工作經驗，至少 70% 的線上故障都可以通過預防工作來消除。因此，在日常工作中，我們需要投入相應的精力來進行根基建設。所謂的根基建設，就是要把開發、測試和上線這三大流程做到透徹。包括：DesignReview、CodeReview、提測流程、上線流程、引流驗證、性能測試等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_28&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2、工作在日常&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;俗話説養兵一日，用兵一時。穩定性工作不是一蹴而就，而是日常的點點滴滴，一步一個腳印走出來的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;需要團隊人人蔘與、持續完善監控告警、檢查每一個告警是否配置、及時消滅線上小隱患。可參考每週的穩定性會議。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;梳理：主動梳理團隊的業務時序、核心鏈路流程、流量地圖、依賴風險，通過這個過程明確鏈路風險，流量水位，時序冗餘；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技術債務治理：主動組織技術債務的風險治理，將梳理出來的風險，以專項的形式治理掉，防患於未然。但需要注意別由於治理而導致線上問題，需要加強引流驗證比對。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;演練：把風險化成攻擊，在沒有故障時製造一些可控的故障點，通過演練來提高大家響應的能力和對風險點的認知。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;報警：除了前面説過的主動響應之外，還要經常做報警保險和機制調整，保證報警的準確度和大家對報警的敏感度。同時也要做到不疏忽任何一個點，因為疏忽的點，就可能導致問題。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_29&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.3、預案是關鍵&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們需要認識到預案的重要性，並投入相應的精力來進行預案的制定和更新。這樣，我們才能更好地應對各種突發情況，保障項目的順利進行。通過每週的穩定性去深入挖掘每個接口的隱患及不足，比如業務指標是否加上、業務指標是否能真實反饋該接口的特性等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_30&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.4、前置：扁鵲三兄弟&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;與扁鵲三兄弟一樣，如果想要讓穩定性有價值，SRE 同學一定不能站到系統的屁股後面等着擦屁股，必須走到前面，看到未來的風險。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;既要在發生問題時快速解決問題（做扁鵲）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;也要把風險歸納總結，推動解決（做二哥）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;還要在系統健康的時候評估鏈路，發現隱藏的問題（做大哥）；&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_31&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;日常需求開發&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;新需求上線，務必要確保不影響線上已有功能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。讀服務可通過引流回放比對方式來規避，寫鏈路可能複雜點需要環境隔離。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;功能降級：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當出現故障的時候，可以將非核心功能直接降級，保護核心功能不受影響&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;開關機制：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;需求牽扯黃金流程上線必須帶 DUCC 開關，如有問題開關可秒級恢復&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;新需求上線，需要思考如何確保高可用？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;比如這需求上線最壞情況是什麼？我如何規避？如何發現，等等？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;5.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們需要考慮&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系統的依賴性、發生故障的概率、故障發生的時間和故障影響的範圍&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。這四個因素是設計高可用的關鍵因素。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;看到一些線上問題應急預案採用的是回滾方案，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;但是在大部分牽扯代碼場景下，開關技術才是線上問題快速止血的最佳方式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。如遇線上問題的話，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;採用通用的回滾方式需要 5-10+分鐘 (500+台機器）並且回滾如果操作不當會加重問題,而採用開關技術則是秒級&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;對於高頻率的發佈上線來説，開關技術是一種合理的技術手段，被賦予了兩種新的用途。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;快速止血：一旦生產環境出了問題，直接找到對應功能的開關選項，將其設置為「關閉」。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;隔離：即將功能代碼隔離在線上執行路徑之外，對用戶不產生影響。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_32&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、測試&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在高可用架構的構建過程中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;測試環節扮演着至關重要的角色。它不僅是上線前的最後一道防線，更是確保系統穩定性和可靠性的關鍵所在&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過全面的測試，我們能夠及時發現並修復潛在的缺陷和漏洞，從而極大地降低了系統上線後出現故障的風險。因此，我們應當充分認識到測試工作的重要性，並將其作為產品質量保障的核心部分來對待。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_33&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4、發佈流程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;還記得影響 MTBF 最大的因子嗎？發佈質量不提高，一切都是空談。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;流程是為了防止最差的情況發生&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，通過嚴格遵守流程，可&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:rgba(255, 255, 255, 0.86); color:#07133e&quot;&gt;確保在發佈過程中儘量減少風險，提高系統高可用性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、上線發佈必須嚴格遵守流程 checklist 確認，並且建立 doublecheck 機制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;建立發佈流程：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;流程可以確保最終結果不會太差&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，好的發佈流程具有如下特性：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;完整性：完整地、一致地在各個環節內跟蹤重要的細節問題&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;可執行：相對簡單，流程可落地，並且能避免最壞情況發生。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;可擴展性：可以應用在簡單的發佈上、也可以用在複雜的發佈過程中&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;建立 CheckList 清單&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;檢查列表可以提醒人遺漏的東西、用來減少失敗，保持一致性和完整性。把 checklist 清單作為 xbp 流程中一部分，集成到了行雲部署發佈中，申請上線的時候必須填寫。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、底層中間件、配置文件等變更的執行過程往往伴隨着一系列的風險和挑戰&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;變更管理在穩定性建設中扮演着至關重要的角色。它涵蓋了兼容設計、新版本發佈計劃、灰度變革、數據遷移、可回滾設計、配置變更控制和複核驗證等多個方面，旨在確保系統在變更過程中的穩定性和可靠性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;首先，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;兼容設計和新版本發佈計劃是變更管理的基礎&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。通過充分考慮現有系統的功能和架構，我們可以預測並解決可能出現的兼容性問題。同時，制定詳細的新版本發佈計劃，可以確保變更過程有序進行，避免對用戶造成不必要的影響。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;其次，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;灰度變革和數據遷移是降低變更風險的重要手段&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。通過逐步引入變更，我們可以及時發現和解決問題，減少對整個系統的影響。而數據遷移則是確保用戶數據安全和完整性的關鍵步驟，需要仔細規劃和執行。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;另外，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;可回滾設計和配置變更控制是保障變更可控性的重要措施。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;可回滾設計意味着我們可以隨時將系統恢復到變更前的狀態，以應對可能出現的問題。而配置變更控制則可以確保變更過程的合規性和安全性，防止未經授權的變更發生。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最後，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;複核驗證是確認變更有效性和正確性的關鍵步驟&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。通過對變更後的系統進行全面的測試和驗證，我們可以確保變更沒有引入新的問題，並且達到了預期的效果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;綜上所述，變更管理在穩定性建設中起着至關重要的作用。通過合理的變更管理措施，我們可以降低變更帶來的風險，確保系統的穩定性和可靠性。只有在充分重視和有效實施變更管理的前提下，我們才能夠建立一個穩定、可靠的系統。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3、上線發佈必須遵守「發佈三板斧」： 可灰度、可驗證、可回滾&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2023-09-18-21-59ulggtOu59D18iIW9c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;複雜需求或者高風險需求的前提下，在架構設計階段，應該將灰度計劃、驗證兼容和回滾策略等考慮在內，並做好評估與平衡。具體來説，需要考慮以下兩個方面：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;風險程度：在評估系統穩定性和可靠性時，需要對可能出現的問題和風險進行充分的評估，並根據風險程度制定相應的灰度計劃、驗證兼容和回滾策略。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;成本投入：在進行灰度計劃、驗證兼容和回滾策略時，需要考慮相應的成本投入，包括人力、物力、時間等方面，以確保實施計劃的可行性和經濟性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;綜上所述，灰度計劃、驗證兼容和回滾策略等應該在架構設計階段就進行充分的考慮和評估，以便在實施過程中能夠做到有條不紊、穩妥可靠。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_34&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5、可觀察能力建設&amp;amp;快速止血恢復現場&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;告警是監控系統中最為重要的一部分，可以幫助運維人員及時發現並解決問題，確保服務的可用性和穩定性。但目前很多團隊都存在報警氾濫，狼來了的感覺，導致告警麻木了，這時候就需要&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;告警治理了，達到快（第一時間發現問題）、準（報警有效性）、少（以防告警氾濫）的目標&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;基本原則：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 在故障處理過程中採取的所有手段和行動，一切以恢復業務為最高優先級，恢復現場止血方案高於尋找故障原因。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;消防隊員到達事故現場，第一反應是救火，而不是查失火的原因。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;現在很多線上問題都是業務優先反饋，能不能技術先發現呢？可通過技術業務指標的建設……&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_35&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;六、大促高可用保障&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:rgba(255, 255, 255, 0.86); color:#07133e&quot;&gt;正如文章開頭説的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在低峯期停機 1 分鐘和高峯期停機 1 分鐘，對業務影響的結果完全不一樣&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在大促活動期間，高可用更是重中之重。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;迴歸問題本質，系統在大促的高可用性和日常的區別在哪呢？個人理解核心是兩點：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;【技術】高併發流量&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：大促流量峯值是日常的 N 倍（幾十、幾百倍），需要具備更高的併發流量處理能力，以保證系統的高可用穩定性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;【業務】業務場景多樣化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：大促會增加很多日常用不到的場景，很明顯的比如預售場景等，需要確保業務高可用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;針對上面的特性，除了進行備戰事項（軍演全鏈路壓測，性能壓測、預售場景驗證等），大促&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;要達到絕對高可用一般都是使用擴容機器冗餘+降級非核心功能。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_36&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、容量規劃&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;容量規劃的本質是追求計算風險最小化和計算成本最小化之間的平衡&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;流量模型評估&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;數據增長預測&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;容量應急預案&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_37&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、軍演全鏈路&amp;amp;性能壓測&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、軍演全鏈路方案設計&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;全鏈路壓測技術方案的核心思路是壓測數據隔離。通過對壓測流量進行標識、中間件識別和透傳壓測流量的改造、選用合適影子技術持久化壓測流量等手段以達到數據隔離的目的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-02-01-09-11b7fqsSl7wzuVE8r.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;實現全鏈路壓測的核心步驟：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、生成帶壓測標識的壓測流量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、壓測標識處理組件識別並透傳壓測流量，同時保證壓測標識在被壓測服務間傳遞不丟失。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、選用合適的影子技術，持久化壓測流量（與生產存儲介質物理或者邏輯隔離，風險可控、易於維護）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、如何進行高保真壓測，使壓測結果更接近於線上真實性能表現？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;可使用 R2 平台錄製線上流量進行高保真壓測。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_38&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、預案演練&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;預案演練主要解決的問題是：根據單個系統的應急預案，模擬應用系統的一種或多種故障場景，驗證系統的高可用性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;檢驗預案可落地性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.寫的應急預案（計劃預案、業務預案、突發預案）之前演練過嗎？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.應急預案從問題開始（歷史發生過什麼？當下可能發生什麼？）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3.從目標切入（預案影響是什麼？預案是否可落地執行？）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4.從風險着手（最壞情況是什麼？還有哪些風險點？）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5.真正出問題了，如何第一時間快速止血，如何縮短 MTTR 平均修復時長。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2024-06-23-22-34GFuX7j610nCIETcF.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;參考案例：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;案例 1：運行時動態調整日誌級別&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt; 在應用運行時動態修改日誌級別的功能。比如 Promise 在 618&amp;amp;11 大促峯值期間對日誌進行降級（只打印出入參及下游依賴的出入參），TP99 從 30ms 降低到 13ms，待大促峯值過後日誌調整回來，方便排查。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;案例 2、弱依賴降級 Promise 日常會通過詳細地址獲取 GIS 圍欄信息，該接口 tp99 大概在 120ms 左右，在大促期間會通過 ducc 開關進行降級不調用，業務可接受的範圍。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h1_39&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;七、線上問題 COE 覆盤&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#393c5a&quot;&gt;對於每次的線上問題，都應該使用業界公認的 COE（Correction of Error）覆盤的方式。需要識別根因並做出改進，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;故障覆盤黃金三問：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;故障原因有哪些？根本原因是什麼？可根據 5W、魚骨圖等方式找到根本原因。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;舉一反三，杜絕下次發生類似問題，但不需要列一堆 Action，根據 2/8 法則抓重點即可。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#f5222d&quot;&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;思考如果當時做了哪些可以更快縮短 MTTR(Mean Time To Repair) 的方法。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#393c5a&quot;&gt;覆盤是從故障中學習並且改進杜絕問題再次發生，而不是回放當時的情景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_40&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;八、業務高可用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上面的案例説明瞭技術的高可用並不等於業務的高可用，那麼業務的高可用是什麼呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;以電商業務為例，個人認為業務的高可用可以用四個詞概括：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;正常訪問：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;無論請求量多大，必須保證用戶的正常訪問和操作通暢，至少核心高頻業務沒問題（比如保證最起碼的商品商詳、結算頁和支付業務可用）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;友好提醒：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;假設遇到上述的請求量過大需要排隊，導致頁面打不開或者卡單情況，也需要有友好的處理機制和提醒，降低用戶的不友好體驗。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;異常冗餘：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果遇到請求量過大排隊，就需要及時的切流和擴容，或者在網關層限流，而不是放任人為的流量過高導致業務不可用時長拉長。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;防止資損：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;業務的高可用還要注意預防資損。比如用戶支付成功了，但是訂單狀態未更新導致下單失敗。比如用戶明明有優惠券，但是優惠券服務掛了導致無法使用優惠券，用戶多付款。再比如發放優惠券沒做規則限制，導致用戶重複領取優惠券疊加使用甚至黃牛薅羊毛。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;個人認為，技術的高可用目標，一定是在保證業務的高可用的前提下才有意義，否則只會陷入技術的自嗨陷阱裏。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_41&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;九、總結&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在本文中，我們深入探討了打造高可用架構的關鍵要素，從系統設計的基本原則到發佈上線過程中的最佳實踐。我們瞭解到，創建一個能夠抵禦各種故障並確保持續服務的系統，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不僅需要深入的技術知識、精心的規劃和不懈的努力，還需要對人的素質和責任心有深刻的認識&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#ff4d4f&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span style=&quot;color:#07133e&quot;&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:rgba(255, 255, 255, 0.86); color:#07133e&quot;&gt;高可用性不僅僅是一個技術問題，它更是一種哲學。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;海恩法則告訴我們，事故的發生是量的積累的結果&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這意味着在構建高可用架構時，我們必須關注每一個小細節，每一個小的疏漏都可能成為未來大問題的導火索。因此，我們需要一點一點地做好每件小事，無論是設計、編碼、上線檢查、變更管理、快速恢復還是持續監控。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;每個小的成功都是通往整體可靠性的一步。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;再好的技術、再完美的規章，在實際操作層面也無法取代人自身的素質和責任心。我們需要&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;建立一種文化，鼓勵團隊成員始終保持警惕，對可能出現的問題保持敏感，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;並準備好迅速應對。這種文化不僅要求我們對技術細節有深入的理解，還要求我們對自己的工作有高度的責任感。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用架構不是一次性的項目，而是一個持續的過程。我們必須不斷地評估我們的系統，識別潛在的弱點，並採取措施加以改進。這種&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;持續的努力和對細節的關注&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，以及對人的因素的重視，是確保系統長期穩定運行的關鍵。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過本文的探討，我們希望讀者能夠帶走這樣一個信息：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;構建高可用架構是一項既需要藝術感又需要紀律性的工作&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;只有通過不斷地優化每一個小細節，並且&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;持之以恆地將這些小事做好&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，我們才能構建出真正強大且可靠的系統。讓我們一起致力於這一點點的進步，最終實現系統的高可用性和業務的連續性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;由於高可用架構這個知識點覆蓋面廣、挑戰性大，本文也是結合日常實踐經驗，淺談部分知識點，供大家參考，如裏面信息不對請指正，如有更好的知識點評論交流。謝謝！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;參考文獻&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;SRE Google 運維解密，書籍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;信通院穩定性建設指南，書籍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;持續交付，書籍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用架構，書籍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;5.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;SRE 口中的 3 個 9，4 個 9：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.csdn.net%2Fqq_41453285%2Farticle%2Fdetails%2F126111711&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://blog.csdn.net/qq_41453285/article/details/126111711&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;6.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;面向業務的高可用架構設計：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxie.infoq.cn%2Farticle%2Fdfa60de7fd1f521a3e9c6de04%3Futm_campaign%3Dgeektime_search%26utm_content%3Dgeektime_search%26utm_medium%3Dgeektime_search%26utm_source%3Dgeektime_search%26utm_term%3Dgeektime_search&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://xie.infoq.cn/article/dfa60de7fd1f521a3e9c6de04&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;7.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用架構設計的 7 大核心原則：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.csdn.net%2Fm0_37578675%2Farticle%2Fdetails%2F118342360&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://blog.csdn.net/m0_37578675/article/details/118342360&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;8.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;架構之高可用: 如何保證高可用性？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjava.isture.com%2Farch%2Fbase%2Farch-y-ensure-high-availability.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://java.isture.com/arch/base/arch-y-ensure-high-availability.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;9.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用架構的十種武器：怎麼度量系統的可用性？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.lianglianglee.com%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://learn.lianglianglee.com/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;10.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高可用流量治理核心策略：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FyaCgQlZp1sfZhfJU_Qu67A&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://mp.weixin.qq.com/s/yaCgQlZp1sfZhfJU_Qu67A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;11.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;系統高可用架構：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdunwu.github.io%2Fdesign%2Fpages%2F9a462f%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://dunwu.github.io/design/pages/9a462f/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;12.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Google 高可用架構理念與實踐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.360doc.com%2Fcontent%2F16%2F0104%2F18%2F7353658_525443371.shtml&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;http://www.360doc.com/content/16/0104/18/7353658_525443371.shtml&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;13.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Why you should develop a COE：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faws.amazon.com%2Fcn%2Fblogs%2Fmt%2Fwhy-you-should-develop-a-correction-of-error-coe%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:transparent; color:#266bf6&quot;&gt;https://aws.amazon.com/cn/blogs/mt/why-you-should-develop-a-correction-of-error-coe/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4090830/blog/11471110</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/11471110</guid>
            <pubDate>Fri, 12 Jul 2024 09:01:50 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>程序員起訴微軟、GitHub 和 OpenAI 有了後續：法官駁回大部分索賠要求</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;2022 年 11 月，一羣程序員對微軟、GitHub 和 OpenAI &lt;a href=&quot;https://www.oschina.net/news/216453/github-is-being-sued&quot;&gt;提起集體訴訟&lt;/a&gt;，指控 GitHub Copilot 違反版權法，在沒有適當歸屬或遵守開源許可的情況下使用了他們的代碼。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-418b26d8df184f12f83b78a6bb51545bb8a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;作為開發者的起訴方認為，GitHub Copilot 基於公開的 GitHub 代碼倉庫來訓練他們的 AI 系統，此舉侵犯了大量創作者的合法權利，因為這些公開倉庫大多數都採用了開源 License，這些 License 都明確描述了授予使用者的權利和義務，比如保留原作者的署名，而且原作者依舊擁有開源軟件的版權 (Copyright)。很顯然，GitHub Copilot&amp;nbsp;違反了開源 License 的署名要求條款。&lt;/p&gt; 
&lt;p&gt;除此之外，起訴方還主張被告方違反了以下條款：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.github.com%2Fen%2Fsite-policy%2Fgithub-terms%2Fgithub-terms-of-service&quot;&gt;服務條款&lt;/a&gt;和&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.github.com%2Fen%2Fsite-policy%2Fprivacy-policies%2Fgithub-privacy-statement&quot;&gt;隱私政策&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.law.cornell.edu%2Fuscode%2Ftext%2F17%2F1202&quot;&gt;DMCA § 1202&lt;/a&gt;，禁止刪除版權管理信息&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Foag.ca.gov%2Fprivacy%2Fccpa&quot;&gt;加州消費者隱私法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;以及其他引起相關合法索賠的法律&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在當時，這被視為可能改變生成式 AI 行業遊戲規則的事件，但後來情況發生了變化。&lt;/p&gt; 
&lt;p&gt;7 月 5 日，法官 Jon Tigar 對原告的又一批索賠做出了&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fregmedia.co.uk%2F2024%2F07%2F08%2Fgithub_copilot_dismiss.pdf&quot; target=&quot;_blank&quot;&gt;裁決&lt;/a&gt;。總體而言，GitHub、微軟和 OpenAI 都取得了勝利。三項訴索賠要求被駁回，只有一項獲準繼續審理。根據微軟和 GitHub 律師的統計，目前總共只剩下兩項指控。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:rgba(255, 255, 255, 0.65); color:#151631&quot;&gt;最近被駁回的索賠要求非常重要，其中一項涉及&lt;/span&gt;數字千年版權法 (DMCA) &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.law.cornell.edu%2Fuscode%2Ftext%2F17%2F1202&quot; target=&quot;_blank&quot;&gt;第 1202(b) 條下&lt;/a&gt;&lt;span style=&quot;background-color:rgba(255, 255, 255, 0.65); color:#151631&quot;&gt;的侵權行為，該條款總體上是説&lt;strong&gt;未經許可不得刪除關鍵的「版權管理」信息&lt;/strong&gt;。在這裏的場景中，「版權管理」信息就是開源 License 中聲明的使用條款和代碼。起訴方認為 Copilot 提供的代碼刪除了這些信息——違反了第 1202(b) 條規定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;然而法官 Jon Tigar 不同意這一觀點，&lt;strong&gt;他認為 Copilot 建議的代碼與開發者受版權保護的作品不夠相似&lt;/strong&gt;，因此駁回了起訴方根據數字千年版權法案 (DMCA) 提出的訴訟請求。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-be8131f3acea528a5b699dbd29e4099c0ca.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;除了上面這條和 DMCA 相關的索賠要求，另外兩項被駁回的內容是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;違反開源許可證的指控&lt;/li&gt; 
 &lt;li&gt;違反合同的指控，該指控最初被駁回後又重新提出。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theregister.com%2F2024%2F07%2F08%2Fgithub_copilot_dmca%2F&quot; target=&quot;_blank&quot;&gt;點此查看更多細節&lt;/a&gt;。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相關閲讀：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/216453/github-is-being-sued&quot; target=&quot;_blank&quot;&gt;GitHub 被起訴&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/226434/microsoft-openai-github-dismiss-copilot-ai-copyright-lawsuit&quot; target=&quot;_blank&quot;&gt;微軟、GitHub 和 OpenAI 要求法院駁回 AI 版權訴訟&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/214107/github-copilot-investigation&quot; target=&quot;_blank&quot;&gt;開源軟件作者拿起律師執業證，準備起訴 GitHub Copilot&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301731/github-copilot-ms-openai-dmca</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301731/github-copilot-ms-openai-dmca</guid>
            <pubDate>Fri, 12 Jul 2024 07:15:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Bytebase 2.21.0 - 不同數據庫引擎可配置不同 SQL 審核規則</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;h2&gt;🚀 新功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;支持不同數據庫引擎配置不同 SQL 審核規則。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-90b9dc0163cab2e1e42e1ac2831ca123616.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持為工單事件配置企業微信私聊通知。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-818c8ebc4066a1fd27c8d73f15cad4bcd68.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持連接到 Redis 哨兵架構和原生集羣。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在項目級別，支持設置：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;是否允許在工單創建後修改 SQL 語句。&lt;/li&gt; 
   &lt;li&gt;是否自動完成已發佈的工單。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-72ea61a3724ba5c61ccfeb932be896fb4a3.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;🔔 重大變更&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;多租戶配置項已從項目級別移動至數據庫分組。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎄 改進&lt;/h2&gt; 
&lt;p&gt;-「取消」工單改名為「關閉」工單。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加更詳細的任務執行日誌。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-352b417f5100a887c1d9018362569cb3216.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在添加實例時，增加了 SSL 連接開關。如果未指定 CA 證書，將使用系統默認證書。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-874fc9ea0f7940a890604a47e2c60df7c9b.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;優化了在沒有分號場景下，SQL 編輯器自動補全的識別能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;優化了 Oracle parser 的性能。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🐞 Bug 修復&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;SQL 解析改進對不受支持的 Unicode 字符的處理。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📕 安裝及升級&lt;/h2&gt; 
&lt;p&gt;新安裝 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget-started%2Fself-host%2F&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get-started/self-host/&lt;/a&gt; 升級 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget-started%2Fupgrade%2F&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get-started/upgrade/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;升級前請備份元數據庫，升級後無法回退版本。&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;💡 更多資訊，請關注 Bytebase 公號：Bytebase&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/6148470/blog/11455877</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11455877</guid>
            <pubDate>Fri, 12 Jul 2024 07:13:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>中國信通院發佈算力互聯公共服務平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年 7 月 11 日，中國信息通信研究院（簡稱「中國信通院」）發佈算力互聯公共服務平台，聯合產業界開展算力互聯網共識共創行動。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;平台現已開放測試，試用：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fstateioc.iqka.com%2F&quot; target=&quot;_blank&quot;&gt;http://stateioc.iqka.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;306&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ab17efff3836655b7a35156a4e237ed9028.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;算力互聯公共服務平台是推進和管理全國算力互聯互通和算力互聯網體系的綜合服務平台，包括算力標識管理、算力互聯網業務查詢、算力統一大市場、政策和研究、標準體系、開源項目和運行監測等功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;公共算力資源標識註冊和查詢：實現跨主體、跨架構、跨地域資源「可查詢、可訪問、可調用」，加速各個主體之間算力互聯互通，前瞻佈局算力互聯網，助力全國一體化算力體系建設，促進算力服務普惠發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;算力資源可信度量：平台可以對接入的算力資源進行真實性、可用性以及利用率度量，能提供全國範圍內的算力資源提供商、算力（調度）服務商的可信資源和服務查詢，提高供需匹配效率，實現統一算力服務大市場。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;推動算力互聯網發展進程：促進新業務、新業態的算力服務發展。未來，中國信通院將持續完善平台服務能力，統籌各級算力互聯互通平台遵循平台標準規範開展工作，打通各類算力互聯網已有實踐體系，助力全國一體化算力體系。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時，中國信通院聯閤中國電信、中國移動、中國聯通、曙光智算、華為雲開展算力互聯網共識共創行動，凝練共識、行業共創，推動算力互聯新進程。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301719</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301719</guid>
            <pubDate>Fri, 12 Jul 2024 06:24:17 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>螞蟻集團開源 EchoMimic：支持為人像照片對口型、生成肖像動畫視頻</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;螞蟻集團發佈了開源項目 EchoMimic。據介紹，EchoMimic 不僅能根據人像面部特徵和音頻來幫人物對口型，還可以結合面部標誌點和音頻內容生成較為穩定、自然的視頻。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;GitHub：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FBadToBest%2FEchoMimic&quot; target=&quot;_blank&quot;&gt;https://github.com/BadToBest/EchoMimic&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a6d4669d64643dba560ee92bb37c78c9634.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;EchoMimic 具備較高的穩定性和自然度，通過融合音頻和麪部標誌點（面部關鍵特徵和結構，通常位於眼、鼻、嘴等位置）的特徵，可生成更符合真實面部運動和表情變化的視頻。&lt;/p&gt; 
&lt;p&gt;其支持單獨使用音頻或面部標誌點生成肖像視頻，也支持將音頻和人像照片相結合做出「對口型」一般的效果。&lt;/p&gt; 
&lt;p&gt;下圖是 EchoMimic 的工作原理：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-67ab04f158917e59af990d6ea273a9c8dc7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;EchoMimic 支持多語言（包含中文普通話、英語）及多風格，也可應對唱歌等場景。&lt;/p&gt; 
&lt;p&gt;訪問主頁查看更多示例：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbadtobest.github.io%2Fechomimic.html&quot; target=&quot;_blank&quot;&gt;https://badtobest.github.io/echomimic.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a0764438588f5852c1dbaa9d934356832bd.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301682</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301682</guid>
            <pubDate>Fri, 12 Jul 2024 03:23:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>Facebook 開源 C++ 框架 Ocean：用於計算機視覺和增強現實</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#374151&quot;&gt;Facebook 開源了其內部用於&lt;strong&gt;計算機視覺 (CV) 和，增強現實 (AR)&amp;nbsp;&lt;/strong&gt;應用程序的框架 Ocean，&lt;/span&gt;用於執行各種任務，包括計算機視覺、幾何、媒體處理、網絡和渲染。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#374151&quot;&gt;Ocean 主要使用 C++ 編寫，且不依賴於特定平台：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ocean 是一個獨立於平台的框架，支持所有主要操作系統，包括 iOS、Android、Quest、macOS、Windows 和 Linux。它旨在徹底改變計算機視覺和混合現實應用程序的開發。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;1292&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5f006526bba6436099e19221ceb275bb79a.png&quot; width=&quot;1960&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;項目主頁：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffacebookresearch.github.io%2Focean%2F&quot; target=&quot;_blank&quot;&gt;https://facebookresearch.github.io/ocean/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;倉庫地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebookresearch%2Focean&quot; target=&quot;_blank&quot;&gt;https://github.com/facebookresearch/ocean&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301677/facebook-research-ocean</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301677/facebook-research-ocean</guid>
            <pubDate>Fri, 12 Jul 2024 03:05:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>開源日報 | 馬斯克擬自建「超算工廠」；類似微軟 Recall 的開源項目；</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.7.11&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/301481/zed-on-linux&quot;&gt;開源代碼編輯器 Zed 發佈原生 Linux 版本&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 開源代碼編輯器 Zed 發佈了原生支持 Linux 的版本。據介紹，Linux 上的 Zed 正在使用 Vulkan API 進行 GPU 加速。它同時支持 Wayland 和 X11 會話，到目前為止，Zed 團隊開發重心主要集中在 Ubuntu 下的測試。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d9ac6475c6b2254e3935253384a5ec2f270.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;在 Linux 上安裝 Zed 的命令：&lt;/p&gt; 
&lt;pre style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;code&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;curl&lt;/span&gt; https://zed.dev/install.sh | sh&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pingwest.com%2Fw%2F296565&quot; target=&quot;_blank&quot;&gt;AMD 宣佈 6.65 億美元收購 Silo AI ，增強其 AI 芯片能力&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;AMD 宣佈，將投資 6.65 億美元收購 AI 初創公司 Silo AI ，增強其 AI 芯片能力。&lt;/p&gt; 
&lt;p&gt;AMD 表示，收購 Silo AI 將幫助其改進 AMD 驅動的人工智能模型的開發和部署，並幫助潛在客戶使用 AMD 的芯片構建複雜的人工智能模型。同時，Silo AI 還將加強 AMD 的軟件開發能力。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8b7zl8tMUlC&quot; target=&quot;_blank&quot;&gt;大模型權威測試被曝翻車！更偏袒 GPT-4 等閉源模型&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;此前 MMLU 原始版本早已經被各家大模型刷爆了，誰考都是高分，對前沿模型已經沒有了區分度。號稱更強大、更具挑戰線性多任務語言基準 MMLU-Pro，成了業界對大模型性能的重要參考。&lt;/p&gt; 
&lt;p&gt;但結果沒想到的是，現在有人扒出其在採樣參數、系統提示和答案提取等方面設置不公平，存在一些令人震驚的差異。隨便對系統提示詞做了個小修改，直接將開源陣營的 Llama-3-8b-q8 的性能提高了 10 分？！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-33fe3a3ddd68433ddbb70fa707ac5578a37.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/301529/rockyou2024-10-billion-passwords-leaked&quot;&gt;「RockYou2024」文件泄露：包含 100 億條明文密碼&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;網名為 ObamaCare 的黑客於 7 月 4 日在暗網論壇發帖，分享了包含將近 100 億個明文密碼的 rockyou2024.txt 文件，在 RockYou 2021 文件（包含 84 億個明文密碼）基礎上再新增了約 15 億個新密碼。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b57d70570b77ea5bca8abaada405b86fc11.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/301259/leaferjs-1-0-released&quot;&gt;LeaferJS 1.0 重磅發佈：強悍的前端 Canvas 渲染引擎&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;網站封面&quot; src=&quot;https://oscimg.oschina.net/oscnet/home.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5648162302%2FOmTkVgqiG&quot; target=&quot;_blank&quot;&gt;類似微軟 Recall 的開源項目：screen-pipe&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;還記得微軟的 recall 功能嗎？現在有個類似的開源項目，screen-pipe，代碼開源，支持本地 LLM，數據完全在你自己的掌控之中。&lt;/p&gt; 
    &lt;p&gt;該項目可以持續錄製你的屏幕和麥克風並將其連接到 LLM。靈感來自 adept.ai、rewind.ai、Apple Shortcut。用 Rust 編寫，免費，數據純本地。可以進行搜索，基於 LLM 的問答，自動化重複操作。&lt;/p&gt; 
    &lt;p&gt;項目：github.com/louis030195/screen-pipe&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;黃建同學&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1741533154%2FOn2LZthMD&quot; target=&quot;_blank&quot;&gt;開源是一種智商稅，李彥宏淨説大實話&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      李彥宏在 WAIC 圓桌訪談直言開源是智商稅，一石激起千層浪。當小孩説出皇帝沒有穿衣服時，讚美皇帝華服的人破防了。當哥白尼説地球並非宇宙中心時，教會再也難繃。但我認討論開源只有觀點不同，沒有對錯之分，破防大可不必。這裏展開講講開源為什麼是一種智商稅。
     &lt;/div&gt; 
     &lt;div&gt;
      既然是智商稅，那必然有」收割方」和被」收割方」。下面從公司和開發者兩個角度列舉各種」被收割」套路，最後給出針對公司和開發者的防割指南。
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   - 微博&amp;nbsp; 
   &lt;strong&gt;spaceshuttle&lt;/strong&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2194035935%2FOn2PmvNZd&quot; target=&quot;_blank&quot;&gt;Posting，一個開源的，在終端下使用的 HTTP 客戶端&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-930520c3758c68716b4a15fd0b254d69454.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
    &lt;/div&gt; 
    &lt;div&gt;
     &amp;nbsp;
    &lt;/div&gt; 
    &lt;div&gt;
     &lt;span style=&quot;background-color:#ffffff; color:#636363&quot;&gt;github.com/darrenburns/posting&lt;/span&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;蟻工廠&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FXm8jmTLHf8sbTAHOUIm1fw&quot; target=&quot;_blank&quot;&gt;對話 MiniMax 創始人：如何打造 AI 時代最大的 APP&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt;
   2024 年 1 月，MiniMax 發佈了國內首個基於 MoE 架構的千億參數量級模型——abab 6；4 月底，又迅速迭代並推出 abab 6.5 系列模型。在各類核心能力測試中，abab 6.5 也接近了 GPT-4、Claude-3、Gemini-1.5 等世界領先的大語言模型。
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt;
   探索 MoE 的好處不限於此。在閆俊傑看來，這次磨礪讓他們不會被侷限在只做公開的東西，也敢去做上限更高、要靠自己探索（的東西）。
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt;
   不過，閆俊傑也認為，只有技術好是沒用的，一年之後，一旦失去「AI 濾鏡」，大家會從商業化的角度來評價公司。「我覺得短期內最重要的是 AI 技術的進步。一年之後，商業化一定是非常重要的。」
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;&amp;nbsp;中國企業家雜誌&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.163.com%2Fdy%2Farticle%2FJ6R075OS05119734.html%23&quot; target=&quot;_blank&quot;&gt;《麻省理工科技評論》新一屆「35 歲以下科技創新 35 人」中國區入選者正式發佈！&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5f2ee8484482d0d47a8553d21be8768429e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;DeepTech 深科技&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8b6twnxbVfs&quot; target=&quot;_blank&quot;&gt;第一批被 ChatGPT「炒魷魚」的打工人已經出現了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#4d4f53; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#2f2f2f&quot;&gt;最近發生的一件事，ChatGPT 搶走了 60 個人的飯碗。在寫作、檢索和翻譯等領域，它已經不甘心只當個「小助理」了。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#4d4f53; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#2f2f2f&quot;&gt;AI 替代打工人不再是「狼來了」，而是真切地走進了現實。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;智谷趨勢&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.cn%2F2024-07-10%2Fdetail-inccsatx2608978.d.html&quot; target=&quot;_blank&quot;&gt;「只有更快才有競爭力」！馬斯克叫停與甲骨文的 100 億美元談判，擬自建「超算工廠」加速 AI 佈局&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;馬斯克旗下的人工智能（AI）初創公司 xAI 已與終止擴大一項現有協議的談判，這筆交易的潛在價值高達 100 億美元。根據該協議，xAI 將從甲骨文租用英偉達的 AI 芯片搭建超級計算機。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;每日經濟新聞&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8b7oqAaImFF&quot; target=&quot;_blank&quot;&gt;深度｜大模型真的在吞噬人類的一切數據嗎？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;《沙丘》中的領航員通過食用香料獲得了預測未來的能力，人工智能算法通過處理大量數據集，發現模式和趨勢。在《沙丘》宇宙中，人類在香料混合物的影響下進化，獲得新的能力並經歷意識的重大飛躍。同樣，人工智能乃至 AGI 的發展也可能會為人類帶來類似的深遠影響。&lt;/p&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;只不過如果知道十年前在社交媒體上發佈的內容，有朝一日會成為推動技術進步的「香料」，或許我們會更加慎重地對待自己的數字足跡。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;硅星人&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yidianzixun.com%2Farticle%2F0voOgIPu&quot; target=&quot;_blank&quot;&gt;晉升業內新寵兒，MoE 模型給了 AI 行業兩條關鍵出路&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1d1d1d&quot;&gt;為什麼 MoE 模型如此火爆，備受各大廠商的青睞？在開源的背後，MoE 模型又是以什麼樣的優勢使各大主流廠商成為其擁躉，試圖作為改變 AI 行業的利器？&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1d1d1d&quot;&gt;客觀來説，MoE 模型的具體工作原理更接近中國的一句古語「術業有專攻」，通過把任務分門別類，然後分給多個特定的「專家」進行解決。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;智能相對論&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240711A05OJL00&quot; target=&quot;_blank&quot;&gt;崑崙萬維方漢：所有的內容行業都會被 AIGC 重塑&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;展望下一個十年，方漢認為，基於 AI 的 UGC 和 PGC 生態，AIGC 內容將是下一個非常龐大的行業，為更多公司創造了巨大的發展機遇。崑崙萬維的使命就是實現通用人工智能，讓每個人更好地塑造和表達自我。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;中國經濟報&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn804924445&quot; target=&quot;_blank&quot;&gt;視頻大模型激戰 180 天：Sora「高冷隱身」，國產巨頭狂卷落地&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;AI 視頻生成賽道在全球的高度關注下催生出一個又一個新技術成果，與此同時，國內外類 Sora 創企們也開始活躍起來。僅僅在今年上半年，愛詩科技、生數科技、Pika 等 AI 企業就完成了多輪億元級別的融資，成立於 2018 年的老牌 AI 視頻生成企業 Runway 也傳出新一輪的融資計劃。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;雷科技&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn804926325&quot; target=&quot;_blank&quot;&gt;中國力推人工智能全球治理合作&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;中國打造全球人工智能治理生態系統的努力體現了其對負責任、包容和以人為本的人工智能發展的承諾。通過技術合作、教育項目和可持續治理，國際社會可以塑造一個能造福所有人的人工智能未來。為了人工智能的安全發展和治理，各國應開展合作，而不是搞人工智能保護主義。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;參考消息網&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fganelson%2Finform&quot; target=&quot;_blank&quot;&gt;ganelson/inform&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;348&quot; src=&quot;https://static.oschina.net/uploads/space/2022/0429/084800_otZb_5430600.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fganelson%2Finform&quot; target=&quot;_blank&quot;&gt;https://github.com/ganelson/inform&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Inform 7 是一種使用自然語言語法創建交互式小説的特定領域編程語言。它使用自然語言並借鑑語言學和文學編程的思想，被廣泛用作文學寫作的媒介、遊戲行業的原型製作工具。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/meituantech/blog/11349478&quot; target=&quot;_blank&quot;&gt;搜索廣告召回技術在美團的實踐&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;本文首先介紹了美團搜索廣告的三個階段：多策略關鍵詞挖掘、分層召回體系、生成式召回；然後重點介紹了生成式關鍵詞召回、多模態生成式向量召回、生成式相關性判斷在美團的實踐。最後是一些經驗分享及總結，希望能對大家有所幫助或啓發。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;261&quot; src=&quot;https://oscimg.oschina.net/oscnet/248944801fe9e2aae32e36f7a1f6e0911668234.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用戶觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FQtPtJn5Kf6A-xx1N1_-xZA&quot; target=&quot;_blank&quot;&gt;不再是 Only for Mac&lt;span&gt;——&lt;/span&gt;Zed 編輯器正式發佈原生 Linux 版本&lt;/a&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：「為 Linux 構建 GUI 應用程序的一大挑戰在於，Linux 實際上並不存在。」 一針見血&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：終於來了，一會兒試試&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：我不禁要問：幹嘛重複造輪子呢。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：我不禁要問，用 ed 就能編輯文件了，要那麼多編輯器幹什麼&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：來個安卓版行不行，給滿天飛的安卓平板上上強度&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：我覺得 zed 最好用的是當一個普通文本編輯器，從命令行打開一個文件，速度非常快&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：都沒有中文插件，插件很少&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：中文輸入還有一些問題&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FKtNV20ptkvNGLmB0FE4SQQ&quot; target=&quot;_blank&quot;&gt;Rust 即將進入前十：中贏、大贏、還是特大贏？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：搜索熱度是中贏，進入 linux window 內核是大贏，不斷追求性能極限與安全是特大贏！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：難道是因為我開始學了？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：rust 吃了誰家量了？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：Java 因為我開始學 rust 了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：cobol，fortan 還有人用麼，怎麼還這麼高的熱度&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：前段時間用 rust 的宏寫了個通用模型接口，幾行代碼就可以實現任意表的增刪改查。感覺寫 web 後端還挺方便的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：打野終於發展起來了，接下來要打團了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：Zig 居然沒看到？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：中國的新能源汽車控制系統用啥寫的？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：rust 很適合汽車或者機器人，現在汽車和機器人用的 c++，遺留了很多問題&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：會 rust 的，一般都是他們的第三門語言了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 12：如果有一天輸麻了，只需要重構一個前端打包工具就可以贏麻了&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGcF-Jw4YUHi1OFlVFaWFPQ&quot; target=&quot;_blank&quot;&gt;&quot;Only Google Can Do&quot;API：只能通過*.google.com 訪問、可讀取系統 CPU 和內存使用情況等信息&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：google：我愛撒點小謊，鐵鐵&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：不作惡，但拿你點數據怎麼了。程序員不懂事，瞎寫着玩的。就算我偷你點數據，你又有什麼損失呢。別人是不想嗎，那是沒我這本事。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：這就是瀏覽器也應該自研的原因之一&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：自研就可以不作惡？做起來更方便吧&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：Firefox 這麼尊重隱私又好用，怎麼就不火&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：用愛發電能堅持到現在已經不錯了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：ladybird 瀏覽器，寧靜 os 作者新開源作品，非 Chrome 內核&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：chromium 開源放在那，完全可以自己改一個來用；而 chrome 本來就是 Google 專有的軟件，人家愛加什麼功能都無可厚非，大不了換其他瀏覽器用唄&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：讀你硬盤又咋滴？我宇宙第一互聯網企業偷點信息怎麼了？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：這違反反壟斷法吧，巨硬都能被拆 b 谷歌估計也快了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：嚇得我趕緊刪除了 chrome 下載了一個 360 瀏覽器&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 12：自家後門，winform 裏也是常見的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 13：這些數據怎麼就成侵犯隱私了，CPU Memory GPU 不就頂多搞搞性能分析，看看有沒有什麼標籤頁過渡佔用資源...&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 14：還是當年的 VB script 敞亮，開放式 API，別説讀 CPU 什麼的，直接運行指令都行&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 15：我想本來應該用來保證語音和視頻通話的流暢性的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 16：《Do not be evil》&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 17：這不就是典型的又當裁判員又當運動員嗎？這才是微軟之類大企業那麼逆勢也要搞自己瀏覽器的原因啊。大家都這麼搞而已。只是某些企業層次低，根本進不了這個圈子罷了。然後就吹成天堂的競爭環境了。其實，下三濫的人家早就玩了而已。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 18：不只 chrome，就連其他拿 chrome/chromiun 套殼的瀏覽器，比如 edge 也可以復現，也會給 google 網站開後門。這就很耐人尋味了，要麼是微軟和谷歌臭氣相投，要麼是微軟 edge 團隊就是一個草台班子，套了別人的殼但沒有做代碼審核。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301599</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301599</guid>
            <pubDate>Thu, 11 Jul 2024 11:06:55 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>實現 LLM 應用的可觀測，難在哪裏？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;隨着生成式 AI 概念的火爆，以 ChatGPT、通義大模型為代表，市場上湧現了一系列商用或者開源的大模型，同時基於大語言模型（LLM ）以及 AI 生態技術棧構建的應用以及業務場景也越來越多。&lt;/p&gt; 
&lt;p&gt;眾所周知，LLM 包含數十億甚至萬億級別的參數，其架構複雜，訓練和推理涉及大量計算資源。這些特性使得它們在實際應用中可能表現出意料之外的行為，同時也帶來了性能、安全性和效率等方面的挑戰。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;938&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-782826b7a4257fd57ec3ad6a8f9d8ef613e.png&quot; width=&quot;1354&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;LLM 參數量不斷增長&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;（圖片來源：https://www.alidraft.com/2023/12/19/deploy-your-llm-model-on-cloud-efficent/）&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;那麼，如何監控並保障大模型應用上線的性能以及用戶體驗？如何支持複雜拓撲場景下 LLM 應用領域的鏈路可視化分析以及問題根因定位？需要從成本以及效果等方面獲得線上實際表現，輔助選擇、分析、評估以及優化迭代大語言模型等。因此，針對 LLM 應用技術棧，構建行之有效的可觀測能力解決方案就成為關鍵。&lt;/p&gt; 
&lt;p&gt;由於模型本身的複雜性、數據處理的規模以及應用的動態環境，實現 LLM 應用的可觀測性面臨着諸多難點，比如：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;數據量與複雜度：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;LLM 在訓練和推理過程中會產生大量的數據，這包括但不限於模型參數、中間輸出、性能指標、系統日誌等。處理如此規模的數據需要高效的數據管理和存儲方案。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;數據的複雜度還體現在多模態輸入（文本、圖像、音頻等）和多階段處理流程上，這增加了監控和分析的難度。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;性能與實時性：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;實現可觀測性往往需要額外的計算資源和網絡帶寬，這對性能敏感的 LLM 應用是一個挑戰。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;實時監測和響應的能力要求可觀測性系統能夠即時捕獲並分析關鍵指標，以便及時發現和解決問題。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;安全與隱私：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;LLM 應用通常涉及敏感數據的處理，如何在保護用戶隱私的同時收集必要的可觀測性數據是一個難點。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;安全性要求確保可觀測性數據不被未授權訪問或濫用，同時也要防止數據泄露。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;集成與兼容性：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;技術棧的多樣性意味着可觀測性解決方案需要與不同平台、框架和工具兼容。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;集成多個系統的可觀測性數據，尤其是當涉及到雲環境和本地部署的混合架構時，會變得更加複雜。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;語義理解和模型解釋：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;對於 LLM 而言，理解模型內部的工作原理和決策過程是一個難點，這需要深度的語義分析和模型解釋技術。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;監控和報告不僅要涵蓋技術指標，還要能反映模型的準確性和偏見。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;動態調整與自適應：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;LLM 應用的可觀測性解決方案應該能夠根據系統負載和資源可用性動態調整。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;自適應機制對於應對不可預測的工作負載和性能瓶頸至關重要。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;成本與效率：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;實施全面的可觀測性可能會帶來較高的成本，特別是在數據存儲和計算資源方面。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;需要權衡可觀測性的深度和廣度與總體成本，尋找最優的平衡點。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;解決這些難點通常需要採用先進的數據處理技術、高性能的計算架構、安全的通信協議、智能的分析算法以及靈活的資源配置策略。此外，持續的監控和迭代改進也是保持可觀測性系統有效性的關鍵。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;當然，這些問題和挑戰，對阿里雲技術專家蔡健來説，已經有了相應的解決方案。&lt;/strong&gt;蔡健從事可觀測產品 ARMS 與 EagleEye 的研發、設計與佈道，具備豐富的可觀測領域技術架構以及實踐經驗，成功推進 ARMS 應用性能監控和應用安全 (RASP) 融合解決方案落地，關注 APM 以及 OpenTelemetry 開源社區生態等最新動態。目前關注大語言模型領域可觀測需求場景，探索支持 LLM 應用層到底層基礎設施的全棧可觀測能力解決方案以及最佳實踐。&lt;/p&gt; 
&lt;p&gt;8 月 15 日至 16 日，GOTC 2024 大會將於上海張江科學會堂舉行。在「LLMOps 最佳實踐」論壇，蔡健將以《LLM 應用可觀測解決方案探索與實踐》為題發表演講，深入探討 LLM 應用可觀測的關鍵關注點、高質量數據採集與上報方法，並詳細介紹阿里雲的 LLM 應用可觀測解決方案，分享客戶實踐案例，展望未來 LLM 應用可觀測的發展趨勢與面臨的挑戰。&lt;/p&gt; 
&lt;div&gt; 
 &lt;hr&gt; 
&lt;/div&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;GOTC 2024 與上海浦東軟件園聯合舉辦，並結合 「GOTC（全球開源技術峯會）」 與 「GOGC（全球開源極客嘉年華）」，旨在打造一場全新的開源盛會。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;全球開源技術峯會（Global Open-source Technology Conference，簡稱 GOTC）始於 2021 年，是面向全球開發者的開源技術盛會；2024 全球開源極客嘉年華（GOGC 2024）由浦東軟件園攜手 S 創共建，與開源中國、Linux 基金會等品牌聯合呈現。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;此次大會將集結全球範圍內對開源技術充滿熱情的開發者、社區成員、創業者、企業領袖、媒體人，以及各開源項目應用場景的產業精英、跨界才俊與年輕力量。通過主題演講、圓桌討論、創新集市、人才集市、黑客松、技術展示和互動工作坊等形式，與會者將有機會交流實踐經驗、探索前沿技術，讓我們一起激發創新活力、展示開源魅力、促進跨領域合作。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;更多大會信息，訪問官網查看：&lt;span style=&quot;color:#245bdb&quot;&gt;https://gotc.oschina.net&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3859945/blog/11455383</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/11455383</guid>
            <pubDate>Thu, 11 Jul 2024 09:19:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>JetBrains IDE 年度第二個大版本 (2024.2) 採用全新默認 UI</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;JetBrains IDE 即將發佈年度第二個大版本更新 2024.2，根據&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fblog%2F2024%2F07%2F08%2Fthe-new-ui-becomes-the-default-in-2024-2%2F&quot; target=&quot;_blank&quot;&gt;官方公告&lt;/a&gt;，&lt;strong&gt;他們會在該版本中為所有 IDE 啓用全新默認 UI&lt;/strong&gt;，其主要變化包括&lt;strong&gt;簡化的主工具欄、新的工具窗口布局、新的主題和圖標&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-867094c7ece20e1a30fc6443933a743d327.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;JetBrains 團隊介紹稱，設計新 UI 目標是&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;為了&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#27282c&quot;&gt;降低 IDE 的視覺複雜性，提供對基本功能的便捷訪問，並根據用戶需要逐步展示更復雜的功能 —— 進而帶來更簡潔、乾淨和現代的外觀和體驗感。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;全新 UI 還提供了更大和更易於使用的控件、一致的調色板、淺色和清晰的圖標、增強的對比度和更好的強調。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-99a19204c10d3ba948bdee6325055c34d83.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;2021 年，JetBrains 就啓動了新 UI 的開發工作。歷經三年的打磨，現在即將面向全部用戶提供。&lt;/p&gt; 
&lt;p&gt;如果你是懷舊黨也不用擔心，因為 JetBrains 團隊將經典 UI 做成了插件，如有需要，直接從&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplugins.jetbrains.com%2Fplugin%2F24468-classic-ui&quot; target=&quot;_blank&quot;&gt; JetBrains Marketplace &lt;/a&gt;安裝即可。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bb1335c62393924ffdc20f635631c62a74f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8e0a6987bcd4c65c2d6ac1a60f33ecb7a84.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相關閲讀：&lt;a href=&quot;https://www.oschina.net/news/197167/new-ui-preview-for-jetbrains-ide&quot; target=&quot;_blank&quot;&gt;JetBrains IDE 公佈全新默認 UI，已開放申請試用&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301581/jetbrains-ide-the-new-ui-becomes-the-default-in-2024-2</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301581/jetbrains-ide-the-new-ui-becomes-the-default-in-2024-2</guid>
            <pubDate>Thu, 11 Jul 2024 09:15:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>搞大模型，沒有重排工具怎麼行？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在説重排工具之前，我們要先了解一下 RAG。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;檢索增強生成（RAG）是一種新興的 AI 技術棧，通過為大型語言模型（LLM）提供額外的「最新知識」來增強其能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基本的 RAG 應用包括四個關鍵技術組成部分：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Embedding 模型：用於將外部文檔和用戶查詢轉換成 Embedding 向量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;向量數據庫：用於存儲 Embedding 向量和執行向量相似性檢索（檢索出最相關的 Top-K 個信息）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提示詞工程（Prompt engineering）：用於將用戶的問題和檢索到的上下文組合成大模型的輸入&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大語言模型（LLM）：用於生成回答&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上述的基礎 RAG 架構可以有效解決 LLM 產生「幻覺」、生成內容不可靠的問題。但是，一些企業用戶對上下文相關性和問答準確度提出了更高要求，需要更為複雜的架構。一個行之有效且較為流行的做法就是在 RAG 應用中集成 Reranker。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_1&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;什麼是 Reranker？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Reranker （重排器）是信息檢索（IR）生態系統中的一個重要組成部分，用於評估搜索結果，並進行重新排序，從而提升查詢結果相關性。在 RAG 應用中，主要在拿到向量查詢（ANN）的結果後使用重排器，能夠更有效地確定文檔和查詢之間的語義相關性，更精細地對結果重排，最終提高搜索質量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;目前，重排器類型主要有兩種——基於統計和基於&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;深度學習&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;模型的 Reranker：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基於統計的重排器會彙總多個來源的候選結果列表，使用多路召回的加權得分或倒數排名融合（RRF）算法來為所有結果重新算分，統一將候選結果重排。這種類型的重排器的優勢是計算不復雜，效率高，因此廣泛用於對延遲較敏感的傳統搜索系統中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基於深度學習模型的重排器，通常被稱為 Cross-encoder Reranker。由於深度學習的特性，一些經過特殊訓練的神經網絡可以非常好地分析問題和文檔之間的相關性。這類重排器可以為問題和文檔之間的語義的相似度進行打分。因為打分一般只取決於問題和文檔的文本內容，不取決於文檔在召回結果中的打分或者相對位置，這種重排器既適用於單路召回也適用於多路召回。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;將重排器整合到 RAG 應用中，可以顯著提高生成答案的精確度，因為重排器能夠在單路或多路的召回結果中挑選出和問題最接近的文檔。此外，擴大檢索結果的豐富度（例如多路召回）配合精細化篩選最相關結果（Reranker）還能進一步提升最終結果質量。使用重排器可以排除掉第一層召回中和問題關係不大的內容，將輸入給大模型的上下文範圍進一步縮小到最相關的一小部分文檔中。通過縮短上下文， LLM 能夠更「關注」上下文中的所有內容，避免忽略重點內容，還能節省推理成本。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;599&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4fc2f2193db0ee6101c8533c1e6e1b0916d.png&quot; width=&quot;690&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;追求回答高精度和高相關性的場景中，特別適合使用重排器，例如專業知識庫或者&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.tencent.com%2Fproduct%2Ftqdcs%3Ffrom_column%3D20065%26from%3D20065&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3370ff&quot;&gt;客服系統&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等應用。因為這些應用中的查詢都具有很高的商業價值，提升回答準確性的優先級遠高於系統性能和控制成本。使用重排器能夠生成更準確的答案，有效提升用戶體驗。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;重排器在提高檢索相關性的同時，也會增加延遲和計算成本。因此，在檢索質量、搜索延遲、使用成本之間進行權衡之後，當前可選擇的重排工具並不多，下面介紹三款：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Cohere Rerank 、 BGE Re-Ranker、Jina Reranker。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_2&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Cohere Rerank &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Cohere Rerank 是在業界被廣泛使用的重排工具，它通常集成在 LangChain 和 LlamaIndex 框架中，使用相對簡單。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;其背後公司 Cohere 的來頭不簡單。Cohere 成立於 2019 年，由曾在 Google Brain 和 Cortex 工作的研究人員和工程師創立，其聯合創始人之一 Aidan Gomez，是 Transformers 架構的作者之一。根據不完全統計，Cohere 累計融資已經超過 4.45 億美元。今年 3 月，還爆出 Cohere 的新一輪融資已進入後期談判階段，籌集超 5 億美元資金，估值有望達到 50 億美元。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;今年 4 月， Cohere 發佈了 Rerank 3，各方面都提升了不少，包括： &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4k 上下文長度可顯著提高較長文檔的搜索質量 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;能夠搜索多方面和半結構化數據，如電子郵件、發票、JSON 文檔、代碼和表格&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;覆蓋 100 多種語言 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;改善延遲並降低總體擁有成本 (TCO)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不過，它是商業閉源的。原本每 1000 次搜索，用戶需要花費 1 美元，在升級到 Rerank 3 之後，每 1000 次搜索，需要 2 美元。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;525&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6c48de0785563b5f2898a42490593dec710.png&quot; width=&quot;690&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;BGE Re-Ranker&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;BGE Re-Ranker 是智源研究院推出檢索排序模型，今年 3 月發佈了 2.0 版本。該模型是智源團隊在 BGE 系列基礎上的新嘗試。BGE（BAAI General Embedding）是智源研究院打造的通用語義向量模型。自 2023 年 8 月發佈以來，智源團隊陸續發佈了中英文模型 BGE v1.0、v1.5 以及多語言模型 BGE-M3。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;350&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4e96c1a9718ba5785b09c3449047812cb95.png&quot; width=&quot;690&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;BGE Re-Ranker v2.0 系列排序模型採用了兩種不同尺寸的模型基座：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;BGE Re-Ranker v2-LLM：基於 MiniCPM-2B，Gemma-2B 等性能卓越的輕量化大語言模型。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;BGE Re-Ranker v2-M3：基於性能出色、參數量更小的 BGE-M3-0.5B（速度更快）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;來看看 BGE Re-Ranker 2.0 的特性：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;支持更多語言，更長文本長度，並在英文檢索基準 MTEB、中文檢索基準 C-MTEB、多語言檢索基準 MIRACL、LLaMA-Index Evaluation 等主流基準上取得了 state-of-the-art 的結果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;藉助分層自蒸餾策略進一步優化推理效率，適度的開銷即可換取顯著的性能收益。在實際應用中，用戶可以基於具體場景的算力條件及時延限制靈活選擇排序模型的層數。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;開源模型現已通過 Hugging Face、Github 等平台發佈，採用免費、商用許可的開源協議：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;u&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;u&gt;&lt;span&gt;https://github.com/FlagOpen/FlagEmbedding&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;br&gt; &lt;u&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;u&gt;&lt;span&gt;https://huggingface.co/BAAI&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;截至今年 3 月，BGE 系列模型全球下載量超過 1500 萬，位居國內開源 AI 模型首位。BGE-M3 模型一度躍居 Hugging Face 熱門模型前三，其所屬代碼倉庫 FlagEmbedding 位居 GitHub 熱門項目前 10；BGE-M3 所帶來的全新的通用檢索模式也相繼被 Milvus、Vespa 等主流向量數據庫集成。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Jina Reranker &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Jina Reranker 是由神經搜索公司 Jina AI 開發。2022 年，Jina AI 完成 A 輪融資，融資總額已經超過 2 億人民幣。其開發的神經搜索框架 Jina 多次登上 GitHub 全球 Trending 排行榜第一名。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Jina Reranker v2 在今年 6 月發佈，在速度、多語言支持和功能上都有顯著提升，尤其適用於檢索增強生成（RAG）場景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;199&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-33a75b52e73b78b495d0c05e71f40e03cb2.png&quot; width=&quot;690&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Jina Reranker v2 的主要優勢：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多語言支持: 在 100 多種語言中提供更相關的搜索結果，性能超過 bge-reranker-v2-m3； &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;代理能力: 具備最先進的函數調用和文本到 SQL 轉換能力，適用於代理 RAG 場景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;代碼檢索：在代碼檢索任務上表現最佳；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;極速：推理速度比上一代產品快 6 倍，比同類產品&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#eff0f1&quot;&gt;&lt;span&gt;&lt;span&gt;bge-reranker-v2-m3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;快 15 倍。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Jina Reranker v2 的特性：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;創新需求：彌補嵌入模型在檢索精度上的不足。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多語言支持：在 MKQA、BEIR 和 AirBench 等基準測試中表現優異。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;應用場景：在結構化數據查詢、函數調用和代碼檢索方面的應用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;推理速度：模型尺寸更小、採用了 Flash Attention 2 技術。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;訓練過程：分四個階段進行，包括使用英語數據預訓練、添加跨語言數據、微調等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;294&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-057becb0ce1a34729e9a6ae89f991834540.png&quot; width=&quot;690&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Jina Reranker v2 的應用方式：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過 Reranker API：使用 Jina Reranker v2 最快捷的方式是通過其 API，無需部署模型，就能輕鬆提升搜索的相關性和 RAG 的準確性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過 RAG/LLM 框架集成：Jina Reranker 與現有的 LLM 和 RAG 編排框架集成，只需使用模型名稱即可快速集成。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Huggingface：Jina AI 開放了（在 CC-BY-NC-4.0 下）對 Hugging Face 上的 jina-reranker-v2-base-multilingual 模型的訪問，以用於研究和評估目的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;私有云部署：Jina Reranker v2 的預構建私有部署包即將在 AWS Marketplace 和 Azure Marketplace 上線，方便 AWS 和 Azure 用戶部署。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Jina Reranker 也是收費的，不過前 100 萬個 token 可以免費。10 億，個 token 是 20 美元，110 億個 token 要 200 美元。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;293&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-027ce2e502dc9eb7bc38700ff30df9f35e5.png&quot; width=&quot;690&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;8 月 15 日至 16 日，GOTC 2024 大會將於上海張江科學會堂舉行。在「硬核 AI 技術創新與實踐」論壇，J&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;ina AI 高級算法工程師付傑將分享 Jina AI 如何通過 reranker 優化搜索結果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，主要講解 reranker 背後的開發流程，包括在多語言、長 context 場景下模型的訓練，模型數據的篩選與挖掘，模型性能的評測，以及在 RAG 場景下 reranker 模型如何幫助用戶提升檢索生成的效果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;388&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9466b021c13729a3c080416fa55d4e6bf2b.png&quot; width=&quot;690&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;GOTC 2024 與上海浦東軟件園聯合舉辦，並結合 「GOTC（全球開源技術峯會）」 與 「GOGC（全球開源極客嘉年華）」，旨在打造一場全新的開源盛會。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;全球開源技術峯會（Global Open-source Technology Conference，簡稱 GOTC）始於 2021 年，是面向全球開發者的開源技術盛會；2024 全球開源極客嘉年華（GOGC 2024）由浦東軟件園攜手 S 創共建，與開源中國、Linux 基金會等品牌聯合呈現。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此次大會將集結全球範圍內對開源技術充滿熱情的開發者、社區成員、創業者、企業領袖、媒體人，以及各開源項目應用場景的產業精英、跨界才俊與年輕力量。通過主題演講、圓桌討論、創新集市、人才集市、黑客松、技術展示和互動工作坊等形式，與會者將有機會交流實踐經驗、探索前沿技術，讓我們一起激發創新活力、展示開源魅力、促進跨領域合作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;更多大會信息，訪問官網查看：&lt;a href=&quot;https://gotc.oschina.net/&quot; rel=&quot;nofollow&quot;&gt;https://gotc.oschina.net&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;參考文章：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、提高 RAG 應用準確度，時下流行的 Reranker 瞭解一下 &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;https://cloud.tencent.com/developer/article/2410324&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、Cohere AI 推出 Rerank 3：旨在優化企業搜索和 RAG（檢索增強生成）系統的先進模型 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://medium.com/@bitrise.co.in/cohere-ai-unveils-rerank-3-a-state-of-the-art-model-designed-to-optimize-enterprise-search-and-rag-fe32a2da5533&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、RAG 再添新利器！智源開源最強檢索排序模型 BGE Re-Ranker v2.0 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://mp.weixin.qq.com/s/XnkQFCdbvjox1Y06IbIlYw&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3859945/blog/11455333</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/11455333</guid>
            <pubDate>Thu, 11 Jul 2024 09:13:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>搜索廣告召回技術在美團的實踐</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p&gt;本文整理自美團技術沙龍第 81 期《美團在廣告算法領域的探索及實踐》（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1gM4m1r7DQ%2F%3Fspm_id_from%3D333.999.0.0%26vd_source%3Daea2a93491bea0d72f7e5b8a79085d70&quot; target=&quot;_blank&quot;&gt;B 站視頻&lt;/a&gt;）。首先介紹了美團搜索廣告的三個階段：多策略關鍵詞挖掘、分層召回體系、生成式召回；然後重點介紹了生成式關鍵詞召回、多模態生成式向量召回、生成式相關性判斷在美團的實踐。最後是一些經驗分享及總結，希望能對大家有所幫助或啓發。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b47df1bba80ad21852458fbee565a29ff5d.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;美團搜索廣告介紹&lt;/h2&gt; 
&lt;p&gt;從美團流量場景角度來看，美團搜索廣告分為兩大類，一是列表推薦廣告；二是搜索廣告。推薦廣告以展現商家模式為主，通常叫商家流。搜索廣告的展現形式比較豐富，有商家模式，即以商家展現為主，會掛上菜品/商品；還有商品模式，即以商品展現為主，以呈現商品大圖、商品標題等核心商品信息為主。&lt;/p&gt; 
&lt;p&gt;美團搜索廣告流量有以下幾個典型特點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;搜商品意圖佔據絕大多數份額，搜索商家只佔較小的一部分；因此檢索以商品為主，看候選規模的話，美團有百萬量級的商家和十億級別的商品，供給規模較龐大。&lt;/li&gt; 
 &lt;li&gt;從商家特點來看，它有一個和業界傳統電商場景不太一致的特點是很多是中小商家/夫妻店，他們的線上運營能力較弱，導致美團商家的內容質量沒有其他電商平台好，所以在內容質量處理上，花費了很多時間。&lt;/li&gt; 
 &lt;li&gt;美團的 O2O 場景特點是 LBS 屬性，供給相對不那麼充分，一個蜂窩內的幾百個、上千個商家，搜索場景裏有相關性約束，供給隊列更短，有很多位置受限於供給沒有填上。因此，美團搜索廣告對召回率的要求更高。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/248944801fe9e2aae32e36f7a1f6e0911668234.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;上圖展示了美團廣告和傳統廣告之間一些的差異。 下面介紹圍繞着召回率提升我們做的一些工作。美團的搜索廣告從 2019 年開始建設，主要經歷了三個發展階段：&lt;/p&gt; 
&lt;p&gt;第一階段是美團&lt;strong&gt;搜索廣告啓動階段&lt;/strong&gt;，我們叫多策略關鍵詞挖掘階段。這時的工程基建能力處於起步階段，也缺乏線上反饋數據，另外考慮落地節奏，希望儘可能快的把整個系統從 0 到 1 搭建起來，並希望在數據有限的情況下，快速支持迭代效率。所以這個階段的召回方式是 SPU 通過離線方式，挖掘核心關鍵詞，在線與 Query 精確匹配。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;特點&lt;/strong&gt;：一是隻聚焦於通過離線方式覆蓋高頻流量；二是缺乏線上的行為數據，以 NLP 的挖詞技術為主；三是為了追求更多的覆蓋，採用了多策略並行的方式，不斷疊加新的召回策略，以達到更高的流量覆蓋。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;缺點&lt;/strong&gt;：第一，它不是一個正向匹配過程，而是從商品反向挖掘，所以整體挖掘效率很低，挖出了大量無效關鍵詞，放到線上後，又無法匹配；第二，由於它是一個離線策略，所以只能覆蓋一些高頻流量，20%-30% 的長尾流量無法覆蓋；第三個是多策略並行，在後期，新通路會通過不斷擠壓舊召回通路，最終形成 10+的召回通路，這種模式的維護成本較高，而且如果一個算法同學優化一個召回通路，策略面覆蓋有限，整體的 ROI 在後期較低；第四個是缺乏個性化技術。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;第二階段是&lt;strong&gt;分層召回體系&lt;/strong&gt;，它是基於流量和供給特點，按照業務類型，聚焦在幾個象限內，每個象限裏採用更聚焦的針對性召回策略，進行優化。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;特點&lt;/strong&gt;：第一，在一個業務範疇內，通過把技術做深能夠取得業務效果的極大提升；第二是隨着基建能力的提升，更多的是把召回由離線切換成在線，以此覆蓋更多的流量；第三是在單通路的召回能力上，我們突破了傳統單一 NLP 技術瓶頸，開始大規模使用個性化/圖/多模態等新的召回技術。在 2022 年底，整個分層召回體系取得了不少成效。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;缺點&lt;/strong&gt;：第一是整個召回體系還是以判別式召回模式為主，決策空間不夠，傾向於學習歷史數據行為，馬太效應現象變得越來越嚴重，而且整個探索空間在這種判別式模型下面，侷限性也越來越明顯；第二是整個模型規模和容量相對不足，天花板很容易逼近；第三是採用多通道獨立優化的方式，每個通道都有自己的樣本特徵，很難做到通道之間的融合，難以形成 1+1&amp;gt;2 的效果。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;第三個階段是&lt;strong&gt;生成式召回&lt;/strong&gt;。核心思路是借鑑生成式大模型的思路和能力，改造現有的召回技術體系，長期上來看，我們會探索 DSI 新召回範式。&lt;/p&gt; 
&lt;p&gt;大模型在 C 端流量的落地，會遇到很多算力瓶頸。經過一年的探索，我們形成了大模型落地的方式和原則，分為三類。第一是離線用能力構建領域微調大模型；第二是在線用大模型技術思想，結合傳統模型改造現有模型能力；第三是通過蒸餾方式，在線儘可能學習離線大模型能力，通過蒸餾方式把大模型通用知識蒸餾到在線規模相對較小的模型上。&lt;/p&gt; 
&lt;p&gt;面臨的挑戰包括三個方面：第一是有算力焦慮；第二是在模型規模變得越來越大的情況下，如何保證模型迭代效率；第三模型的變化不能發揮模型能力本身的優勢，我們希望構建以大模型核心能力基礎為核心的架構，拿到更好的效果，但改造成本較大。&lt;/p&gt; 
&lt;h2&gt;美團搜索廣告召回發展階段&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/d1e0aed8bb38220792a3337d9ac211e8728900.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;階段一：多策略關鍵詞挖掘&lt;/h3&gt; 
&lt;p&gt;對於多策略關鍵詞挖掘階段，美團搜索廣告的特點一是 Query 較短，平均長度也就兩三個字，因為很多人在美團 App 搜索比如燒烤、西餐這種很泛但又很短的 Query；二是流量分佈比較集中，高頻、Top 幾萬的 Query 就佔了大約 70% ~ 80% 的流量，頭部效應比較明顯；三是區別於業界傳統的搜索廣告，美團搜索廣告商家沒有買詞能力，通常以整個店鋪的投放模式為主。&lt;/p&gt; 
&lt;p&gt;基於這三個特點，我們設計了關鍵詞挖掘策略思路。一由於 Query 很短，我們很容易通過信息抽取，把詞或實體核心信息抽取出來；二是因為頭部效應比較明顯，Top2 萬的 Query 覆蓋了很多流量，採用這種離線方式能快速拿到大部分收益；三是由於商家沒有買詞能力，如果用 Query 直接匹配商品，會涉及到傳導文本匹配問題，匹配難度會更高，所以我們最後採用模型從商家商品裏挖掘核心詞，在線做短串匹配的方式。&lt;/p&gt; 
&lt;p&gt;如左下圖所示的召回模式是離線，我們從廣告或 SPU 裏通過關鍵詞挖掘的方式挖掘出關鍵詞，在線通過 Query 改寫的方式儘可能提升在線匹配效率。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/30482573c6a09cb8e3384db6dc660a0e829404.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;具體來説，我們的關鍵詞挖掘策略經歷過三版迭代，按照技術由淺入深的方式做的。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;早期第一版創建時，我們更多采用基於規則的挖掘式策略，把流量分成了商家詞、商品詞和品類詞。商品詞通過分詞和詞頻貢獻的算法，挖掘核心關鍵詞，由於品類字面沒有完全匹配的信息，我們通過互信息，構建詞之間的權重去挖掘。但問題一是規則能力較弱；第二是隻能挖掘出連續的短差，比如&quot;炒西紅柿雞蛋&quot;，它只能挖掘出&quot;炒西紅柿&quot;，挖掘不出&quot;炒雞蛋&quot;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;所以在快速落地了規則式挖掘策略後，我們開始用模型方法自動挖掘關鍵詞。模型通常有兩種，抽取式和生成式。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;從準確性和數據侷限考慮，先採用的是抽取式挖掘方式挖掘關鍵詞，這經過了三個階段的策略迭代。第一版將規則式升級為了模型挖掘方式，傳統上叫序列標註模型，這種模型只能挖掘出連續短串，好處是挖掘效率比基於規則的挖掘模式高，但會導致很多關鍵詞受限於連續短串的方式而挖掘不出來；後面做了兩版突破連續短串的挖掘方式，分別是標註組合模型和指針組合模型。標註組合模型能夠跨越連續短串挖掘，但它有一個順序概念在裏面；指針組合模型可以在原有短串裏隨機組合詞，突破順序和連續的侷限。但抽取式模型的準確率較高，探索空間不足。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在迭代了三版抽取式策略後，我們將策略重心聚焦在生成式挖掘方向上，希望突破字面極限，探索更大的流量空間，最後做了三個階段的迭代。第一個階段是深度分類模型，它能夠突破字面限制，Top2 萬的 Query 能夠覆蓋大部分流量，那將 SPU 商品文本直接分類到這 2 萬個 Query 標籤裏，做詞和 Query 間的匹配，但這種多分類模型較難優化，也不能泛化出更多的 Query，時效性和更新頻率也有限；所以後來我們採用了深度生成模型，實現了相對廣闊空間的挖掘，但受限於模型規模和樣本豐富度，準確性不太好，所以我們在後面加了標註和生成模型，在具備生成泛化性的同時，儘量控制 Query 質量，以上所有模型都是傳統 NLP 裏的基礎模型，我們只是把模型數據、業務特點做了適配。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;未來，我們期望在關鍵詞挖掘階段，較好地解決了早期業務落地和基本盤問題，但是面對美團比較複雜的流量場景，還需要通過新方式強化流量，提高商品匹配效率。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/68f8473fef2b195795238fda49311e4d767762.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;階段二：分層召回體系&lt;/h3&gt; 
&lt;p&gt;2022 年，我們開始正式規劃第二代召回體系即分層召回體系，核心思路是按照流量和供給特點分類，強意圖是直接搜索一個商品；泛意圖比如搜索&quot;燒烤&quot;這個品類，泛意圖用戶雖然表達了需求，但滿足需求的候選可以很廣，甚至可以替代；供給層面分為有供給、弱供給和沒有供給三個象限。我們找到核心象限聚焦優化，最終找到以下四類場景。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;第一是強意圖有供給，通過關鍵詞就能較好滿足，因此在這個象限裏，我們更多是在迭代關鍵詞召回技術。一是通過離線統一到生成式的方式。前面介紹離線關鍵詞挖掘策略可能會有十幾個通道，不管迭代哪個通道，策略召回的覆蓋面都是有限的，而且團隊也沒那麼多人迭代，但這種情況下，我們把整個離線關鍵詞十多路的挖掘策略通過規模較大的生成式模型做了統一，引入了多模態信息，做到了數據更多、模型更多以及召回目標更多的情況，後期只需要通過優化模型能力，就能取得線上全流量覆蓋的效果；二是通過離線關鍵詞的方式做到了在線。我們並沒有採用業界傳統的布爾檢索，這種方式有兩個侷限，一是 Query 改寫以及商品分詞基於較淺層的模型，整體效果會受限於模型效果。二是它沒有做到檢索和最終目標的匹配。在線係數化檢索方式類似於雙塔向量檢索，但每個模型出來不是一個稠密的向量，而是一個幾萬維稀疏的 term 粒度，通過端到端的建模方式，把 Query 和商品映射到一個稀疏的幾萬維槽位的幾個槽位裏，離線訓練時通過槽位端到端的建模，實現目標檢索和目標一致性，在線檢索時，基於槽位構建倒排檢索，具備一定的可解釋性。&lt;/li&gt; 
 &lt;li&gt;第二個是泛意圖有供給，體現了用戶的個性化偏好，通過迭代向量召回模型覆蓋這個場景。向量召回經過了三版迭代。第一版是基於傳統語義相關性約束的雙塔模型，和業界的做法類似；我們的向量召回目標最終要讓建模用戶個性化，第二版將用戶個性化提上了日程，但如果只把用戶個性化特徵和傳統語義特徵融合在一起，黑盒式學習很容易被用戶個性化信息帶偏，最後我們讓用戶個性化信息和語義個性化信息分別學習，通過顯式疊加的方式做端到端的建模。這種檢索方式能夠兼顧個性化和語義相關性信息；第三版是基於平台的多樣化目標，我們需要對齊後鏈路的精排目標，在召回階段考慮整體商業價值。&lt;/li&gt; 
 &lt;li&gt;第三個是泛需求弱供給，比如搜索&quot;漢堡王&quot;，但給 TA 一個&quot;肯德基&quot;，TA 也會下單，通過搜索推薦化的方式覆蓋和解決。這個場景比較複雜，從業務來看，它需要做引導和推薦，在結果頁裏也做偏泛結果的推薦，涉及到搜索前和搜索中，搜索中既有商家也有菜品，既涉及要推薦什麼樣的菜品，也涉及推薦什麼樣的商家；另外推薦本身是一個關係建模。我們最後選擇基於圖模型的迭代，因為圖模型首先是一個基於關係的建模，而且圖模型具備多場景海量信息的容納能力，在圖建模裏，一是構建了異構的多節點百億規模圖，通過圖預訓練加微調的方式識別多個場景，我們最近也在嘗試做圖和大模型訓練相結合的方式；二是我們把整個圖檢索搬到在線，因為在搜索場景中，用戶需求是即時需求，屬性較強，只有把檢索搬到在線，通過圖在線的實時檢索聚合到用戶當前最有可能的潛在興趣情況下，才能實現收益最大化。&lt;/li&gt; 
 &lt;li&gt;第四個是沒有供給的場景，通過流量結合供給運營化的方式解決。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;階段 2 通過劃分象限和場景聚焦迭代的方式，拿到了不錯的收益，但很快也遇到了瓶頸。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/ce161f376ffa89b2baed47bc8e7c4765967044.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;階段三：生成式召回&lt;/h3&gt; 
&lt;p&gt;2023 年，我們開始探索新生成式召回方式，核心思路是結合大模型或生成式技術思想，提高召回算法的決策空間，提升模型的匹配能力。經過一段時間迭代，我們抽象出廣告子模塊結合 LLM 落地的三類思想及方式，分別是用思想、學能力、用 LLM。具體和子模塊結合的一些探索如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;一是離線關鍵詞召回方向。如剛才介紹，我們已經把整個離線關鍵詞召回技術方式統一到了規模不錯的生成式模型方式上。大模型出來後，直接用大模型其實還存在着算力及效果的 2 個挑戰。但我們認為大模型的兩個核心技術思想：Cot（Chain-of-thought，能使大型語言模型能夠更好地理解人類的語言請求）推理和 RLHF（Reinforcement Learning from Human Feedback，一種基於人類偏好的強化學習方法）對齊人類反饋思想，對我們現有模型的優化也是有幫助的，因此我們使用大模型的這些技術思想來改造離線生成式召回模型。&lt;/li&gt; 
 &lt;li&gt;二是在向量召回方向。我們已經將向量表徵升級為多模態模型，進一步我們思考，LLM 語言大模型對於離散 Token 的信息歸納及表徵是有比較大的提升的，但是在稠密表徵領域，一個值得借鑑的方法是擴散模型，因為擴散模型也是通過多步去噪的方式來生成目標，通過擴散多步過程，在其中引入多元信息多步融合的思路，提升整個向量召回的向量表徵能力。&lt;/li&gt; 
 &lt;li&gt;三是隨着我們探索的深入及對應算法能力的提升，我們構建了美團領域廣告大模型，嘗試直接把大模型用到美團實際場景裏做關鍵詞召回，將離線中等規模的生成式模型直接替換成大模型，並探索大模型在線化。&lt;/li&gt; 
 &lt;li&gt;第四個是蒸餾大模型能力，主要在相關性場景落地，目前蒸餾了兩塊能力，Cot 推理能力和模型隱層知識能力蒸餾。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下面我主要介紹下結合 LLM 的能力，在召回場景下已經全量的一些技術探索。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/cb8c69f866c07b7bbe28f99acbc845f7640525.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;生成式關鍵詞召回&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;生成式召回主要借鑑大模型思想，我們已經升級為統一的生成式模型，它的工作方式是基於 beamsearch 的方式，一次生成多個結果，但結果之間是互相看不到的，我們認為這種方式會存在問題，另外，從線上和實際生成結果來看，詞之間是有關係的，按照概率方式來看，如果一個關鍵詞能夠推理出另一個關鍵詞，大概率前面這個關鍵詞要比下一個關鍵詞的信息含量多，那能否借鑑大模型推理思想，按照序列生成方式逐步推理出多個關鍵詞。&lt;/li&gt; 
 &lt;li&gt;我們通過構建概率貢獻圖的方式，採樣得到關鍵詞之間的導出關係，在一次生成時，直接生成多個關鍵詞，這多個關鍵詞之間有推理關係，比如要給&quot;花仙女鮮花店&quot;商家生成關鍵詞，第一個關鍵詞就是相對具象的&quot;鮮花店&quot;，它的含義和商家的商品描述是確定的，在生成&quot;鮮花店&quot;時，可以推理成&quot;花店&quot;，進一步可能會生成新關鍵詞，通過這種序列推理方式，能夠很好地利用關鍵詞之間的關係。&lt;/li&gt; 
 &lt;li&gt;在序列推理生成關鍵詞時，比如生成了 5 個關鍵詞，有一個關鍵詞不相關，剩下的 4 個關鍵詞是相關的，那如何通過模型識別出這種不一致現象，能否藉助人類反饋方式，實現模型序列好壞端到端的判斷。模型生成的關鍵詞序列與人工標註是否一致，通過這種反饋對齊的方式餵給模型，提升整個序列生成結果的一致性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通過這種方式，召回得到明顯提升，而且生成相關性的準確度也得到明顯提升。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/0a64745f26ec8939c7f4e17424273d161277430.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;對於離線關鍵詞，前面是中等規模的模型，我們最近把整個離線關鍵詞替換成大模型，之前沒有替換是因為開源通用大模型能力在領域場景裏，挖掘詞的準確性和通用性有限，我們一直在構建美團廣告領域的大模型，通過激發大模型知識，生成更全面準確的模型，我們做了 3 個階段的優化。&lt;/p&gt; 
&lt;p&gt;第一是融合領域知識，比如健身和輕食相關，這是領域知識，通過領域全參數訓練得到一個基礎的廣告領域模型。第二是融入場景知識，美團有很多店鋪和商品名，比如川菜和眉州東坡在店鋪裏有很多相關數據。通過這種指令微調的方式學習店鋪知識，在實際應用時，再學習偏實際的知識，比如搜索&quot;豬手&quot;時，發現他之前檢索過很多&quot;豬肘切片&quot;，通過這種檢索方式增強大模型當前推理知識能力。最後通過構建領域大模型和檢索增強範式，在一些場景裏替換傳統大模型，這樣，我們發現召回效率明顯提升。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/b9d1d0d7bcc6265f296c2ff425f5954a774735.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;多模態生成式向量召回------結合擴散模型，多階段生成向量表徵&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我們改造或優化多模態向量召回，在表徵裏結合擴散模型做了優化，如下圖左邊所示，傳統的多模態向量召回更多是在 item 側表徵裏，將商品圖片和文本模態信息融合在一起，得到一個表徵，那能否通過一些方式在 Query 側也實現多模態表徵。一個用戶在美團場景裏搜索一個 Query 時，大概率他的腦海裏已經有關於這個 Query 所對應菜品圖片的大致印象。那我們如何通過模型建模的方式還原圖片的印象，核心在於還原用戶的潛在意識。我們的做法是，一是把 Query 歷史點擊的圖片信息彙集在一起，表徵 Query 所代表的通用視覺信息；二是將用戶歷史點擊圖片代表用戶個性化視覺信息，把這兩類視覺信息疊加在一起，可以在一定程度上反映用戶在當前搜索框架下，想要得到的流量側多模態信息，最後通過多模態表徵匹配技術，整個離線召回效率也有提升。&lt;/p&gt; 
&lt;p&gt;但這種方式也是基於傳統的判別式表徵，比如現在大家都在做個性化向量召回，相關性和個性化之間有遞進關係，最淺層的需要保證相關性，第二層才需要在相關性裏挑選更個性化、更符合用戶偏好的候選集，給到下游鏈路。但傳統的判別式方式一般在特徵階段疊加不同特徵，通過建模、多目標落實反向遷移方式，不能很好的顯式學習到不同目標間的遞進關係，但 SD 生成模型比較適合這種稠密向量生成，通過多步還原過程，本質上也是一個不斷推理的生成式過程。&lt;/p&gt; 
&lt;p&gt;我們希望向量表徵具備不同信息的推理能力，SD 的多步加噪去噪過程類似於推理過程，可以相結合，在不同步驟中引入不同維度的信息，做到多維信息的顯式理解及融合。在正向編碼過程中，先將 item 通過編碼器編碼成向量後，逐漸加噪還原成白噪聲，在反向去噪還原過程中，在噪聲裏分階段添加用戶 Query 以及 side info 信息，通過多步還原的方式，還原出 Query 所代表的信息。並有兩個對比的操作，一是傳統的樣本 Paiwise 學習，通過對比學習方式拉近 Query 與相似 Item 的表徵；二是我們認為相似 item 有類似的標準過程，通過對比學習拉近相似 item 之間在擴散中間過程的表徵，這是整個建模過程。&lt;/p&gt; 
&lt;p&gt;在還原階段，我們會顯式還原中間步驟疊加相關性信息、個性化信息，通過對比方式讓模型在還原過程中顯式相關性和個性化信息，最後在模型結果裏能看到，如下圖左邊是傳統的判別式模型裏最好的一個 Baseline，它能夠較好區分 Query 和正樣本信息，但它在個性化樣本和相關性樣本里基本是混在一起的，通過這種擴散模型方式，相關性樣本和個性化樣本就有一定程度區分開來的能力。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/eb8c6c661c488af1801306944b08b8ff683001.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;總結&lt;/h2&gt; 
&lt;p&gt;生成式算法相比判別式，能夠有效的拓展整個召回的策略空間，2023 年我們基於大模型的技術思想賦能現有的召回模型拿到了一些效果，但遠未達到新技術方式的上限。看未來，一方面隨着算力的逐漸提升，我們可以探索更大規模的生成式模型直接落地，另一方面可以探索在線的端到端生成式召回，來優化多級漏斗帶來的樣本偏差和漏斗效率問題。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;|&lt;/strong&gt; 在美團公眾號菜單欄對話框回覆【2023 年貨】、【2022 年貨】、【2021 年貨】、【2020 年貨】、【2019 年貨】、【2018 年貨】、【2017 年貨】等關鍵詞，可查看美團技術團隊歷年技術文章合集。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/b0364d579285ab22aa6235bd100d7c22178175.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;| 本文系美團技術團隊出品，著作權歸屬美團。歡迎出於分享和交流等非商業目的轉載或使用本文內容，敬請註明&quot;內容轉載自美團技術團隊&quot;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=mailto%3A%E3%80%82%E6%9C%AC%E6%96%87%E6%9C%AA%E7%BB%8F%E8%AE%B8%E5%8F%AF%EF%BC%8C%E4%B8%8D%E5%BE%97%E8%BF%9B%E8%A1%8C%E5%95%86%E4%B8%9A%E6%80%A7%E8%BD%AC%E8%BD%BD%E6%88%96%E8%80%85%E4%BD%BF%E7%94%A8%E3%80%82%E4%BB%BB%E4%BD%95%E5%95%86%E7%94%A8%E8%A1%8C%E4%B8%BA%EF%BC%8C%E8%AF%B7%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%87%B3tech%40meituan.com%E7%94%B3%E8%AF%B7%E6%8E%88%E6%9D%83%E3%80%82&quot; target=&quot;_blank&quot;&gt;。本文未經許可，不得進行商業性轉載或者使用。任何商用行為，請發送郵件至 tech@meituan.com 申請授權。&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/meituantech/blog/11349478</link>
            <guid isPermaLink="false">https://my.oschina.net/meituantech/blog/11349478</guid>
            <pubDate>Thu, 11 Jul 2024 08:37:54 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>AWS SDK 停止對 PHP 8.0.x 及以下版本的支持</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AWS 軟件工程師 Sean O&#39;Brien 在日前發佈的一篇博客文章中&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faws.amazon.com%2Fcn%2Fblogs%2Fdeveloper%2Fannouncing-the-end-of-support-for-php-runtimes-8-0-x-and-below-in-the-aws-sdk-for-php%2F&quot; target=&quot;_blank&quot;&gt;表示&lt;/a&gt;，從 2025 年 1 月 13 日開始，AWS SDK for PHP 將不再支持 PHP 8.0.x 以及 PHP 7.2.x、7.3.x 和 7.4.x。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;因為上述版本已經分別於 2023 年 11 月、2020 年 11 月、2021 年 11 月和 2022 年 11 月結束了生命週期。對於目前仍在使用其中版本之一的用戶，建議儘快升級到 PHP 8.1 或更高版本，以便繼續接收 SDK 更新。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「PHP 小組最近終止了對 PHP 8.0.x 的支持，PHP 社區也在 8.0.x 及以下版本的 PHP 運行時達到生命週期終點後，開始放棄對它們的支持。這些運行時將不再有錯誤修復或安全更新。為了確保我們提供的是最新的安全庫，我們正在進行遷移。為確保您的應用程序和服務保持安全，請升級到受積極支持的 PHP 運行時，如 8.1.x。」&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;267&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9ccf3fd33ae7abd44cdd66bc0d7d589ab68.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;對於繼續使用 AWS SDK for PHP 並使用 PHP 8.0.x 或以下版本的用戶，在創建任何客戶端實例時都會顯示以下消息：&lt;/span&gt;&lt;/p&gt; 
&lt;div style=&quot;text-align:start&quot;&gt; 
 &lt;pre style=&quot;text-align:left&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span style=&quot;color:#ee9900&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span style=&quot;color:#7d8b99&quot;&gt;/**
* test.php
*/&lt;/span&gt;

&lt;span style=&quot;color:#1990b8&quot;&gt;require&lt;/span&gt; &lt;span style=&quot;color:#2f9c0a&quot;&gt;&#39;vendor/autoload.php&#39;&lt;/span&gt;&lt;span style=&quot;color:#5f6364&quot;&gt;;&lt;/span&gt;

&lt;span style=&quot;color:#1990b8&quot;&gt;use&lt;/span&gt; Aws&lt;span style=&quot;color:#5f6364&quot;&gt;\&lt;/span&gt;S3&lt;span style=&quot;color:#5f6364&quot;&gt;\&lt;/span&gt;S3Client&lt;span style=&quot;color:#5f6364&quot;&gt;;&lt;/span&gt;

$s3Client = &lt;span style=&quot;color:#1990b8&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#1990b8&quot;&gt;S3Client&lt;/span&gt;&lt;span style=&quot;color:#5f6364&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#5f6364&quot;&gt;[&lt;/span&gt;
    &lt;span style=&quot;color:#2f9c0a&quot;&gt;&#39;region&#39;&lt;/span&gt; =&amp;gt; &lt;span style=&quot;color:#2f9c0a&quot;&gt;&#39;us-west-2&#39;&lt;/span&gt;&lt;span style=&quot;color:#5f6364&quot;&gt;,&lt;/span&gt;
&lt;span style=&quot;color:#5f6364&quot;&gt;]&lt;/span&gt;&lt;span style=&quot;color:#5f6364&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;div style=&quot;text-align:start&quot;&gt; 
 &lt;pre style=&quot;text-align:left&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;$ php --version
&lt;span style=&quot;color:#c92c2c&quot;&gt;PHP&lt;/span&gt; &lt;span style=&quot;color:#c92c2c&quot;&gt;8.0&lt;/span&gt;&lt;span style=&quot;color:#c92c2c&quot;&gt;.9&lt;/span&gt; ...

$ php test.php
...
&lt;span style=&quot;color:#c92c2c&quot;&gt;PHP&lt;/span&gt; Warning&lt;span style=&quot;color:#5f6364&quot;&gt;:&lt;/span&gt;  This installation of the &lt;span style=&quot;color:#c92c2c&quot;&gt;SDK&lt;/span&gt; is using &lt;span style=&quot;color:#c92c2c&quot;&gt;PHP&lt;/span&gt; version &lt;span style=&quot;color:#c92c2c&quot;&gt;8.0&lt;/span&gt;&lt;span style=&quot;color:#c92c2c&quot;&gt;.9&lt;/span&gt;&lt;span style=&quot;color:#5f6364&quot;&gt;,&lt;/span&gt; which will be deprecated on January &lt;span style=&quot;color:#c92c2c&quot;&gt;13&lt;/span&gt;th&lt;span style=&quot;color:#5f6364&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#c92c2c&quot;&gt;2025.&lt;/span&gt;
Please upgrade your &lt;span style=&quot;color:#c92c2c&quot;&gt;PHP&lt;/span&gt; version to a minimum of &lt;span style=&quot;color:#c92c2c&quot;&gt;8.1&lt;/span&gt;.x to &lt;span style=&quot;color:#1990b8&quot;&gt;continue&lt;/span&gt; receiving updates &lt;span style=&quot;color:#1990b8&quot;&gt;for&lt;/span&gt; the &lt;span style=&quot;color:#c92c2c&quot;&gt;AWS&lt;/span&gt; &lt;span style=&quot;color:#c92c2c&quot;&gt;SDK&lt;/span&gt; &lt;span style=&quot;color:#1990b8&quot;&gt;for&lt;/span&gt; &lt;span style=&quot;color:#c92c2c&quot;&gt;PHP&lt;/span&gt;.
To disable this warning&lt;span style=&quot;color:#5f6364&quot;&gt;,&lt;/span&gt; set &lt;span style=&quot;color:#2f9c0a&quot;&gt;`suppress_php_deprecation_warning`&lt;/span&gt; to &lt;span style=&quot;color:#2f9c0a&quot;&gt;`true`&lt;/span&gt; in the client constructor &lt;span style=&quot;color:#1990b8&quot;&gt;or&lt;/span&gt; set the environment variable &lt;span style=&quot;color:#c92c2c&quot;&gt;AWS_SUPPRESS_PHP_DEPRECATION_WARNING&lt;/span&gt; to &lt;span style=&quot;color:#2f9c0a&quot;&gt;`true`&lt;/span&gt;.
...&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Perforce 最近發佈一份報告指出，近 55% 的受訪者在生產中至少使用了一個已不受支持的 PHP 版本。雖然相較 2023 年的 61.9% 佔比有所下降，但降幅不大。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;相關閲讀：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/286796/tiobe-index-202404&quot; target=&quot;news&quot;&gt;TIOBE 4 月榜單：PHP 跌至歷史最低點&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/289440/is-php-still-worth-it-in-2024&quot; target=&quot;news&quot;&gt;PHP 在 2024 年還值得學習嗎？&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301567/aws-sdk-php-8-0-x-end-of-support</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301567/aws-sdk-php-8-0-x-end-of-support</guid>
            <pubDate>Thu, 11 Jul 2024 08:23:54 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>微軟和蘋果放棄 OpenAI 董事會觀察員席位</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;英國《&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ft.com%2Fcontent%2Fecfa69df-5d1c-4177-9b14-a3a73072db12&quot; target=&quot;_blank&quot;&gt;金融時報&lt;/a&gt;》最新報道稱，在 OpenAI 面臨監管審查之際，微軟公司和蘋果公司已決定不再加入該公司的董事會。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微軟是 OpenAI 的最大投資者，在去年 11 月獲得了其董事會觀察員席位，並於本週二宣佈放棄了這一職位。此前曾有報道稱&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/300134/apple-openai-board-observer-role&quot; target=&quot;news&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;蘋果將擔任 OpenAI 董事會觀察員&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;，但消息稱蘋果公司也已經改變了主意。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;249&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-96c35d68750d6f4ca1ff2ca6142d6c9c9ac.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微軟副總法律顧問 Keith Dolliver 在週二晚些時候發出的一封信中向 OpenAI 通報了該公司退出董事會的計劃。「在過去八個月裏，我們見證了新成立的董事會取得的重大進展，我們對公司的發展方向充滿信心。考慮到這一切，我們不再認為我們作為觀察員的有限角色是必要的。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenAI 發言人則表示：「我們感謝微軟對董事會和公司發展方向的信心，我們期待繼續成功的合作。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，OpenAI 正面臨美國和歐盟反壟斷監管機構的審查，其中與微軟的合作尤其受到關注。《華爾街日報》6 月初報道稱 ，美國聯邦貿易委員會正在調查這兩家公司的合作關係，他們擔心微軟可能會在不引起監管部門注意的情況下安排這筆交易，從而獲得對 OpenAI 的控制權。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;當月晚些時候，歐盟最高競爭官員透露，歐盟可能會就兩家公司合作協議中的 &quot;某些排他性條款&quot;對其展開調查。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;去年 12 月，在首席執行官 Sam Altman 短暫下台後，微軟在 OpenAI 董事會中獲得了觀察員席位。在 Altman 重返最高職位後，投票解僱他的董事離開了公司，董事會進行了重組。而微軟據稱在確保 Altman 復職方面發揮了關鍵作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;相關閲讀：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/300134/apple-openai-board-observer-role&quot; target=&quot;_blank&quot;&gt;蘋果將擔任 OpenAI 董事會觀察員&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301554/microsoft-apple-give-up-openais-board-observer-seats</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301554/microsoft-apple-give-up-openais-board-observer-seats</guid>
            <pubDate>Thu, 11 Jul 2024 07:05:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>「RockYou2024」文件泄露：包含 100 億條明文密碼</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;網絡安全公司 Cybernews 於 7 月 4 日發佈博文，發現了包含 9948575739 條明文信息記錄的 rockyou2024.txt 文件，&lt;strong&gt;已經預定成為 2024 年最大的密碼泄露事件。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-78385082b6c673a407913fc9da9181b0bd7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;網名為 ObamaCare 的黑客於 7 月 4 日在暗網論壇發帖，分享了包含將近 100 億個明文密碼的 rockyou2024.txt 文件，在 RockYou 2021 文件（包含 84 億個明文密碼）基礎上再新增了約 15 億個新密碼。&lt;/p&gt; 
&lt;p&gt;雖然該用戶是在 2024 年 5 月底註冊的，但他們之前曾分享過西蒙斯-西蒙斯律師事務所的員工數據庫、在線賭場 AskGamblers 的線索以及伯靈頓郡羅文學院的學生申請表。&lt;/p&gt; 
&lt;p&gt;消息稱本次新增的 15 億個新密碼中，來自 4000 個龐大數據庫，覆蓋了過去至少 20 年時間。&lt;/p&gt; 
&lt;p&gt;研究人員表示：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;從本質上講，RockYou2024 彙編了全球個人泄露的隱私隱私，意味着攻擊者可以利用這些數據發起攻擊是，大大增加了用戶的風險。&lt;/p&gt; 
 &lt;p&gt;我們已經聯繫了發佈數據文件的威脅行為者，收到了大約 30GB 的 combolists 證明，從中提取了數據。不過，我們的研究團隊並未對所有數據集進行徹底調查。&lt;/p&gt; 
 &lt;p&gt;儘管如此，研究人員還是能夠將所提供的組合列表與 RockYou 數據集的一部分值進行映射，並實現了 100% 的匹配。&lt;/p&gt; 
 &lt;p&gt;我們的目的是讓公眾瞭解潛在風險，而不是將數據集提供給威脅行為者使用。因此，我們無法證實或否認您提到的其他黑客 / 研究人員的説法。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-64121bb87b484b9e1cddb372e345215b4ba.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;下載地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fs3.timeweb.cloud%2Ffd51ce25-6f95e3f8-263a-4b13-92af-12bc265adb44%2Frockyou2024.zip&quot; target=&quot;_blank&quot;&gt;s3.timeweb.cloud&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;參考鏈接：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finfotechlead.com%2Fsecurity%2Frockyou2024-10-billion-passwords-leaked-85710&quot; target=&quot;_blank&quot;&gt;https://infotechlead.com/security/rockyou2024-10-billion-passwords-leaked-85710&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fakaclandestine%2Fstatus%2F1809214316077515087%3Fs%3D46&quot; target=&quot;_blank&quot;&gt;https://x.com/akaclandestine/status/1809214316077515087&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdanielmiessler%2FSecLists%2Ftree%2Fmaster%2FPasswords%2FCommon-Credentials&quot; target=&quot;_blank&quot;&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords/Common-Credentials&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301529/rockyou2024-10-billion-passwords-leaked</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301529/rockyou2024-10-billion-passwords-leaked</guid>
            <pubDate>Thu, 11 Jul 2024 04:24:08 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>夸克發佈 AI 搜索功能</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;阿里智能信息事業羣旗下夸克升級「超級搜索框」，推出以 AI 搜索為中心的一站式 AI 服務，提供從檢索、創作、總結，到編輯、存儲、分享的信息服務。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「能回答、能創作、能總結的超級搜索框，是夸克對 AI 搜索的新定義。」阿里智能信息事業羣總裁吳嘉表示，大模型、數據、場景等優勢，推動夸克加速革新搜索產品，創造更大用戶價值。「跨過大模型應用全新體驗的臨界點，夸克全面進入 AI 時代，一站式 AI 服務的創新湧現將滔滔不絕。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;289&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-523a17b5278de9d4f4b12ed674969c1e5d6.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據介紹，「超級搜索框」集納了智能回答、智能創作和智能總結三大能力。其中，智能回答能夠更好地理解用戶意圖，聚合全網優質內容，更精準、直接、高效地提供圖文、視頻等。尤其針對複雜邏輯分析和跨學科知識，智能回答更能發揮 AI 的綜合回答能力，為用戶呈現準確、豐富的結果。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;智能創作方面，夸克 AI 搜索滿足用戶各類主題、題材、篇幅的高頻創作需求，包括文案創作、文檔寫作、PPT 寫作、簡歷製作等，讓用戶直接得到所需內容。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;智能總結方面，面對幾十萬字的長文和專業信息，夸克數秒鐘就能整理出全文摘要。夸克還支持最長 5 小時視頻的字幕導出、分段總結、整體總結、生成腦圖、抽取課件 PPT 等，提升工作學習效率。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301497</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301497</guid>
            <pubDate>Thu, 11 Jul 2024 02:46:38 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>開源代碼編輯器 Zed 發佈原生 Linux 版本</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Rust 開源代碼編輯器 Zed 發佈了原生支持 Linux 的版本。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d9ac6475c6b2254e3935253384a5ec2f270.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d7cc4c195c94755db30cdfc718edec9dbfd.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在 Linux 上安裝 Zed 的命令：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl https://zed.dev/install.sh | sh&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;據介紹，Linux 上的 Zed 正在使用 Vulkan API 進行 GPU 加速。它同時支持 Wayland 和 X11 會話，到目前為止，Zed 團隊開發重心主要集中在 Ubuntu 下的測試。&lt;/p&gt; 
&lt;p&gt;詳細信息查看&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzed.dev%2Fblog%2Fzed-on-linux&quot; target=&quot;_blank&quot;&gt;Zed.dev&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301481/zed-on-linux</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301481/zed-on-linux</guid>
            <pubDate>Thu, 11 Jul 2024 02:20:38 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>開源日報 | Vitest 2.0；Rust 即將進入前十；通義千問「國服最強」；Linux 終端為什麼叫 tty；C 語言實現 WebSocket 協議</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.7.10&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/301339&quot; target=&quot;news&quot;&gt;中文大模型基準測評上半年報告：GPT-4o 排名第一、通義千問「國服最強」&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;中文大模型測評基準 SuperCLUE 發佈 2024 上半年報告，披露針對國內外 33 個大模型的綜合測評結果。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-687773be9d78978fe93ee3f3cadd966bbb6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;從代表通用能力的一級總分來看，OpenAI 的 GPT-4o 以 81 分高居榜首，Claude-3.5-Sonnet 與通義千問開源模型 Qwen2-72B-Instruct 並列第二，得分均為 77。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;通義千問 (Qwen2-72B) 既是排名最高的中國大模型，也是全球最強的開源大模型，性能超越文心一言 4.0、訊飛星火 V4.0、Llama-3-70B 等開閉源大模型。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGcF-Jw4YUHi1OFlVFaWFPQ&quot; target=&quot;_blank&quot;&gt;&quot;Only Google Can Do&quot;API：只能通過 *.google.com 訪問、可讀取系統 CPU 和內存使用情況等信息&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Chrome 瀏覽器存在一個只對谷歌旗下網站公開的 API：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Google Chrome 允許所有 *.google.com 網站完全訪問系統 / 選項卡 CPU 使用情況、GPU 使用情況和內存使用情況。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;它還可以訪問詳細的處理器信息，並提供日誌記錄返回通道。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;此 API 不會向其他網站公開，僅向 *.google.com 公開。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7592d85206dfbb6eefa68d532fed57d6705.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/301281/vitest-2-0-0&quot; target=&quot;news&quot;&gt;Vitest 2.0 正式發佈：Vue 團隊打造的下一代測試框架&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;7 月 8 日，由 Vue 團隊打造的下一代測試框架 Vitest 正式推出 2.0 版本！Vitest 是一個原生支持 Vite 的測試框架。Vitest 以其快速、簡潔的測試解決方案而爆火，只需要很少的配置即可上手。由於 Vitest 和 Vite 使用相同的配置文件，因此將 Vitest 集成到 Vue 應用中很簡單。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Vitest 於 2021 年 12 月推出，至今已經過去了兩年多的時間，其發展速度可謂是非常迅速，目前在 npm 下載量已經達到了每週&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;500w&lt;/strong&gt;，並且還在呈現快速增長的趨勢。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-87f706d01d69c3fdc70069303e414ef24a4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FaJ-1mCeoTqIs_VbrVLnDZg&quot; target=&quot;_blank&quot;&gt;美國加州起草法案——既要把開源管起來，還要「一舉兩得」限制中國&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;SB-1047 法案，全稱為「前沿人工智能安全創新法案（Safe and Secure Innovation for Frontier Artificial Intelligence Act）」，由加州參議員 Scott Wiener 在今年 2 月首次提出。目的是「為大規模人工智能系統的開發和部署設立嚴格安全標準，以確保其安全性並防止潛在重大危害。」&lt;/p&gt; 
&lt;p&gt;該法案針對超過 10^26 次浮點運算能力（FLOPs）和 1 億美元訓練成本，以及任何基於以上 AI 模型微調的、運算能力不少於 3 倍 10^25 FLOPs 的智能系統。幾乎把現在市面所有主流大模型囊括在內。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/301106/tiobe-index-202407&quot;&gt;TIOBE 7 月榜單：Rust 即將進入 Top 10&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;上月還在 TIOBE 指數中排名第 17 位的&amp;nbsp;Rust，本月已經成功躍升至第 13 位，這也是 Rust 排行的歷史新高。TIOBE CEO Paul Jansen 點評稱，提升 4 個位置看似變化不大，但其實在過去幾年中，Rust 一直屬於是 &quot;the talk of the town&quot;，在 TIOBE 指數中並沒有取得多大進步。而現在，該語言終於出現了上升的趨勢。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;美國政府日前曾表示，出於安全考慮，建議開發者從 C/C++ 轉向 Rust。現如今，Rust&amp;nbsp; 社區正在不斷壯大，第三方庫和工具的數量持續增長。「簡而言之，Rust 正在為進入 TIOBE 指數前十名做準備。」&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;TIOBE 7 月 TOP 20 編程語言&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-bbbd3f6cae0a60cd3e62c366bd9e52e84af.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/301103/ms-china-staff-to-switch-from-android-phones-to-iphones-for-work&quot;&gt;微軟中國員工禁用 Android 手機工作：只能用 iPhone&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-07-08%2Fmicrosoft-orders-china-staff-to-switch-from-android-phones-to-iphones-for-work&quot; target=&quot;_blank&quot;&gt;據彭博社報道&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，微軟向中國團隊發出通知，宣佈自今年 9 月起，&lt;/span&gt;&lt;strong&gt;員工在處理工作任務時，將被限定使用蘋果公司的 iPhone 作為指定設備，安卓平台的智能手機將不再被允許用於工作相關的活動&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。這一規定將影響數百名員工，公司將為受影響的員工每人發放一部 iPhone 15。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-6ae494c4ed9e91597eef1405bd93ffe3fb2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOmUFfCezM&quot; target=&quot;_blank&quot;&gt;C 語言實現 WebSocket 協議&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;硬核網友用 C 語言從 0 編寫了一個 WebSocket 服務器！他正在用 C 語言寫一個瀏覽器遊戲，WebSocket 服務器是這個項目的一部分。&lt;/p&gt; 
  &lt;p&gt;WebSocket 是一種實時技術，可在客戶端和服務器之間通過持久的單套接字連接實現雙向、全雙工通信。&lt;/p&gt; 
  &lt;p&gt;實現一個 WebSocket 服務器大致包括：&lt;br&gt; - 處理握手請求（即 WebSockets 中的「Web」），包括客戶端握手請求、服務端握手相應和追蹤客戶等。&lt;br&gt; - 交換數據幀，包括讀取並解密數據、消息切片等。&lt;br&gt; - 發送 Pings 和 Pongs。&lt;br&gt; - 關閉連接。&lt;/p&gt; 
  &lt;p&gt;該網友不久前也用 C 語言寫了 HTTP 協議，感興趣的朋友可以在他的油管頻道查看更多相關內容。&lt;/p&gt; 
  &lt;p&gt;視頻：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Drc_zVASAajU&quot; target=&quot;_blank&quot;&gt;https://www.youtube.com/watch?v=rc_zVASAajU&lt;/a&gt;&lt;br&gt; 代碼：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FBixkitts%2Frelic-mercs-game&quot; target=&quot;_blank&quot;&gt;https://github.com/Bixkitts/relic-mercs-game&lt;/a&gt;&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1233486457%2FOmCkKhulo&quot; target=&quot;_blank&quot;&gt;黃仁勳談人工智能為生命科學帶來什麼&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    黃仁勳強調了我們正處於一個計算革命的時代：&quot;我們創造了這種叫做加速計算的東西。在此基礎上，還有一個新的計算模型叫做生成式 AI。它正在徹底改變一切。軟件的編寫方式、處理方式，我們可以編寫的軟件類型，以及我們首次能夠解決的問題類型，都發生了徹底的革命。&quot;
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
   &lt;div&gt;
    他指出，這是自他出生後的第二年 IBM 宣佈 System 360 以來，這是計算機架構 60 年來的首次重大變革。這種變革不僅影響了計算機科學，還正在改變每個行業，為解決複雜問題提供了新的可能性。
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
   &lt;div&gt;
    他再次強調了，英偉達要專注於算法和計算能力，而與具有領域專業知識的公司（如 Recursion）合作的重要性。這種跨行業合作模式使得各方都能發揮自己的優勢，共同推動創新。
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   - 微博&amp;nbsp; 
   &lt;strong&gt;高飛&lt;/strong&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F3223086795%2FOmECstgxo&quot; target=&quot;_blank&quot;&gt;面向高能物理的人工智能系統——「賽博士「（Dr. Sai）正式上線&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;面向高能物理的人工智能系統——「賽博士「（Dr. Sai）——正式上線，這是國際高能物理領域的首個大型人工智能系統，入口為&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdrsai.ihep.ac.cn%2F&quot; target=&quot;_blank&quot;&gt;https://drsai.ihep.ac.cn/&lt;/a&gt;。&lt;/p&gt; 
     &lt;p&gt;2023 年 7 月以來，在中國科學院高能物理研究所「從 0 到 1」項目的支持下，計算中心和實驗物理中心聯手打造了&quot;賽博士&quot;（Dr. Sai）AI 智能體，旨在使其高度智能化和自動化地完成文獻調研、程序編寫、事例產生、事例分析、結果解釋和文章撰寫等任務，將科學家從創新性要求較低的例行工作中解放出來。項目第一階段聚焦我國首個科學裝置——北京正負電子學對撞機上的北京譜儀 III（BESIII）——的數據分析。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;曹俊 IHEP&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1741533154%2FOmDJcuWIL&quot; target=&quot;_blank&quot;&gt;電腦上的 Wi-Fi 網卡也是一個小電腦，對隱私和安全至關重要&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;便宜的 Wi-Fi4 芯片價格甚至可以低至 1 美元以下，但這並不意味着它簡單，相反，它就像你每天用的電腦一般複雜。裏面有主 cpu，實時控制」外設」，高算力 dsp」外設」，以及各種 MCU。&lt;/span&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;spaceshuttle&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1834645454%2FOmC6nqeyx&quot; target=&quot;_blank&quot;&gt;你知道 Linux 終端為什麼叫 tty 嗎&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;ul&gt; 
      &lt;li&gt;瞭解電傳打字機的歷史，從 19 世紀開始，它如何演變成今日計算技術的基礎。&lt;/li&gt; 
      &lt;li&gt;探索 `tty` 命令如何顯示你正在使用的終端名稱，及其在現代操作系統中的應用。&lt;/li&gt; 
      &lt;li&gt;發現 Telex 網絡如何使電傳打字機在全球範圍內傳送消息，並推動全球通信的進步。&lt;/li&gt; 
      &lt;li&gt;深入電傳打字機如何轉變為現代計算機終端的核心技術，包括硬件模擬與軟件模擬的演變。&lt;/li&gt; 
     &lt;/ul&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;dingtingli&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F1663612603%2F6328b6bb02001ktji&quot; target=&quot;_blank&quot;&gt;汽車智能化愈發複雜，基礎軟件開源引熱議&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;雖然軟件驅動汽車打開了增收的大門，但基於舊模式的汽車架構和供應鏈阻礙了進步。「每家汽車製造商都有自己的架構平台，但平台供應商平均有 250 到 300 家。」埃倫威格坦言，在許多情況下，供應商為每個電子元件創建特定的基礎軟件。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;中國經濟網&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2856256438455171&quot; target=&quot;_blank&quot;&gt;Claude 編程支持一鍵共享，第一批網友已經開始曬作品了&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;Claude 3.5 上新的「工坊模式」（Artifacts）再次更新，寫完的網頁應用支持一鍵分享了！不用自建服務器，不用部署後台程序，點一下就能自動獲得鏈接。&lt;/p&gt; 
 &lt;p&gt;而且被分享的應用還能一鍵導入自己的對話，分分鐘魔改個新版本出來。&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6105d5ac074d5ee3ee0368008c28b3b7ca3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;- &lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.huxiu.com%2Farticle%2F3225968.html&quot; target=&quot;_blank&quot;&gt;所謂 AI 革命，到現在為止，是能源的一場「災難」&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;就在谷歌摩拳擦掌準備與 OpenAI 一較高下時，前幾天其發佈的一份報告卻引來了媒體的「擔憂」——谷歌最新發布的環境報告指出，自 2019 年以來，其溫室氣體總排放量增長了 48%。&lt;/p&gt; 
 &lt;p&gt;僅去年一年穀歌就產生了 1430 萬噸二氧化碳，同比 2022 年增長 13%，主要由於來自範圍 2 的碳排放同比增長 37%。&lt;/p&gt; 
 &lt;p&gt;這些數據顯然與谷歌「2030 年實現零排放」的目標南轅北轍了，作為全球最大的互聯網科技巨頭之一，如此「奔放」的碳排放數據顯然會為其招來各種非議。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;- &lt;strong&gt;虎嗅&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwap.peopleapp.com%2Farticle%2F7482842%2F0&quot; target=&quot;_blank&quot;&gt;新技術賦能千行百業（經濟聚焦）&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#4d4f53; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#2f2f2f&quot;&gt;人工智能技術不斷突破，在助推經濟社會發展的同時，也帶來深度偽造、隱私泄露、知識產權爭議等諸多風險挑戰。圖靈獎得主、中國科學院院士姚期智認為，人工智能風險體現在網絡風險延伸和擴大、沒有意識到的社會風險等方面。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;人民&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;日報&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn804280545&quot; target=&quot;_blank&quot;&gt;OpenAI 這個盤，阿里雲們能接得住嗎？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;這些新老廠商們有着自己的底氣。如果説發展早期，國內廠商許多「套殼」OpenAI，將技術化為己用，甚至大廠都有過這樣的傳聞，那麼經過發展，當下國內廠商已經具備了獨立自主的實力。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;一點財經&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mrjjxw.com%2Farticles%2F2024-07-08%2F3458762.html&quot; target=&quot;_blank&quot;&gt;進擊的快手：從對標 Sora 到大模型「全家桶」 AI 能更好打破內容、商業的互搏嗎？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#030303; margin-left:0; margin-right:0; text-align:justify&quot;&gt;快手所搭建的大模型矩陣覆蓋了從內容生成到商業化運營等方方面面。作為短視頻平台的快手一方面通過 AI 技術，降低內容生產門檻，提高內容生產效率；另一方面，也積極地將 AI 技術運用於其電商業務中，幫助商家實現智能化經營，實現其商業化目標。&lt;/p&gt; 
 &lt;p style=&quot;color:#030303; margin-left:0; margin-right:0; text-align:justify&quot;&gt;但在有限的注意力資源下，內容和商業之間不可避免地存在「互搏」，快手想用 AI 讓它們「化敵為友」。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;每日經濟新聞&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkandianshare.html5.qq.com%2Fv2%2Fnews%2F8263209746968144194&quot; target=&quot;_blank&quot;&gt;人形機器人，應該要「臉」嗎？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;顯而易見，臉幾乎是作為的人最重要的特徵。以至於當元宇宙熱潮來臨，人們需要從一個世界進入一個世界時，要做的第一件事，也是給自己捏一張「臉」。但一個有意思的現象是，在人形機器人蓬勃發展的當下，這個致力於模仿人類形象的事物，卻幾乎從來沒有被認真討論過它的臉應該長成什麼樣。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;人形機器人不需要臉嗎？還是説當前的技術條件，這個話題還不應該被討論？如果一定要給機器人一張臉的話，這張臉又應該怎麼做？&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;產業象限&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn804322266&quot; target=&quot;_blank&quot;&gt;WAIC 觀察丨人工智能規模化邊界，商業化挑戰幾何？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;從「ChatGPT 時刻」到「百模大戰」，人工智能的破圈能力與商業潛力已經得到了充分的證明。而今天，業界對人工智能的討論，也已經從簡單 AI 的發展路徑與商業模式，開始向更深層次的問題與癥結進行探索。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;21 世紀經濟報道&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_6105753431_16bee67570190171wo.html&quot; target=&quot;_blank&quot;&gt;混元單日調用 tokens 達千億後，騰訊大模型戰略露出全貌&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型之爭，到了不只是拼技術的時刻。最新的行業風向是：誰能大範圍應用落地？誰能笑到最後？誰能真正產生價值？&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;對大模型行業玩家的評判標準也不再只看技術。戰略佈局、落地進展、未來判斷……成為了更被重視的維度。無論「楊植麟們」還是大廠高管，公開探討大模型的頻率越來越高，包括一直低調的騰訊。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240708A08AAF00&quot; target=&quot;_blank&quot;&gt;「賽道」擁擠，大模型熱潮正在消散？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;時代熱潮來得快，去得也快，如今一些大模型企業開啓了「撤退行動」。在美國，Stability AI、Adept、Reka AI 等「明星」企業正在尋求出售；在中國，僅有 40% 大模型完成了在工信部備案，其他眾多模型則難覓蹤影。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;通信世界&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/Jmysy/rudis&quot; target=&quot;_blank&quot;&gt;Jmysy/rudis&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;185&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-999adec208347d57bb468a283ca4bc15b8e.png&quot; width=&quot;200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://gitee.com/Jmysy/rudis&quot;&gt;https://gitee.com/Jmysy/rudis&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;Rudis 是採用 Rust 語言開發的項目，旨在利用 Rust 語言的優勢來重新實現 Redis 的核心功能，以滿足用戶對高性能、可靠性和安全性的需求，同時保持與 Redis API 的兼容。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/11421986&quot; target=&quot;_blank&quot;&gt;ODPS 開發大全：入門篇&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;本文旨在收集整理 ODPS 開發中入門及進階級知識，儘可能涵蓋大多 ODPS 開發問題，成為一本 mini 百科全書，後續也會持續更新。希望通過筆者的梳理和理解，幫助剛接觸 ODPS 開發的同學快速上手。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;366&quot; src=&quot;https://oscimg.oschina.net/oscnet/86432241-6808-4fce-83a3-b8dc249c7a3a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用戶觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FqjAVoQNwR4W2chAilYSc9A&quot; target=&quot;_blank&quot;&gt;微軟中國員工被禁止使用 Android 手機工作：只能用 iPhone&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：這事在微軟都吵翻了，有人買個便宜安卓當工作機的發了 iPhone，有人覺得安卓不方便，花了一萬多剛買了 iPhone pro max 當主力機的反而要自費&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：工作機免費送，可以了。又不限制你生活手機使用。工作機軟件環境有要求，再説了，員工也不多，能有什麼影響，一個工作機可算不上什麼抵制和制裁&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：為什麼不用微軟手機呢？是因為沒有麼？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：公司為受影響的員工每人發一台 iPhone15，那我還能説啥&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：太正常了，現在 ms 的賬戶都要綁定 authenticator，國內的安卓機器不用特殊手段都用不了，要麼就是換 iphone 要麼用硬件令牌&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：啊，為什麼我在 oppo 的軟件商店能搜到並安裝 authenticator?&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：包含基礎 gms 框架的是可以用的，但網絡原因，你不手動打開是接收不到驗證推送的&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：發一台蘋果有這樣的要求不過分，用安卓自己生活用。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：公司發手機這可太良心了，不像某些體制內不讓你用蘋果又不給發華為逼你自己花錢買，買華為的手機殼&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：友情提示，微軟是有過自己的 windows 系統手機的，這次算是徹底向蘋果舉白旗投降了吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：authenticator 不就是實現了一個共享 key 來生成動態密碼的軟件嗎？根本不依賴 GMS 吧？安卓本身的安全性才是問題吧？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 12：發了那還行。全球未來信息戰略明顯是要綁定果子和谷歌那一套了，另一種意義上也算是針對種花家了。 巨硬知道自己在國內名聲不好，直接擺爛了，活該被罵。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 13：有沒有可能，我説是可能哈。國內的安卓都是閹割掉基礎谷歌框架和服務的，這些裝了魔改 os 的安卓國產機沒法接收公司內部的一些驗證服務推送，才被迫選擇了蘋果？都是成年人了，應該有能力思考下，真的是啥問題都是外面勢力有意針對嗎？&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 14：不是哥們，微軟跟谷歌什麼仇什麼怨非得禁用 Android？（智慧的眼神.jpg）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 15：沒 GMS 是藉口，本質還是不想適配國內的手機系統，等鴻蒙 Next 出來，看微軟擁抱不擁抱就知道了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 16：就是個簡單的經濟問題，受影響的只有幾百個員工，為這幾百個員工，在國內各個平台長期維護一套應用的成本，要遠高於直接給這些人配一台新手機。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FaJ-1mCeoTqIs_VbrVLnDZg&quot; target=&quot;_blank&quot;&gt;美國加州起草法案——既要把開源管起來，還要「一舉兩得」限制中國&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：哈哈哈，我倒是想看看通過了會怎麼樣，企業屏蔽加州 IP 嗎&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：這個話題，我認為是有前車之鑑可以遵循的。就是電腦病毒和殺毒軟件。法律以非常粗略的框架説明瞭什麼該做什麼不該做。由殺毒軟件公司生產的殺毒軟件作為執法者，在技術層面與電腦病毒對抗，保護用戶。這樣避免了在法律層面引入太多技術概念，又在經濟層面創造了價值，使安全成為有利可圖的領域。 惡意不會消亡的，法律無法控制思想和不遵守法律的人。應該鼓勵一些人去在安全領域獲得收益，對沖惡意的成本。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：果然是 SB 法案&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：該法案表達的思想遙遙領先，能通過該多好啊&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：開源精神呢&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：因為 OSI 還沒有發佈正式的開源大模型定義，所以實際大模型領域還沒有法律意義上的「開源」概念，也就沒法複用之前對開源軟件的保護法條、判例。中國開源年會的主辦方開源社作為中國大陸首個 OSI 成員協會，已經提交了中國在開源大模型領域的修訂意見，相信很快正式版本就會發布。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：對程序員是利好&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Ff63w-6gUQdOERiq576btiQ&quot; target=&quot;_blank&quot;&gt;去哪兒正式推行「3+2」混合辦公模式，員工每週有 2 天可自主選擇辦公地點&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：每週有四天要考慮「去哪兒」。將旅行辦公模式發揚光大&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：我要做一款 app，去哪兒辦公&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301392</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301392</guid>
            <pubDate>Wed, 10 Jul 2024 10:37:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>中國在生成式 AI 應用方面全球第一</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;美國人工智能和分析軟件公司 SAS 委託 Coleman Parkes Research Ltd. 進行的一項最新全球調查研究&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sas.com%2Fen_ca%2Fnews%2Fpress-releases%2F2024%2Fjuly%2Fgenai-research-study-global.html&quot; target=&quot;_blank&quot;&gt;指出&lt;/a&gt;，中國在應用和普及生成式 AI 方面處於領先地位。83% 的中國受訪者表示他們已採用了生成式 AI，高於英國（70%）、美國（65%）和澳大利亞（63%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;336&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f77739a84af3efc088fd0f2fed2e103c46c.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該研究基於對全球各行業 1600 名決策者進行的調查。受訪行業包括了銀行、保險、醫療保健、電信、製造、零售和能源等，接受調查的最小企業和組織也僱用了 500 至 999 名員工，大型組織僱用了超過 10000 名員工。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;按行業劃分，TMT、零售、保險、銀行和生命科學等領域目前在 GenAI 的應用方面處於領先位置；製造業、公共部門和醫療保健等領域則相對落後。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;不過，Coleman Parkes 董事總經理 Stephen Saw 也表示，儘管中國在 GenAI 採用率方面可能處於領先地位，但採用率更高並不一定意味着實施效果更好或回報更高。事實上，美國在 GenAI 的競爭中可能仍要略佔上風，24% 的美國企業和組織已全面實施了 GenAI，而中國這一比例僅為 19%。英國則為 11%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;調查還顯示，受訪的每 10 個組織中只有 1 個已做好遵守 GenAI 法規所需的準備工作。95% 的企業缺乏全面的 GenAI 治理框架，只有不到十分之一的組織 (7%) 提供了高水平的 GenAI 治理和監控培訓。值得一提的是，在生成式 AI 的法規建設和安全監控方面，中國同樣位居全球第一。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301380</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301380</guid>
            <pubDate>Wed, 10 Jul 2024 09:36:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>騰訊開源 tlbs-map 地圖組件庫</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;騰訊宣佈開源 tlbs-map，一個基於騰訊位置服務地圖 API 開發的 web 端地圖組件庫，支持在網頁繪製地圖並在地圖上繪製點、線、面、熱力圖等效果，支持 Vue2、Vue3、React 等業界主流技術棧，旨在幫助開發者低成本開發地圖業務。&lt;/p&gt; 
&lt;p&gt;騰訊位置服務地圖 API：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flbs.qq.com%2FwebApi%2FjavascriptGL%2FglGuide%2FglOverview&quot; target=&quot;_blank&quot;&gt;https://lbs.qq.com/webApi/javascriptGL/glGuide/glOverview&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;263&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-98a32525f71425c67235df807a7c0ff3f0b.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;特性優勢&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;降低使用門檻，提升開發效率：封裝騰訊地圖 API 為響應式組件，無需關心複雜的地圖 API，只需要操作數據即可&lt;/li&gt; 
 &lt;li&gt;兼容前端主流框架：tlbs-map 支持最流行的 2 個前端框架 Vue 框架和 React 框架，並且做到了一套代碼兼容 Vue2、Vue3 版本的前端項目&lt;/li&gt; 
 &lt;li&gt;提升可擴展性：組件提供地圖和圖層實例，用戶可編寫自定義組件或直接調用地圖 API 滿足定製化需求&lt;/li&gt; 
 &lt;li&gt;詳盡的文檔示例：提供了詳盡的組件使用文檔和示例代碼，可以輕鬆上手，快速開發&lt;/li&gt; 
 &lt;li&gt;提供豐富的地圖組件: 已上線基礎地圖、點、線、面等 10 個常用組件，助力開發者低成本開發地圖業務&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;開源規劃&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;提供更多實用的地圖組件&lt;/li&gt; 
 &lt;li&gt;組件能夠兼容 Vue2、Vue3 框架使用&lt;/li&gt; 
 &lt;li&gt;完善單元測試，保證組件更加可靠&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;項目地址：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vue 組件庫：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2Ftlbs-map-vue&quot; target=&quot;_blank&quot;&gt;https://github.com/Tencent/tlbs-map-vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;React 組件庫：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2Ftlbs-map-react&quot; target=&quot;_blank&quot;&gt;https://github.com/Tencent/tlbs-map-react&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301674</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301674</guid>
            <author>來源: 投稿</author>
        </item>
    </channel>
</rss>