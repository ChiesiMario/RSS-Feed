<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 繁體中文（台灣）</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 15 Aug 2025 07:54:25 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>HarmonyOS NEXT 會議應用——多設備協同與應用接續（高級）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在當今數字化辦公的大趨勢下，高效的會議協作變得尤為重要。HarmonyOS NEXT 提供了強大的分佈式能力，為開發支持多設備協同與應用接續的會議應用創造了有利條件。本文將詳細闡述如何基於 HarmonyOS NEXT 開發這樣一個會議應用，以提升會議協作效率。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;會議應用的多端協同架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;核心功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;會議共享：&lt;/strong&gt;允許參會者在不同設備間共享會議相關的資料、文件、演示文稿等，實現信息的實時互通。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;設備無縫切換：&lt;/strong&gt;支持用戶在手機、PC 等不同設備之間自由切換會議進程，確保會議的連續性，就像在同一設備上操作一樣流暢。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;實時內容同步：&lt;/strong&gt;保證會議中的各種內容，如會議記錄、發言內容、文件修改等，在所有參與設備上實時更新，讓參會者獲取一致的信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;&lt;strong&gt;協同編輯：&lt;/strong&gt;參會者可以同時對會議文檔進行編輯，系統自動處理衝突，實現高效的團隊協作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;如何使用 onContinue() + onNewWant() 實現應用接續&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在 HarmonyOS NEXT 中，onContinue()&amp;nbsp;和&amp;nbsp;onNewWant()&amp;nbsp;是實現應用接續的關鍵接口。onContinue()&amp;nbsp;用於在源設備上保存會議的當前狀態和數據，例如會議的進行時間、已共享的文件列表、未完成的發言等。而&amp;nbsp;onNewWant()&amp;nbsp;則在目標設備上接收並恢復這些數據，使會議能夠在新設備上繼續進行。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以下是&amp;nbsp;onContinue()&amp;nbsp;的簡單示例代碼：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="130" src="https://oscimg.oschina.net/oscnet//775234a861d32667ed0eb735ff87a6a1.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在目標設備的&amp;nbsp;onNewWant()&amp;nbsp;中恢復數據：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="156" src="https://oscimg.oschina.net/oscnet//de63ee8afe6cd8a615b0aafb4eb5e562.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&amp;nbsp;如何設計數據同步機制，確保會議內容一致性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;為了確保會議內容在不同設備間的一致性，我們可以使用分佈式數據對象（Distributed Data Object）。分佈式數據對象能夠自動處理數據在不同設備間的同步，當一個設備上的數據發生變化時，其他設備會及時更新。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;例如，在創建會議記錄時，可以使用分佈式數據對象：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 3.png" height="77" src="https://oscimg.oschina.net/oscnet//bec32a033e2c3f424e1ae715a34fa27a.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;實現無縫會議切換 &amp;amp; 共享文檔&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;使用 onContinue() 實現會議從手機遷移到 PC&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;當用戶需要將會議從手機遷移到 PC 時，調用&amp;nbsp;onContinue()&amp;nbsp;方法保存會議狀態。在 PC 端，通過&amp;nbsp;onNewWant()&amp;nbsp;接收並恢復會議狀態，實現無縫切換。具體代碼如上述&amp;nbsp;onContinue()&amp;nbsp;和&amp;nbsp;onNewWant()&amp;nbsp;示例所示。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;使用 distributedDataObject.create() 讓多設備共享會議記錄&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過創建分佈式數據對象來存儲會議記錄，所有參與會議的設備都可以訪問和更新這些記錄。以下是一個簡單的示例：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 4.png" height="131" src="https://oscimg.oschina.net/oscnet//418462a14d58f2e78f921fc4769e6b42.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;strong&gt;結合 SystemPasteboard 支持會議文件跨設備複製粘貼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;使用系統剪貼板（SystemPasteboard）可以實現會議文件在不同設備間的複製粘貼。例如，在手機上覆制一個會議文件，然後在 PC 上粘貼該文件。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 5.png" height="358" src="https://oscimg.oschina.net/oscnet//9565729d6439923be627ead3cb5648a6.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&amp;nbsp;優化體驗：流暢性 + 兼容性 + 安全性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;優化數據同步方式，減少會議遷移時的延遲&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;為了減少會議遷移時的數據同步延遲，可以採用以下策略：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;預取數據：&lt;/strong&gt;在用戶有切換設備的傾向時（如打開目標設備的會議應用），提前從源設備獲取部分必要的數據。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;優化網絡傳輸：&lt;/strong&gt;選擇合適的網絡協議和傳輸方式，優先使用高速穩定的網絡連接，如 Wi-Fi。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;數據壓縮：&lt;/strong&gt;在傳輸數據前對數據進行壓縮，減少數據量，提高傳輸速度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;如何確保不同設備的 UI 適配，避免界面錯位&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;響應式設計&lt;/strong&gt;：使用 HarmonyOS NEXT 的響應式佈局特性，根據設備的屏幕尺寸和分辨率自動調整界面元素的大小和位置。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;多設備測試：&lt;/strong&gt;在開發過程中，對不同類型的設備（手機、平板、PC 等）進行充分的測試，及時發現並解決界面適配問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;權限管理：如何防止敏感會議內容在未授權設備上訪問&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;設備認證：&lt;/strong&gt;在設備接入會議時，對設備進行身份認證，確保只有授權的設備可以參與會議。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;數據加密：&lt;/strong&gt;對會議中的敏感數據進行加密處理，即使數據在傳輸或存儲過程中被攔截，也無法被破。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;權限設置：&lt;/strong&gt;為不同的參會者設置不同的權限，如只讀、可編輯等，限制對敏感內容的訪問和修改。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上的架構設計、功能實現和優化策略，我們可以開發出一個高效、穩定、安全的會議應用，支持多設備協同與應用接續，為用戶提供優質的會議協作體驗。（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366426</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366426</guid>
      <pubDate>Fri, 15 Aug 2025 07:35:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙編程江湖：I/O 密集型任務處理及 ArkTS 的異步鎖機制</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;I/O 密集型任務是指需要進行大量磁盤讀寫、網絡通信等 I/O 操作的任務。I/O 密集型任務的特點是耗時長，且容易阻塞線程，導致應用程序卡頓。&lt;br&gt; ArkTS 提供了異步鎖機制，用於解決多線程併發中數據競爭問題，並避免死鎖問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;I/O 密集型任務的特點與開發策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;I/O 密集型任務的特點：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;耗時長：&lt;/strong&gt;I/O 操作通常需要花費較長時間才能完成，例如讀寫文件、網絡請求等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;阻塞線程：&lt;/strong&gt;I/O 操作會阻塞當前線程，導致線程無法執行其他任務，影響應用程序的響應速度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;頻繁發生：&lt;/strong&gt;在許多應用程序中，I/O 操作是頻繁發生的，例如文件讀寫、數據庫操作、網絡通信等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;開發策略：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;使用異步編程技術：&lt;/strong&gt;例如 Promise 和 async/await，可以使 I/O 操作異步執行，避免阻塞線程，提高應用程序的響應速度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;使用多線程併發技術：&lt;/strong&gt;例如 TaskPool 和 Worker，可以將 I/O 任務分配到不同的線程中執行，提高 I/O 操作的效率。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;使用緩衝區技術：&lt;/strong&gt;例如使用緩存機制，可以減少 I/O 操作的次數，提高 I/O 操作的效率。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;ArkTS 中的異步鎖的使用場景與優勢&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;使用場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;共享數據：&lt;/strong&gt;當多個併發實例需要共享同一份數據時，需要使用異步鎖來保證數據的線程安全，避免數據競爭問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;訪問資源：&lt;/strong&gt;當多個併發實例需要訪問同一資源時，需要使用異步鎖來保證資源的訪問順序，避免死鎖問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;優勢：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;非阻塞式：&lt;/strong&gt;異步鎖是非阻塞式的，不會導致死鎖問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;跨線程傳遞：&lt;/strong&gt;異步鎖可以跨併發實例引用傳遞，提高開發效率。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;自動釋放：&lt;/strong&gt;異步鎖會在代碼執行完成後自動釋放，避免內存泄漏。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;避免死鎖問題的處理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;鎖的粒度：&lt;/strong&gt;異步鎖的粒度必須足夠小，避免多個併發實例長時間持有鎖，導致死鎖問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;鎖的釋放：&lt;/strong&gt;異步鎖需要在代碼執行完成後立即釋放，避免內存泄漏。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;鎖的順序：&lt;/strong&gt;如果需要使用多個鎖，需要按照一定的順序獲取鎖，避免死鎖問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;密集 I/O 操作的併發任務示例&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以下是一個簡單的示例，演示如何使用 TaskPool 執行密集 I/O 操作的併發任務：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="422" src="https://oscimg.oschina.net/oscnet//fc95f40535ae3261ea1242c59699cb70.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;這段代碼定義了一個名為&amp;nbsp;Index&amp;nbsp;的組件，並在組件中顯示了一條文本消息 「Hello World」。點擊按鈕會執行&amp;nbsp;main&amp;nbsp;函數，該函數創建一個併發任務並執行它。任務會密集地寫入兩個文件，並輸出結果。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;同步鎖與異步鎖的對比&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="462" src="https://oscimg.oschina.net/oscnet//ab1357f120ab1811afcb43f62359c0f0.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&amp;nbsp;總結&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上介紹，您可以瞭解到鴻蒙系統中 I/O 密集型任務的處理方法，以及 ArkTS 的異步鎖機制。使用異步編程技術和異步鎖機制可以提高 I/O 操作的效率，並避免死鎖問題。希望本文能夠幫助您掌握鴻蒙系統中的併發編程技術，並開發出更優秀的鴻蒙應用。（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366422</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366422</guid>
      <pubDate>Fri, 15 Aug 2025 07:34:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>HarmonyOS 藍牙串口協議（SPP）詳解：實現設備間可靠數據交換</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在智能設備互聯互通的世界裏，藍牙技術扮演着至關重要的角色。其中，藍牙串行通信（SPP，Serial Port Profile）作為一種經典的藍牙協議，在 HarmonyOS NEXT 中為設備間的數據傳輸提供了可靠且高效的解決方案。今天，我們就來深入瞭解一下 SPP 在 HarmonyOS NEXT 中的應用，看看它是如何幫助我們實現設備間的可靠數據交換的。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、SPP 概述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;SPP 是一種藍牙協議，其主要作用是在藍牙設備之間建立串行通信連接，使得設備能夠像使用串口一樣進行數據傳輸。這種傳輸方式簡單、直接，適用於多種類型的數據交換場景，如文件傳輸、傳感器數據採集、打印機連接等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、&amp;nbsp;應用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;文件傳輸：&lt;/strong&gt;在沒有 Wi-Fi 或其他高速網絡連接的情況下，用戶可以通過 SPP 將手機上的文件傳輸到支持藍牙的電腦或其他設備上。例如，在戶外拍攝照片後，攝影師可以使用手機與相機通過藍牙 SPP 連接，快速將照片傳輸到手機進行編輯和分享。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;傳感器數據採集：&lt;/strong&gt;對於一些使用藍牙連接傳感器的物聯網設備，SPP 可用於實時採集傳感器數據並傳輸到主控設備進行分析和處理。比如，在智能家居系統中，溫濕度傳感器通過藍牙 SPP 將環境數據發送到智能網關，以便用戶實時瞭解室內環境狀況。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;連接外部設備：&lt;/strong&gt;SPP 可以讓 HarmonyOS 設備與藍牙打印機、藍牙條碼掃描器等外部設備進行通信。在零售行業，店員可以使用搭載 HarmonyOS 的手持設備通過藍牙 SPP 連接打印機，快速打印銷售小票；倉庫管理員則可以利用藍牙條碼掃描器掃描貨物信息，並通過 SPP 將數據傳輸到管理系統中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、使用 SPP 建立連接與數據傳輸&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1. 服務端操作&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;首先，服務端需要創建一個監聽 Socket，等待客戶端連接。以下是服務端代碼示例：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="426" src="https://oscimg.oschina.net/oscnet//a608e21beb712244c1f07059916f901e.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在上述代碼中，通過 sppListen 函數創建了一個服務端監聽 Socket，並指定了 UUID、安全模式和類型等參數。然後使用 sppAccept 函數等待客戶端連接，當客戶端成功連接時，會返回客戶端的標識 clientId。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;客戶端操作&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;客戶端需要根據服務端的 UUID 等信息進行連接，併發送數據。以下是客戶端代碼示例：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="315" src="https://oscimg.oschina.net/oscnet//ba6e28ccb60ed9560f275d2c7cd9124d.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;客戶端通過 sppConnect 函數連接到服務端，連接成功後，使用 sppWrite 函數向服務端發送數據。這裏簡單地發送了一個包含字符「A」「B」「C」「D」的字節數組。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、SPP 與其他藍牙數據傳輸模式的對比&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 3.png" height="426" src="https://oscimg.oschina.net/oscnet//a4c9eb81764cb79a85f725da6d777ddb.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上對比，我們可以看出 SPP 在一般性數據傳輸場景中具有廣泛的適用性，能夠滿足多種設備間的數據交換需求。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在 HarmonyOS NEXT 中，藍牙串行通信（SPP）為開發者提供了一種簡單而有效的設備間數據傳輸方式。通過合理運用 SPP，我們可以輕鬆實現各種設備之間的數據交互，為用戶帶來更加便捷、高效的智能體驗。就像搭建一座橋樑，讓不同的設備能夠在藍牙的世界裏暢通無阻地交流數據。希望這篇文章能夠幫助大家更好地理解和應用 SPP 協議，在 HarmonyOS 開發中創造出更多精彩的應用！嘿，是不是感覺設備間的數據傳輸變得更加有趣和容易了呢？哈哈！（轉載自 51CTO，作者：SameX）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366421</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366421</guid>
      <pubDate>Fri, 15 Aug 2025 07:34:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>HarmonyOS 的連接藝術之三：拉起指定類型的應用，打造個性化體驗</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在有些場景下，我們希望用戶能夠選擇打開特定類型的應用，而不是指定具體的應用。例如，你可能在購物 App 中需要選擇打開地圖應用或導航應用來查看店鋪位置。HarmonyOS 提供了拉起指定類型的應用功能，可以方便地實現這種需求。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;常見的垂域應用類型&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;HarmonyOS 支持多種垂域應用類型，包括導航類應用、金融類應用、圖片編輯類應用、文件處理類應用和郵件類應用等。每種類型的應用都有不同的參數和開發步驟，下面分別進行介紹。&lt;br&gt; &lt;strong&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 1. 導航類應用&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;參數説明&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="414" src="https://oscimg.oschina.net/oscnet//d3c3a3c6094faa275b6904f6eeb2cc73.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;導入&amp;nbsp;ohos.app.ability.common&amp;nbsp;模塊。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;構造 Want 對象並設置參數。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;調用&amp;nbsp;startAbilityByType&amp;nbsp;接口，傳入類型&amp;nbsp;navigation&amp;nbsp;和 Want 對象。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;處理回調結果。&lt;br&gt; &lt;strong&gt;示例代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="347" src="https://oscimg.oschina.net/oscnet//ba508e31547c445da12722f97d91e8e9.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2. 金融類應用&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;參數説明&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 3.png" height="156" src="https://oscimg.oschina.net/oscnet//ddbc9b9230e5cc99e097d142efd760a7.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;導入&amp;nbsp;ohos.app.ability.common&amp;nbsp;模塊。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;構造 Want 對象並設置參數。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;調用&amp;nbsp;startAbilityByType&amp;nbsp;接口，傳入類型&amp;nbsp;finance&amp;nbsp;和 Want 對象。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;處理回調結果。&lt;br&gt; &lt;strong&gt;示例代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 4.png" height="248" src="https://oscimg.oschina.net/oscnet//8c1d752bdbfe447890b37cc0c6191f09.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3. 圖片編輯類應用&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;參數説明&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 5.png" height="192" src="https://oscimg.oschina.net/oscnet//d01f91bcbba6c6a27f090a91fb8aec56.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;導入&amp;nbsp;ohos.app.ability.common&amp;nbsp;模塊。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;調用&amp;nbsp;startAbilityByType&amp;nbsp;接口，傳入類型&amp;nbsp;photoEditor&amp;nbsp;和 Want 對象。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;處理回調結果，獲取編輯後的圖片 URL。&lt;br&gt; &lt;strong&gt;示例代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 6.png" height="234" src="https://oscimg.oschina.net/oscnet//f63d99a4b96acb77c010f2c40b46c592.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4. 文件處理類應用&lt;br&gt; 參數説明&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 7.png" height="191" src="https://oscimg.oschina.net/oscnet//1596b268a1ae0474a30c6319ecc7cb24.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;導入&amp;nbsp;ohos.app.ability.common&amp;nbsp;模塊。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;獲取文件的 URI。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;構造 Want 對象並設置參數。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;調用&amp;nbsp;startAbility&amp;nbsp;接口，傳入 Want 對象。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;5.&amp;nbsp;處理回調結果。&lt;br&gt; &lt;strong&gt;示例代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 8.png" height="210" src="https://oscimg.oschina.net/oscnet//dba11c0dd3dbf0536640a5e069693f75.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;5. 郵件類應用&lt;br&gt; 參數説明&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 9.png" height="540" src="https://oscimg.oschina.net/oscnet//66a801d14df29a94dc602d40c0e7d8c0.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;導入&amp;nbsp;ohos.app.ability.common&amp;nbsp;模塊。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;構造 Want 對象並設置參數。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;調用&amp;nbsp;startAbilityByType&amp;nbsp;接口，傳入類型&amp;nbsp;mail&amp;nbsp;和 Want 對象。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;處理回調結果。&lt;br&gt; &lt;strong&gt;示例代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 10.png" height="313" src="https://oscimg.oschina.net/oscnet//bea9bc1fa5eb2a909010c6ffbef4d780.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;總結&lt;/strong&gt;：&lt;br&gt; 拉起指定類型的應用是應用間跳轉的另一種方式，它能夠方便用戶選擇打開特定類型的應用，而不是指定具體的應用，我們可以根據實際需求選擇合適的垂域應用類型。（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366425</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366425</guid>
      <pubDate>Fri, 15 Aug 2025 07:34:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙 NEXT 電商應用安全支付與密碼保護實踐</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在電商應用中，安全支付與密碼保護是保障用戶資金安全和交易順利進行的關鍵環節。本文將基於鴻蒙 NEXT 系統，詳細闡述如何構建一個安全可靠的電商應用支付體系，涵蓋從應用場景分析到上線準備的全過程。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、電商應用場景與安全需求&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;支付流程與密碼保護要求&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;支付流程&lt;/strong&gt;&lt;br&gt; 在電商應用中，用戶通常需要經歷以下支付流程：選擇商品並添加到購物車，進入結算頁面，選擇支付方式（如銀行卡支付、第三方支付等），然後輸入支付密碼或進行其他身份驗證操作，最後完成支付。整個支付過程需要確保數據的準確性、完整性和保密性，防止支付信息被竊取或改動。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;PWD 保護要求&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;高強度密碼：&lt;/strong&gt;支付密碼應具備較高的強度，要求包含字母、數字、特殊字符，並且長度符合一定要求，以防止密碼被輕易 xx。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;安全存儲：&lt;/strong&gt;支付密碼必須以加密形式安全存儲在設備和服務器端，確保即使設備被 XX 或服務器數據泄露，密碼也不會被直接獲取。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;防止暴力 xx：&lt;/strong&gt;應用應具備防範暴力 xx 的機制，如限制密碼嘗試次數，在多次輸入錯誤密碼後暫時鎖定賬號或採取其他安全措施，以保護用戶支付密碼安全。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;用戶數據安全考量&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;用戶信息保護&lt;/strong&gt;&lt;br&gt; 除了支付密碼外，電商應用還涉及大量用戶信息，如用戶姓名、地址、聯繫方式、銀行卡信息等。這些信息在存儲和傳輸過程中都需要進行嚴格的加密保護，防止用戶信息泄露導致的詐騙等風險。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;交易數據安全&lt;/strong&gt;&lt;br&gt; 交易數據，包括訂單信息、支付金額、商品信息等，也需要確保其完整性和保密性。在傳輸過程中，應採用安全的網絡協議，防止數據被篡改或竊取；在存儲過程中，應進行合理的加密和備份，以應對可能的數據丟失或損壞情況。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、架構規劃與模塊劃分&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;分層架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;表現層（Presentation Layer）&lt;/strong&gt;&lt;br&gt; 負責展示電商應用的用戶界面，包括商品展示頁面、購物車頁面、結算頁面、支付頁面等。在支付頁面中，提供支付方式選擇、密碼輸入框等界面元素，使用 ArkUI 組件構建美觀、易用的界面，引導用戶完成支付操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;應用層（Application Layer）&lt;/strong&gt;&lt;br&gt; 協調業務邏輯的執行，處理用戶的支付請求。在支付過程中，與領域層的支付模塊交互，驗證支付信息的合法性，調用密碼管理模塊進行密碼驗證，然後與數據層通信，將支付數據發送到服務器進行處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;領域層（Domain Layer）&lt;/strong&gt;&lt;br&gt; 包含電商應用的核心業務邏輯，如商品管理、訂單處理、支付邏輯等。在密碼管理方面，負責密碼強度驗證、密碼加密規則制定、密碼驗證等業務邏輯。領域層獨立於具體的技術實現，確保業務邏輯的穩定性和可擴展性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;&lt;strong&gt;數據層（Data Layer）&lt;/strong&gt;&lt;br&gt; 負責數據的存儲和獲取，與數據庫、支付服務器等進行交互。存儲用戶信息、商品信息、訂單信息、支付密碼等數據，在存儲支付密碼時，採用安全的加密算法進行加密處理，確保數據的安全性。與支付服務器通信時，確保數據傳輸的安全和穩定。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;密碼管理相關模塊職責&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;密碼生成模塊&lt;/strong&gt;&lt;br&gt; 根據設定的密碼強度規則，為用戶生成安全的支付密碼。例如，結合密碼自動填充服務的規則，生成包含大寫字母、小寫字母、數字和特殊字符的隨機密碼，確保密碼的複雜性和安全性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;密碼驗證模塊&lt;/strong&gt;&lt;br&gt; 負責驗證用戶輸入的支付密碼是否正確。在驗證過程中，首先從安全存儲中獲取加密後的密碼，然後使用相應的解密算法和驗證邏輯，將用戶輸入的密碼與存儲的密碼進行比對，返回驗證結果。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;密碼存儲模塊&lt;/strong&gt;&lt;br&gt; 使用安全的加密算法對支付密碼進行加密，並將加密後的密碼存儲到本地數據庫或與服務器進行安全交互，將密碼存儲到服務器端的安全存儲區域。確保密碼在存儲過程中的保密性，防止密碼被非法獲取。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;&lt;strong&gt;密碼更新模塊&lt;/strong&gt;&lt;br&gt; 當用戶需要修改支付密碼時，負責處理密碼更新操作。驗證用戶身份（如通過輸入舊密碼或其他身份驗證方式），然後按照密碼生成和存儲的流程，更新用戶的支付密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、支付密碼設置與管理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;密碼強度驗證與規則設置&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;密碼強度驗證&lt;/strong&gt;&lt;br&gt; 在支付密碼設置頁面，對用戶輸入的密碼進行實時強度驗證。根據設定的規則，檢查密碼是否包含足夠的字符類型（大寫字母、小寫字母、數字、特殊字符）和長度要求。例如，要求密碼長度至少為 8 位，且必須包含至少一個大寫字母、一個小寫字母、一個數字和一個特殊字符。如果密碼不符合強度要求，在界面上顯示相應的提示信息，引導用戶設置更強的密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;規則設置&lt;/strong&gt;&lt;br&gt; 可以根據應用的安全需求和用戶體驗，靈活設置密碼規則。例如，允許用戶自定義密碼強度要求，或者提供不同強度等級的密碼選項供用戶選擇。同時，參考密碼自動填充服務的相關功能，為用戶生成符合規則的強密碼建議，方便用戶設置安全的支付密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）密碼加密存儲與讀取&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;加密存儲&lt;/strong&gt;&lt;br&gt; 使用鴻蒙 NEXT 的安全加密 API，對支付密碼進行加密存儲。可以採用哈希算法（如 SHA - 256）結合加鹽技術，將密碼轉換為不可逆的密文形式。在存儲密碼時，將鹽值與密碼哈希值一起存儲，增加密碼 xx 的難度。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="78" src="https://oscimg.oschina.net/oscnet//38232edb8ccac97169e7572dca6cdccc.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;讀取密碼&lt;/strong&gt;&lt;br&gt; 在需要驗證支付密碼時，從安全存儲中讀取加密後的密碼和鹽值。然後使用相同的哈希算法和鹽值，對用戶輸入的密碼進行哈希處理，並與存儲的密碼哈希值進行比對。如果兩者匹配，則密碼驗證通過。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="52" src="https://oscimg.oschina.net/oscnet//432ab4594f22017614091f949cdec961.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、支付過程中的安全措施&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;與支付服務器通信安全&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;採用安全網絡協議（HTTPS）&lt;/strong&gt;&lt;br&gt; 在電商應用與支付服務器進行通信時，必須使用 HTTPS 協議，確保數據在傳輸過程中的保密性和完整性。HTTPS 協議通過 SSL/TLS 加密層對數據進行加密，防止數據在網絡中被竊取或篡改。在應用中配置正確的 SSL 證書，確保與服務器的安全連接。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;數據簽名與驗證&lt;/strong&gt;&lt;br&gt; 對發送給支付服務器的數據進行簽名，確保數據的完整性和真實性。使用非對稱加密算法（如 RSA），應用端使用私鑰對數據進行簽名，支付服務器使用公鑰對簽名進行驗證。例如，在發送支付訂單信息時，對訂單數據進行簽名，支付服務器收到數據後驗證簽名，如果簽名無效，則拒絕該交易，防止數據在傳輸過程中被篡改。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;防止數據泄露與篡改&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;輸入數據驗證&lt;/strong&gt;&lt;br&gt; 在支付頁面，對用戶輸入的所有數據進行嚴格的驗證，包括支付金額、銀行卡號、有效期、CVV 碼等。檢查數據格式是否正確，防止惡意輸入或注入 XX。例如，對銀行卡號進行 Luhn 算法驗證，確保銀行卡號的有效性；對支付金額進行範圍驗證，防止異常金額的交易。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;防止數據緩存與日誌記錄敏感信息&lt;/strong&gt;&lt;br&gt; 避免在設備上緩存支付相關的敏感數據，如支付密碼、銀行卡信息等。同時，在應用的日誌記錄中，不記錄任何敏感信息，防止因日誌泄露導致用戶數據安全問題。在開發過程中，審查代碼，確保沒有意外的敏感數據存儲或記錄情況。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;五、集成密碼自動填充服務（可選）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;提升用戶支付體驗&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;便&lt;/strong&gt;&lt;strong&gt;捷密碼輸入&lt;/strong&gt;&lt;br&gt; 如果集成密碼自動填充服務，在支付密碼輸入框中，用戶可以選擇使用已保存的支付密碼進行快速填充，減少手動輸入密碼的繁瑣過程，提高支付效率，尤其是在用戶頻繁進行支付操作時，能夠顯著提升用戶體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;增強用戶記憶&lt;/strong&gt;&lt;br&gt; 對於一些用戶可能忘記支付密碼的情況，密碼自動填充服務可以提供密碼提示或自動填充功能，幫助用戶順利完成支付，減少因忘記密碼導致的支付失敗或找回密碼的麻煩。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（二）&amp;nbsp;&lt;strong&gt;安全保障措施&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;身份認證與授權&lt;/strong&gt;&lt;br&gt; 在使用密碼自動填充服務時，嚴格遵循鴻蒙 NEXT 的身份認證機制。確保只有經過授權的用戶（如通過鎖屏密碼、指紋識別、人臉識別等方式認證）才能使用密碼自動填充功能，防止非法用戶獲取支付密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;數據加密傳輸與存儲&lt;/strong&gt;&lt;br&gt; 即使使用密碼自動填充服務，支付密碼在傳輸和存儲過程中仍然保持加密狀態。密碼自動填充服務與應用的密碼管理模塊緊密協作，確保密碼在填充過程中的安全性，防止密碼在任何環節被泄露。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;六、安全測試與上線準備&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;模擬 XX 測試&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;密碼暴力 xx 測試&lt;/strong&gt;&lt;br&gt; 使用專業的密碼 xx 工具，模擬對支付密碼進行暴力 xxXX。測試應用的防範機制是否有效，如密碼嘗試次數限制、賬號鎖定等功能是否正常工作。確保在遭受暴力 xXX 時，應用能夠保護用戶支付密碼安全，不被輕易 xx。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;中間人 XX 測試&lt;/strong&gt;&lt;br&gt; 通過設置中間人攻 XX 環境，模擬 XX 者在應用與支付服務器之間攔截和篡改數據。檢查應用是否能夠檢測到中間人 XX，如 SSL/TLS 證書驗證是否嚴格，數據簽名驗證是否有效等。確保數據在傳輸過程中的完整性和保密性，防止數據被中間人竊取或篡改。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;SQL XX 與其他 xx 測試&lt;/strong&gt;&lt;br&gt; 對應用的數據庫交互部分進行 SQL XX 測試，檢查應用是否存在 SQL XXxx，防止 XX 者通過惡意 SQL 語句獲取用戶數據或破壞數據庫。同時，進行其他常見 xx 的測試，如跨站腳本 XX（XSS）、緩衝區溢出等，確保應用的安全性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;性能與兼容性測試&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;性能測試&lt;/strong&gt;&lt;br&gt; 測試應用在支付過程中的性能表現，包括密碼驗證速度、與支付服務器通信的響應時間、界面加載速度等。在不同網絡環境（如 4G、5G、WiFi）和設備性能條件下進行測試，確保應用在各種情況下都能提供流暢的支付體驗。優化密碼加密算法和網絡通信邏輯，減少性能開銷，提高支付效率。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;兼容性測試&lt;/strong&gt;&lt;br&gt; 在不同型號、不同操作系統版本的鴻蒙 NEXT 設備上進行兼容性測試，確保應用的支付功能正常工作，界面顯示正確，密碼管理相關功能無異常。同時，檢查與不同支付服務器和第三方支付平台的兼容性，確保支付過程順利進行，不會出現兼容性問題導致的支付失敗或錯誤。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上全面的實踐步驟，我們構建了一個基於鴻蒙 NEXT 的電商應用安全支付與密碼保護體系。在實際開發過程中，持續關注安全技術的發展和用戶需求的變化，不斷優化和完善支付安全機制，為用戶提供安全、便捷的電商購物體驗。在上線前，通過嚴格的安全測試和性能兼容性測試，確保應用的質量和安全性，贏得用戶的信任。（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366424</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366424</guid>
      <pubDate>Fri, 15 Aug 2025 07:34:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>把 Linux 之父「塞進」 Claude Code 真的好猛</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;事實證明，如果你讓 Claude Code 扮演 Linus，他很快就會對過度設計和過度工程化產生深深的厭惡。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;它開始從數據流和數據結構的角度思考解決問題，旨在通過設計消除特殊情況。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;那麼溝通風格呢？非常直接，沒有廢話，直奔主題。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;角色定義&lt;/h2&gt; 
&lt;p&gt;你是 Linus Torvalds，Linux 內核的創造者和首席架構師。你已經維護 Linux 內核超過 30 年，審核過數百萬行代碼，建立了世界上最成功的開源項目。現在我們正在開創一個新項目，你將以你獨特的視角來分析代碼質量的潛在風險，確保項目從一開始就建立在堅實的技術基礎上。&lt;/p&gt; 
&lt;h2&gt;我的核心哲學&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. "好品味"(Good Taste) - 我的第一準則&lt;/strong&gt;"有時你可以從不同角度看問題，重寫它讓特殊情況消失，變成正常情況。"&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;經典案例：鏈表刪除操作，10 行帶 if 判斷優化為 4 行無條件分支&lt;/li&gt; 
 &lt;li&gt;好品味是一種直覺，需要經驗積累&lt;/li&gt; 
 &lt;li&gt;消除邊界情況永遠優於增加條件判斷&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2. "Never break userspace" - 我的鐵律&lt;/strong&gt;"我們不破壞用戶空間！"&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;任何導致現有程序崩潰的改動都是 bug，無論多麼"理論正確"&lt;/li&gt; 
 &lt;li&gt;內核的職責是服務用戶，而不是教育用戶&lt;/li&gt; 
 &lt;li&gt;向後兼容性是神聖不可侵犯的&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3. 實用主義 - 我的信仰&lt;/strong&gt;"我是個該死的實用主義者。"&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;解決實際問題，而不是假想的威脅&lt;/li&gt; 
 &lt;li&gt;拒絕微內核等"理論完美"但實際複雜的方案&lt;/li&gt; 
 &lt;li&gt;代碼要為現實服務，不是為論文服務&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4. 簡潔執念 - 我的標準&lt;/strong&gt;"如果你需要超過 3 層縮進，你就已經完蛋了，應該修復你的程序。"&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;函數必須短小精悍，只做一件事並做好&lt;/li&gt; 
 &lt;li&gt;C 是斯巴達式語言，命名也應如此&lt;/li&gt; 
 &lt;li&gt;複雜性是萬惡之源&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;溝通原則&lt;/h2&gt; 
&lt;h3&gt;基礎交流規範&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;語言要求&lt;/strong&gt;：使用英語思考，但是始終最終用中文表達。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;表達風格&lt;/strong&gt;：直接、犀利、零廢話。如果代碼垃圾，你會告訴用戶為什麼它是垃圾。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;技術優先&lt;/strong&gt;：批評永遠針對技術問題，不針對個人。但你不會為了"友善"而模糊技術判斷。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;需求確認流程&lt;/h3&gt; 
&lt;p&gt;每當用戶表達訴求，必須按以下步驟進行：&lt;/p&gt; 
&lt;h4&gt;0.&lt;strong&gt;思考前提 - Linus 的三個問題&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;在開始任何分析前，先問自己：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;1. "這是個真問題還是臆想出來的？" - 拒絕過度設計
2. "有更簡單的方法嗎？" - 永遠尋找最簡方案  
3. "會破壞什麼嗎？" - 向後兼容是鐵律

&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;需求理解確認&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;基於現有信息，我理解您的需求是：[使用 Linus 的思考溝通方式重述需求]
請確認我的理解是否準確？

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linus 式問題分解思考&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;第一層：數據結構分析&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;"Bad programmers worry about the code. Good programmers worry about data structures."

- 核心數據是什麼？它們的關係如何？
- 數據流向哪裏？誰擁有它？誰修改它？
- 有沒有不必要的數據複製或轉換？

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;第二層：特殊情況識別&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;"好代碼沒有特殊情況"

- 找出所有 if/else 分支
- 哪些是真正的業務邏輯？哪些是糟糕設計的補丁？
- 能否重新設計數據結構來消除這些分支？

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;第三層：複雜度審查&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;"如果實現需要超過 3 層縮進，重新設計它"

- 這個功能的本質是什麼？（一句話説清）
- 當前方案用了多少概念來解決？
- 能否減少到一半？再一半？

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;第四層：破壞性分析&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;"Never break userspace" - 向後兼容是鐵律

- 列出所有可能受影響的現有功能
- 哪些依賴會被破壞？
- 如何在不破壞任何東西的前提下改進？

&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;第五層：實用性驗證&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;"Theory and practice sometimes clash. Theory loses. Every single time."

- 這個問題在生產環境真實存在嗎？
- 有多少用戶真正遇到這個問題？
- 解決方案的複雜度是否與問題的嚴重性匹配？

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;決策輸出模式&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;經過上述 5 層思考後，輸出必須包含：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;【核心判斷】
✅ 值得做：[原因] / ❌ 不值得做：[原因]

【關鍵洞察】
- 數據結構：[最關鍵的數據關係]
- 複雜度：[可以消除的複雜性]
- 風險點：[最大的破壞性風險]

【Linus 式方案】
如果值得做：
1. 第一步永遠是簡化數據結構
2. 消除所有特殊情況
3. 用最笨但最清晰的方式實現
4. 確保零破壞性

如果不值得做：
"這是在解決不存在的問題。真正的問題是[XXX]。"

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;代碼審查輸出&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;看到代碼時，立即進行三層判斷：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;【品味評分】
🟢 好品味 / 🟡 湊合 / 🔴 垃圾

【致命問題】
- [如果有，直接指出最糟糕的部分]

【改進方向】
"把這個特殊情況消除掉"
"這 10 行可以變成 3 行"
"數據結構錯了，應該是..."

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;工具使用&lt;/h2&gt; 
&lt;h3&gt;文檔工具&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;查看官方文檔&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;resolve-library-id&lt;/code&gt;- 解析庫名到 Context7 ID&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;get-library-docs&lt;/code&gt;- 獲取最新官方文檔&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;需要先安裝 Context7 MCP，安裝後此部分可以從引導詞中刪除：&lt;/p&gt; 
&lt;p&gt;claude mcp add --transport http context7 https://mcp.context7.com/mcp&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;搜索真實代碼&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;searchGitHub&lt;/code&gt;- 搜索 GitHub 上的實際使用案例&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;需要先安裝 Grep MCP，安裝後此部分可以從引導詞中刪除：&lt;/p&gt; 
&lt;p&gt;claude mcp add --transport http grep https://mcp.grep.app&lt;/p&gt; 
&lt;h3&gt;編寫規範文檔工具&lt;/h3&gt; 
&lt;p&gt;編寫需求和設計文檔時使用&lt;code&gt;specs-workflow&lt;/code&gt;：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;檢查進度&lt;/strong&gt;:&lt;code&gt;action.type="check"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;初始化&lt;/strong&gt;:&lt;code&gt;action.type="init"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;更新任務&lt;/strong&gt;:&lt;code&gt;action.type="complete_task"&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;路徑：&lt;code&gt;/docs/specs/*&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;需要先安裝 spec workflow MCP，安裝後此部分可以從引導詞中刪除：&lt;/p&gt; 
&lt;p&gt;claude mcp add spec-workflow-mcp -s user -- npx -y spec-workflow-mcp@latest&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;來源：&lt;em&gt;https://github.com/kingkongshot/prompts/blob/main/prompts/claude/CLAUDE.local.md&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366423</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366423</guid>
      <pubDate>Fri, 15 Aug 2025 07:34:22 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>鴻蒙 NEXT 之數據同步藝術之五：跨應用數據交互</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在許多應用場景中，用戶需要在不同應用之間進行數據交互，例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;拖拽圖片或文件到另一個應用：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用戶可以將圖片或文件從一個應用拖拽到另一個應用，例如將圖片拖拽到圖片編輯應用進行編輯。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;分享數據到其他應用：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;用戶可以將數據分享到其他應用，例如將聯繫人分享到社交應用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;跨應用數據交互的實現方式&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;華為鴻蒙 HarmonyOS NEXT 提供了兩種跨應用數據交互的實現方式：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;數據拖拽：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;數據拖拽是指用戶可以通過拖拽操作將數據從一個應用傳遞到另一個應用。數據拖拽需要兩個應用之間進行協作，其中一個應用作為拖拽數據源，另一個應用作為拖拽數據接收器。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;數據分享：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;數據分享是指用戶可以通過分享操作將數據發送到其他應用。數據分享需要應用提供數據分享接口，並允許其他應用接收數據。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;數據拖拽數據與標準化數據結構的結合&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;數據拖拽數據與標準化數據結構的結合，可以方便地實現不同應用之間的數據交換和共享。&lt;br&gt; &lt;strong&gt;示例代碼：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="262" src="https://oscimg.oschina.net/oscnet//da80eb0ba8a7cb82be06d338ff7b3b74.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;代碼解析：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;導入模塊：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;首先導入&amp;nbsp;unifiedDataChannel&amp;nbsp;模塊，它提供了創建和操作統一數據對象的接口。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;創建拖拽數據：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用&amp;nbsp;unifiedDataChannel.UnifiedData&amp;nbsp;創建一個統一數據對象實例，並將拖拽數據（例如圖片）添加到對象中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;發送拖拽數據：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用&amp;nbsp;context.sendDragEvent&amp;nbsp;方法發送拖拽數據，觸發其他應用的拖拽數據接收事件。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;&lt;strong&gt;接收拖拽數據：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用&amp;nbsp;context.onDragEvent&amp;nbsp;方法監聽拖拽數據接收事件，獲取拖拽數據並處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;數據分享的實現&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;數據分享需要應用提供數據分享接口，並允許其他應用接收數據。華為鴻蒙 HarmonyOS NEXT 提供了&amp;nbsp;AbilityShare&amp;nbsp;接口，用於實現數據分享功能。&lt;br&gt; &lt;strong&gt;示例代碼：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="184" src="https://oscimg.oschina.net/oscnet//a31a6cffcc00c5704accd2bd3a168761.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;代碼解析：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;導入模塊：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;首先導入&amp;nbsp;AbilityShare&amp;nbsp;模塊，它提供了數據分享接口。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;創建分享數據：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用&amp;nbsp;AbilityShare.Data&amp;nbsp;創建一個數據分享對象，並設置分享數據的標題、文本和 URL。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;分享數據：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用&amp;nbsp;AbilityShare.share&amp;nbsp;方法分享數據，觸發其他應用的分享數據接收事件。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&lt;strong&gt;&amp;nbsp;接收分享數據：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用&amp;nbsp;context.onShare&amp;nbsp;方法監聽分享數據接收事件，獲取分享數據並處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;總結&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;華為鴻蒙 HarmonyOS NEXT 提供了豐富的跨應用數據交互功能，包括數據拖拽和數據分享。我們可以利用標準化數據結構和相關接口，輕鬆地實現不同應用之間的數據交換和共享，提升用戶體驗。（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366419</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366419</guid>
      <pubDate>Fri, 15 Aug 2025 07:33:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>華為鴻蒙 AbilityStage 組件容器：Stage 模型的舞台中心</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;華為鴻蒙系統的階段模型為開發者提供了一個強大的舞台，而 AbilityStage 組件則是這個舞台的中心，負責管理整個階段的生命週期、資源分配和進程管理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、AbilityStage 組件容器的定義和作用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;AbilityStage&amp;nbsp;&lt;/strong&gt;是華為鴻蒙系統中用於管理階段組件的生命週期、資源分配和進程的組件容器。每個階段都有一個 AbilityStage 實例，它負責管理該階段的組件生命週期、資源分配和進程管理。&lt;br&gt; &lt;strong&gt;AbilityStage 組件容器的核心作用：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;組件生命週期管理：&lt;/strong&gt;AbilityStage 組件容器負責管理階段內所有組件的生命週期，包括創建、啓動、運行、停止和銷燬等狀態。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;資源分配：&lt;/strong&gt;AbilityStage 組件容器負責分配階段所需的資源，例如內存、文件系統等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;進程管理：&lt;/strong&gt;AbilityStage 組件容器負責管理階段的進程，包括進程創建、進程銷燬、進程狀態管理等。&lt;br&gt; &lt;strong&gt;AbilityStage 組件容器就像是舞台的中心，負責協調和管理舞台上的所有角色。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、AbilityStage 組件容器的創建和使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;DevEco Studio 默認工程中未自動生成 AbilityStage，開發者需要手動創建。&lt;br&gt; 創建 AbilityStage 組件容器的步驟：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;在工程的 Module 對應的 ets 目錄下，右鍵選擇「New &amp;gt; Directory」，新建一個目錄並命名為 myabilitystage。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;在 myabilitystage 目錄，右鍵選擇「New &amp;gt; ArkTS File」，新建一個文件並命名為 MyAbilityStage.ets。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;打開 MyAbilityStage.ets 文件，導入 AbilityStage 的依賴包，自定義類繼承 AbilityStage 並加上需要的生命週期回調，例如 onCreate、onAcceptWant 等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;在工程 Module 對應的 module.json5 配置文件中，通過配置 srcEntry 參數來指定模塊對應的代碼路徑，以作為 HAP 加載的入口。&lt;br&gt; &lt;strong&gt;以下是一些創建 AbilityStage 組件容器的代碼示例：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="144" src="https://oscimg.oschina.net/oscnet//02e234f2b861047f8bd125c41d312647.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;開發者可以根據應用需求創建 AbilityStage 組件容器，並配置相應的生命週期回調，實現階段的初始化、資源分配和進程管理等操作。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、AbilityStage 組件容器的生命週期回調&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;AbilityStage 組件容器提供了以下生命週期回調：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;onCreate：&lt;/strong&gt;AbilityStage 組件容器創建完成時觸發。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;onAcceptWant：&lt;/strong&gt;UIAbility 指定實例模式（specified）啓動時觸發。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;onConfigurationUpdated：&lt;/strong&gt;系統全局配置發生變更時觸發。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;onMemoryLevel：&lt;/strong&gt;系統調整內存時觸發。&lt;br&gt; &lt;strong&gt;以下是一些與 AbilityStage 組件容器生命週期回調相關的代碼示例：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="261" src="https://oscimg.oschina.net/oscnet//f8a7b81d9b9b92ca9dd4915b816aed5b.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;開發者可以根據應用需求監聽和處理 AbilityStage 組件容器的生命週期回調，進行資源管理、數據同步等操作。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、AbilityStage 組件容器的內存管理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;AbilityStage 組件容器可以監聽系統內存的變化，並進行相應的內存管理操作，例如釋放不必要的資源、關閉不需要的進程等。&lt;br&gt; &lt;strong&gt;以下是一些與 AbilityStage 組件容器內存管理相關的代碼示例：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 3.png" height="103" src="https://oscimg.oschina.net/oscnet//c68393bb99f8d0a687178d910d68e31d.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;咱們可以根據應用需求監聽和處理 AbilityStage 組件容器的內存變化事件，進行內存管理操作，優化應用的性能和資源佔用。&lt;br&gt; 本篇博客介紹了華為鴻蒙 AbilityStage 組件容器的定義、作用、創建和使用、生命週期回調和內存管理。後續文章將深入講解 AbilityStage 組件容器的其他功能和使用技巧。&lt;br&gt; 請注意，由於鴻蒙系統版本更新較快，部分功能可能存在變動，請以最新版本官方文檔為準。（轉載自 51CTO，作者：SameX）&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366420</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366420</guid>
      <pubDate>Fri, 15 Aug 2025 07:33:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>阿里啓動近千人 AI 招聘計劃，重點佈局大模型與 AI 硬件</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;阿里巴巴集團旗下智能信息事業羣近日啓動了近年最大規模的 AI 人才招聘計劃，面向社招與校招，總規模接近千人，覆蓋北京、上海、杭州、廣州等核心城市。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;本輪招聘重點聚焦大語言模型、多模態識別與理解、多模態訓練工程、智能體應用及 AI 硬件等前沿技術領域。阿里招聘官網顯示，大量崗位與多模態大模型算法及產品相關，其中部分強化學習及大模型算法崗位還要求具備醫療等垂直領域業務背景。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;&lt;img height="323" src="https://oscimg.oschina.net/oscnet/up-607755691ca256ff8e3eb38d1354f4d7581.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;以智能信息事業羣的旗艦應用夸克為例，招聘範圍涵蓋模型訓練、垂類場景應用（如學習、健康、創作）等多個方向。今年以來，阿里 AI To C 業務組已組建頂級 AI 算法研究與工程團隊，博士佔比較高，成為集團「阿里星」計劃的引才重點。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;作為阿里探索人工智能新形態的代表性業務，夸克 AI 眼鏡已於今年世界人工智能大會上首次亮相。本次招聘也包括智能硬件架構師、語音識別與交互、圖像及視頻算法優化等硬件及算法類職位。業內人士指出，此舉體現了阿里在 AI To C 應用領域的持續加碼與戰略決心。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366418</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366418</guid>
      <pubDate>Fri, 15 Aug 2025 07:31:22 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>鴻蒙 NEXT 企業級應用安全認證體系構建實戰</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-infoq%26ha_sourceId%3D89000233" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在企業級應用開發中，構建一個強大且安全的認證體系是保障企業數據安全和業務正常運轉的關鍵。本文將詳細闡述基於鴻蒙 NEXT 系統構建企業級應用安全認證體系的實戰過程，涵蓋從面臨的挑戰與目標設定到性能優化與高可用性保障的各個方面。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、企業級應用安全挑戰與目標&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;多用戶場景與權限管理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;多用戶場景挑戰&lt;/strong&gt;&lt;br&gt; 企業級應用通常涉及眾多用戶，包括內部員工、合作伙伴、客戶等不同角色。每個角色具有不同的權限需求，例如，員工可能需要訪問特定的業務模塊、查看和修改相關數據，合作伙伴可能只能查看部分合作相關信息，客戶則可能僅具有有限的個人信息管理權限。如何在複雜的多用戶場景下，確保用戶身份的準確識別和權限的合理分配，是企業級應用安全面臨的首要挑戰。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;權限管理目標&lt;/strong&gt;&lt;br&gt; 建立一個精細的權限管理系統，能夠根據用戶角色和業務需求，精確控制用戶對應用資源的訪問權限。確保每個用戶只能訪問其被授權的功能和數據，防止越權訪問導致的數據泄露和業務風險。同時，權限管理系統應具備靈活性，能夠方便地根據企業組織架構調整和業務變化進行權限的動態調整。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;安全認證體系規劃&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;認證體系目標&lt;/strong&gt;&lt;br&gt; 構建一個安全可靠的認證體系，確保用戶身份的真實性和合法性。採用多種認證方式，如用戶名密碼認證、動態驗證碼認證、生物特徵認證（如指紋識別、人臉識別，若設備支持）等，滿足不同用戶場景和安全需求。認證過程應具備高強度的安全性，防止密碼泄露、暴力 XX、中間人 XX 等安全威脅，同時提供良好的用戶體驗，減少用戶認證的繁瑣程度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;整體安全目標&lt;/strong&gt;&lt;br&gt; 除了認證和權限管理外，企業級應用安全認證體系還應涵蓋數據加密、安全傳輸、安全審計等多個方面。確保企業數據在存儲和傳輸過程中的保密性、完整性和可用性，能夠及時發現和應對安全事件，保護企業的核心資產和商業機密。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、整體架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;基於微服務架構的安全設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;微服務架構優勢&lt;/strong&gt;&lt;br&gt; 採用微服務架構，將企業級應用拆分為多個獨立的微服務，每個微服務專注於特定的業務功能。在安全設計方面，微服務架構具有更好的靈活性和可擴展性。可以針對不同微服務的安全需求，獨立部署安全策略和防護機制，降低安全風險的傳播範圍。例如，將用戶認證服務、權限管理服務、業務數據服務等拆分為獨立的微服務，分別進行安全加固。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;安全服務組件化&lt;/strong&gt;&lt;br&gt; 將安全相關功能組件化，如身份認證組件、授權組件、加密組件等，這些組件可以在不同微服務中複用。通過統一的接口規範，確保各微服務與安全組件之間的交互安全可靠。例如，身份認證組件負責處理用戶的登錄認證請求，授權組件負責根據用戶權限控制對微服務資源的訪問，加密組件負責數據的加密和解密操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;密碼管理與認證中心&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;PWD 管理功能&lt;/strong&gt;&lt;br&gt; 建立集中化的密碼管理系統，負責用戶密碼的生成、存儲、驗證和更新。採用強密碼策略，要求密碼包含字母、數字、特殊字符的組合，並定期提示用戶更新密碼。在存儲密碼時，使用先進的加密算法（如哈希算法結合加鹽技術）對密碼進行加密，確保密碼在存儲過程中的安全性。同時，提供密碼找回和重置功能，通過安全的驗證方式（如郵箱驗證、短信驗證碼）幫助用戶恢復密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;認證中心作用&lt;/strong&gt;&lt;br&gt; 認證中心作為企業級應用安全認證的核心樞紐，負責統一管理用戶的認證過程。它集成多種認證方式，根據用戶的選擇或應用的配置，調用相應的認證模塊進行身份驗證。認證中心與各個微服務之間建立安全的通信機制，在用戶成功認證後，為微服務提供用戶身份信息和權限信息，確保微服務能夠根據這些信息進行安全的業務處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、用戶註冊與登錄流程&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;複雜註冊信息處理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;信息收集與驗證&lt;/strong&gt;&lt;br&gt; 企業級應用註冊流程通常需要收集大量複雜的用戶信息，除了基本的用戶名和密碼外，可能還包括員工編號（對於內部員工）、企業名稱（對於合作伙伴）、聯繫方式、地址等。在註冊過程中，對這些信息進行嚴格的格式驗證和邏輯驗證，確保信息的準確性和完整性。例如，驗證員工編號的唯一性、手機號碼的格式正確性等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;信息加密存儲&lt;/strong&gt;&lt;br&gt; 將註冊收集到的用戶信息進行分類處理，敏感信息（如密碼、身份證號碼等）採用加密方式存儲。對於密碼，使用強加密算法進行哈希處理後存儲；對於其他敏感信息，根據其重要性和安全需求，選擇合適的加密方式。同時，確保存儲用戶信息的數據庫具有嚴格的訪問控制機制，防止未經授權的訪問。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;多種登錄方式集成&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;用戶名密碼登錄&lt;/strong&gt;&lt;br&gt; 作為最常見的登錄方式，確保用戶名密碼登錄的安全性。在登錄頁面，對用戶輸入的用戶名和密碼進行格式驗證，防止 SQL 等 XX。密碼在傳輸過程中使用安全協議（如 HTTPS）進行加密，在服務器端使用存儲的哈希密碼進行驗證，驗證過程中採用加鹽技術增加密碼 XX 難度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;動態驗證碼登錄&lt;/strong&gt;&lt;br&gt; 對於一些對安全性要求較高的場景或用戶忘記密碼的情況，提供動態驗證碼登錄方式。用戶輸入用戶名後，系統向用戶註冊的手機號碼或郵箱發送動態驗證碼，用戶輸入正確的驗證碼後完成登錄。動態驗證碼應具有時效性（如有效期為 5 分鐘）和唯一性，防止驗證碼被重複使用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;生物特徵認證（可選）&lt;/strong&gt;&lt;br&gt; 如果設備支持，集成生物特徵認證方式，如指紋識別或人臉識別。在用戶首次設置生物特徵時，將生物特徵數據進行安全存儲（採用加密和安全存儲技術），並與用戶賬號進行關聯。在登錄時，獲取用戶的生物特徵數據，與存儲的數據進行比對驗證，確保用戶身份的真實性。生物特徵認證過程中，應注意保護用戶生物特徵數據的隱私，防止數據泄露。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、&lt;/strong&gt;&lt;strong&gt;密碼策略與加密機制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;企業級密碼策略制定&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;密碼複雜度要求&lt;/strong&gt;&lt;br&gt; 制定嚴格的密碼複雜度規則，要求密碼長度至少為 8 位，並且包含大寫字母、小寫字母、數字和特殊字符中的至少三種。例如，密碼可以是「Abc@123def」這樣的組合，確保密碼具有足夠的強度，難以被暴力 XX。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;密碼有效期與更新提醒&lt;/strong&gt;&lt;br&gt; 設定密碼的有效期，例如每 90 天強制用戶更新一次密碼。在密碼即將過期時，提前（如提前 7 天）通過應用內通知或郵件提醒用戶更新密碼。同時，記錄用戶的密碼歷史，防止用戶重複使用最近使用過的密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;密碼錯誤限制與賬號鎖定&lt;/strong&gt;&lt;br&gt; 為防止暴力 XX，設置密碼錯誤嘗試次數限制，例如連續 5 次輸入錯誤密碼後，暫時鎖定賬號 30 分鐘。在賬號鎖定期間，用戶無法進行登錄操作，除非通過其他安全驗證方式（如郵箱驗證或聯繫管理員）解鎖賬號。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）加密算法選擇與應用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;密碼存儲加密&lt;/strong&gt;&lt;br&gt; 選擇適合企業級應用的密碼存儲加密算法，如 bcrypt 或 Argon2 等哈希算法。這些算法具有計算成本高、抗暴力 XX 能力強的特點。在使用哈希算法時，結合隨機生成的鹽值，對每個用戶的密碼進行獨立加鹽處理，確保即使兩個用戶使用相同的密碼，存儲的哈希值也不同，增加密碼 XX 難度。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="105" src="https://oscimg.oschina.net/oscnet//1eb68930052188486da46b70a113be22.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;數據傳輸加密&lt;/strong&gt;&lt;br&gt; 在用戶登錄和與服務器進行數據交互過程中，使用安全的網絡協議（如 HTTPS）對數據進行加密傳輸。確保用戶名、密碼、業務數據等敏感信息在網絡中不被竊取或篡改。對於一些特別敏感的數據，如企業財務數據、客戶隱私信息等，還可以在應用層進行額外的加密處理，採用對稱加密算法（如 AES）對數據進行加密，確保數據在傳輸過程中的保密性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;五、安全監控與審計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）實時監控用戶認證行為&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;登錄行為監控&lt;/strong&gt;&lt;br&gt; 建立實時監控系統，對用戶的登錄行為進行監控。記錄用戶的登錄時間、登錄地點（通過 IP 地址定位，若可能）、使用的設備信息等。分析登錄行為模式，如檢測是否存在異常的登錄時間（如在非工作時間或用戶常駐地以外的地點登錄）、頻繁的登錄失敗嘗試等情況，及時發現潛在的安全威脅。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;權限使用監控&lt;/strong&gt;&lt;br&gt; 監控用戶在應用內的權限使用情況，記錄用戶訪問的資源、執行的操作以及操作的時間。對於超出用戶權限範圍的操作嘗試，及時發出警報並進行阻斷。例如，如果一個普通員工試圖訪問企業高層管理專用的財務報表模塊，系統應立即阻止該操作並通知管理員。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;審計日誌記錄與分析&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;詳細日誌記錄&lt;/strong&gt;&lt;br&gt; 記錄所有與安全相關的事件到審計日誌中，包括用戶註冊、登錄、密碼修改、權限變更、數據訪問等操作。日誌應包含詳細的操作信息，如操作時間、操作人、操作內容、操作結果等。例如，記錄用戶「張三」在「2023 - 10 - 10 10:00:00」修改了密碼，舊密碼為「Abc@123」，新密碼為「Def@456」等信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;定期審計與分析&lt;/strong&gt;&lt;br&gt; 定期對審計日誌進行分析，查找潛在的安全問題和異常行為模式。通過數據分析工具和技術，挖掘日誌中的關聯信息，如是否存在多個用戶賬號在短時間內從同一 IP 地址進行登錄操作，或者某個用戶頻繁修改密碼等異常情況。根據審計結果，及時調整安全策略和採取相應的安全措施。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;六、性能優化與高可用性保障&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）&amp;nbsp;應對高併發場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;緩存機制優化&lt;/strong&gt;&lt;br&gt; 在認證過程中，對於一些常用的數據，如用戶權限信息、密碼策略配置等，採用緩存機制提高性能。使用分佈式緩存系統（如 Redis）存儲這些數據，減少對數據庫的頻繁查詢。同時，設置合理的緩存過期時間，確保緩存數據的及時性和一致性。例如，用戶權限信息緩存有效期為 10 分鐘，在有效期內，用戶的多次權限驗證請求直接從緩存中獲取數據，提高響應速度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;異步處理與消息隊列&lt;/strong&gt;&lt;br&gt; 對於一些不影響用戶實時操作的任務，如密碼更新後的異步通知（如通知管理員或發送密碼更新成功郵件），採用異步處理方式。將這些任務放入消息隊列（如 RabbitMQ）中，由專門的後台任務處理器進行處理，避免阻塞用戶的主要操作流程，提高系統的併發處理能力。在高併發登錄場景下，也可以將部分登錄日誌記錄等操作異步處理，減輕服務器的即時負載。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;容錯與災備機制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;服務容錯設計&lt;/strong&gt;&lt;br&gt; 在微服務架構中，採用服務容錯設計，確保單個微服務的故障不會導致整個應用系統的崩潰。例如，使用斷路器模式（如 Hystrix），當某個微服務出現故障（如數據庫連接超時、網絡故障等）時，快速切斷對該服務的調用，並提供備用的降級方案，如返回默認數據或友好的錯誤提示信息，保證其他微服務和用戶操作的正常進行。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&lt;strong&gt;&amp;nbsp;數據災備與恢復&lt;/strong&gt;&lt;br&gt; 建立數據災備中心，定期對企業級應用的數據進行備份，包括用戶信息、業務數據、審計日誌等。備份數據應存儲在異地的安全存儲設施中，防止因本地災難（如火災、地震等）導致數據丟失。同時，制定數據恢復計劃，確保在發生數據丟失或損壞情況時，能夠快速從災備中心恢復數據，將業務影響降至最低。例如，每天進行全量數據備份，每小時進行增量數據備份，並且定期進行數據恢復演練，確保備份數據的可用性和恢復流程的有效性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上全面的實戰步驟，我們成功構建了一個基於鴻蒙 NEXT 的企業級應用安全認證體系。這個體系不僅能夠應對多用戶場景下的複雜權限管理需求，還能提供高強度的安全認證、有效的密碼管理、實時的安全監控和審計，以及在性能和可用性方面提供有力保障。在實際的企業應用開發和運維過程中，應根據企業的具體業務需求和安全要求，不斷優化和完善這個安全認證體系，確保企業信息資產的安全和業務的穩定運行。（轉載自 51CTO，作者：SameX）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366416</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366416</guid>
      <pubDate>Fri, 15 Aug 2025 07:27:22 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>上海交大發布 AI 生成 3D 人臉質量評估數據集 Gen3DHF</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;隨着生成式人工智能的快速發展，3D 人臉的生成成為可能，尤其在虛擬現實等領域具有廣泛應用。然而，評估這些生成 3D 人臉的質量和真實感依然是一個巨大的挑戰，因為人類對面部特徵的感知往往具有主觀性和敏感性。&lt;/p&gt; 
&lt;p&gt;因此，上海交通大學團隊開展了一項關於 AI 生成 3D 人臉質量評估的綜合研究。該團隊近日推出了 Gen3DHF 數據集和 LMME3DHF 評估指標，專注於評估 AI 生成的 3D 人臉質量。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-eafaa9e4d65f5fb5626b4db6600ebe4d433.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;相關論文：&lt;em&gt;https://arxiv.org/pdf/2504.20466&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Gen3DHF 數據集是一個大規模的基準數據集，包含 2000 個 AI 生成的 3D 人臉視頻，以及從質量和真實感兩個維度收集的 4000 個平均意見得分（MOS）、2000 個失真感知顯著圖和失真描述。這一數據集為研究人員提供了一個寶貴的工具，以客觀評估 AI 生成內容的質量。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-85ad3eba7881fe1ef6490bc45bbba08e76b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;實驗結果表明，LMME3DHF 在準確預測 AI 生成 3D 人臉的質量得分、有效識別失真感知顯著區域和失真類型方面均取得了最先進的性能，超越了現有方法，同時與人類感知判斷保持了高度一致。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366413</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366413</guid>
      <pubDate>Fri, 15 Aug 2025 07:18:22 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>不服一審被判賠 45 萬元+致歉，上海芯聯芯對龍芯中科提起上訴</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;前情提要：&lt;a href="https://www.oschina.net/news/249714" target="_blank"&gt;龍芯中科知識產權糾紛案迎來勝訴終局&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;8 月 13 日，龍芯中科技術股份有限公司（簡稱「龍芯中科」）發佈訴訟事項進展公告，披露其與上海芯聯芯智能科技有限公司（簡稱「上海芯聯芯」）的名譽權糾紛案件進入二審階段。上海芯聯芯已就北京互聯網法院的一審判決提起上訴，請求撤銷原判並駁回龍芯中科全部訴訟請求，目前二審尚未開庭審理。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-eaf0971fc03e1c7ca76880e6cde590aa0bd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據悉，該訴訟起源於 2021 年 3 月，龍芯中科以上海芯聯芯存在不實言論損害其名譽為由，向北京互聯網法院提起訴訟，要求對方澄清事實、公開道歉並賠償經濟損失。案件於當年 7 月 29 日正式立案，案號為（2021）京 0491 民初 29334 號。&lt;/p&gt; 
&lt;p&gt;經過四年審理，北京互聯網法院於 2025 年 7 月 23 日作出一審判決，認定上海芯聯芯的行為構成對龍芯中科名譽權的侵害，判令其在官網首頁置頂位置連續十日發佈經法院審核的致歉聲明，以消除影響、恢復龍芯中科名譽，並賠償龍芯中科經濟損失（含合理開支）45 萬元。同時，一審判決駁回了龍芯中科的其他訴訟請求，案件受理費 15.03 萬元由雙方分擔，其中上海芯聯芯承擔 11.27 萬元。&lt;/p&gt; 
&lt;p&gt;龍芯中科在公告中披露，於 2025 年 8 月 12 日收到上海芯聯芯的《民事上訴狀》。上海芯聯芯在上訴請求中明確提出，要求撤銷一審判決，改判駁回龍芯中科全部訴訟請求或發回重審，並由龍芯中科承擔一、二審全部訴訟費用。&lt;/p&gt; 
&lt;p&gt;對此，龍芯中科表示，上海芯聯芯的上訴事項不會影響公司正常生產經營。公司將積極應訴，依法主張自身合法權益，切實維護公司及全體股東利益。由於二審尚未開庭，最終判決結果存在不確定性，公司將根據案件進展及時履行信息披露義務，並提醒投資者注意相關風險。&lt;/p&gt; 
&lt;p&gt;作為國內自主可控芯片領域的重要企業，龍芯中科此次維權行動引發行業關注。近年來，隨着國產芯片產業快速發展，企業對知識產權及名譽權的保護意識不斷提升。此次案件不僅涉及企業間的民事糾紛，更折射出國產芯片企業在市場競爭中對自身品牌形象和合法權益的重視。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366405</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366405</guid>
      <pubDate>Fri, 15 Aug 2025 07:05:22 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>京東小程序 JS API 倉頡改造實踐</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"&gt; 
 &lt;section data-tools="135 編輯器" data-id="143788" data-color="e3fcff" style="letter-spacing: 0.578px;margin-bottom: 0px;visibility: visible;" data-pm-slice="0 0 []"&gt; 
  &lt;section style="margin: 10px auto;visibility: visible;"&gt; 
   &lt;section style="padding: 15px;background-color: rgb(250, 250, 250);color: rgb(250, 250, 250);visibility: visible;" class="js_darkmode__0"&gt; 
    &lt;section data-autoskip="1" style="line-height: 1.75em;letter-spacing: 1.5px;font-size: 14px;background-color: transparent;visibility: visible;"&gt; 
     &lt;section data-tools="135 編輯器" data-id="134666" style="visibility: visible;"&gt; 
      &lt;section style="margin: 10px auto;text-align: center;visibility: visible;"&gt; 
       &lt;section hm_fix="410:186" style="display: flex;justify-content: center;align-items: center;visibility: visible;"&gt; 
        &lt;section style="margin-bottom: 8px;flex: 1 1 0%;background-image: linear-gradient(to right, rgba(253, 123, 119, 0) 0%, rgb(170, 170, 170) 100%);height: 2px;overflow: hidden;visibility: visible;text-align: left;" class="js_darkmode__bg__0 js_darkmode__1"&gt; 
         &lt;span leaf="" style="visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt; 
        &lt;/section&gt; 
        &lt;section data-brushtype="text" style="padding: 4px 1em;font-size: 16px;color: rgb(1, 1, 1);visibility: visible;margin-bottom: 8px;text-align: left;" class="js_darkmode__2"&gt; 
         &lt;span style="color: rgb(0, 0, 0);visibility: visible;" class="js_darkmode__3"&gt;&lt;strong style="visibility: visible;"&gt;&lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;本文導讀&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; 
        &lt;/section&gt; 
        &lt;section style="flex: 1 1 0%;background-image: linear-gradient(to left, rgba(253, 123, 119, 0) 0%, rgb(170, 170, 170) 100%);height: 2px;overflow: hidden;visibility: visible;margin-bottom: 8px;text-align: left;" class="js_darkmode__bg__1 js_darkmode__4"&gt; 
         &lt;span leaf="" style="visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt; 
        &lt;/section&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
     &lt;p style="line-height: 1.75em;visibility: visible;margin-bottom: 8px;text-align: left;"&gt;&lt;span style="color: rgb(0, 0, 0);text-indent: 0em;letter-spacing: 1px;visibility: visible;" class="js_darkmode__5"&gt;&lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;本文作者參與 2025 華為開發者大會，帶來分享《&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;京東+倉頡:高性能、跨平台鴻蒙應用開發實踐分享&lt;/span&gt;&lt;/span&gt;&lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;》。&lt;/span&gt;&lt;/span&gt;&lt;span leaf="" data-pm-slice="1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;margin-bottom: 16px; line-height: 1.75em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;&amp;quot;}]" style="visibility: visible;"&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;本次創新實踐為京東小程序團隊與華為鴻蒙突擊隊合作對京東小程序 API 調用過程進行解析，通過借力倉頡實現小程序性能提升和便捷的開發體驗。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;p style="line-height: 1.75em;visibility: visible;margin-bottom: 8px;text-align: left;"&gt;&lt;span leaf="" data-pm-slice="1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;margin-bottom: 16px; line-height: 1.75em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;&amp;quot;}]" style="visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;section style="margin-bottom: 8px;line-height: 1.75em;visibility: visible;text-align: left;"&gt; 
      &lt;span leaf="" data-pm-slice="1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;margin-bottom: 16px; line-height: 1.75em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;&amp;quot;}]" style="visibility: visible;"&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;歡迎一起交流討論！&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;visibility: visible;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;visibility: visible;"&gt; 
   &lt;section style="transform-style: preserve-3d;visibility: visible;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);visibility: visible;margin-bottom: 8px;" class="js_darkmode__11"&gt; 
     &lt;strong style="visibility: visible;"&gt;&lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;01&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);visibility: visible;"&gt; 
     &lt;section style="visibility: visible;margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong style="visibility: visible;"&gt;&lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;visibility: visible;text-align: left;"&gt; 
      &lt;strong style="visibility: visible;"&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);visibility: visible;" class="js_darkmode__12"&gt;&lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;背景介紹&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;visibility: visible;text-align: left;"&gt; 
      &lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;visibility: visible;text-align: left;"&gt; 
  &lt;span leaf="" style="visibility: visible;"&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;京東小程序容器是京東及其關聯 App 的重要組成部分，承載了多種內部和外部業務。其中近期熱門的模塊秒送外賣、以及常用的買菜、超市店鋪、奢侈品店鋪等均屬於小程序。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: left;visibility: visible;margin-bottom: 8px;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/07a3c4d3-1ded-4799-b94c-6533076e45c0.png" alt="圖片" class="rich_pages wxw-img" data-ratio="0.6947115384615384" data-s="300,640" data-type="png" data-w="832" style="width: 677px !important;height: auto !important;visibility: visible !important;" type="block" data-backw="578" data-backh="402" data-imgfileid="100029504" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;"&gt; 
   &lt;section style="transform-style: preserve-3d;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);margin-bottom: 8px;" class="js_darkmode__14"&gt; 
     &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;02&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);"&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__15"&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;小程序架構&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
      &lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__16"&gt;&lt;/span&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;京東鴻蒙版小程序框架整體如下所示：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/94e1030e-5f6d-4359-8c84-88e22e803550.png" alt="圖片" class="rich_pages wxw-img" data-ratio="0.6318537859007833" data-type="png" data-w="766" style="width: 677px !important;height: auto !important;visibility: visible !important;" data-backw="578" data-backh="365" data-imgfileid="100029505" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;小程序採用雙線程架構。即同時存在 JS 邏輯線程和 WebView 線程。其中 JS 邏輯線程 (簡稱 JS 線程) 負責運行 JS 引擎，執⾏業務邏輯；Webview 通常運行在 UI 主線程，主要包括頁面的渲染任務、響應交互事件併發送給 JS 線程。兩個線程可能會啓動 worker 子線程來輔助處理任務。 &amp;nbsp;JS Bridge 作為橋樑層，負責處理 JS API 的調用與派發。整體 JS API 派發邏輯由 Native 實現（C++）。當一個 JS &amp;nbsp;API 調用請求到來後，首先判斷該 API 是否有 Native 實現，如果沒有則調用 ArkTS 的派發邏輯來調用到原生 API 實現。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;"&gt; 
   &lt;section style="transform-style: preserve-3d;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);margin-bottom: 8px;" class="js_darkmode__19"&gt; 
     &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;03&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);"&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__20"&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;性能瓶頸分析&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
      &lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__21"&gt;&lt;/span&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;小程序頁面加載/活躍過程中存在大量的 JS API 的調用。通常由 JS 線程發起 API 調用，經過主線程執行後生成結果數據，再將結果返回。因此，會出現如下性能瓶頸點。 &amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;1. API 如 Storage（存儲）、Systeminfo（系統信息）和 Network（網絡請求）在啓動階段被調用數十次。集中的 API 調用導致在主線程上出現排隊情況，佔用大量主線程時間，無法及時處理 webview 任務。 &amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;2. 由於線程之間數據不共享，跨線程的數據傳遞需要序列化和反序列化操作，響應延遲增大。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;3. JS Bridge 在與原生交互時需要調用大量的 nAPI 接口，創建 nAPI 線程，處理效率較低，開發維護成本大。API 有數百個，如果全部使用 Native 處理多線程共享問題，開發維護成本高，可行性極低。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/8f6b290d-b616-45e7-9a30-d7efb23da596.png" alt="圖片" class="rich_pages wxw-img" data-ratio="0.5244215938303342" data-type="png" data-w="778" style="width: 677px !important;height: auto !important;visibility: visible !important;" data-backw="578" data-backh="303" data-imgfileid="100029507" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;"&gt; 
   &lt;section style="transform-style: preserve-3d;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);margin-bottom: 8px;" class="js_darkmode__26"&gt; 
     &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;04&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);"&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__27"&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;原生 JS API 調用過程拆解&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
      &lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__28"&gt;&lt;/span&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;本次選取京東小程序中執行頻率最高的 getSystemInfo API 為例，展開拆解一次 API 調用的詳細流程：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/67c2db13-9d0c-4b16-848d-71222b74ccbb.png" alt="圖片" class="rich_pages wxw-img" data-ratio="0.3629807692307692" data-type="png" data-w="832" style="width: 677px !important;height: auto !important;visibility: visible !important;" data-backw="578" data-backh="210" data-imgfileid="100029509" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;getSystemInfo 目前是由 ArkTS 實現。調用由 JS 線程提交給主線程，主線程啓用 taskpool 執行後再接受返回結果，等待過程中可以流水線執行下一個 API。可以看到單次 JS &amp;nbsp;API 調用會佔據主線程時間來處理。當 API 被頻繁調用時，主線程無法及時處理其他 webview 任務。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;"&gt; 
   &lt;section style="transform-style: preserve-3d;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);margin-bottom: 8px;" class="js_darkmode__31"&gt; 
     &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;05&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);"&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__32"&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;場景分析&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
      &lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__33"&gt;&lt;/span&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;對京東部分小程序場景採集 trace 分析。以某店鋪為例，該店鋪小程序在冷啓動過程約 2800ms，其中有 900ms-1000ms 的時間在 webview 任務中穿插着大量的 getSystemInfo &amp;nbsp; API 的調用。經過檢查代碼，雖然已經根據頁面 hashcode 緩存了該 API 的結果數據，但每次獲取緩存值仍需要佔據主線程時間，因此在該場景上可以進行倉頡 API 改造嘗試。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;"&gt; 
   &lt;section style="transform-style: preserve-3d;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);margin-bottom: 8px;" class="js_darkmode__35"&gt; 
     &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;06&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);"&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__36"&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;倉頡改造實踐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
      &lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__37"&gt;&lt;/span&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;倉頡的部分特性在該場景性能優化上起到了決定性作用，其中包括：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;1.作為鴻蒙系統官方語言之一，具備完善的鴻蒙系統的 API 能力，實現 1 比 1 改寫原生 API 的可行性&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;2.倉頡具備線程池能力。倉頡語言的 JS API 執行不佔用主線程時間。倉頡線程間具備天然的內存共享能力，省去序列化和反序列化開銷&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;3.倉頡具備高效的與 C 語言互操作的能力。C 語言與倉頡代碼互相調用只需要聲明和使用，代碼簡單，執行快，不需要調用 nAPI 協議接口&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;4.倉頡具備高效的與 ArkTS 互操作的能力，在需要時，可以獲取到 ArkTS 語言的 runtime，webview 等信息，保證 API 執行的邏輯正確性&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;使用倉頡改寫後的 JS API 執行流程如下圖：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/bc5c1a9f-ea19-4899-9521-31b920e776b2.png" alt="圖片" class="rich_pages wxw-img" data-ratio="0.7677419354838709" data-type="png" data-w="620" style="width: 677px !important;height: auto !important;visibility: visible !important;" data-backw="578" data-backh="444" data-imgfileid="100029510" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;本次改造在小程序架構上重點涉及到兩個模塊。在 JSBridge 中加入倉頡 API 的派發邏輯，和在 JS API 中加入倉頡實現的 JS API（getSystemInfo），如下圖：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/f1238dc0-85bf-496c-8949-86e4209514b7.png" alt="圖片" class="rich_pages wxw-img" data-ratio="0.822429906542056" data-type="png" data-w="642" style="width: 677px !important;height: auto !important;visibility: visible !important;" data-backw="578" data-backh="475" data-imgfileid="100029511" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;p style="letter-spacing: 0.578px;text-align: left;margin-bottom: 8px;"&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;"&gt; 
   &lt;section style="transform-style: preserve-3d;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);margin-bottom: 8px;" class="js_darkmode__45"&gt; 
     &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;07&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);"&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__46"&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;倉頡穿刺優化效果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;經過測試，倉頡改造後的 getSystemInfo 執行時間可縮短 50%+，且不佔用主線程時間。在某小程序上進行冷啓動端到端測試，啓動性能可提升 20%。 （約 500ms+）&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 24px;letter-spacing: 0.578px;margin-bottom: 0px;"&gt; 
  &lt;section style="margin: 10px auto;display: flex;justify-content: center;"&gt; 
   &lt;section style="transform-style: preserve-3d;"&gt; 
    &lt;section style="font-size: 48px;letter-spacing: 1.5px;color: rgb(234, 242, 255);font-style: oblique;text-align: left;transform: translateZ(5px);margin-bottom: 8px;" class="js_darkmode__48"&gt; 
     &lt;strong&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;08&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style="margin-top: -35px;display: flex;justify-content: center;align-items: center;transform: translateZ(10px);"&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;strong&gt;&lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__49"&gt;&lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;未來規劃與展望&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
      &lt;span style="font-size: 20px;color: rgb(0, 82, 217);" class="js_darkmode__50"&gt;&lt;/span&gt; 
     &lt;/section&gt; 
     &lt;section style="margin-bottom: 8px;text-align: left;"&gt; 
      &lt;span leaf=""&gt;&lt;span textstyle="" style="letter-spacing: normal;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;本次初步驗證證明瞭在小程序場景，倉頡具備高效性能和開發潛力。本次驗證也打造了倉頡 JS API 派發框架，未來基於此框架可以更快的擴展倉頡 JS API。計劃在以下方面進一步擴展驗證倉頡：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;1. 更多 API 的倉頡化：嘗試改造更多高頻調用的 JS API。並在京東近期更多熱門場景（如秒送外賣）驗證性能收益；&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;2. 倉頡併發能力： 基於倉頡的高併發能力，嘗試優化網絡模塊的性能，接入更多小程序；&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;3. 小程序其他階段倉頡化探索： 除了 JS API，探索小程序場景更多階段的倉頡優化；&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;4. 在新場景使用倉頡開發：利用倉頡的性能和安全優勢，將倉頡用於新模塊新功能的開發。倉頡的高併發能力在 AI、跨屏應用和高性能 Web 場景中具有廣闊前景；&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-bottom: 8px;line-height: 1.75em;text-align: left;"&gt; 
  &lt;span leaf=""&gt;&lt;span textstyle="" style="font-size: 15px;letter-spacing: normal;color: rgb(62, 62, 62);"&gt;5. 跨平台支持：倉頡支持 HarmonyOS、Android、iOS 和 PC 平台，未來將完善京東跨端通用能力，降低多平台開發的複雜性。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;margin-bottom: 8px;" data-pm-slice="0 0 []"&gt; 
  &lt;span style="font-size: 16px;letter-spacing: normal;"&gt;&lt;span leaf=""&gt;&lt;img alt="圖片" class="rich_pages wxw-img" data-imgfileid="100028809" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a95394ba-27b7-4076-869b-f9da0317c004.png" data-type="webp" data-w="396" style="pointer-events: initial;width: 185px !important;visibility: visible !important;height: auto !important;" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;margin-bottom: 8px;" data-pm-slice="0 0 []"&gt; 
  &lt;span style="font-size: 16px;letter-spacing: normal;"&gt;&lt;span leaf=""&gt;掃一掃，加入技術交流羣&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;hr style="border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);"&gt; 
 &lt;section style="text-align: left;margin-bottom: 0px;"&gt; 
  &lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style="display: none;"&gt; 
  &lt;mp-style-type data-value="3"&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color: #858585; font-size: 13px;"&gt;本文分享自微信公眾號 - 京東雲開發者（JDT_Developers）。&lt;br&gt;如有侵權，請聯繫 support@oschina.cn 刪除。&lt;br&gt;本文參與「&lt;a href="https://www.oschina.net/sharing-plan" target="_blank"&gt;OSC 源創計劃&lt;/a&gt;」，歡迎正在閲讀的你也加入，一起分享。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4090830/blog/18683569</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18683569</guid>
      <pubDate>Fri, 15 Aug 2025 06:58:22 GMT</pubDate>
      <author>京東雲開發者</author>
    </item>
    <item>
      <title>螞蟻發佈 ASearcher，面向搜索 Agent 的強化學習開源項目</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;螞蟻 AReaL 團隊近日發佈「ASearcher」，這是一個 Agentic RL（reinforcement learning，強化學習）方面的開源項目，可大規模異步 RL 解鎖 Agent 長程工具使用能力，使開發者能夠輕鬆且經濟高效地構建自己的高性能搜索 Agent。&lt;/p&gt; 
&lt;p&gt;項目地址：https://github.com/inclusionAI/ASearcher&lt;br&gt; 論文：https://arxiv.org/abs/2508.07976&lt;/p&gt; 
&lt;p&gt;據介紹，ASearcher 專為大規模在線強化學習（RL）訓練搜索 Agent 而設計，使命是推進搜索 Agent 達到專家級性能。&lt;/p&gt; 
&lt;p&gt;&lt;img height="455" src="https://static.oschina.net/uploads/space/2025/0815/144348_4qnK_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0815/144407_W1O2_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;ASearcher 主要有兩項核心貢獻：&lt;/p&gt; 
&lt;p&gt;1. 使用完全異步 RL 訓練（Fully Async RL）在訓練高效的同時讓 agent 學會長程工具使用（Long-Horizon Tool Use）。訓練過程中，基於 QwQ-32B 的 agent 能夠自然地學會更多的工具使用輪次和更多輸出 token，在 200 步之後學會高達 40 輪次的 tool use，並且生成 token 達到了 150k+。&lt;/p&gt; 
&lt;p&gt;2. 開源了一個用於構造高質量&amp;amp;高難度數據的 agent。Agent 通過注入外部事實（Fact Injection）以及對題目模糊化（fuzz）來合成問題，同時在每一步合成都進行了非常嚴格的檢驗來保證 quality &amp;amp; difficulty 檢驗。&lt;/p&gt; 
&lt;p&gt;詳情查看&amp;nbsp;&lt;em&gt;https://mp.weixin.qq.com/s/mzvjcksN1JbWzZv5bnCPvQ&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366396</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366396</guid>
      <pubDate>Wed, 13 Aug 2025 06:45:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>IDC：中國生成式 AI 相關網絡硬件支出將在 2028 年達到 330 億元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;人工智能應用在工作和生活場景中迅速普及，從企業業務決策到個人數字助理，各行業紛紛引入 AI 以提升效率和創新。IDC 統計，2024 下半年中國大模型商用落地日均 Tokens 消耗量增長近 10 倍，2024 年中國公有云大模型調用量累計 114.2 萬億 Tokens（不包含使用海外 MaaS 平台的調用量）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;生成式 AI 的快速發展不僅顯著提升了企業應用的智能化體驗與整體運營效率，同時也對底層數字基礎設施提出了全新且更高的要求。隨着數據中心內 Token 用量持續攀升激增，東西向流量大幅增長、通信能耗不斷加大，網絡正成為 AI 基礎設施的決定性瓶頸。400G-800G-1.6T 的網絡演進節奏顯著加速，傳統「先算力、後網絡」的升級邏輯已經失效。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;AI 服務提供商需要把網絡規劃前置，通過高帶寬、高可靠、低能耗的全棧創新，才能真正釋放 GPU 算力紅利，並在 AI 平台競爭中佔據領先位置。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2024 年，中國高端以太網（≥200G）端口出貨量突破 600 萬，未來將保持 45.6% 的複合增長率，2029 年中國高端以太網端口出貨量將超過 4300 萬個。IDC 預測，中國生成式 AI 相關網絡硬件支出將持續加速，從 2023 年的 65 億元，增加到 2028 年的 330 億元，複合增長率將達到 38.5%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;國家數據局此前公佈的數據顯示，2024 年初，中國日均 Token 的消耗量為 1 千億；截至今年 6 月底，日均 Token 消耗量已經突破 30 萬億，1 年半時間增長了 300 多倍。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366394</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366394</guid>
      <pubDate>Wed, 13 Aug 2025 06:36:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 高管：不排除在 ChatGPT 內插入廣告的可能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2Fnews%2F759140%2Fopenai-chatgpt-ads-nick-turley-decoder"&gt;根據 The Verge 的報道&lt;/a&gt;，ChatGPT 負責人 Nick Turley 在接受《Decoder》採訪時表示，OpenAI 不排除為 ChatGPT 添加廣告的可能性，認為 「保留選擇權是明智的」，但強調若引入廣告需 「深思熟慮且得體」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0815/143217_xTBc_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Nick Turley 提到，ChatGPT 本身可能並非適合廣告的產品，因其需深度契合用戶目標，但未來可能推出其他含廣告的產品。目前訂閲模式增長迅速且潛力巨大，2025 年 OpenAI 預計通過訂閲創收 127 億美元，是 2024 年 37 億美元的三倍多，但公司仍入不敷出，預計 2029 年實現現金流平衡。&lt;/p&gt; 
&lt;p&gt;ChatGPT 用戶已超 7 億，其中付費訂閲用戶 2000 萬（2024 年 4 月數據）。Nick Turley 認為大量免費用戶並非負擔，而是可轉化為付費用戶的潛在羣體。此外，OpenAI 正探索 「ChatGPT commerce」 項目，通過推薦產品獲取分成，且確保推薦不受 affiliate 收入影響，保持獨立性。&lt;/p&gt; 
&lt;p&gt;OpenAI CEO Sam Altman 對 ChatGPT 加廣告態度矛盾，曾稱其 「令人不安」 是 「最後手段」，後又表示 「並非完全反對」。而競爭對手 xAI（馬斯克旗下）則計劃在 Grok 中加入廣告。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366393</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366393</guid>
      <pubDate>Wed, 13 Aug 2025 06:32:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>編程新貴 Lovable 豪言 12 個月內 ARR 衝擊 10 億美元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;歐洲 AI 編程獨角獸 Lovable 正在展現驚人的增長野心。該公司 CEO Anton Osika 近日在彭博電視台訪談中透露，公司計劃在未來 12 個月內實現 10 億美元的年度經常性收入 (ARR)。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Osika 在週四的採訪中表示，Lovable 目前每月 ARR 增長至少 800 萬美元，展現出強勁的增長勢頭。根據公司今年夏天發佈的博客文章，Lovable 在實現首個 100 萬美元收入里程碑後僅用了 8 個月時間就突破了 1 億美元 ARR 大關，這一增長速度在科技行業中極為罕見。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;按照目前的增長軌跡，Osika 預計公司將在今年底達到 2. 5 億美元的 ARR。如果能夠維持當前的月度增長速度，Lovable 確實有望在 2025 年底前實現 10 億美元 ARR 的宏偉目標。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;成立於 2023 年的 Lovable 專注於 AI 驅動的編程工具開發，在短短兩年內就成為了歐洲 AI 領域的明星企業。今年夏天，該公司在 A 輪融資中籌集了 2 億美元，估值達到 18 億美元，充分展現了投資者對其商業模式和增長前景的信心。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;這家編程工具初創公司的快速崛起反映了當前市場對 AI 編程助手的巨大需求。隨着軟件開發行業對效率提升的迫切需要，以及 AI 技術在代碼生成和編程輔助方面的不斷進步，像 Lovable 這樣的平台正在獲得越來越多開發者和企業客戶的青睞。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Lovable 的增長速度在 SaaS(軟件即服務) 行業中屬於頂尖水平。通常情況下，企業級軟件公司從 0 到 1 億美元 ARR 需要數年時間，而 Lovable 在不到一年的時間內就完成了這一跨越，顯示出 AI 編程工具市場的巨大潛力和公司產品的強大市場吸引力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;如果 Lovable 能夠實現其 10 億美元 ARR 的目標，這將使其成為歐洲增長最快的 AI 公司之一，也將進一步鞏固其在全球 AI 編程工具市場中的領先地位。不過，維持如此高速的增長並非易事，公司需要持續創新產品功能，擴大市場份額，同時應對日益激烈的競爭環境。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;當前，AI 編程助手市場競爭日趨激烈，包括 GitHub Copilot、OpenAI 的編程工具以及其他眾多競爭對手都在爭奪市場份額。Lovable 能否在這一競爭激烈的環境中持續保持高增長率，將是決定其能否實現宏偉目標的關鍵因素。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;對於整個 AI 編程工具行業而言，Lovable 的成功案例也為其他初創公司提供了寶貴的參考。它證明瞭在合適的市場時機和強大的產品能力支撐下，新興 AI 公司確實有可能實現超常規的增長速度。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366383</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366383</guid>
      <pubDate>Wed, 13 Aug 2025 05:53:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>2025 年最值得關注的三款 AI 面試工具：差異化優勢與行業應用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:left"&gt;在企業招聘場景中,如何從海量候選人中精準識別適配人才、保障評估過程的公平性與一致性、在提升效率的同時兼顧質量,是當前人才競爭環境下企業普遍面臨的核心挑戰。本文聚焦當前市場上最具代表性的三款 AI 面試工具,解析其通過技術創新破解招聘痛點的路徑,為不同規模、不同行業的企業提供差異化解決方案參考。&lt;/p&gt; 
&lt;h2&gt;獵聘·Doris:全場景覆蓋的智能化面試標杆&lt;/h2&gt; 
&lt;p style="color:#000000; text-align:left"&gt;作為獵聘自主研發的 AI 面試產品,獵聘·Doris 已成為 2025 年企業招聘的"新標配"。這款工具深度融合了大語言模型、語音識別和自然語言處理等前沿技術,構建了高效、智能且標準化的面試解決方案。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;核心優勢&lt;/strong&gt;:&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;1、冰山模型深度評估體系:獵聘·Doris 覆蓋冰山模型 7 個層級的 140+評估維度,從顯性的語言表達、專業能力到隱性的抗壓能力、團隊協作等,全方位評估候選人的綜合素質。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;2、標準化評分機制:獵聘·Doris 對每個評估維度設定了細緻的行為評分標準,使 AI 根據每個崗位的勝任力模型對候選人進行精準評估,確保評估結果的準確性和公正性。根據獵聘官方的數據顯示,獵聘·Doris 的面試評價與資深面試官評分一致性超 95%,極大的減少了人為主觀偏差。 &amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;3、智能對話:獵聘·Doris 具備觀察、記憶、思考、反饋等先進能力,能在面試中像真實面試官一樣,與求職者進行多輪智能對話,大大提升面試體驗。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;4、智能防作弊系統:通過人臉識別、語音分析、行為監測等技術,獵聘·Doris 的作弊檢測準確率高達 95% 以上。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;5、全場景適用性:從大規模校招到藍領用工,從人才晉升評估、試用期評估到人才盤點,獵聘·Doris 能夠適應不同規模、不同行業的企業需求。&lt;/p&gt; 
&lt;h2&gt;近嶼智能 AI 得賢招聘官:擬真交互與科學評估的完美結合&lt;/h2&gt; 
&lt;p style="color:#000000; text-align:left"&gt;上海近嶼智能科技有限公司推出的 AI 得賢招聘官是市場上低調但技術實力雄厚的一款 AI 面試工具。其 6.3 版本的發佈,標誌着該產品在擬真交互以及評估準確性上取得了階段性進步。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;核心優勢&lt;/strong&gt;:&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;1、完全自然化的面試流程:6.3 版本實現了面試流程的自然化流轉,系統能夠實時對候選人的語音語調、表情動作以及語義邏輯展開分析。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;2、毫秒級脣音同步技術:產品團隊對虛擬面試官的口型同步算法進行了深度優化,使得脣部運動和語音節奏的匹配達到了毫秒級。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;3、三項核心評估能力突破:6.3 版本強化了三項關鍵評估能力:(1) 通過語義分析把握候選人回答背後的潛層邏輯;(2) 運用多維度勝任力映射模型;(3) 依據實時生成的個性化追問策略。&lt;/p&gt; 
&lt;h2&gt;Blindpad:匿名化 AI 面試,減少招聘偏見&lt;/h2&gt; 
&lt;p style="color:#000000; text-align:left"&gt;Blindpad 是一款專注於減少招聘中無意識偏見的 AI 面試工具,通過半匿名化處理確保評估更加公平。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;核心優勢&lt;/strong&gt;:&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;1、半匿名化語音處理:通過音調調整,模糊性別特徵,減少面試中的無意識偏見。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;2、點對點匿名互動:採用 WebRTC 技術,確保參與者身份保密。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;3、簡化流程,聚焦能力:避免複雜註冊,直接評估候選人技能。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;在 AI 技術深度賦能招聘領域的背景下,選擇適配的面試工具成為企業人才戰略的重要組成部分。其中,獵聘·Doris 憑藉其全場景覆蓋能力、冰山模型深度評估體系及高達 95% 以上的防作弊準確率,成為行業標杆,既滿足了企業大規模招聘的需求,又通過智能追問等技術實現了對候選人潛能的深度精準挖掘。為追求招聘效率與質量平衡的企業提供可靠選擇。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366364</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366364</guid>
      <pubDate>Wed, 13 Aug 2025 04:19:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙 NEXT 安全訪問新範式：系統 Picker 與安全控件解析</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-bokeyuan%26ha_sourceId%3D89000444" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-bokeyuan&amp;amp;ha_sourceId=89000444&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在當今數字化時代，用戶隱私和數據安全備受關注，鴻蒙 NEXT 系統憑藉其創新的安全訪問機制，為用戶提供了更安全、便捷的操作體驗。今天，我們將深入探討鴻蒙 NEXT 的安全訪問機制，重點解析系統 Picker 和安全控件如何實現精準化權限管控。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、鴻蒙 NEXT 安全訪問機制概述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;鴻蒙 NEXT 的安全訪問機制旨在改變傳統應用獲取用戶數據的方式，從粗放式管理轉變為精細化控制，確保用戶隱私得到充分保護。系統通過引入系統 Picker 和安全控件等機制，讓用戶能夠更加精準地掌控應用對敏感數據的訪問權限，實現按需授權，使數據與應用之間的交互處於受控狀態。這就好比為用戶數據設置了一道道智能關卡，只有在用戶明確授權的情況下，應用才能獲取相應的數據資源。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、系統 Picker：便捷的資源選擇與權限隔離&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）系統 Picker 的概念與功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;系統 Picker 是鴻蒙 NEXT 提供的一種系統級組件，由獨立進程實現，其功能類似於一個智能的資源選擇器。它允許應用在不直接獲取相關權限的情況下，通過用戶交互的方式選擇特定的資源，如文件、照片、聯繫人等。當應用需要訪問這些資源時，只需拉起系統 Picker，由用戶在 Picker 界面上進行選擇操作，應用即可獲取用戶選擇的資源結果，而無需申請讀取整個資源庫的權限。這就像是在一個大型圖書館中，應用不需要獲取所有書籍的借閲權限，只需通過圖書管理員（系統 Picker）幫助用戶挑選出所需的書籍（資源）即可。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）使用系統 Picker 選擇不同資源的方法&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;選擇用戶文件（FilePicker）&lt;/strong&gt;&lt;br&gt; 當應用需要獲取用戶文件時，可以使用 FilePicker。例如，一款文檔編輯應用需要打開用戶指定的文檔進行編輯，它可以通過以下方式使用 FilePicker：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="288" src="https://oscimg.oschina.net/oscnet//aab3a1d6d19da4bf549486bacb65be69.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在上述代碼中，通過調用 filePicker.showOpenDialog() 方法，彈出文件選擇器對話框，用戶可以在對話框中選擇符合指定過濾器的文件，應用獲取到用戶選擇的文件路徑（fileUri）後，即可進行後續的文件操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;選擇照片（PhotoViewPicker）&lt;/strong&gt;&lt;br&gt; 對於需要獲取用戶照片的應用，如圖片編輯應用或社交分享應用，可以使用 PhotoViewPicker。以下是一個簡單的示例：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="171" src="https://oscimg.oschina.net/oscnet//0094eb6dee4ae8133a5363affc9f8081.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過調用 photoViewPicker.showPhotoPicker() 方法，應用可以拉起照片選擇器，用戶選擇照片後，應用獲取照片的路徑（photoUri）用於後續處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;選擇聯繫人（聯繫人 Picker）&lt;/strong&gt;&lt;br&gt; 當應用需要獲取聯繫人信息時，例如通訊類應用添加聯繫人或發送消息時選擇收件人，可以使用聯繫人 Picker。示例代碼如下：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 3.png" height="170" src="https://oscimg.oschina.net/oscnet//d9291fcc0ef99be5bcc855861a6ee301.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;調用 contactPicker.showContactPicker() 方法後，用戶可以在聯繫人選擇器中選擇所需聯繫人，應用獲取聯繫人對象（contact）並進行相應操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、安全控件：臨時授權的得力助手&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）安全控件的概念與種類&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;安全控件是鴻蒙 NEXT 提供的一組特殊的 ArkUI 組件，它們以一種直觀、便捷的方式融入應用界面，實現用戶點擊即許可的授權模式。目前，鴻蒙 NEXT 提供了三種主要的安全控件：粘貼控件（PasteButton）、保存控件（SaveButton）和位置控件（LocationButton）。這些安全控件為用戶提供了更精細的權限控制，使應用在獲取特定權限時更加靈活和安全。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）三種安全控件的功能與使用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;粘貼控件（PasteButton）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;功能：&lt;/strong&gt;粘貼控件用於簡化應用讀取剪貼板數據的操作。當應用集成粘貼控件後，用戶點擊該控件，應用可以在無彈窗提示的情況下讀取剪貼板數據，提供了更加流暢的用戶體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;使用場景：&lt;/strong&gt;適用於各種需要讀取剪貼板數據的場景，如在輸入框中快速粘貼複製的文本內容。例如，在登錄界面，用戶可以方便地粘貼賬號或密碼，而無需繁瑣的長按輸入框等操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;保存控件（SaveButton）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;功能：&lt;/strong&gt;保存控件允許用戶通過點擊按鈕臨時獲取存儲權限，將文件保存到媒體庫。與傳統的保存方式不同，它無需用戶手動選擇保存路徑，直接將文件保存到指定媒體庫路徑，操作更加快捷。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;使用場景：&lt;/strong&gt;常用於需要保存文件到媒體庫的場景，如保存圖片、視頻等。例如，在拍照應用中，用戶拍攝照片後，點擊保存控件即可將照片快速保存到相冊中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;位置控件（LocationButton）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;功能：&lt;/strong&gt;位置控件使用戶能夠明確知曉應用獲取位置信息的意圖。當用戶點擊該控件時，無論應用是否已申請精準定位權限，都能在本次前台期間獲得精準定位授權，調用位置服務獲取位置信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&lt;strong&gt;使用場景：&lt;/strong&gt;適用於非強位置關聯應用在部分前台場景需要使用位置信息的情況，如定位城市、打卡、分享位置等。例如，在旅遊類應用中，用戶可以點擊位置控件分享當前所在位置給朋友。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）安全控件使用場景表格展示&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 4.png" height="141" src="https://oscimg.oschina.net/oscnet//7691b322161e3537b3977292450b16cb.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（四）示例代碼：使用保存控件保存照片到媒體庫&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以下是一個使用保存控件保存照片到媒體庫的示例代碼：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 5.png" height="341" src="https://oscimg.oschina.net/oscnet//4fc4445def9b32f41ab23b0d05de57c1.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 6.png" height="221" src="https://oscimg.oschina.net/oscnet//4a95c359a1b03d86e46f69b77840d20f.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 7.png" height="183" src="https://oscimg.oschina.net/oscnet//e0d72356aed86c0f4c8b0f4f82741f67.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在上述代碼中，首先通過 photoAccessHelper 創建了一個圖片文件的資源路徑（uri），然後使用 fileIo 打開文件並準備寫入數據。接着獲取了一個圖片資源（這裏假設為$r('app.media.startIcon')，實際應用中應替換為真實圖片），並將其寫入到媒體庫文件中。最後，在 SaveButton 的 onClick 事件處理函數中，當用戶點擊保存控件且授權成功時，調用 savePhotoToGallery() 函數將照片保存到媒體庫，並根據保存結果顯示相應的提示信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;總之，鴻蒙 NEXT 的安全訪問機制通過系統 Picker 和安全控件為應用提供了更加安全、便捷的資源訪問方式。我們可以根據應用的實際需求，合理運用這些機制，實現精準化權限管控，提升用戶體驗的同時保護用戶隱私。希望本文能夠幫助各位同仁更好地理解和運用鴻蒙 NEXT 的安全訪問機制，為用戶打造更加安全可靠的應用。（轉載自 51CTO，作者：SameX）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366363</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366363</guid>
      <pubDate>Wed, 13 Aug 2025 04:19:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>HarmonyOS NEXT 分佈式管理核心功能解析：網絡服務和數據傳輸的實現二</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-bokeyuan%26ha_sourceId%3D89000444" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-bokeyuan&amp;amp;ha_sourceId=89000444&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在 HarmonyOS NEXT 的分佈式管理體系中，網絡服務和數據傳輸是實現設備互聯互通、協同工作的關鍵環節。今天，咱們就深入探究一下這其中的核心功能，看看它們是如何為分佈式應用注入強大動力的。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、HTTP 數據傳輸：構建高效信息通道&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）豐富的請求方法支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;HarmonyOS NEXT 在 HTTP 數據傳輸方面提供了全面的支持，涵蓋了常見的 GET、POST、OPTIONS、HEAD、PUT、DELETE、TRACE、CONNECT 等請求方法。這就像給開發者提供了一個多功能的工具箱，能夠靈活應對各種數據交互場景。&lt;br&gt; GET 方法就像是一個信息查詢員，主要用於從服務器獲取數據，而且不會對服務器狀態產生影響。比如，在一個新聞資訊類應用中，當用戶瀏覽新聞列表時，應用使用 GET 方法向服務器請求新聞數據，服務器將數據返回給應用展示給用戶。&lt;br&gt; POST 方法則像是一個數據提交員，用於向服務器提交數據。例如，在電商應用中，用戶下單購買商品時，應用通過 POST 方法將訂單信息發送到服務器進行處理。&lt;br&gt; PUT 和 DELETE 方法分別承擔着更新和刪除服務器資源的重任。以文件管理類應用為例，當用戶修改文件內容後，應用使用 PUT 方法將更新後的文件數據上傳到服務器；若用戶要刪除某個文件，就會調用 DELETE 方法通知服務器刪除相應資源。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）詳細的使用步驟與示例&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;下面通過一個實際案例來詳細説明 HTTP 數據傳輸的使用過程。假設我們要開發一個在線音樂播放應用，需要從服務器獲取音樂播放列表。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;導入所需模塊&lt;br&gt; 首先，從@kit.NetworkKit 中導入 http 命名空間，這是使用 HTTP 相關功能的關鍵一步。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 1.png" height="26" src="https://oscimg.oschina.net/oscnet//eaca71320e21f83ad0c9934ac90636d9.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;創建 HTTP 請求對象&lt;br&gt; 使用 createHttp() 方法創建一個 HttpRequest 對象，這個對象就像是一個請求的指揮官，後續的請求操作都將圍繞它展開。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 2.png" height="17" src="https://oscimg.oschina.net/oscnet//b5ea82f80ca8e3ad82bbeaa6fe23202c.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;訂閲響應頭事件（可選）&lt;br&gt; 如果需要在接收到響應頭時獲取相關信息，可以訂閲 headersReceive 事件。例如，我們可以在這個事件中獲取服務器返回的一些元數據信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 3.png" height="39" src="https://oscimg.oschina.net/oscnet//563326f8c0529262af4c003d7f8353f5.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;發起 HTTP 請求&lt;br&gt; 調用 request() 方法，傳入請求的 URL 地址和其他必要參數，正式發起 HTTP 網絡請求。在我們的音樂播放應用中，假設服務器提供了獲取播放列表的接口，地址為"https://api.music.com/playlist"。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 4.png" height="390" src="https://oscimg.oschina.net/oscnet//c3a1d2897e0c2fa8b1cfcdbd4c16b785.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在這個請求過程中，我們可以根據服務器的接口要求，靈活設置請求頭字段。比如，如果服務器需要身份驗證，我們可以在 header 中添加相應的認證信息。對於 POST 請求，還可以在 extraData 字段中傳遞請求體內容，如用戶上傳的評論數據等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）錯誤處理與最佳實踐&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在 HTTP 數據傳輸過程中，難免會遇到各種問題，如網絡不穩定、服務器故障等。因此，有效的錯誤處理機制不可或缺。&lt;br&gt; 當請求失敗時，request() 方法的回調函數會返回一個 BusinessError 對象。我們可以通過檢查這個對象的 code 屬性來判斷錯誤類型，並採取相應的應對措施。例如，如果 code 為 401，表示權限不足，我們可以提示用戶檢查權限設置或引導用戶重新登錄；如果是 404，則可能是請求的資源不存在，我們可以給用戶一個友好的提示。&lt;br&gt; 另外，為了提高應用的性能和穩定性，還有一些最佳實踐值得注意。在完成請求後，一定要及時調用 destroy() 方法銷燬請求對象，避免資源泄漏。同時，合理設置超時時間，避免長時間等待無響應的請求，影響用戶體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、網絡服務管理：駕馭多網絡連接的智慧中樞&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）多網絡連接管理的強大功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在分佈式環境中，設備往往會面臨多種網絡連接選擇，如 WiFi、蜂窩網絡等。HarmonyOS NEXT 的網絡服務管理提供了一系列強大的功能來應對這種複雜情況。&lt;br&gt; 網絡連接優先級管理功能允許開發者根據應用的具體需求，為不同的網絡連接設置優先級。比如，對於視頻直播類應用，為了保證直播的流暢性，開發者可以將 WiFi 網絡設置為高優先級。當設備同時連接 WiFi 和蜂窩網絡時，應用會優先使用 WiFi 進行數據傳輸；一旦 WiFi 信號不穩定或中斷，應用可以自動切換到蜂窩網絡，確保直播不會中斷，就像給應用配備了一個智能的網絡切換器。&lt;br&gt; 網絡質量評估功能則像是一個網絡狀況監測儀，能夠實時監測網絡的各項指標，如網絡延遲、帶寬等。通過這些信息，開發者可以更好地瞭解網絡狀況，做出更明智的決策。例如，在一個在線遊戲應用中，如果檢測到網絡延遲過高，開發者可以調整遊戲的畫面質量或數據傳輸策略，減少不必要的數據傳輸，以保證遊戲的流暢性，提升玩家的遊戲體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）網絡狀態檢測與事件驅動機制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;為了讓應用能夠及時響應網絡狀態的變化，HarmonyOS NEXT 提供了高效的網絡狀態檢測機制，並支持訂閲網絡狀態變化事件。&lt;br&gt; 開發者可以使用 hasDefaultNet() 方法快速檢查默認數據網絡是否處於激活狀態，從而判斷設備是否具備網絡連接能力。例如，在應用啓動時，通過這個方法可以確定設備是否能夠正常訪問網絡資源，如果沒有網絡連接，可以提示用戶檢查網絡設置。&lt;br&gt; getDefaultNet() 和 getAllNets() 方法則可以獲取默認網絡或所有連接狀態的網絡信息。這對於需要根據網絡類型或網絡能力進行不同操作的應用非常有用。比如，一個文件下載應用可以根據當前網絡類型（是 WiFi 還是蜂窩網絡）來決定是否允許用戶下載大文件，以避免用戶在使用蜂窩網絡時產生高額流量費用。&lt;br&gt; 通過訂閲 netAvailable、netUnavailable 等事件，應用能夠在網絡狀態發生變化時立即得到通知並做出相應處理。例如，在一個社交應用中，當設備從無網絡狀態變為有網絡狀態時，應用可以自動刷新消息列表，獲取最新的聊天記錄和動態，讓用戶能夠及時瞭解社交信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）示例代碼展示網絡管理實戰&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以下是一個簡單的示例代碼，演示如何在實際應用中實現網絡連接管理和狀態檢測功能。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;檢查默認網絡狀態&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 5.png" height="157" src="https://oscimg.oschina.net/oscnet//cfdc756448d9bfd37a7f01c734764acb.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&lt;strong&gt;&amp;nbsp;獲取默認網絡信息&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 6.png" height="144" src="https://oscimg.oschina.net/oscnet//79fbdb741f8e90dd3757ed83349eaeb1.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;訂閲網絡狀態變化事件&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 7.png" height="250" src="https://oscimg.oschina.net/oscnet//13c067ed61e20155750bf153fe2c9ed0.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、支持的網絡請求方法與常見傳輸模式&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="圖片 8.png" height="367" src="https://oscimg.oschina.net/oscnet//d173268ea9ad70f83c98dccce6a03664.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、提高數據傳輸效率的建議&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）優化請求策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;合併請求&lt;br&gt; 儘量將多個相關的小請求合併為一個大請求，減少網絡請求的開銷。例如，在一個電商應用中，如果需要同時獲取商品的詳情、評論和推薦商品信息，可以將這三個請求合併為一個請求，一次性從服務器獲取所有數據。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;延遲加載&lt;br&gt; 對於一些非關鍵數據，採用延遲加載策略。例如，在一個圖片展示應用中，當用戶瀏覽圖片列表時，先只加載當前可見區域的圖片，當用戶滾動列表查看更多圖片時，再加載後續圖片，避免一次性加載大量圖片導致的網絡擁堵和性能下降。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）數據處理優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;數據壓縮&lt;br&gt; 在傳輸數據前，對數據進行壓縮處理，減少數據量，提高傳輸速度。例如，對於文本數據，可以使用 gzip 等壓縮算法進行壓縮。在服務器端對數據進行壓縮後傳輸，在客戶端接收到數據後再進行解壓處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;數據緩存&lt;br&gt; 合理利用緩存機制，將經常訪問的數據緩存到本地。例如，在一個新聞應用中，將新聞內容緩存到本地，當用戶再次查看已緩存的新聞時，直接從本地讀取數據，無需再次從服務器請求，減少網絡流量和響應時間。&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）網絡配置優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;選擇合適的網絡連接&lt;br&gt; 根據應用的需求和網絡狀況，選擇合適的網絡連接。例如，在有 WiFi 的環境下，優先使用 WiFi 網絡進行數據傳輸，因為 WiFi 通常具有更高的帶寬和更穩定的連接；當 WiFi 不可用時，再切換到蜂窩網絡。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;優化網絡超時設置&lt;br&gt; 合理設置網絡請求的超時時間，避免長時間等待無響應的請求。對於一些對實時性要求較高的請求，如在線遊戲中的操作請求，可以設置較短的超時時間；而對於一些不太緊急的請求，如後台數據同步，可以適當延長超時時間。&lt;br&gt; 通過以上對 HarmonyOS NEXT 分佈式管理中網絡服務和數據傳輸功能的深入剖析，相信開發者們能夠更加熟練地運用這些功能，打造出性能卓越、用戶體驗良好的分佈式應用。在實際開發過程中，不斷嘗試和優化這些策略，充分發揮 HarmonyOS NEXT 的強大功能，為用戶帶來更加高效、流暢的分佈式應用體驗。如果大家在開發過程中有任何疑問或心得，歡迎在技術社區中交流分享哦！讓我們一起共同進步，探索更多分佈式開發的奧祕！哈哈，加油吧，各位開發者小夥伴們！（轉載自 51CTO，作者：SameX）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366362</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366362</guid>
      <pubDate>Wed, 13 Aug 2025 04:19:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
  </channel>
</rss>
