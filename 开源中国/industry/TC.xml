<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 繁體中文（台灣）</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 13 Sep 2025 02:40:16 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>重塑研發組織形態：從「中心軟件工廠」到「移動軟件工廠」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;數字化轉型的加速，讓軟件研發從幕後走到前台，成為組織創新和產業升級的關鍵引擎。無論是科研攻關、產業製造，還是信息基礎設施建設，軟件都已經滲透到最核心的環節。 然而，在現實環境中，研發並非總是發生在高速網絡與開放環境下。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;有時，它需要在&lt;strong&gt;嚴格隔離的網絡&lt;/strong&gt;中完成；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;有時，它需要跨越地域，在&lt;strong&gt;多團隊協作&lt;/strong&gt;中推進；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;有時，它要面對&lt;strong&gt;安全與合規&lt;/strong&gt;的高壓要求，容不得半點鬆懈。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這就是今天的研發新常態：複雜、分佈、受限，卻又必須高效、統一、可控。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;行業挑戰：研發必須跨越的三重門檻&lt;/h2&gt; 
&lt;p&gt;面對這樣的新常態，研發組織普遍遭遇三道門檻：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;協同門檻&lt;/strong&gt;：不同地域、不同團隊之間，工具鏈與流程標準不一致，導致研發成果常常無法順暢對接。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;網絡門檻&lt;/strong&gt;：在斷網或弱網的條件下，環境一致、基線相同、依賴拉取、製品共享、版本同步都成了奢望。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;合規門檻&lt;/strong&gt;：即使是短期的現場研發，也必須滿足嚴格的標準與安全要求，否則創新成果難以落地。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這三道門檻，幾乎成了所有組織共同面對的困境。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;新形態的亮相：中心與移動軟件工廠&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/185857_1Zh5_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在這樣的背景下，軟件工廠的形態正在發生演進。&lt;/p&gt; 
&lt;p&gt;Gitee 帶來了一個新的答案：&lt;strong&gt;中心軟件工廠與移動軟件工廠的雙重驅動模式&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;它不是簡單的功能疊加，而是研發組織能力的一次重塑：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;中心軟件工廠&lt;/strong&gt;：承載統一的研發基線與標準，形成高效、安全、合規的研發中心；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;移動軟件工廠&lt;/strong&gt;：作為靈活的延伸，將研發能力帶到任何需要的地方，讓創新不再受限。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;中心軟件工廠：標準的承載者&lt;/h2&gt; 
&lt;p&gt;在中心軟件工廠裏，研發流程被整體化、規範化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;統一的代碼管理與版本基線；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;標準化的流水線與構建環境；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安全可控的製品倉庫與掃描規則；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全局適配的權限與合規策略。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/185923_8uvl_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;它是研發的「大本營」，確保所有成果都有跡可循、有規可依。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;移動軟件工廠：靈活的延伸者&lt;/h2&gt; 
&lt;p&gt;移動軟件工廠的使命，是讓研發能力突破環境的限制。&lt;/p&gt; 
&lt;p&gt;它並不是「縮減版」，而是&lt;strong&gt;完整工廠能力的便攜延伸&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;攜帶基線&lt;/strong&gt;：將中心工廠中經過驗證的基線，帶到斷網或弱網的現場；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;獨立運行&lt;/strong&gt;：在隔離條件下完成開發、構建與測試；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;成果回傳&lt;/strong&gt;：生成資產包，回傳中心工廠，完成入庫、複用與追蹤；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;快速部署&lt;/strong&gt;：無需長期建設，即插即用，滿足現場研發需求。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;一句話概括：移動軟件工廠讓研發隨時隨地發生，同時與中心保持標準一致。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/185946_9FIg_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;場景化小故事&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;隔離環境中的創新&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在一處無法連接外部網絡的現場，團隊依然能夠基於移動工廠的基線順利開發，研發成果在返回中心後快速入庫，形成統一管理。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;弱網條件下的交付&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在網絡條件不足的地區，移動工廠攜帶所需的依賴和製品，避免頻繁的遠程請求。研發節奏不再因網絡波動而停滯。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;跨組織的協作&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在大型項目中，不同組織以中心工廠為標準，各自研發成果通過移動工廠快速接入與同步，協作效率顯著提升。&lt;/p&gt; 
&lt;p&gt;這些故事有一個共同點：&lt;strong&gt;研發不再因環境受限而止步&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/190005_a74I_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;雙工廠模式的價值&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;效率不受限&lt;/strong&gt;：研發團隊可以在任何環境中持續迭代，項目進度更有保障。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;標準不走樣&lt;/strong&gt;：中心工廠統一的基線與規則，讓所有研發成果始終符合合規與質量要求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;擴展不昂貴&lt;/strong&gt;：移動工廠以低成本實現靈活部署，避免重複建設與資源浪費。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;成果可複用&lt;/strong&gt;：通過資產回傳機制，現場研發的成果也能納入中心，成為可追溯、可檢索、可複用的知識資產。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;這不僅僅是一種工具組合，而是一種新的研發組織能力。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;展望：研發的新未來&lt;/h2&gt; 
&lt;p&gt;中心與移動雙工廠模式，正在成為下一代軟件研發體系的關鍵基石。 讓研發在複雜環境中依然順暢，讓創新在任何場景下都能發生。 未來，無論研發場景如何變化，這一模式都將持續釋放價值：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;讓效率與合規不再對立，而是並行；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;讓組織在變化的環境中，依然保持穩健與敏捷；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;讓創新真正隨時隨地、無處不在。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;Gitee DevSecOps 的現代化研發生態&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Gitee DevSecOps 是一站式國產化研發與交付平台，集成了代碼託管（Code）、項目協作（Team）、持續集成（CI）、持續部署（CD）、代碼安全（Scan）、數據洞察（Insight）等多項能力，致力於打造具備全生命週期管控能力的現代軟件工廠。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0523/174619_MpFL_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;平台設計充分考慮關鍵領域行業對安全性、可控性、合規性的極高要求，具備以下核心特徵：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;國產化適配與私有化部署能力：全面兼容國產操作系統與基礎設施，支持靈活部署於內網環境，保障數據主權；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;全流程 DevSecOps 管控體系：代碼從提交、審核、構建、掃描、部署到發佈全流程可視、可追溯、安全可控；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;模塊化產品結構：各能力模塊（如 Code、Team、Repo、Pipe、Scan、Insight 等）可靈活組合、漸進集成，適配多樣化團隊與流程要求；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;深度可觀測與度量體系：內置研發效能度量與數據洞察引擎，支撐管理者宏觀掌控項目態勢與交付健康度。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="162046_MD15_2720166.png" src="https://static.oschina.net/uploads/space/2025/0516/162046_MD15_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在多個國家級重大項目與關鍵領域單位落地實踐中，Gitee DevSecOps 已成為構建「自主、可控、高效、安全」的軟件工程體系的重要基石。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-825957ffbed1798ea7b6a37079fd6c99d18.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371860</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371860</guid>
      <pubDate>Thu, 11 Sep 2025 11:00:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>微軟正加大投資訓練自己的人工智能模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;微軟正在進行重大的投資，以增強其用於訓練自主 AI 模型的服務器能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="334" src="https://oscimg.oschina.net/oscnet/up-85c73e1b3777c036f3526be295fc3e499f7.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;微軟 AI 負責人穆斯塔法・蘇萊曼在公司內部會議上表示，微軟正在為未來的前沿模型進行 「顯著的投資」。他指出：「我們應該具備內部構建&lt;span&gt;世界級&lt;/span&gt;前沿模型的能力，涵蓋各種規模的模型，但在必要時也應理性地使用其他模型。」 這一戰略顯示出微軟的決心，希望在 AI 領域與 Meta、谷歌及 xAI 等公司並肩競爭。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;據悉，微軟目前正在建設自己的計算集羣。目前，MAI-1-preview 模型僅在 15000 個 H100GPU 上進行訓練，這在整體看來仍然是一個相對較小的集羣。蘇萊曼提到，微軟計劃訓練的模型集羣規模將是目前的 「六到十倍」，以增強其在 AI 研發中的實力。他表示:「還有很多工作要做，但邁出了&lt;span&gt;第一&lt;/span&gt;步，這很好。」&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在同一場會議上，微軟首席執行官薩提亞・納德拉也表達了他對未來模型能力建設的期待。他強調，微軟將 「&lt;span&gt;絕對&lt;/span&gt;支持多種模型」 的應用，並以 GitHub Copilot 為例，説明該戰略的成功。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，微軟還計劃在即將推出的 Microsoft365 中引入 Anthropic 的 AI 模型。據《信息時報》報道，Microsoft365Copilot 將 「部分由 Anthropic 模型驅動」，因為這些模型在 Excel 和 PowerPoint 的性能上超過了 OpenAI。這表明微軟正在積極探索各種合作，以提升其產品的智能化水平。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371856</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371856</guid>
      <pubDate>Thu, 11 Sep 2025 10:30:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>JuiceFS on Windows: 首個 Beta 版的探索與優化之路</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;在近期發佈的 JuiceFS 社區版 1.3 和企業版 5.2 中，我們對 Windows 客戶端進行了大量的優化工作。在早期版本中，JuiceFS 也嘗試支持 Windows 平台，但是在使用體驗和穩定性方面存在諸多問題，無法達到一個穩定的可用狀態。&lt;/p&gt; 
&lt;p&gt;去年，我們決定重新對 Windows 客戶端，進行全面改進，力求在提高性能的同時，提供更加穩定和高質量的用戶體驗。在近期的一次雲端渲染場景測試中，我們對 3000 台 Windows 客戶端進行了小文件讀寫性能測試，結果表明性能已能滿足大規模使用需求。我們將在下一篇博客中分享此次測試的詳細情況。&lt;/p&gt; 
&lt;p&gt;在此次歷時一年的優化過程中，由於 Windows 客戶端相關文檔和資料相對有限，我們面臨了諸多挑戰。本文將詳細闡述過程中遇到的關鍵問題、採取的方案以及目前已取得的進展。需要注意的是，目前的版本處於 Beta 階段，即主要功能已完成，但仍需通過持續的測試和用戶反饋進行優化。希望有需求的用戶積極使用，並在社區中提出建議，我們也將積極支持並解決大家的問題。&lt;/p&gt; 
&lt;h2&gt;01 目標是什麼？&lt;/h2&gt; 
&lt;p&gt;對於 Windows 版本，的開發，核心任務是將現有文件系統邏輯遷移到 Windows 平台。接入方式主要有兩種：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;一是通過 Linux 掛載並啓動 Samba 服務，將文件共享給 Windows 使用；這種方式可能帶來額外的協議開銷和配置複雜性，進而影響性能和穩定性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;二是直接在 Windows 上運行客戶端，這種方式更接近 Windows 原生的使用體驗，但歷史版本存在較多 bug。在此次 Beta 版本，中，我們主要針對第二種方式對 Windows 客戶端進行優化。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我們希望這個版本能夠達到真正可用的狀態，包括確保大多數 Windows 應用程序能夠在 JuiceFS 的文件系統上正常運行，支持數據讀寫操作以及文件管理功能；確保系統具有合格的性能。為此，Beta 版本需要完成的工作可以分為幾個方面：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. 修復工具集&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;工具集是 JuiceFS 使用過程中的重要組成部分，但許多常用命令在 Windows 客戶端上無法正常使用。我們將在下文詳細描述各個主要命令，所進行的優化和改進工作。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. 優化使用體驗&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在過去的版本中，用戶體驗存在許多問題，尤其在性能方面和操作簡便性方面。因此，我們需要着重優化這些方面，使得使用過程更加流暢、簡便。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. 修復 Bug&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;與身份驗證和權限管理相關的問題，過去的版本在這些方面比較混亂。&lt;/li&gt; 
 &lt;li&gt;與 Windows API 相關的 Bug，特別是錯誤碼返回值和某些邏輯問題。&lt;/li&gt; 
 &lt;li&gt;一些零散的 Bug，需要在 Beta 版本中一併修復。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;02 怎麼做 ？&lt;/h2&gt; 
&lt;p&gt;在這個優化過程中，我們依舊藉助了一個非常重要的組件------WinFsp（Windows File System Proxy），它是一個開源庫，提供了兩個至關重要的特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;提供了一個高效的文件系統驅動接口，實現了 Windows 文件系統驅動（FSD, File System Driver）。&lt;/li&gt; 
 &lt;li&gt;還提供了 FUSE（Filesystem in Userspace）接口中的 high-level 接口。FUSE 本身提供了兩套接口------high-level 接口和 low-level 接口。在 JuiceFS 中，我們使用的是 low-level 的接口，但通過做一些路徑轉換，我們已經可以成功對接 FUSE 層。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在引入 WinFsp 後，Windows 上的讀取流程大致是這樣的。下圖中上半部分代表用戶空間，下半部分代表內核空間。&lt;/p&gt; 
&lt;p&gt;圖中展示的流程是數據從應用程序到驅動程序之間的流轉路徑。在用戶空間中，應用程序執行 I/O 操作（如文件讀寫）會傳遞到內核空間，並流轉到 Windows 內核中的一個核心組件 ------ Windows I/O Manager。該組件負責管理所有的 I/O 操作。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-b57a140b1efff9c20e1868dcd2ae1dbe89a.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;接下來，Windows I/O Manager 會將這些 I/O 操作轉換為 Windows I/O Request Package（IRP），然後將其轉發到文件系統驅動層。此處簡化了部分層級，最終這些請求會傳遞到文件系統驅動層，具體來説就是 WinFsp 文件系統驅動。&lt;/p&gt; 
&lt;p&gt;當文件系統驅動接收到請求時，它會將請求轉發給 WinFsp 的 DLL。這個 DLL 承擔了與 Windows 系統內核數據進行接口轉換的責任。&lt;/p&gt; 
&lt;p&gt;在我們 JuiceFS 的實現中，應用程序通過鏈接 WinFsp DLL 來處理 I/O 請求。當 Windows I/O 請求被傳遞到 DLL 時，WinFsp 會將其轉換為 FUSE 接口，並通過 Windows FUSE 兼容層，進行回調處理。絕大部分的工作集中在這一層，包括 bug 修復和性能優化。&lt;/p&gt; 
&lt;p&gt;處理完這些操作後，最終的請求會交給 JuiceFS 核心 VFS（虛擬文件系統）層，核心 VFS 負責執行具體的文件系統邏輯和請求處理。&lt;/p&gt; 
&lt;h3&gt;還有 4 個困難&lt;/h3&gt; 
&lt;h4&gt;1. Unix vs Windows&lt;/h4&gt; 
&lt;p&gt;儘管 WinFsp 已經幫助我們將 I/O 請求轉換為 FUSE 接口，但我們依然需要面對 Unix 和 Windows 之間的本質性差異。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;權限管理差異&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;例如，Linux 中的文件權限（可讀、可寫、可執行等）和擴展權限（如 ACL）與 Windows 中的權限模型完全不同。Windows 使用 DACL（Discretionary Access Control List）進行權限定義，同時支持權限繼承，這與 Unix 的權限模型有很大差異。因此，雖然 WinFsp 處理了一部分權限的轉換，但我們仍需解決如何將這兩種，權限體系進行有效映射，以便更好地支持 Windows 應用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;系統特性的差異&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unix 和 Windows 在文件系統特性方面也存在較多的本質差異。諸如硬鏈接、軟鏈接、掛載方式、目錄長度、字符限制等、文件屬性等，而我們的 JuiceFS 核心文件系統是基於 Unix 的文件系統設計，因此我們需要解決或者繞開這些差異，以確保在 Windows 平台上也能正常運行。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;API 差異&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unix 和 Windows 在系統 API 上也有許多差異，儘管我們使用了 Go 語言來簡化部分 API 差異的處理，但依然存在一些需要手動解決的情況。例如，獲取 UID 和 GID 等信息，在 Windows 系統中並沒有直接的對應方式。雖然 Go 語言在跨平台處理上做了很多優化，但一些特定的系統 API 仍然需要我們自行處理這些差異，確保系統的兼容性和穩定性。&lt;/p&gt; 
&lt;h4&gt;2. Linux FUSE vs WinFsp FUSE&lt;/h4&gt; 
&lt;p&gt;之前，JuiceFS 一直與 low-level FUSE 接口進行對接，而 WinFsp FUSE 則是一個 high-level FUSE 接口，這兩者存在本質的區別。&lt;/p&gt; 
&lt;p&gt;首先，low-level FUSE 通常使用 inode 作為回調參數，而高級 FUSE 則主要使用路徑作為回調參數，這是兩者的一個顯著差異。然而，差異不僅限於此。&lt;/p&gt; 
&lt;p&gt;儘管 WinFsp 提供了一個 high-level 的 FUSE 回調接口，但其實現邏輯並未完全遵循 Linux 中 libfuse 的實現方式。因此，在使用 WinFsp FUSE 時，我們常常會遇到一種情況：在 Linux 中，某些行為表現得很自然和一致，完全如 FUSE 文檔所述的一致，但在 WinFsp 中，這些行為的回調邏輯卻有所不同。這使得我們需要特別注意並解決這些平台之間的行為差異。&lt;/p&gt; 
&lt;h4&gt;3. 黑盒的 Windows 內核&lt;/h4&gt; 
&lt;p&gt;在開發過程中，我們還需要面對一個，黑盒的 Windows 內核。由於 Windows 內核沒有開源，且相關文檔資料非常有限，調試和觀察 Windows 內核的行為變得較為困難。這使得整個開發過程充滿了不確定性，對於開發人員來説，Windows 內核的工作機制就像一個封閉的黑盒，需要通過不斷的實驗和反向工程來理解和適應。&lt;/p&gt; 
&lt;h4&gt;4. 有限的 FSD 文檔資源&lt;/h4&gt; 
&lt;p&gt;除了 Windows 內核本身的黑盒特性外，關於文件系統驅動（FSD）的文檔資源也非常有限。微軟並未公開完整的 Windows 內核開發文檔，很多 API 僅由第三方整理，官方文檔稀缺。事實上，唯一一本專注於 Windows 文件系統驅動的書籍是 1997 年出版的 《Windows NT File System Internals: A Developer's Guide》。儘管該書中包含大量錯誤（多數是由於不適用於當前版本），直到今天，Windows 文件系統驅動的開發者仍然只能依賴這本書作為參考。這些有限的文檔資源使得我們在排查問題和理解 Windows 文件系統行為時，必須付出更多的時間和精力來收集資料並進行學習。&lt;/p&gt; 
&lt;h2&gt;03 做到了哪些？&lt;/h2&gt; 
&lt;p&gt;接下來，我們將介紹我們在 Beta 版本中進行的具體工作。主要可以分為兩個部分：JuiceFS 端的工作以及 WinFsp 端的工作。&lt;/p&gt; 
&lt;h4&gt;1. JuiceFS 部分&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;工具集&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;首先，工具集在我們日常使用 JuiceFS 時至關重要。使用者在部署之後，都需要藉助工具集來進行性能測試、監控等操作。例如，最基本的性能測試通常會運行 bench 命令。然而，在早期版本中，這個命令在 Windows 平台上無法運行，系統會提示命令不支持 Windows。&lt;/p&gt; 
&lt;p&gt;此外，掛載文件系統後，我們通常需要觀察一些關鍵的性能指標，例如原始數據的延遲、吞吐量、對象存儲的表現，以及分佈式緩存的吞吐量等。然而，在之前的版本中，這些監控功能也無法正常使用，系統會提示無法打開 &lt;code&gt;.control&lt;/code&gt; 文件。&lt;/p&gt; 
&lt;p&gt;JuiceFS 1.3 和，企業版 5.2 中，這些問題都得到了修復。目前，工具集已經從幾乎完全不可用，發展到了基本可用的狀態。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;API 兼容性&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，一些用戶可能會遇到問題，特別是當將 JuiceFS 用作 Git 目錄時。有些用戶發現直接執行 Git 命令時，操作無法正常執行。問題的主要原因在於錯誤碼的處理不兼容 Windows 系統。我們沒有像 Windows 本身那樣處理特定的錯誤碼，導致應用程序依賴於某些特定錯誤碼時無法正常工作。這一部分主要涉及到 API 兼容性，的改進。&lt;/p&gt; 
&lt;p&gt;此外，早期版本中還可能出現掛載狀態異常的情況。例如，掛載過程完成後，系統提示掛載失敗，實際上文件系統已經掛載；或是掛載成功的提示顯示不正確。在當前的 Beta 版本中，我們已經對這些行為進行了修復和優化，包括 Git 命令相關的錯誤。&lt;/p&gt; 
&lt;p&gt;本質上，Linux 和 Windows 在錯誤碼方面的差異是難以完全匹配的，因此實現 100% 的一致性非常困難。儘管如此，我們依然通過持續的反饋和改進，不斷優化這些兼容性問題，力求提供更穩定的 Windows 版本。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User/permission&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，我們的權限管理還存在一些模糊之處。比如，當用戶 A 設置了某些權限或在其他區域設置了權限時，我們並沒有清晰的預期和統一的處理方式。這導致了一些問題，例如，用戶 A 掛載了文件系統後，他希望同事能夠讀取文件，但當時我們沒有明確的方案來處理這種情況。為了實現文件共享，我們曾使用一個名為 as-root 的參數，將所有用戶權限提升為 root 權限，這種做法雖然能暫時解決問題，但並不理想。&lt;/p&gt; 
&lt;p&gt;而在 Beta 版本中，我們對權限管理進行了優化。重新設計了權限機制，明確了權限管理的目標，確保在 Windows API 的正常工作下，儘可能地與 POSIX 行為保持一致。具體來説，我們在沒有開啓 UID 映射的情況下，確保 Linux 用戶的 UID（如 1001）能夠在 Windows 系統中正確映射和共享，保證相同 UID 的用戶被視為相同的用戶。&lt;/p&gt; 
&lt;p&gt;此外，如果啓用了 UID 映射功能，這是一個更為複雜的話題，但我們也將提供支持。總之，我們的目標是確保 Windows 系統的權限管理儘可能與 POSIX 行為一致，為用戶提供更清晰、可靠的權限控制。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;掛載相關&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，掛載操作只能在前台進行，無法支持後台掛載。這導致了一個問題：如果用戶希望後台掛載文件系統以便共享給其他用戶，他們不得不依賴第三方工具或手動配置。例如，他們可能需要使用微軟自帶的命令行工具來創建系統服務，或者手寫 YAML 配置文件，這樣的過程既繁瑣又容易出錯。&lt;/p&gt; 
&lt;p&gt;在 JuiceFS 1.3 和，企業版 5.2 中，我們解決了這一問題，直接支持了後台掛載。與 Linux 版本一致，用戶可以通過 &lt;code&gt;-d&lt;/code&gt; 參數在社區版中實現後台掛載，而企業版默認支持後台掛載。如果用戶需要前台掛載，則可以使用 &lt;code&gt;-f&lt;/code&gt; 參數。&lt;/p&gt; 
&lt;p&gt;此外，過去的社區版也不支持將同一個文件系統掛載到多個盤符上。現在，在，企業版，中，我們已實現了這一功能，允許用戶將同一個文件系統掛載到多個盤符上。目前，這項功能僅在企業版中可用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;性能提升&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，存在一個廣泛且嚴重的問題，那就是小文件的讀寫性能非常差，文件屬性的讀取效率也很低。&lt;/p&gt; 
&lt;p&gt;在 JuiceFS 1.3 和，企業版 5.2 版本中，我們進行了大幅優化，顯著提升了小文件的讀寫性能。具體的優化進展可以通過 bench 工具來測試和反饋，該工具能夠提供關於大文件和小文件的讀寫性能指標。&lt;/p&gt; 
&lt;p&gt;以阿里雲上一個 88 核 16 GB 的機器為例，使用阿里雲的 Redis 和自建的 MinIO 進行性能測試。在默認命令行參數下，我們發現小文件的寫入性能接近 1.2 版本，而小文件的讀取性能則有了顯著提升：從 1.2 版本，的每秒 200 個小文件提升至 1.3 版本，的每秒接近 1000 個小文件。&lt;/p&gt; 
&lt;p&gt;此外，文件屬性的讀取性能也得到了優化。過去每秒大約只能獲取 200 個文件屬性，而現在可以達到 4500 次每秒。當然，這一結果受緩存的影響，實際性能可能會有所波動，但總體上優化效果非常顯著。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-e99aa801f3ab93281f35c83c5641a364771.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;另一項重要的優化涉及路徑深度的影響。在 1.2 版本，中，當文件路徑深度增加時，性能急劇下降。例如，在三層目錄的情況下，讀取小文件的性能大幅下降，可能每秒只能讀取幾十個小文件。而在 1.3 版本，中，即使路徑深度達到三層，性能幾乎沒有顯著變化，保持了穩定的表現。這一改進確保了用戶在使用過程中，不會因為創建更多目錄而導致性能下降。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-d3ecb240d7be9c8504d22847a6baebef086.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;其他優化與修復&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;子目錄掛載和文件重命名操作在之前的版本中可能無法正常進行，尤其是在重命名時，常常會遇到一些難以解釋的錯誤，導致操作無法完成。現在，這些問題已經得到了優化和修復。此外，可能還有一些其他因素未在此列出，仍在持續改進中。&lt;/p&gt; 
&lt;h3&gt;2. FSD 相關問題修復與定位&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;POSIX 文件權限映射&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在之前的版本中，我們遇到一個與文件權限映射相關的問題，尤其是 0666 權限設置。根據 POSIX 標準，0666 權限意味着文件對於所有用戶都是可讀可寫的。然而，在 Windows 上，即使我們為某個文件設置了 0666 權限，Everyone 組（即所有用戶）仍然無法進行覆蓋寫操作。&lt;/p&gt; 
&lt;p&gt;這個問題的根本原因在於 WinFsp 目前沒有完全處理這些權限映射。即使在 Windows 上設置了類似的權限，實際上它並不會如 POSIX 系統那樣讓所有用戶都能夠讀取和寫入文件。&lt;/p&gt; 
&lt;p&gt;目前，WinFsp 的版本仍然存在這個問題，我們已經向上遊提交 PR 來修復這個問題，期望能夠使 Windows 上的行為與 POSIX 系統一致，確保在 Windows 平台上也能正確地處理文件權限。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;close to open 一致性&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;默認情況下，JuiceFS 遵循 close-to-open 一致性模型，這意味着在文件關閉之後，下次打開該文件時，用戶能夠看到之前寫入的數據，即使是在不同的機器上也是如此。&lt;/p&gt; 
&lt;p&gt;然而，在 WinFsp 及 Windows 系統中，文件關閉的處理方式與此不同。WinFsp 的默認行為並不會在文件關閉時，異步等待 FUSE 應用程序處理完數據。具體來説，當應用程序調用 CloseHandle 關閉文件句柄時，經由 WinFsp 的 Windows 應用程序並不會阻塞在 CloseHandle 的調用處，而是直接返回，哪怕本地還有未上傳至雲端的數據。這種方式導致了 close-to-open 一致性無法得到保證，甚至本機用戶，在下一次打開此文件時，依舊可能讀取到的是錯誤的文件長度信息。&lt;/p&gt; 
&lt;p&gt;為瞭解決這個問題，我們已經向 WinFsp 的源代碼做出相應調整，以確保在 Windows 平台上也能夠維持 close-to-open 一致性，確保數據的同步和一致性不受影響。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;內核 cache manager 使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在 WinFsp 的處理過程中，默認情況下它並未利用內核的 Cache Manager，這直接導致了文件讀取性能較差。Cache Manager 通常會負責緩存和預讀操作，這有助於提升文件系統的讀取效率。然而，在 WinFsp 的默認配置下，Cache Manager 並未得到有效利用，從而影響了系統的性能表現。&lt;/p&gt; 
&lt;p&gt;為瞭解決這一問題，我們在 FSD 層面進行了問題定位和修復，並研究瞭如何在 WinFsp 中正確啓用 Cache Manager。我們的目標是通過正確啓用和配置緩存管理，顯著提升文件讀取性能，並優化系統的整體表現。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-5e3109a0cee8c5df150e577ae7e76e404f0.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;03 未來計劃&lt;/h2&gt; 
&lt;p&gt;我們將持續聚焦 Windows 客戶端的可用性，包括 bug 修復、功能擴展以及對軟鏈接（symlink）的支持；性能提升也是我們不斷努力的方向。隨着使用場景日益複雜，數據規模不斷擴大，且涉及的技術點較為廣泛，Windows 客戶端，的優化將是一個長期過程。&lt;/p&gt; 
&lt;p&gt;此外，許多用戶反饋希望能夠與 AD 域賬號進行集成。在 Windows 環境下，與 AD 域賬號的綁定將是一個非常實用的特性，我們正在研究這一需求。如果大家有相關的建議或希望實現的功能，歡迎與我們討論。&lt;/p&gt; 
&lt;p&gt;最後，感謝大家對 Windows 版本的支持，歡迎大家體驗和反饋，希望我們能為大家提供更好的使用體驗。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相關閲讀推薦&lt;/strong&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuicefs.com%2Fzh-cn%2Fblog%2Fsolutions%2Fjuicefs-windows--performance-test" target="_blank"&gt;3000 台 JuiceFS Windows 客戶端性能評估&lt;/a&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuicefs.com%2Fzh-cn%2Fblog%2Fsolutions%2Fbuilding-high-throughput-cache-pool-resilience-with-juicefs" target="_blank"&gt;從資源閒置到彈性高吞吐，JuiceFS 如何構建 70GB/s 吞吐的緩存池？&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5389802/blog/18691611</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5389802/blog/18691611</guid>
      <pubDate>Thu, 11 Sep 2025 10:15:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>538 款生成式人工智能服務完成備案</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;網信中國微信公眾號&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FT8vhj9NpAlgSqelIgqAw-Q" target="_blank"&gt;發佈&lt;/a&gt;「關於發佈生成式人工智能服務已備案信息的公告（2025 年 7 月至 8 月）」指出，為促進生成式人工智能服務創新發展和規範應用，網信部門會同有關部門按照《生成式人工智能服務管理暫行辦法》要求，持續開展生成式人工智能服務備案工作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="278" src="https://oscimg.oschina.net/oscnet/up-09f942a364574298c671c90b997b3602e1e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;7 月至 8 月，新增 99 款生成式人工智能服務在國家網信辦完成備案，對於通過 API 接口或其他方式直接調用已備案模型能力的生成式人工智能應用或功能，由地方網信辦開展登記，本階段新增 27 款完成登記。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;截至 2025 年 8 月 31 日，累計有 538 款生成式人工智能服務完成備案，263 款生成式人工智能應用或功能完成登記。現將相關信息予以公告。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;提供具有輿論屬性或者社會動員能力的生成式人工智能服務的，可通過屬地網信部門履行備案或登記程序。已上線的生成式人工智能應用或功能，應在顯著位置或產品詳情頁面公示所使用已備案或登記生成式人工智能服務情況，註明模型名稱、備案號或上線編號。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371844</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371844</guid>
      <pubDate>Thu, 11 Sep 2025 09:36:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>美國 FTC 啓動對 Meta、OpenAI 等 AI 聊天機器人調查</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;美國聯邦貿易委員會（FTC）已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ftc.gov%2Fnews-events%2Fnews%2Fpress-releases%2F2025%2F09%2Fftc-launches-inquiry-ai-chatbots-acting-companions" target="_blank"&gt;要求&lt;/a&gt;Alphabet 旗下的谷歌、OpenAI、Meta Platforms Inc．及其他四家人工智能聊天機器人開發商提交相關資料，説明其技術對兒童的影響。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="279" src="https://oscimg.oschina.net/oscnet/up-fd5e589e48989ed04809b07ad777a304ad6.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;這家負責反壟斷和消費者保護的機構週四表示，已向這些公司發出指令，以收集信息研究它們如何評估、測試和監控聊天機器人，以及採取了哪些措施限制未成年人使用。七家公司包括谷歌、OpenAI、Meta 及其 Instagram 子公司、Snap Inc．、埃隆·馬斯克的 xAI，以及 Character.AI 的開發商 Character Technologies Inc．。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;聊天機器人開發商正面臨越來越嚴格的審查，外界質疑它們是否採取足夠行動保障服務安全，防止用戶參與危險行為。上月，一名加州高中生的父母起訴 OpenAI，稱 ChatGPT 讓他們的兒子與家人疏遠，並幫助他籌劃了在今年 4 月的自殺。該公司表示已經向家屬致以同情，並正在評估這起訴訟。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;谷歌和 Snap 未立即置評，OpenAI、xAI 和 Character.AI 也未立即做出回應。Meta 拒絕發表評論，但該公司近期已採取措施，確保聊天機器人避免與未成年人討論包括自殘和自殺在內的話題。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根據美國法律，科技公司未經父母許可不得收集 13 歲以下兒童的數據。多年來，國會議員一直試圖將這些保護措施擴展至年齡更大的青少年，但相關立法迄今未能推進。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371837</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371837</guid>
      <pubDate>Thu, 11 Sep 2025 09:14:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>小紅書開源 FireRedTTS2，專為長對話設計的語音生成系統</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;小紅書團隊發佈名為 FireRedTTS2 的開源項目，這是一款面向多説話人對話生成的長篇流式語音合成系統，旨在為播客和聊天機器人提供穩定、自然的語音輸出。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0912/170756_ZLiI_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;核心亮點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;長篇對話生成：支持長達 3 分鐘的 4 人對話，且可通過擴展訓練語料輕鬆擴展至更長對話和更多説話人。&lt;/li&gt; 
 &lt;li&gt;多語言支持：涵蓋英語、中文、日語、韓語、法語、德語和俄語等多種語言，支持跨語言和代碼切換場景下的零樣本文本到語音克隆。&lt;/li&gt; 
 &lt;li&gt;超低延遲：基於 12.5Hz 流式語音標記器，採用雙 Transformer 架構，實現文本 - 語音交錯序列操作，靈活支持逐句生成，首包延遲低至 140ms，同時保持高質量音頻輸出。&lt;/li&gt; 
 &lt;li&gt;高穩定性：在獨白和對話測試中均展現出高相似性和低詞錯誤率 / 字符錯誤率。&lt;/li&gt; 
 &lt;li&gt;隨機音色生成：適用於創建語音識別 / 語音交互數據。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;團隊已發佈技術報告與演示頁面，並計劃在 10 月，推出增強版多語言基模型、微調代碼與教程，以及端到端的 text-to-blog 流水線。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0912/170608_M6s3_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;代碼倉庫附帶完整的安裝與使用示例，依賴 PyTorch 2.7.1，模型權重託管於 Hugging Face。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://github.com/FireRedTeam/FireRedTTS2&lt;br&gt; https://arxiv.org/abs/2509.02020&lt;br&gt; https://huggingface.co/FireRedTeam/FireRedTTS2&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371836</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371836</guid>
      <pubDate>Thu, 11 Sep 2025 09:13:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Claude 面向 Team 和 Enterprise 用戶上線「記憶」功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Anthropic 為 Claude 的 Team 與 Enterprise 用戶上線了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Fnews%2Fmemory" target="_blank"&gt;「記憶」功能&lt;/a&gt;，允許模型記住過去的對話內容以提供更個性化的服務，並同步向所有用戶開放隱身聊天模式。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0a5998ceff0c7afdcc7d851886dfd39172d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;該功能默認關閉，用戶可在設置中啓用「搜索並引用聊天記錄」與「生成聊天曆史記憶」兩項開關，隨時查看、編輯或刪除 Claude 保存的內容。&lt;/p&gt; 
&lt;p&gt;&lt;img height="592" src="https://static.oschina.net/uploads/space/2025/0912/164543_xQy8_2720166.jpg" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;系統以項目為邊界，為每個項目單獨維護記憶，確保不同工作流互不幹擾；企業管理員可一鍵關閉組織級記憶。隱身聊天模式下，對話既不寫入歷史也不進入記憶，適合敏感討論。&lt;/p&gt; 
&lt;p&gt;Anthropic 表示，記憶功能將很快擴展至其他付費檔位，並支持導入導出以便遷移或備份。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371832</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371832</guid>
      <pubDate>Thu, 11 Sep 2025 09:00:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>螞蟻數科宣佈：支持企業客戶按大模型「應用效果」付費</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;9 月 12 日，螞蟻數科在外灘大會論壇上宣佈，將推出按「效果付費」的新型商業模式。該模式支持企業客戶根據大模型應用的實際效果（如業務增長或成本節省）來付費，而非傳統的項目制或訂閲制模式。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-48b8376d0785073871e8503b6452a7ea3bb.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;隨着大模型從技術層向場景層滲透，AI 已經不再是單點技術工具，而正成為業務成果的加速器，「企業級 AI 服務的衡量標準，應從‘為技術付費’向‘為效果付費’轉變，一些以結果為重的產品，客戶可以選擇為可見的效果買單這種付費方式。」&lt;/p&gt; 
&lt;p&gt;「按效付費」模式將顯著降低企業應用大模型的門檻和風險，企業無需投入高昂的基礎設施成本，即可收穫 AI 帶來的業務價值，尤其將助力中小企業更輕鬆地接入 AI 能力，加速大模型在金融、能源、零售等千行百業的規模化落地。&lt;/p&gt; 
&lt;p&gt;螞蟻數科副總裁餘濱表示，目前螞蟻數科已經與部分戰略級客戶達成基於關鍵業務效果的合作模式，將逐步向全行業推廣。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371830</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371830</guid>
      <pubDate>Thu, 11 Sep 2025 08:43:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌 Nano Banana 將於本月登陸 Photoshop</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Adobe 首席設計推廣大使 Howard Pinsky 在 X 平台宣佈，谷歌熱門 AI 模型 Nano Banana 將於本月內正式集成至 Photoshop。用戶可通過自然語言提示詞，結合 Photoshop 的選區、圖層、蒙版等「非破壞性」工具進行精準圖像編輯。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="392" src="https://oscimg.oschina.net/oscnet/up-a98a767bbdca784d50d8820ada92bebadb3.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;Nano Banana 正式名稱為谷歌 Gemini 2.5 Flash Image，本月初在 Gemini 平台上線後迅速走紅。谷歌實驗室副總裁 Josh Woodward 曾透露，該模型已完成超 2 億次圖像編輯，吸引超 1000 萬新用戶，火爆程度導致「內部 TPU 嚴重過載，SRE 警報不停」。眾多用戶表示，其核心優勢在於解決了 AI 圖像生成的「恐怖谷效應」，在角色一致性、手辦與真人渲染等場景表現突出。&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;此次集成並非 Adobe 首次佈局 AI。今年 7 月，Photoshop 已測試 Generative Upscale、Remove 等功能，支持用戶選擇 Firefly 模型。而 Nano Banana 的加入將進一步強化多模態編輯能力——用戶既能用提示詞生成內容，又能通過 PS 工具精細調整，實現「AI 創意+專業控制」的無縫銜接。&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371828</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371828</guid>
      <pubDate>Thu, 11 Sep 2025 08:39:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Claude API 新增 Web Fetch 功能，支持從任意 URL 獲取並分析內容</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Anthropic 宣佈為 Claude API 新增 Web Fetch 功能，支持從任意網頁 URL 獲取並分析內容，無需額外的基礎設施。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5ae2b1d7e1c66a7c026cbdc2310eee177c3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;該功能現已進入公測階段。開發者只需在請求頭中加入 anthropic-beta: web-fetch-2025-09-10 即可啓用，無需額外基礎設施就能讓 Claude 抓取並分析任意網頁或 PDF 的完整內容。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;調用時，Claude 會根據提示與可用的 URL 決定何時進行抓取，API 會返回純文本或自動提取的 PDF 文本，並可選擇開啓引用功能。&lt;/p&gt; 
&lt;p&gt;開發者可以通過 max_uses 限制單次請求的抓取次數，使用 allowed_domains 或 blocked_domains 進行域級黑白名單管理，並通過 max_content_tokens 控制最大 token 用量以防止超額計費。&lt;/p&gt; 
&lt;p&gt;為防止數據泄露，該工具禁止 Claude 動態構造 URL，只能抓取用戶顯式提供或先前搜索/抓取結果中的 URL。在不可信環境中處理敏感數據時，建議關閉該工具或結合上述限制使用。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/web-fetch-too&lt;/em&gt;l&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371827</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371827</guid>
      <pubDate>Thu, 11 Sep 2025 08:38:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>網易澄清前遊戲高管創業爭議</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;網易近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F7960183925%2FQ3Y0aj9jY" target="_blank"&gt;發佈聲明稱&lt;/a&gt;：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;我們觀察到近期媒體及社交媒體出現「網易前 COO 再創業」及與其相關的糾紛傳聞等信息。經查，該人員已於 2011 年正式離職，其後在其他公司任職、創業等一切經歷均與網易公司無關。其個人引發的爭議與風波，均不代表網易立場。&lt;/p&gt; 
 &lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/162440_LLcG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;據悉，網易所指的前 COO 為詹鍾暉。9 月 4 日，有網友在社交平台發現，詹鍾暉正在為其創業項目的單機遊戲新作招聘人才。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;公開資料顯示，詹鍾暉於 1999 年加入網易，從程序員做起，歷任在線遊戲事業部總監、網易聯合 COO、網易 COO，後於 2011 年離職創立簡悅。2017 年，簡悅被阿里收購，2019 年詹鍾暉成立靈犀互娛，此後，他在靈犀長期擔任遊戲業務負責人。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;2024 年 3 月，詹鍾暉發佈內部郵件表示即將卸任。2025 年，他發佈朋友圈，表示自己將投身內容驅動的單機買斷制遊戲。2025 年 4 月，詹鍾暉成立廣州鈦麒數字科技有限公司，紫龍 CEO 王一任聯合創始人。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/162821_Ri9X_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此次引發輿論風波的是其今年 4 月創立的廣州鈦麒數字科技有限公司，據其自述，該公司當前主營賽道為「內容驅動的單機買斷遊戲」，並對外發布招聘意向。&lt;/p&gt; 
&lt;p&gt;近日，有網友發帖稱，詹鍾暉帶隊的單機項目在招聘時白嫖應聘者創意方案，並指控其人和遊戲公司存在多項弊病。目前，詹鍾暉尚未做出公開回應。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371825</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371825</guid>
      <pubDate>Thu, 11 Sep 2025 08:29:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>字節跳動圖像創作模型 Seedream 4.0 登頂國際評測排行榜</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;國際知名評測機構 Artificial Analysis&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FArtificialAnlys%2Fstatus%2F1966284499249193306" target="_blank"&gt;發佈消息稱&lt;/a&gt;，字節跳動 Seedream 4.0 已登頂文生圖及圖像編輯排行榜榜首，在兩個領域都超越了谷歌的 Gemini 2.5 Flash（Nano-Banana）。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/161703_QBMX_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a3ae8d198fa06a3c44d15a23b6347861f31.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://artificialanalysis.ai/text-to-image/arena/leaderboard-image&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/news/371058" target="_blank"&gt;Seedream 4.0&lt;/a&gt;是字節跳動最新發布的豆包圖像創作模型。該模型集成了文生圖、圖像編輯、多圖融合、組圖生成等多種能力，最高支持 4K 分辨率圖像生成。&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;主要亮點&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;多模態玩法拓展：靈活支持文本、圖像的組合輸入，允許文生圖、圖生圖、圖像編輯、多圖編輯、組圖生成等創作模式，玩法創意多樣。&lt;/li&gt; 
 &lt;li&gt;風格化美感提升：支持高度自由的藝術風格遷移，從巴洛克到賽博朋克風，風格百變，更可組合創造全新風格，美感突出。&lt;/li&gt; 
 &lt;li&gt;邏輯理解力增強：結合世界知識，提升了多模態輸入理解，會 「畫」，更會先 「想」，在涉及物理和時間約束、解謎填字、續寫漫畫等任務中，展現出推理生成能力。&lt;/li&gt; 
 &lt;li&gt;自適應與 4K 生成：可根據指令或參考圖生成最佳比例圖片，也支持用戶自定義尺寸，最高分辨率從 2K 擴展至 4K 超高清。&lt;/li&gt; 
 &lt;li&gt;推理速度躍升：通過全新高效的架構設計，以及極致的蒸餾加速，DiT 生圖的推理速度較 Seedream 3.0 提升超 10 倍。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;目前 Seedream 4.0 已在豆包 App、即夢 AI、釦子等產品上線，並通過火山引擎開放給企業客戶。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371822</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371822</guid>
      <pubDate>Thu, 11 Sep 2025 08:19:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>AI 數據版權新紀元：Real Simple Licensing 協議引發關注</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;隨着人工智能（AI）行業面臨日益嚴峻的版權問題，尤其是在 Anthropic 與版權方達成 15 億美元和解後，許多企業開始重視其訓練數據的合法性。目前，有多達 40 起未授權數據使用的訴訟案正在進行中，其中包括一起因 Midjourney 製作超人形象而被起訴的案件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在沒有有效的授權體系的情況下，AI 公司可能面臨大規模的版權訴訟，這讓行業前景堪憂。為了應對這一挑戰，一羣技術專家和網絡出版商聯合推出了一項名為 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frslstandard.org%2F" target="_blank"&gt;Real Simple Licensing&lt;/a&gt;（RSL）的新系統，旨在實現大規模的數據授權。該系統已經得到了 Reddit、Quora 和 Yahoo 等大型網絡出版商的支持，但行業內能否形成合力，吸引主要的 AI 實驗室參與仍然是個未知數。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="264" src="https://oscimg.oschina.net/oscnet/up-2a91fdf28d01d6c3fde86bdbb96309eb93d.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;RSL 的聯合創始人 Eckart Walther 表示，他們的目標是創建一個可以在互聯網上廣泛應用的訓練數據授權體系。他指出，「我們需要為互聯網提供機器可讀的許可協議，而 RSL 正是解決這一問題的工具。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;多年來，諸如數據提供者聯盟等組織一直在推動更清晰的數據採集實踐，但 RSL 是第一個旨在提供實際技術和法律基礎設施的嘗試。技術上，RSL 協議定義了出版商可以為其內容設定的具體許可條款，這包括 AI 公司是否需要定製許可或採用知識共享（Creative Commons）條款。參與的網頁將把條款納入其 「robots.txt」 文件，以便輕鬆識別哪些數據受哪些條款保護。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在法律層面，RSL 團隊建立了一個名為 RSL Collective 的集體許可組織，旨在為出版商談判條款並收取版稅，類似於音樂行業的 ASCAP 或電影行業的 MPLC。目前，已經有許多知名出版商加入了這一集體，包括 Yahoo、Reddit 和 Medium 等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;儘管如此，確定 AI 模型具體使用哪些訓練數據以計算版稅的挑戰依然存在。對於實時獲取網絡數據的產品，如谷歌的 AI 搜索摘要，數據使用的追蹤相對簡單，但如果訓練過程未被記錄，確認特定文檔是否被某個大語言模型（LLM）使用就變得困難重重。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;儘管存在這些挑戰，RSL 的創建者們相信 AI 公司能夠應對。「他們在之前的某些授權協議中已經需要能夠報告數據使用情況，因此這並不是不可能的」，RSL 的另一位聯合創始人 Doug Leeds 表示。「只要足夠好，就能讓人們得到應有的報酬。」&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371819</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371819</guid>
      <pubDate>Thu, 11 Sep 2025 08:09:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>網傳甲骨文中國新一輪裁員賠償 N+6，AI 相關崗位招聘月薪 2 至 7 萬元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1988800805%2FQ45m9dzXh" target="_blank"&gt;據網傳消息&lt;/a&gt;，9 月 9 日上午，甲骨文中國區公佈了新一輪裁員名單，涉及 CSS（客戶支持服務）、GCS（全球客戶服務）等多個部門的多種崗位。本次裁員補償方案為「N+6」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;對此，時代週報記者通過官網電話聯繫甲骨文進行求證，對方回應表示，暫不清楚這一變動細節。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;此外，時代週報記者注意到，甲骨文在脈脈、boss 直聘等平台仍在招聘生成式 AI 銷售工程師、公有云解決方案架構師等技術崗位，月薪從 20000 元到 70000 元不等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;福布斯實時富豪榜顯示，甲骨文創始人拉里・埃裏森總財富達 4019 億美元，日增 1100 億美元或 37%，成為史上第二個淨資產突破 4000 億美元大關的人。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="587" src="https://oscimg.oschina.net/oscnet/up-1c2309c9f3f45c8e7522623751993556803.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371813</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371813</guid>
      <pubDate>Thu, 11 Sep 2025 08:04:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>HarmonyOS NEXT 安全開發實踐感悟</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#333333"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;一、安全開發環境搭建&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）搭建步驟&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;要開啓 HarmonyOS NEXT 的安全開發之旅，首先得搭建一個合適的開發環境。這就像蓋房子前要先準備好堅固的地基一樣重要。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 安裝開發工具&lt;br&gt; 我們需要下載並安裝 HarmonyOS NEXT 的官方開發工具包，例如 DevEco Studio。這個工具包就像是一個萬能工具箱，裏麪包含了我們開發所需的各種工具，如代碼編輯器、編譯器、調試器等。安裝過程就像按照説明書組裝傢俱，按照提示一步步操作即可。不過要注意，在安裝過程中，一定要選擇安全的下載源，避免下載到被篡改的安裝包，這就好比購買正品傢俱，要從正規渠道購買，防止買到假貨。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 配置開發環境變量&lt;br&gt; 安裝完成後，還需要配置一些環境變量，讓系統能夠找到我們安裝的開發工具。這就像是給工具箱在房間裏找一個固定的存放位置，並告訴大家這個位置在哪裏，以便隨時取用。例如，設置 JDK（Java Development Kit）的路徑，因為 HarmonyOS NEXT 的開發可能會用到 Java 相關技術，JDK 就像是給我們提供建築材料的倉庫，沒有它，我們無法構建出想要的軟件大廈。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）環境安全配置要點&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 定期更新開發工具&lt;br&gt; 開發工具就像我們手中的武器，要時刻保持鋒利。定期更新開發工具可以確保我們擁有最新的安全修復和功能改進。想象一下，如果我們拿着一把生鏽的劍去戰鬥（使用舊版本且存在安全 X 洞的開發工具），很容易被敵人（攻 X 者）攻破。而定期更新就像是給劍打磨、升級，讓它更加強大。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 限制不必要的網絡訪問&lt;br&gt; 在開發環境中，有些工具可能不需要聯網就可以正常工作，對於這些工具，我們要限制其網絡訪問權限。這就好比給房子的門窗安裝防盜網，防止小偷（惡意網絡攻 X）從這些不必要的通道進入。例如，我們可以在防火牆中設置規則，只允許開發工具訪問必要的網絡資源，如下載更新包的官方服務器等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;二、安全編碼規範&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）規範條目&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 輸入驗證&lt;br&gt; 在處理用戶輸入時，一定要進行嚴格的驗證。用戶輸入就像一個神祕的包裹，我們不能直接打開，必須先檢查包裹是否安全（輸入是否合法）。例如，如果我們的應用需要用戶輸入一個數字，那麼我們要檢查輸入的內容是否真的是數字，而不是其他惡意字符，否則可能會導致程序出現異常甚至被攻 X。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 權限最小化原則&lt;br&gt; 在代碼中申請權限時，要遵循權限最小化原則。這就像在一個公司裏，員工只被授予完成工作所需的最小權限。例如，如果一個應用只需要讀取用戶的聯繫人信息，那麼就只申請讀取聯繫人的權限，而不申請其他不必要的權限，如發送短信、撥打電話等權限，這樣可以減少因權限過多而帶來的安全風險。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）代碼片段展示規範編碼方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 輸入驗證代碼示例&lt;br&gt; 以下是一個簡單的 ARKTS 代碼片段，用於驗證用戶輸入是否為數字：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//10ef51225b659c1f50d0327686c10fea.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在這個示例中，通過正則表達式來驗證用戶輸入是否符合數字的格式，如果符合則返回 true，表示輸入有效，否則返回 false。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 權限最小化代碼示例&lt;br&gt; 假設我們正在開發一個圖片查看應用，只需要讀取存儲中的圖片文件，以下是部分代碼展示如何申請最小化權限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//38bdb3d469e7d5c5a1139dcba32a05fb.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在這個代碼中，我們只申請了讀取用戶存儲的權限，而沒有申請其他無關權限，確保了權限的最小化使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;三、安全測試與 X 洞修復&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）安全測試工具及方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 靜態代碼分析工具&lt;br&gt; 靜態代碼分析工具就像一個嚴格的代碼審查員，它不需要運行程序，而是直接對源代碼進行分析。例如，Checkmarx 可以幫助我們發現代碼中的潛在安全 X 洞，如緩衝區溢出、SQLX 入等風險。它會仔細檢查代碼中的每一行，就像審查員逐字逐句檢查文章一樣，找出可能存在問題的地方。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 動態測試方法&lt;br&gt; 動態測試則是在程序運行時進行測試。我們可以模擬各種用戶操作和環境條件，觀察程序的行為。比如，通過模擬大量用戶同時登錄應用，檢查系統在高併發情況下是否會出現安全問題，如身份驗證失敗、數據泄露等。這就像是在真實戰場上測試武器的性能，看它在各種複雜情況下是否能正常發揮作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）實例説明 X 洞發現與修復過程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;假設我們開發了一個簡單的登錄應用，在進行安全測試時發現了一個 X 洞。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. X 洞發現&lt;br&gt; 使用動態測試方法，當我們輸入一個超長的用戶名時，發現應用程序出現崩潰。這就像我們發現房子的一面牆在受到大力撞擊時（輸入超長用戶名相當於一種異常輸入攻 X）突然倒塌了。經過分析，發現是在處理用戶名輸入的代碼部分，沒有對輸入長度進行限制，導致程序在處理過長字符串時內存溢出。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. X 洞修復&lt;br&gt; 針對這個問題，我們可以在輸入驗證的代碼中添加對用戶名長度的限制。修改後的代碼如下：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//e4441527d213e66948111b3d35c70fb8.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;通過添加長度限制和更嚴格的字符驗證，修復了這 X 洞，就像重新加固了那面倒塌的牆，讓房子（應用程序）更加堅固安全。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;遵循 HarmonyOS NEXT 的安全開發實踐指南，從搭建安全開發環境，到遵循安全編碼規範，再到進行全面的安全測試和及時的 X 洞修復，就像為我們開發的軟件穿上了一層又一層的防護鎧甲。這不僅能保障應用的安全穩定運行，還能提升用戶對我們產品的信任度。在開發過程中，我們要時刻保持警惕，將安全意識貫穿於每一個環節，才能在 HarmonyOS NEXT 的開發之路上走得更穩更遠。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//92cd0433e0818d9ea81e0d4b7aa00def.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371811</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371811</guid>
      <pubDate>Thu, 11 Sep 2025 07:57:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>HarmonyOS NEXT 分佈式管理權限控制：安全與隱私</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#333333"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在當今數字化時代，安全與隱私如同基石般重要，對於 HarmonyOS NEXT 的分佈式管理服務而言，更是如此。隨着設備之間的協作日益緊密，如何確保數據的安全傳輸、設備的可信交互，成為了開發者和用戶共同關注的焦點。今天，就讓我們深入探究 HarmonyOS NEXT 分佈式管理中的權限控制機制，看看它是如何為我們的分佈式應用保駕護航的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;一、分佈式設備管理的權限體系概述&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;HarmonyOS NEXT 構建了一套完善的權限體系，旨在確保分佈式管理服務中的每一個操作都在安全、可控的範圍內進行。這個體系就像是一個嚴格的門禁系統，只有經過授權的應用和設備才能訪問特定的資源和執行相應的操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;權限分為多個級別，從普通權限到敏感權限，每個級別對應着不同的操作範圍和風險程度。例如，一些基本的設備信息查詢可能只需要普通權限，而涉及到設備控制、數據傳輸等操作則可能需要更高級別的權限。這種分級管理機制有助於在保障功能正常使用的同時，最大程度地降低安全風險。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;二、權限控制：精準設置與獲取權限&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一） 權限設置步驟&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 確定所需權限&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：在開發分佈式應用時，首先要明確應用需要哪些權限才能正常運行。例如，如果應用需要發現周邊設備，就需要申請設備發現權限（如 ohos.permission.DISTRIBUTED_DEVICE_DISCOVERY）；如果要進行設備信息查詢，可能需要獲取設備信息讀取權限（ohos.permission.READ_DEVICE_INFO）等。這就好比在建造一座房子之前，先規劃好需要哪些建築材料一樣重要。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 在配置文件中聲明權限&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：將所需權限在應用的配置文件（如 module.json5）中進行聲明。以申請分佈式數據同步權限（ohos.permission.DISTRIBUTED_DATASYNC）為例，配置如下：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//5b17e5cb39ef269e1272ac382c80cb68.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;這裏的 reason 字段用於向用戶解釋為什麼應用需要這個權限，usedScene 則指定了權限使用的場景和相關能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;3. 動態申請權限（如有需要）&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：對於一些敏感權限，除了在配置文件中聲明外，還需要在應用運行時動態向用戶申請。這是為了讓用戶充分了解應用將如何使用這些權限，並給予用戶自主選擇的權利。例如，當應用首次嘗試進行設備綁定操作時，可以使用如下代碼動態申請權限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//df0e4838e6e963dba82c7a4ae82a0780.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）權限獲取與檢測&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 獲取已授予權限列表&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：應用可以通過相應的接口獲取當前已授予的權限列表，以便在運行時根據權限情況調整功能或提供相應的提示。例如，以下代碼可以獲取當前應用的所有權限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//4cdec7c468d78a5bd27c80045a479509.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 檢測特定權限是否已授予&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：在執行某些關鍵操作之前，需要檢測特定權限是否已經授予。比如，在進行設備信息查詢之前，先檢查是否具有設備信息讀取權限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//3ce68fe1ba598cbd50cc93600353f7a5.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;三、安全策略：守護設備間通信安全&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）數據加密傳輸&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;為了防止設備間傳輸的數據被竊取或篡改，HarmonyOS NEXT 採用了強大的數據加密技術。在設備進行通信時，數據會被加密成密文進行傳輸，只有擁有相應解密密鑰的設備才能將其還原為原始數據。這就好比給數據穿上了一層堅固的鎧甲，即使在傳輸過程中被不法分子攔截，他們也無法理解其中的內容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）設備認證與信任機制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在分佈式管理中，設備認證是確保設備可信的重要環節。通過設備認證框架，如 pin 碼、碰、掃、靠等方式，設備之間可以相互驗證身份，建立信任關係。只有經過認證的設備才能參與分佈式業務，從而有效防止惡意設備的入侵。這就像是在一個安全的社區中，只有經過身份驗證的居民才能進入，保障了社區的安全與和諧。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）安全審計與日誌記錄&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;系統會對設備間的交互操作進行安全審計和日誌記錄，以便及時發現潛在的安全問題並進行追蹤和分析。這些日誌記錄包含了設備的操作行為、權限使用情況等重要信息，就像一個詳細的監控系統，為系統管理員和開發者提供了有力的工具，用於監控系統的安全性和排查故障。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;四、權限控制的不同應用場景與權限申請流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//6456b03bb1a4bc3ad2c85ec6b942504f.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;五、示例代碼：權限申請與檢測完整流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;以下是一個綜合的示例代碼，展示了從權限申請到檢測的完整流程，以設備發現和信息查詢為例：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//1762c16a126ebb4ae5162738163e1450.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//8604f525f6f1d6f980fb585bd978ec32.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在這個示例中，首先定義了 requestPermissions 函數用於申請設備發現和信息查詢權限，成功後調用 discoverDevicesAndQueryInfo 函數進行設備發現和信息查詢操作。在 discoverDevicesAndQueryInfo 函數中，分別檢測了設備發現權限和設備信息讀取權限，根據權限情況執行相應的操作，並處理可能出現的錯誤。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;六、常見的權限問題與優化策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）權限被拒絕的處理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;問題描述：用戶在應用請求權限時選擇拒絕，導致應用部分功能無法正常使用。&lt;br&gt; 優化策略：&lt;br&gt; - 提供友好的提示信息：當權限被拒絕時，應用應彈出詳細的提示框，向用戶解釋為什麼需要該權限以及拒絕權限可能導致的功能受限情況。例如，「您拒絕了設備發現權限，將無法搜索和連接周邊設備，是否重新考慮授予權限？」並提供「去設置」按鈕，方便用戶直接跳轉到系統設置頁面重新授權。&lt;br&gt; - 引導用戶手動開啓權限：在提示信息中，明確告知用戶如何手動開啓權限，如「您可以在系統設置 - 應用管理 - [應用名稱] - 權限中，手動開啓設備發現權限。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）權限申請時機優化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;問題描述：如果在應用啓動時一次性申請過多權限，可能會引起用戶反感，降低用戶體驗。&lt;br&gt; 優化策略：&lt;br&gt; - 按需申請權限：根據應用的功能流程，在用戶實際需要使用某個功能時，再申請相應的權限。例如，當用戶點擊設備發現按鈕時，才申請設備發現權限；當用戶嘗試查詢設備信息時，再申請設備信息讀取權限。&lt;br&gt; - 提前告知權限用途：在用戶操作即將觸發權限申請之前，提前彈出一個簡短的提示框，告知用戶接下來的操作需要申請某個權限以及該權限的用途，讓用戶有心理準備，提高用戶授權的可能性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）權限衝突與兼容性問題&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;問題描述：不同設備或系統版本可能對權限的支持和管理方式存在差異，導致應用在某些設備上出現權限相關的兼容性問題。&lt;br&gt; 優化策略：&lt;br&gt; - 進行兼容性測試：在應用發佈前，在多種不同型號、不同系統版本的設備上進行全面的權限兼容性測試，及時發現並解決可能出現的問題。&lt;br&gt; - 動態適配權限管理：根據設備的系統版本和特性，採用不同的權限申請和管理策略。例如，對於某些舊版本系統可能不支持動態權限申請，需要在應用安裝時就明確告知用戶所需權限；而對於新版本系統，可以充分利用其更靈活的權限管理機制，提供更好的用戶體驗。&lt;br&gt; HarmonyOS NEXT 的分佈式管理權限控制機制為分佈式應用的安全與隱私提供了堅實的保障。通過合理的權限設置、嚴格的安全策略以及有效的問題解決策略，我們開發者能夠構建出更加安全、可靠的分佈式應用，讓用戶在享受設備協同帶來的便捷的同時，無需擔憂數據安全和隱私問題。希望本文能夠幫助開發者更好地理解和應用這些權限控制技術，為 HarmonyOS NEXT 生態系統的繁榮貢獻力量。如果大家在開發過程中遇到其他問題或有更好的經驗分享，歡迎隨時交流哦！讓我們一起打造更加安全、智能的分佈式應用世界！哈哈，加油吧，各位開發者小夥伴們！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//a73b6b5a947aa33721662fdbe2e10472.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371810</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371810</guid>
      <pubDate>Thu, 11 Sep 2025 07:57:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>分佈式管理核心功能解析：網絡服務和數據傳輸的實現</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#333333"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;一、HTTP 數據傳輸：編織信息交互的紐帶&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）完備的請求方法集&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;HarmonyOS NEXT 在 HTTP 數據傳輸領域展現出了強大的實力，其支持的請求方法涵蓋了從數據獲取到資源操作的全方位需求。GET 方法如同一位精準的信息採集員，輕巧地從服務器擷取數據，而不觸動服務器的狀態分毫。在諸如新聞閲讀應用中，它負責將一篇篇精彩的新聞內容呈現在用戶眼前，讓用戶能夠輕鬆瀏覽最新資訊。&lt;br&gt; POST 方法則化身為數據的忠誠傳遞者，將用戶精心準備的數據穩穩地提交至服務器。想象一下在社交媒體應用裏，用戶發表一篇充滿創意的動態，POST 方法就會將這些文字、圖片等數據準確無誤地送達服務器，等待服務器的處理與存儲。&lt;br&gt; PUT 和 DELETE 方法宛如服務器資源的管理員，PUT 負責精心更新服務器上的資源，確保信息的時效性與準確性。比如在文檔協作應用中，當用戶對文檔進行修改後，PUT 方法就會將新的內容上傳至服務器，使其他協作者能夠看到最新的版本。DELETE 方法則果斷地刪除那些不再需要的資源，保持服務器資源的整潔有序，就像在文件管理應用中，用戶刪除無用文件時，DELETE 方法迅速執行清理任務。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）實戰示例與操作指南&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;為了讓大家更清晰地理解 HTTP 數據傳輸的實際應用，我們來看一個在線購物應用的案例。當用戶在應用中瀏覽商品時，需要從服務器獲取商品的詳細信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 導入關鍵模塊&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;首先，從&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;@kit.NetworkKit&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;中引入&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;http&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;命名空間，這是開啓 HTTP 數據傳輸之旅的關鍵鑰匙。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//3c828cda15513afaebf2dc74c60655ee.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 構建 HTTP 請求對象&lt;br&gt; 藉助&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;createHttp()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法，我們創建一個&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;HttpRequest&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;對象，它將成為後續數據傳輸操作的核心指揮官。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//2b5de69a1735d146419cc10bc6230866.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;3. 響應頭事件訂閲（可選操作）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;若希望在第一時間獲取服務器響應頭中的重要信息，可選擇訂閲 headersReceive 事件。例如，我們可以從中獲取服務器對請求的一些初始響應信息，如數據格式、緩存策略等。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//67847646ddf288ff33763a8d37a8a159.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;4. 發起 HTTP 請求&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;一切準備就緒後，調用&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;request()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法，傳入精心準備的 URL 地址及其他相關參數，正式向服務器發起 HTTP 網絡請求。在我們的購物應用場景中，假設服務器提供了獲取商品詳情的接口，地址為&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;"https://api.shopping.com/product"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//b2af0762bb719c608208ef3ed592f9d9.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在實際應用中，我們還可以根據服務器接口的具體要求，靈活定製請求頭字段。例如，若服務器需要用戶身份驗證信息，我們可以在&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;header&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;中巧妙添加相應的認證字段。對於 POST 請求，&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;extraData&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;字段則成為傳遞請求體數據的重要通道，比如用戶提交的商品評價等信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）錯誤應對與優化策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在 HTTP 數據傳輸的征程中，難免會遭遇各種挑戰，如網絡波動、服務器故障等。因此，一套完善的錯誤處理機制就如同堅固的盾牌，為應用保駕護航。&lt;br&gt; 當請求不幸失敗時，&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;request()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法的回調函數會及時返回一個&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;BusinessError&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;對象。通過仔細檢查這個對象的&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;code&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;屬性，我們能夠精準判斷錯誤類型，進而採取針對性的應對措施。若&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;code&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;為&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;403&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;，表示用戶權限不足，此時我們可以友好地提示用戶檢查權限設置，或者引導用戶進行權限申請操作；若遇到&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;500&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;錯誤，則可能是服務器內部出現問題，我們可以向用戶展示一個恰當的提示，告知用戶服務器暫時繁忙，請稍後重試。&lt;br&gt; 此外，為了進一步提升應用的性能和穩定性，還有一些值得借鑑的優化策略。在請求完成後，務必及時調用&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;destroy()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法銷燬請求對象，防止資源泄漏。同時，合理設置超時時間也是一門藝術，過長的超時時間可能會讓用戶陷入漫長的等待，影響體驗；而過短的超時時間可能會導致正常請求被誤判為失敗。開發者需要根據應用的具體需求，在響應速度和請求成功率之間找到微妙的平衡。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;二、網絡服務管理：掌控多網絡連接的智慧中樞&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）多網絡連接管理的卓越能力&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在分佈式的複雜環境中，設備往往置身於多種網絡連接的交織之中，HarmonyOS NEXT 的網絡服務管理功能就像一位睿智的領航員，引領應用在這片網絡海洋中順暢航行。&lt;br&gt; 網絡連接優先級管理功能賦予了開發者強大的掌控力，能夠根據應用的特性和需求，為不同的網絡連接精心安排優先級。以高清視頻播放應用為例，為了確保視頻播放的流暢性和畫質的高清體驗，開發者可以將 WiFi 網絡置於最高優先級。當設備同時接入 WiFi 和蜂窩網絡時，應用會毫不猶豫地選擇 WiFi 進行數據傳輸，讓用戶盡情享受高清視頻帶來的視覺盛宴；一旦 WiFi 信號出現波動或中斷，應用能夠迅速切換到蜂窩網絡，保證視頻播放的連續性，就像一位無縫切換的魔術師，讓用戶幾乎察覺不到網絡的變化。&lt;br&gt; 網絡質量評估功能則如同一位敏鋭的網絡偵探，實時監測網絡的各項關鍵指標，如網絡延遲、帶寬等。在在線遊戲這個對網絡要求極高的場景中，這一功能發揮着至關重要的作用。通過實時獲取網絡延遲信息，遊戲開發者可以根據網絡狀況動態調整遊戲畫面質量，當網絡狀況良好時，為玩家呈現精美絕倫的高清畫面；當網絡延遲較高時，適當降低畫面質量，優先保證遊戲的流暢性，避免玩家因卡頓而影響遊戲體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）網絡狀態檢測與響應機制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;為了使應用能夠與網絡狀態的變化保持同步，HarmonyOS NEXT 提供了一套高效的網絡狀態檢測機制，並支持訂閲豐富多樣的網絡狀態變化事件。&lt;/span&gt;&lt;br&gt; &lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;hasDefaultNet()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法宛如一位網絡狀態的偵察兵，快速檢查默認數據網絡是否處於激活狀態，為應用提供設備網絡連接的基本信息。在應用啓動的瞬間，通過這個方法可以迅速判斷設備是否已準備好與外界進行網絡通信。如果檢測到設備未連接網絡，應用可以立即彈出溫馨提示，引導用戶檢查網絡設置，確保用戶能夠順利使用應用的各項功能。&lt;/span&gt;&lt;br&gt; &lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getDefaultNet()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;和&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getAllNets()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法則像是網絡信息的探索者，幫助開發者深入瞭解網絡的詳細情況。&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getDefaultNet()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;能夠精準獲取默認網絡的關鍵信息，如網絡 ID 等；&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getAllNets()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;則更進一步，返回所有處於連接狀態的網絡信息列表。在多網絡環境下，這對於應用根據不同網絡類型和能力進行智能決策非常有幫助。例如，在文件傳輸應用中，根據不同網絡的帶寬情況，合理分配傳輸任務，充分利用網絡資源，提高傳輸效率。&lt;br&gt; 通過訂閲&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;netAvailable&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;、&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;netUnavailable&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;等事件，應用能夠在網絡狀態發生變化的第一時間得到通知，並迅速做出響應。就像在即時通訊應用中，當設備從無網絡狀態突然恢復網絡連接時，應用可以立即自動重新連接服務器，獲取最新的消息，讓用戶不錯過任何重要信息，始終保持與好友的緊密聯繫。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）示例代碼展示實戰技巧&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;以下是一段簡潔而實用的示例代碼，生動展示瞭如何在實際應用中巧妙運用網絡連接管理和狀態檢測功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 檢查默認網絡狀態&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//5e191dd4825a18264c782d074c30b5d0.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 獲取默認網絡信息&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//100946914ec629fb77c4ff1d990db591.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;3. 訂閲網絡狀態變化事件&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//1e7652f32263e09819aa3cbe9f754b06.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;三、支持的網絡請求方法與常見傳輸模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//18678d376e4086444d79590d0a7e8af6.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;四、提高數據傳輸效率的建議&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一） 數據傳輸優化策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 減少不必要的數據傳輸&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;在設計應用與服務器之間的數據交互時，精準確定所需數據，避免傳輸多餘信息。例如，在一個天氣應用中，如果只需要顯示當前城市的天氣狀況，就不要請求服務器返回全球天氣數據，減少網絡帶寬佔用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 採用增量更新&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;對於頻繁更新的數據，僅傳輸變化的部分，而非整個數據塊。以文檔協作應用為例，當多個用戶同時編輯一個文檔時，每次保存只發送修改的段落或字符，而不是整個文檔，降低數據傳輸量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二） 網絡優化技巧&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 智能網絡切換&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;利用 HarmonyOS NEXT 的網絡連接管理功能，根據網絡狀況自動切換最佳網絡連接。比如，在視頻會議應用中，當 WiFi 信號弱時，自動切換到蜂窩網絡，確保會議的連續性，同時在 WiFi 信號恢復良好時，又能及時切換回來，節省流量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 網絡緩存利用&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;合理利用瀏覽器緩存或應用內緩存機制，對於重複請求的數據，直接從緩存中獲取。例如，在一個新聞資訊應用中，用戶多次訪問同一新聞頁面時，從緩存讀取內容，減少服務器請求次數，加快頁面加載速度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三） 服務器端優化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 數據壓縮與優化&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;在服務器端對響應數據進行壓縮處理，如使用 gzip 或 deflate 等壓縮算法，減少數據傳輸大小。同時，優化數據庫查詢語句和服務器端代碼邏輯，提高數據獲取和處理效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 啓用 HTTP/2 協議&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;如果服務器支持，啓用 HTTP/2 協議，它允許多個請求複用同一個 TCP 連接，減少連接建立和銷燬的開銷，提高併發請求處理能力，提升整體性能。&lt;br&gt; 通過對 HarmonyOS NEXT 分佈式管理中網絡服務和數據傳輸功能的全面深入剖析，我們清晰地看到了其強大之處和潛在的優化方向。在實際開發過程中，開發者們應充分發揮這些功能的優勢，靈活運用各種優化策略，為用戶打造出更加高效、穩定、流暢的分佈式應用體驗。同時，不斷關注技術的發展和用戶需求的變化，持續探索和創新，讓分佈式應用在 HarmonyOS NEXT 的生態中綻放更加絢爛的光彩。如果在開發過程中遇到問題或有新的見解，歡迎大家積極在技術社區中交流分享，共同推動分佈式技術的進步！哈哈，相信大家在 HarmonyOS NEXT 的分佈式開發之路上會越走越順，創造出更多令人驚歎的應用！加油哦，各位開發者小夥伴們！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;（轉載自 51CTO，作者：SameX）&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//4d3859eba3a1c56d322fa0a4c7c366e5.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371808</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371808</guid>
      <pubDate>Thu, 11 Sep 2025 07:56:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙安全控件之位置控件簡介</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#000000"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;位置控件使用直觀且易懂的通用標識，讓用戶明確地知道這是一個獲取位置信息的按鈕。這滿足了授權場景需要匹配用戶真實意圖的需求。只有當用戶主觀願意，並且明確瞭解使用場景後點擊位置控件，應用才會獲得臨時的授權，獲取位置信息並完成相應的服務功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;一旦應用集成了位置控件，用戶點擊該控件後，無論應用是否已經申請過或被授予精準定位權限，都會在本次前台期間獲得精準定位的授權，可以調用位置服務獲取精準定位。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;對於不是強位置關聯應用（例如導航、運動健康等）的應用，只在部分前台場景需要使用位置信息（例如定位城市、打卡、分享位置等）。如果需要長時間使用或是在後台使用位置信息，建議申請位置權限。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;位置控件效果如圖所示。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//930084778adb1ad7e611907101d3e887.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;約束與限制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;當用戶首次點擊應用中的位置控件，系統將彈窗請求用戶授權。如果用戶點擊「取消」，彈窗消失，應用無授權，用戶再次點擊位置控件時，將會重新彈窗；如果用戶點擊「允許」，彈窗消失，應用將被授予臨時位置權限，此後點擊該應用的位置控件將不會彈窗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;精準定位的臨時授權會持續到滅屏、應用切後台、應用退出等任一情況發生，然後恢復到臨時授權之前的授權狀態（授予/未授予/未申請）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;應用在授權期間沒有調用次數限制。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;為了保障用戶的隱私不被惡意應用獲取，應用需確保安全控件是可見的且用戶能夠識別的。開發者需要合理的配置控件的尺寸、顏色等屬性，避免視覺混淆的情況，如果發生因控件的樣式不合法導致授權失敗的情況，請檢查設備錯誤日誌。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;開發步驟&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;以在聊天界面發送實時定位信息為例。在當前場景下，應用僅需要在前台期間，短暫地訪問當前位置，不需要長時間使用。此時，可以直接使用安全控件中的位置控件，免去權限申請和權限請求等環節，獲得臨時授權，滿足權限最小化，提升用戶的隱私體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;參考以下步驟，實現效果：點擊控件「當前位置」獲取臨時精準定位授權，獲取授權後，彈窗提示具體位置信息，效果圖請見上文。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 引入位置服務依賴。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//067c8890e69af9585a6337b48ec0a0f6.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;添加位置控件和獲取當前位置信息。&lt;br&gt; 安全控件是由圖標、文本、背景組成的類似 Button 的按鈕，其中圖標、文本兩者至少有其一，背景是必選的。圖標和文本不支持自定義，僅支持在已有的選項中選擇。應用申明安全控件的接口時，分為傳參和不傳參兩種，不傳參默認創建圖標+文字+背景的按鈕，傳參根據傳入的參數創建，不包含沒有配置的元素。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;當前示例使用默認參數，具體請參見 LocationButton 控件。此外，所有安全控件都繼承安全控件通用屬性，可用於定製樣式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;在 LocationButton 的 onClick() 回調中通過調用 geoLocationManager 模塊提供的方法獲取當前位置信息。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//e4f11a690ca1946c865776128ae3c0ef.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//eb5b7cf9924f68956bd9495bd67399b8.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;（轉載自 51CTO，作者：龍兒箏）&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//dafc4b45d0a54f54412c2767ab3f7895.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371807</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371807</guid>
      <pubDate>Thu, 11 Sep 2025 07:56:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>中國半導體協會副會長魏少軍：應停止使用英偉達 GPU</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-09-11%2Ftop-beijing-adviser-says-china-should-ditch-nvidia-for-own-tech" target="_blank"&gt;據《彭博社》報道&lt;/a&gt;，中國半導體行業協會副會長、中國資深學者和政府顧問魏少軍近日在新加坡召開的一個行業論壇上表示，包括中國在內的亞洲國家應該放棄將英偉達 GPU 用於 AI 開發，以減少對英偉達的依賴。&lt;/p&gt; 
&lt;p&gt;他警告説，亞洲公司尤其有可能受制於美國技術，依賴美國來源的硬件對中國及其區域同行構成長期風險。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-16d5ed4b748b8ac77be18a3c21a838ad90d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;魏少軍批評了整個亞洲目前的人工智能發展模式，這種模式與美國使用 Nvidia 或 AMD 的計算 GPU 來訓練類似 ChatGPT 和 DeepSeek 這樣的大型語言模型的路徑非常相似。他認為，這種模仿限制了區域自主性，如果不加以解決，可能會變得「致命」。魏少軍表示，亞洲的策略必須與美國的模板背道而馳，特別是在算法設計和計算基礎設施等基礎領域。&lt;/p&gt; 
&lt;p&gt;長期以來，Nvidia 憑藉其專業硬件（張量核心、混合精度格式）、緊密的軟件集成以及廣泛的雲服務和 OEM 支持，鞏固了其在人工智能訓練和推理方面的領先地位，使其 GPU 成為人工智能訓練和推理的默認計算骨幹。Nvidia 的現代架構，如數據中心的 Blackwell，為人工智能訓練和推理進行了大量優化，與圖形幾乎無關。&lt;/p&gt; 
&lt;p&gt;相比之下，魏少軍所倡導的專用 ASIC（應用特定集成電路）尚未在訓練或推理方面獲得廣泛認可。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371804</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371804</guid>
      <pubDate>Thu, 11 Sep 2025 07:54:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>鴻蒙 hvigor 構建任務依賴與生命週期簡介</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#000000"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;Hivgor 腳本文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在構建的生命週期中 Hvigor 使用兩個腳本文件來完成插件、任務以及生命週期 hook 的註冊：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;strong&gt;&lt;span style="color:#333333"&gt;hvigorconfig.ts&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：此文件在整個項目中只有根目錄下存在一份，不是構建必須的文件並且默認不存在，如有需要可自行創建，此文件被解析執行的時間較早，可用於在 Hvigor 生命週期剛開始時操作某些數據。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;strong&gt;&lt;span style="color:#333333"&gt;hvigorfile.ts&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：此文件在每個 node 下都有一份，是構建的必須文件，在此文件中可以註冊插件、任務以及生命週期 hook 等操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;任務與任務依賴圖&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;Hvigor 是基於任務對您的項目進行自動化構建的，任務（Task）是 Hvigor 構建過程中的基本工作單元，它定義了構建項目時需要執行的具體工作。任務可以完成多種操作，比如源碼編譯任務，打包任務或簽名任務等。每一種任務的執行邏輯由插件（plugin）提供，插件可以是由 hvigor-ohos-plugin 提供的默認任務邏輯，也可由您個性化定製。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;需要注意的一點是，任務是存在依賴關係的，Hvigor 在執行任何任務之前會構建任務依賴圖，所有任務會形成一個有向無環圖（DAG），如下示例圖，任務之間的依賴關係用箭頭進行表示：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//ae3b9b33a2863428a2130495e1a125a6.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;hvigor 插件（hvigor-ohos-plugin）和 hvigorfile.ts 文件中的構建腳本都將通過任務依賴機制對任務依賴圖做出影響。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;hvigor-ohos-plugin&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;hvigor-ohos-plugin 是默認的構建插件，為任務（Task）的完成提供業務邏輯支持，比如為 Hvigor 提供 Hap、Har 和 Hsp 打包服務等任務，每一種任務的具體執行邏輯由本模塊中不同的插件來提供。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;Hvigor 與 hvigor-ohos-plugin 的關係&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;概述部分提到了 Hvigor 提供任務註冊編排以及配置管理等任務管理機制，它負責控制任務的執行流程，但是並不包含每一個任務的具體業務邏輯，具體邏輯是由 hvigor-ohos-plugin 提供的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;Hvigor 和 hvigor-ohos-plugin 的關係可以通過下圖來説明，Hvigor 接受任務的註冊並編排任務執行順序，並按照順序依次調用 hvigor-ohos-plugin 中的插件來執行任務。如果您定製了自己的任務邏輯插件並將其註冊，hvigor-ohos-plugin 也會調用您的個性化插件來完成編譯構建流程。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在 Hvigor 執行構建的過程中，hvigor-ohos-plugin 會向 Hvigor 進行任務的註冊，Hvigor 會根據構建的任務執行有向圖依次調用對應的插件來執行相應任務，在完成編譯、打包、簽名等一系列任務後，Hvigor 也就正式完成了構建。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//186c1a7c228c6f7a025ccf916642db44.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;Hvigor 生命週期&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;生命週期展示了 Hvigor 編譯構建系統如何進行一次完整的編譯構建流程。Hvigor 的編譯構建過程有三個不同的階段，分為初始化、配置和執行，Hvigor 會按順序運行這些階段。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;strong&gt;&lt;span style="color:#333333"&gt;初始化&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：此階段主要目的為初始化項目的編譯參數，構造出項目結構的樹形數據模型，每個 node 為一個 HvigorNode 對象。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;strong&gt;&lt;span style="color:#333333"&gt;配置&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：此階段開始時，所有的 node 都已經加載完畢，但每個 node 中還沒有加載插件（plugin）、任務（task）和 DAG 圖，此階段的主要目的就是加載出這些內容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;strong&gt;&lt;span style="color:#333333"&gt;執行&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：任務之間的依賴關係決定了任務執行順序，任務可以並行執行&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;生命週期及 hook 點&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在 Hvigor 的生命週期中，以下多個 hook 點可供您使用，便於您在對應的時機調用某些邏輯。在下圖中所有綠色標記的線框為可以使用的 hook 點&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//13b80210dd98755cdc833b8b1121acd3.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;（轉載自 51CTO，作者：龍兒箏）&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//44d6733f330e2fdff90d82dfbafa97f9.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371803</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371803</guid>
      <pubDate>Thu, 11 Sep 2025 07:50:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
  </channel>
</rss>
