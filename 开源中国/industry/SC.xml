<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Mon, 15 Apr 2024 14:29:26 GMT</lastBuildDate>
        <ttl>1</ttl>
        <item>
            <title>华为自用的时序数据库开源啦，来看看水平怎么样？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;p&gt;数十年来，时间序列数据库（TSDB）的使用在各个行业中都很普遍，特别是在金融和工业控制系统中。然而，物联网 (IoT) 的出现导致时间序列数据（简称时序数据）量激增，对数据库的性能和存储成本提出了更高的要求，从而促进了对专用时序数据库的需求。&lt;/p&gt; 
&lt;p&gt;面对遗留时序解决方案的架构过时、扩展性有限等问题，新一代时序数据库应运而生，它们采用了现代架构，可实现分布式处理和水平扩展，以及云或本地的灵活部署。&lt;/p&gt; 
&lt;p&gt;2022 年底，又一重磅产品加入了开源时序数据库这一赛道，并在短短一年内在 60 余家企业测试和生产落地，吸引了 70+来自国内外重点高校和企业的贡献者——openGemini，华为开源的分布式时序数据库，主要聚焦于海量时序数据的存储和分析，通过技术创新，简化业务系统架构，降低海量时序数据的存储成本，提升时序数据的存储和分析效率。&lt;/p&gt; 
&lt;p&gt;今天，我们邀请到了 openGemini 社区负责人向宇，一起来聊聊，他们的开源故事~&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;01 源自内部需求，逐步走向自研&lt;/h1&gt; 
&lt;p&gt;openGemini 的研发，最开始也是源于华为自身的需求。&lt;/p&gt; 
&lt;p&gt;2019 年，随着华为云的成立，广州、上海、北京、贵州和香港等地的数据中心纷纷拔地而起，并陆续上线了 260+云服务，平均每天采集的监控指标数据达数 TB，原有大数据解决方案逐渐不堪重负。数据量越大，查询效率越低，数据存储成本持续上升，急需一款高性能、高扩展性的专用时序数据库。&lt;/p&gt; 
&lt;p&gt;在当时，并没有什么好用的、能跟得上需求发展的时序数据库产品。InfluxDB 还是单机版，国内 Apache IoTDB 和 TDengine 还远不能达到生产要求。因此，华为决心做自己的数据库，优化数据处理工作，解决眼下十分要紧的业务问题。在这样的背景下，openGemini 应运而生。&lt;/p&gt; 
&lt;p&gt;据向宇介绍，在技术选型上，他们一开始在开源 InfluxDB 的基础上进行集群化改造。但随着指标数量的增加和采集频率的提高，日增数据量已达数十 TB。这时，InfluxDB 自身架构的缺陷开始凸显，影响到系统的性能和稳定性。于是，他们选择了对架构进行重构，开始了 openGemini 内核的自研之路。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;02 个性独特，性能抢跑&lt;/h1&gt; 
&lt;p&gt;openGemini 自诞生起就跟华为自家业务的需求联系紧密，所以每一个设计都充满了实用的考量。具体来说，openGemini 区别于别的时序数据库，主要有 9 大「个性」：&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;性能优势：&lt;/strong&gt;在 openGemini 差异化竞争力中，高性能是最重要的一项。在海量数据场景下，openGemini 相比开源 InfluxDB，简单查询场景提升 2 倍多，中等查询场景提升 5 倍多，复杂查询场景提升 10 倍以上。相比其他同类开源产品，openGemini 同样具有明显性能优势。&lt;/p&gt; 
&lt;p&gt;官方公布的单机写性能如下（测试工具为 TSBS，相关测试细节请参考 openGemini 官网文档）：&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;228&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-de812ae1d8c26bc1df63e46fd3b1a11eb32.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;官方公布的 DevOps 场景下单机查询性能对比（平均时延，ms）：&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;833&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a38c072ed409ce2823aff1fa4a1c7587ff.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;官方公布的 IoT 场景下单机查询性能对比（平均时延，ms）：&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;688&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-22a165925c60972c7572c86c2391729ad9c.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;除此之外，openGemini 在数据存储和数据分析方面推出一系列实用功能，以此构建更多差异化竞争力：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;独特的&lt;/strong&gt;&lt;strong&gt;分布式架构&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;openGemini 提供了单机和分布式集群两种版本，其中分布式集群采用的是 MPP 大规模并行处理分层架构，将计算引擎，存储引擎和元数据管理划分为独立的组件，分别是 ts-sql、ts-store、ts-meta 。不同组件支持独立横向扩展，使得面对复杂的应用场景也能灵活应对。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;高基数引擎：&lt;/strong&gt;高基数问题（也称之为维度灾难）会带来倒排索引膨胀，从而引起内存资源消耗过高、读写性能降低的问题，长期以来一直困扰着时序数据库的发展。openGemini 高基数引擎通过构建时序专用的稀疏索引，进而彻底解决了这一难题，非常适合在网络监控、金融风控、物联网、交通等领域使用。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;657&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-11c34ffc923d5bdf235982a715928bb04d2.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;文本&lt;/strong&gt;&lt;strong&gt;检索：&lt;/strong&gt;文本数据是一种常见的数据类型，openGemini 支持在文本数据之上创建索引，采用动态的学习型分词方法，支持精确、短语和模糊匹配，且具有内存资源占用少，检索效率高的优点。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;流式聚合：&lt;/strong&gt;流式聚合是一种前置聚合方式，一边写数据、一边对数据进行降采样，其目的是解决传统降采样方法从磁盘读取大量历史数据进行计算，造成 I/O 放大严重的问题。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;多级&lt;/strong&gt;&lt;strong&gt;降采样&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;对于存量的历史数据，传统降采样方式会保留历史数据明细。在某些场景下，历史数据明细并不重要，只需保留数据特征即可，多级降采样功能可以实现对历史数据明细的特征提取，并原地替换历史数据明细，可进一步降低 50% 的存储成本。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;异常检测和预测：&lt;/strong&gt;异常检测和预测是目前时序数据分析最成熟的应用之一，被广泛应用于量化交易、网络安全检测和数据中心、工业设备和 IT 基础设施的日常维护等场景中。openGemini 提供了一个异常检测库——openGemini-castor，封装了常见的 13 种异常场景的检测算法，具有检测速度快、准确性高、流批一体的优点，帮助应用提高数据分析效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;数据冷热&lt;/strong&gt;&lt;strong&gt;分层存储：&lt;/strong&gt;支持将历史数据转存到对象存储上，可实现低成本方式本永久保留历史数据，还能支持大数据离线分析。【该功能计划 H2 对外发布】&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;数据可靠性&lt;/strong&gt;：支持多计算副本，进一步提升数据可靠性。【该功能计划 H2 对外发布】&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;533&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-69155de7010c43c5cbf3e67b77b94822694.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;03 注重使用体验，入门更方便&lt;/h1&gt; 
&lt;p&gt;openGemini 不仅性能够强，它独特的设计，在实际的应用中，还能带来很多舒适的体验：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在入门方面&lt;/strong&gt;，openGemini 与 InfluxDB v1.x 的生态完全兼容，接口、生态工具等直接通用，InfluxDB 用户可以无障碍迁移。同时，openGemini 采用了跟 InfluxDB 一样的 Line Protocol，数据建模简单，且容易理解，对关系型数据库的开发者也很友好。最后，openGemini 使用类 SQL 查询语言，无需额外学习，上手容易。集群部署上，社区还提供了一键部署工具 Gemix，省去了大量的配置工作。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在&lt;/strong&gt;&lt;strong&gt;操作系统&lt;/strong&gt;&lt;strong&gt;方面&lt;/strong&gt;，openGemini 目前已支持主流 Linux 系统（含 openEuler）、Windows 和 MacOS，应用开发调试更加方便。处理器支持 X86 和 ARM64 两种架构。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在云原生方面&lt;/strong&gt;，openGemini 提供了 Dockerfile 和 Docker 镜像，支持 Docker、K8s、KubeEdge 等平台的部署。由于容器重新拉起后，IP 地址随之变化，openGemini 新增域名功能，确保集群节点在容器重启后依然可以保持连通。社区还创建了 openGemini-operator 项目，方便用户一键式容器化部署。openGemini 支持普罗米修斯远程读写，可以作为普罗米修斯的一个后端存储，解决它存储能力不足的问题。【btw：openGemini 还将直接支持 PromQL，目前正在开发中】&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在可观测性方面&lt;/strong&gt;，社区开发了 ts-monitor 组件，专门采集节点和内核指标，分为 19 个子类，260 余项，可搭配 Grafana 实现对 openGemini 运行状态的全面监控。例如 CPU 和内存利用率、写入带宽、写时延、写并发、QPS 等指标可以通过可视化界面一目了然，方便随时查看运行状况、数据库性能调优和精准定位问题。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_4&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;04 经过内部实战考验，回馈开源&lt;/h1&gt; 
&lt;p&gt;openGemini 作为时序数据库，目前最常见的使用场景就是物联网和运维监控，在处理海量数据这方面，有着普通数据库无法比拟的优势。同时，openGemini 作为华为内部的项目，已经经过了「自家人」的考验：&lt;/p&gt; 
&lt;p&gt;华为云 SRE 使用 openGemini 作为监控数据存储底座，全网共部署 25 套集群，最大集群规模 70 个节点，成功经受住了每秒 4 千万条数据写入和 5 万次的并发查询的实战考验。相比原有解决方案，在承载相同业务的情况下，较原系统端到端时延降低 50%，CPU 资源上可以节省 68%，内存资源可以节省 50%，硬盘资源可以节省 90% 以上。&lt;/p&gt; 
&lt;p&gt;华为云的工业物联平台，之前一直用的 InfluxDB 的单机版，自从切换到 openGemini 上来后，再也不用被吞吐量困扰了，端到端和查询性能提升了 3 倍，设备接入量提升到了百万级。&lt;/p&gt; 
&lt;p&gt;向宇介绍，openGemini 源自开源，从 InfluxDB 开源项目中受益良多，因此秉承开源的精神，将 openGemini 的全部代码开源，希望全球更多的企业和开发者从中获益，也希望通过开放的社区平台，和广大开发者一起，共同推动技术创新，共享开源成果。&lt;/p&gt; 
&lt;p&gt;目前，openGemini 只有开源版和云服务，并不打算涉足线下商业版本，且有意愿向基金会捐献。当下，社区尚有诸多未完善之处，接下来，社区将会进一步丰富 openGemini 的生态工具（诸如数据迁移工具、SDK、大数据生态集成等）、可视化管理界面、以及文档等等。&lt;/p&gt; 
&lt;p&gt;「目前，社区的技术规划总体上会围绕物联网、运维监控和可观测性这三个重要应用场景，加强相关技术生态兼容和内核能力建设，我们正在着手论证 openGemini 下一代的软件架构。」向宇说。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;552&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cb6eee0e48758741e3e275a19d88314e668.png&quot; width=&quot;768&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;「短时间内，openGemini 不会考虑工业相关场景，因为工业领域的业务场景非常复杂，实时性要求极高，工业软件厂商的护城河很深，时序数据库能做的事情有限。此外，社区缺乏行业背景，对这方面的场景还不够了解。之后，我们会考虑寻找一些工业领域的伙伴，比方说工业软件供应商、解决方案提供商等，一起去合作、完善。」向宇说。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;openGemini 官网主页: &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.openGemini.org%2F&quot; target=&quot;_blank&quot;&gt;https://www.openGemini.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;openGemini 开源地址: &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FopenGemini&quot;&gt;https://github.com/openGemini&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/6852546/blog/11052794</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/11052794</guid>
            <pubDate>Mon, 15 Apr 2024 10:58:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>开源日报 | AI 程序员造假；「纯血」鸿蒙真机界面；谷歌发明「无限注意力」技术；成为顶尖程序员的最佳方式</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.4.15&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/287772&quot; target=&quot;_blank&quot;&gt;国家天文台人工智能工作组发布大模型 「星语 3.0」&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;中国科学院国家天文台人工智能工作组发布新一代天文大模型 ——「星语 3.0」。「星语 3.0」 基于阿里云通义千问开源模型打造，目前已成功接入国家天文台兴隆观测站望远镜阵列 --Mini 「司天」，可实现自主控制望远镜进行观测、分析观测结果，智能地给出下一步观测建议。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/287730/apples-first-ios-18-ai-features-no-cloud&quot; target=&quot;_blank&quot;&gt;苹果 iOS 18 的首批 AI 功能将完全运行于设备端&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;彭博社记者 Mark Gurman&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Fnewsletters%2F2024-04-14%2Fhumane-ai-pin-review-the-device-isn-t-going-to-kill-apple-s-iphone-luziqlew&quot; target=&quot;_blank&quot;&gt;报道称&lt;/a&gt;，苹果计划为 iOS 18 推出的首批 AI 功能将完全在端侧上运行，不依赖云服务器。iOS 18 预计不会包含苹果自己的类 ChatGPT 的聊天机器人，但目前还不清楚 Gemini 或其他聊天机器人是否会直接集成到 iOS 18 中。&lt;/p&gt; 
&lt;p style=&quot;color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify&quot;&gt;Gurman 补充，苹果可能未来会提供一些基于云端的 AI 功能，此前有报道称苹果已经和 Google、OpenAI 和百度等公司就 AI 上的合作进行了讨论，不过有知情人士否认了百度和苹果之间关于 AI 的合作。&lt;/p&gt; 
&lt;p style=&quot;color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify&quot;&gt;科技媒体&amp;nbsp;MacRumors 则&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.macrumors.com%2F2024%2F04%2F14%2Fapples-first-ios-18-ai-features-no-cloud%2F&quot; target=&quot;_blank&quot;&gt;分析认为&lt;/a&gt;苹果仍有可能推出自家基于云的生成式 AI，因为此前也有消息指出，苹果正在积极购买 AI 服务器。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/285570/grok-1-5&quot; target=&quot;_blank&quot;&gt;马斯克宣布 Grok-1.5，上下文长度至 128K&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;马斯克 xAI 的多模态模型 Grok-1.5V 横空出世了！不仅多项基准测试超越 GPT-4V，而且看懂梗图写 Python 代码也都不在话下。并且，为了评估模型对于真实世界的空间理解，xAI 此次还推出了新基准 RealWorldQA。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;up-ba48e3a191794875b74ee269bd5216fc05f.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ba48e3a191794875b74ee269bd5216fc05f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2214340953%2FO9GVUtbdj&quot; target=&quot;_blank&quot;&gt;HarmonyOS NEXT 真机上手&lt;/a&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;博主&amp;nbsp;@Flanker_017 在微博晒出 HarmonyOS NEXT 真机上手图，展示了新系统的操作界面。博主透露，新版本中原生 Android 应用已经无法使用。「如果本地数据多的，比如微信聊天、笔记软件，还是得给方案的，否则即使能从云端重新拉，用户体验也太差」。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-73f0f11c641b2ed43a85cdf8b1e8622d7d4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-af5cd779870dd97018278e3a9957e3a3a92.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;Flanker_017&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1905352345%2FO9Ils5e6S&quot; target=&quot;_blank&quot;&gt;中国是人工智能大模型开源最大的受益者&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;中国不仅成了人工智能大模型开源最大的受益者，甚至是唯一受益的国家。一旦美国公司公开源 Chat GPT 和 Grok 背后的软件，中国几十家公司马上一涌而上，纷纷拷贝后推出自己的模型。其他囯家如日本和德国，不会有公司这么做，因为可以直接使用美国的大模型，即使做了，用户也会特别少，肯定是亏本的买卖。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;猴年马月的中国&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5648162302%2FO9DEXiyvy&quot; target=&quot;_blank&quot;&gt;通过游戏化的方式来学习编码是成为顶尖程序员的最佳方式&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-787c26745646bb887765564b645dabd2642.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;黄建同学&lt;/strong&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2734113620420865&quot; target=&quot;_blank&quot;&gt;首个 AI 程序员造假被抓，Devin 再次「震撼」硅谷，扒皮视频文字详解附上&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;不久之前震撼硅谷的 Devin，再度震撼硅谷——但这次是被打假。事情是这样的：油管程序员博主 Internet of Bugs（以下简称光头哥）对 Devin 的视频进行了逐帧分析，逐一举证说明了 Devin 并不如演示中那般神奇。&lt;/p&gt; 
 &lt;p&gt;其它「罪证」，包括但不限于：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;号称能解决任何 Upwork 任务，但演示中解决的问题并不是 prompt 要解决的那一个，做无用功；&lt;/li&gt; 
  &lt;li&gt;看起来在修复 bug，实际上修复的 bug 人类程序员根本就不会犯；&lt;/li&gt; 
  &lt;li&gt;没有意识到简单两步就能解决问题，花里胡哨一顿操作，其实是自己把任务搞复杂了；&lt;/li&gt; 
  &lt;li&gt;修改代码的水平一言难尽。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;此外，光头哥花了半个多小时，把 Devin 演示视频中的 upwork 任务完成了一遍——而 Devin 完成任务可能用时 6 个多小时。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;- &lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8Ymo4GO7AA9&quot; target=&quot;_blank&quot;&gt;2024 年生成式人工智能进化成什么样了？&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;AIGC 交互界面的用户友好性、大模型开源及 API（应用程序编程接口）价格的降低、插件服务带来的应用生态繁荣等，都使得 AI 技术或将成为像水、电、网络一样的基础设施，渗透并改变千行万业。&lt;/p&gt; 
 &lt;p&gt;根据爱设计等多平台联合发布的《2024 年 AIGC 发展趋势报告》，在医疗领域，AI 的应用已能够精准辅助诊断，例如 Google Health 的深度学习模型，在乳腺癌筛查中的准确率已超越人类专家。利用强大的图像识别和模式分析能力，这些模型可以从成千上万的 X 光片中识别出极易被人眼忽视的细微变化。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;- &lt;strong&gt;北京青年报&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8YnbzH2bGeU&quot; target=&quot;_blank&quot;&gt;挑战英伟达，谁最可能成为颠覆者？&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;在人工智能浪潮里掘金的「铲子」成了硬通货。GPU（图形处理器）是发展人工智能的关键芯片， 科技巨头英伟达凭借其 GPU 在人工智能芯片市场一家独大，占据约 80% 的份额。&lt;/p&gt; 
   &lt;p&gt;AI 芯片价格高昂，依然稀缺，Meta、谷歌、超威半导体（AMD）、英特尔、微软等科技巨头纷纷挑战英伟达的市场统治，推出对标产品。芯片大战愈演愈烈，谁是潜在颠覆者？&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp; &lt;strong&gt;澎湃新闻&lt;/strong&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pingwest.com%2Fa%2F294057&quot; target=&quot;_blank&quot;&gt;还在卷长文本？谷歌最新论文直接把文本干到…无限长了&lt;/a&gt;&lt;/h4&gt; 
   &lt;div&gt; 
    &lt;p&gt;当人们还在比拼上下文窗口的时候，谷歌发布了这样一篇论文《Leave No Context Behind: Efficient Infinite Context Transformers with Infini-attention》。论文中写到，团队发明了一种新的注意力技术，叫做「无限注意力」（Infini-attention），通过这项技术，能使 transformer 大模型在有限的计算资源条件下，处理无限长度的输入。&lt;/p&gt; 
    &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp; &lt;strong&gt;品玩&lt;/strong&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flihaoyun6%2FAirBattery&quot; target=&quot;_blank&quot;&gt;lihaoyun6/AirBattery&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;Preview&quot; height=&quot;289&quot; src=&quot;https://static.oschina.net/uploads/img/202404/09170317_qzUn.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flihaoyun6%2FAirBattery&quot; target=&quot;_blank&quot;&gt;https://github.com/lihaoyun6/AirBattery&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;AirBattery 是一款用来在 Mac 菜单栏或者程序坞（Dock）上显示你的所有苹果设备电量信息的开源工具，只需要这些设备在同一个局域网内即可。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;对于 iPhone 或插卡版 iPad 可以通过蓝牙显示电量，无需局域网。 ​​​&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/11050396&quot; target=&quot;_blank&quot;&gt;C++ 从遗忘到入门&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#3e3e3e&quot;&gt;本文主要面向的是曾经学过、了解过 C++ 的同学，旨在帮助这些同学唤醒 C++ 的记忆，提升下自身的技术储备。如果之前完全没接触过 C++，也可以整体了解下这门语言。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;326&quot; src=&quot;https://oscimg.oschina.net/oscnet/2633db2e-5d92-4e5e-9647-b5deb0ce597b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;事件点评&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287790/microsoft-openai-dall-e-military-use&quot; target=&quot;_blank&quot;&gt;微软向美国军方 「推销」 DALL-E&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftheintercept.com%2F2024%2F04%2F10%2Fmicrosoft-openai-dalle-ai-military-use%2F&quot; target=&quot;_blank&quot;&gt;The Intercept&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;日前公布的文件显示，微软曾于 2023 年 10 月向美国军方推荐，使用&amp;nbsp;OpenAI 开发的图像生成工具 DALL-E&amp;nbsp;来帮助构建执行军事行动的软件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;而就在今年 1 月份，OpenAI&amp;nbsp;对其&amp;nbsp;AI 模型使用条款进行一番&lt;a href=&quot;https://www.oschina.net/news/275867&quot;&gt;大更新&lt;/a&gt;：将原本禁止的&amp;nbsp;「军事与战争」 从页面中删除，留下的只有禁止使用 &quot;我们的服务伤害自己或他人&quot;，包括 &quot;开发或使用武器&quot;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;微软在 PPT 中重点介绍了 OpenAI 可提供的各种 「常见」 用途，其中就包括了国防。且文件中例举的 「高级计算机视觉训练」 下的一个要点是 「战斗管理系统」：使用 DALL-E 模型创建图像，训练战斗管理系统。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-93f44247ae214f4586714c12d2671e5f5ae.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;这一事件引发了关于 AI 技术军事应用的伦理和道德问题的广泛讨论。微软和 OpenAI 的这一举措可能被看作是 AI 技术向军事领域的扩展，引发了公众对 AI 技术在军事应用中可能产生的负面影响的担忧。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;也凸显了大型科技公司与军事机构之间日益紧密的联系。微软和 OpenAI 的这一合作可能成为其他科技公司与军事机构合作的先例，进一步推动军事机构采用高科技手段。还反映了开源社区对于 AI 技术应用的监管挑战。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287615/apple-ai-m4-chips-macs-line&quot; target=&quot;_blank&quot;&gt;彭博社：苹果计划以 AI 为重点的 M4 芯片改造 Mac 产品线&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;彭博社援引知情人士&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-04-11%2Fapple-aapl-readies-m4-chip-mac-line-including-new-macbook-air-and-mac-pro&quot; target=&quot;_blank&quot;&gt;消息称&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;，为了刺激低迷的电脑销售，苹果公司计划生产新的 M4 处理器以全面改造其整个 Mac 产品线，从而突出 AI 功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;报道指出，M4 芯片将至少分为三个不同的级别，包括代号为 Donan 的入门级 M4 芯片、中端的 Brava 芯片和性能最高的 Hidra 芯片。这三个版本的芯片都将拥有高于 M3 的 AI 处理能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4b873d2a11a318754f6315c42b0e6c81f6f.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;苹果公司的这一决策对 IT 行业和人工智能领域产生了深远的影响。首先，它标志着苹果在 AI 领域的进一步深入，通过推出性能更强大的 M4 芯片，苹果能够提供更先进、更智能的 Mac 产品。这将增强苹果在高端计算市场的竞争力，特别是在需要高性能 AI 计算的场景中。&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;其次，这一举措可能对其他 PC 制造商产生压力，迫使他们也加大对 AI 技术的投入，以保持竞争力。随着 AI 在日常计算任务中的重要性日益增加，能够提供强大 AI 支持的产品将更受消费者欢迎。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287732/microsoft-testing-app-ads-windows-11s-start-men&quot; target=&quot;_blank&quot;&gt;微软在 Windows 11 「开始」 菜单中测试应用广告&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;微软已开始在 Windows 11 开始菜单中测试广告，该公司&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2024%2F04%2F12%2Fannouncing-windows-11-insider-preview-build-22635-3495-beta-channel%2F&quot; target=&quot;_blank&quot;&gt;表示&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;，这项新实验将帮助用户在 Microsoft Store 中找到新的 「出色」 应用程序。目前该试用版已在 Windows 11 Insider Preview Build 22635.3495 的 &quot;一小部分 Insiders&quot; 测试版渠道中推出。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;这些广告将显示在 「开始」 菜单的 「推荐」 部分、最近添加的应用程序以及经常打开的文件和程序中。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;277&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2dc5a1e24a5711ca5ec96b7dbe048bf4eb5.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;这一事件对 IT 行业和用户体验产生了影响。首先，它代表了微软在 Windows 11 中的新尝试，旨在提升用户体验和增加 Microsoft Store 的可见度。然而，这也可能引起一些用户的不满，因为广告可能会干扰他们的日常使用。&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;其次，这一事件反映了微软在盈利模式上的探索。通过在「开始」菜单中展示应用广告，微软可能会增加其收入来源，同时推广 Microsoft Store 中的应用。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.163.com%2Fdy%2Farticle%2FIVQ9E5Q90511CPMT.html&quot; target=&quot;_blank&quot;&gt;开源 GPU，能否弯道超车英伟达？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;/div&gt; 
&lt;p&gt;说到开源，近年来，RISC-V 开源指令集架构在 CPU 领域已经取得了巨大的成功，其开放、灵活、可定制的特点吸引了越来越多的关注和应用。如今，RISC-V 也开始在 GPU 领域崭露头角，一些项目和产品已经取得了初步的成果。RISC-V 能否在 GPU 领域复制 CPU 领域的成功？&lt;/p&gt; 
&lt;p&gt;面对英伟达在 GPU 领域的垄断地位，开源能否成为破局之道？&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;半导体行业观察&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pingwest.com%2Fa%2F294031&quot; target=&quot;_blank&quot;&gt;面壁不只要做中国 Mistral，还要超过它&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;时隔七十多天，面壁在发布了 MiniCPM-2B 后又带来四个特性鲜明的模型，同时它还官宣了数亿元的新融资。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次融资由春华创投、华为哈勃领投，北京市人工智能产业投资基金等跟投，知乎作为战略股东持续跟投支持。这是其成立后最大的一笔融资。这家常被拿来对标 Mistral 的公司，并不满足于只做一个「中国 Mistral」，弹药充足后，它要把「打精锐」这件事进行到底了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;品玩&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8YnqPgyeBQd&quot; target=&quot;_blank&quot;&gt;北大字节开辟图像生成新范式！超越 Sora 核心组件 DiT，不再预测下一个 token&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;北大和字节联手搞了个大的：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;提出图像生成新范式，从预测下一个 token 变成预测下一级分辨率，效果超越 Sora 核心组件 Diffusion Transformer（DiT）。并且代码开源，短短几天已经揽下 1.3k 标星，登上 GitHub 趋势榜。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;实验数据上，这个名为 VAR（Visual Autoregressive Modeling）的新方法不仅图像生成质量超过 DiT 等传统 SOTA，推理速度也提高了 20+倍。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cet.com.cn%2Fxwsd%2F10038771.shtml&quot; target=&quot;_blank&quot;&gt;智谱 AI 张鹏亮相央视《对话》解读 AI 趋势：AGI 仍有很多问题值得探索，尚未看到天花板&lt;/a&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;提及目前人工智能的技术革新，张鹏将其类比做「蒸汽机改良阶段」，他认为，业界已经基本一致地接受大模型是通向 AGI(通用人工智能) 的一个有效路径，但仍然有很多问题值得去探索。如果将目标定在 AGI，其中每一个问题的突破都有可能带来飞跃式的发展，目前尚未看到天花板。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;张鹏同时认为，有了大模型之后，未来人与机器之间的沟通，会越来越贴近自然语言的方式，这是人类所希望且一定会往这个方向发展的。但未来对程序员的定义会有变化，未来传统程序员会越来越少，而建立在机器和人之间新的沟通方式上的，所谓「新式程序员」可能会需要更多。他表示：大家讨论问题的时候很容易忽略另外一个因素——时间，容易高估技术的短期价值，低估技术的长期价值。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;中国经济新闻网&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FIMazIQV1rssXAKAS-IDs2Q&quot; target=&quot;_blank&quot;&gt;「纯血」鸿蒙真机界面曝光&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：Android Linux kernel 套 nodejs&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：不管有没有套壳，如果它能把 Windows 市场啃下来一大半，我都要给它点赞&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：这个「纯血」也太中二了吧，底层不是安卓？不是 linux？重新写了指令集，重新定义了操作系统？&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：重写了 5 进制&lt;img alt=&quot;[旺柴]&quot; src=&quot;https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;(西方 2 进制，苏联 3 进制，血统都不纯了)&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：底层早就不是安卓了，至于 Linux，大部分系统的底层都是类 linux 或者 unix 系统，果按照你这个说法，那安卓和 iOS 都不是纯血的了&lt;img alt=&quot;[旺柴]&quot; src=&quot;https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;纯血鸿蒙的定义一直都是剥离安卓底层，而不是 linux 底层&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：截图里的图标和小组件的圆角看起来好粗糙&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：华为的 ICON 还是那股味道，浓重的重机械风。next 能不能成真的不好说。如果是十年前，应该会凉掉。2024 年来说，现在多端开发成熟，华为只要不搞得太复杂，平移成本不大开发者都应该乐于入坑的。（考虑备案的事情，说明你的项目不赚钱）&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287629&quot; target=&quot;_blank&quot;&gt;腾讯云 4 月 8 日故障覆盘及情况说明&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：就是自己做技术研讨分析，自我吸取经验，然后没了？！&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：多出现故障，不然很多上面的人以为技术人员都不重要了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：赔偿呢？？？对用户的赔偿？？&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：看来，阿里云出问题，其他云也只是围观吃瓜而已，丝毫没当成教训，下次还会有京东云、百度云、华为云故障......&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：大公司和小公司的区别就是大草台班子和小草台班子的区别......&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：灰度发布这么大的企业不应该有的呢？搞笑吧&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287615/apple-ai-m4-chips-macs-line&quot; target=&quot;_blank&quot;&gt;彭博社：苹果计划以 AI 为重点的 M4 芯片改造 Mac 产品线&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：苹果的价格，确实有点高攀不起&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：内存，硬盘卖的太贵了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：磁盘大部分情况 512GB 够用，但是内存都 21 世纪的第 24 个年头了，内存 8G？还没手机内存大。😀&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;程序员梗图&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c482a3a16b1b0f9caf12ca15e49a75a9b4f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287828</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287828</guid>
            <pubDate>Mon, 15 Apr 2024 10:26:12 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>来用 Rust 开发跨平台游戏吧～</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;h2&gt;一、引言&lt;/h2&gt; 
&lt;p&gt;  自从童年时代深陷 Warcraft III 的 MOD 魔力之中，我就一直对游戏脚本语言怀有特殊的情感。回想那时，使用暴雪开发的 JASS 语言开发魔兽争霸 3 的游戏关卡，尽管从今天的角度看 JASS 是极其简陋的，主要特点为静态类型 + 无 GC 功能，但它在那个尚未形成行业标准的年代，代表了对游戏开发语言的一种大胆尝试。&lt;/p&gt; 
&lt;h3&gt;为什么要使用脚本语言开发游戏？&lt;/h3&gt; 
&lt;p&gt;  游戏脚本语言的引入主要是为了提高开发测试的便捷性。如果直接使用 C++ 这样的底层语言，每更改一行代码，都可能需要耗费大量时间等待复杂工具链的编译与打包。而通过使用脚本语言，可以对实现游戏玩法的程序进行热加载执行，显著提升游戏的开发效率。&lt;/p&gt; 
&lt;p&gt;  随着时间的推移，如 Lua 和 JavaScript 这样的动态类型脚本语言已成为游戏开发中的常客。然而，随着编程语言的发展，我们有机会重新定义游戏脚本语言的新标准——既复古又革新，这就是 Rust + WASM 的组合。&lt;/p&gt; 
&lt;h2&gt;二、Rust + WASM + Dora SSR：重新定义游戏脚本开发&lt;/h2&gt; 
&lt;p&gt;  通过结合 Rust 和 WASM，我们可以在不牺牲性能的前提下，直接在例如 Android 或 iOS 设备上进行游戏热更新和测试，且无需依赖传统的应用开发工具链。此外，借助 Dora SSR 开源游戏引擎的 Web IDE 接口，使用 Rust 编写的游戏代码可以一次编译后，在多种游戏设备上进行测试和运行。&lt;/p&gt; 
&lt;h3&gt;为何选择 Rust？&lt;/h3&gt; 
&lt;p&gt;  Rust 提供了无与伦比的内存安全保证，而且无需垃圾收集器（GC）的介入，这使得它非常适合游戏开发，尤其是在性能敏感的场景下。结合 WASM，Rust 不仅能够提供高性能的执行效率，还能保持跨平台的一致性和安全性。&lt;/p&gt; 
&lt;h3&gt;快速开始指南&lt;/h3&gt; 
&lt;p&gt;  在开始开发之前，我们需要安装 Dora SSR 游戏引擎。该引擎支持多种平台，包括 Windows、Linux、macOS、iOS 和 Android。具体的安装步骤和要求，请参见官方快速开始指南：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdora-ssr.net%2Fzh-Hans%2Fdocs%2Ftutorial%2Fquick-start&quot; target=&quot;_blank&quot;&gt;Dora SSR 快速开始&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-71b2f96eaf126492e81b5c5983f877f27ec.png&quot; alt=&quot;在 macOS 上运行的 Dora SSR v1.3.17 版本&quot; title=&quot;在 macOS 上运行的 Dora SSR v1.3.17 版本&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;第一步：创建新项目&lt;/h4&gt; 
&lt;p&gt;  在 Dora SSR 引擎的二进制程序启动以后，在浏览器中打开 Dora SSR 的 Web IDE，右键点击左侧游戏资源树，选择「新建」并创建名为「Hello」的新文件夹。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-597f808064d54835263ef4b43c205f0b259.png&quot; alt=&quot;在浏览器中访问 Dora SSR 的 Web IDE 并新建文件夹&quot; title=&quot;在浏览器中访问 Dora SSR 的 Web IDE 并新建文件夹&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;第二步：编写游戏代码&lt;/h4&gt; 
&lt;p&gt;  然后在命令行中创建一个新的 Rust 项目：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;rustup target add wasm32-wasi
cargo new hello-dora --name init
cd hello-dora
cargo add dora_ssr
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;  在 &lt;code&gt;src/main.rs&lt;/code&gt; 中编写代码：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;use dora_ssr::*;

fn main () {
  let mut sprite = match Sprite::with_file(&quot;Image/logo.png&quot;) {
    Some(sprite) =&amp;gt; sprite,
    None =&amp;gt; return,
  };
  let mut sprite_clone = sprite.clone();
  sprite.schedule(once(move |mut co| async move {
    for i in (1..=3).rev() {
      p!(&quot;{}&quot;, i);
      sleep!(co, 1.0);
    }
    p!(&quot;Hello World&quot;);
    sprite_clone.perform_def(ActionDef::sequence(&amp;amp;vec![
      ActionDef::scale(0.1, 1.0, 0.5, EaseType::Linear),
      ActionDef::scale(0.5, 0.5, 1.0, EaseType::OutBack),
    ]));
  }));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;  构建生成 WASM 文件：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cargo build --release --target wasm32-wasi
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;第三步：上传并运行游戏&lt;/h4&gt; 
&lt;p&gt;  在 Dora SSR Web IDE 中，右键点击新创建的文件夹「Hello」，选择「上传」并上传编译好的 WASM 文件 &lt;code&gt;init.wasm&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-0b73cdf719f7dddc7f060b119d8e92dff66.png&quot; alt=&quot;通过 Web IDE 上传文件，相比用辅助脚本操作可能要更方便&quot; title=&quot;通过 Web IDE 上传文件，相比用辅助脚本操作可能要更方便&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;  或者使用辅助脚本 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FIppClub%2FDora-SSR%2Fblob%2Fmain%2FTools%2Fdora-rust%2Fdora-test%2Fupload.py&quot; target=&quot;_blank&quot;&gt;upload.py&lt;/a&gt; 在 Rust 项目文件夹内上传 WASM 文件，命令如下，其中的 IP 参数为 Dora SSR 启动后显示的 Web IDE 地址，后一个参数为要上传目录的相对路径：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;python3 upload.py &quot;192.168.3.1&quot; &quot;Hello&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4997fbb9037297a8ff8e18710cb5336f9e5.png&quot; alt=&quot;使用脚本完成一键编译、上传和开始运行&quot; title=&quot;使用脚本完成一键编译、上传和开始运行&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;第四步：发布游戏&lt;/h4&gt; 
&lt;p&gt;  在编辑器左侧游戏资源树中，右键点击刚创建的项目文件夹，选择「下载」。&lt;/p&gt; 
&lt;p&gt;  等待浏览器弹出已打包项目文件的下载提示。&lt;/p&gt; 
&lt;h2&gt;三、怎么实现的&lt;/h2&gt; 
&lt;p&gt;  在 Dora SSR 中实现 Rust 语言开发支持和 WASM 运行时嵌入的过程是一次新的技术探索和尝试，主要包括三个关键步骤：&lt;/p&gt; 
&lt;h3&gt;1. 接口定义语言（IDL）的设计&lt;/h3&gt; 
&lt;p&gt;  要在 C++ 编写的游戏引擎上嵌入 WASM 运行时并支持 Rust 语言，首先需要设计一种接口定义语言（IDL），以便于不同编程语言之间的通信和数据交换。IDL 的设计以 C++ 的接口为基础，增加了适应 Rust 语言特性的标签，如 &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;optional&lt;/code&gt; 等，来进行跨语言的接口映射。以下是一段 Dora SSR 种设计的 WASM IDL 的接口示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;object class EntityGroup @ Group
{
	readonly common int count;
	optional readonly common Entity* first;
	optional Entity* find(function&amp;lt;bool(Entity* e)&amp;gt; func) const;
	static EntityGroup* create(VecStr components);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;  考虑到 C++ 的面向对象特性与 Rust 的设计哲学存在差异，我们在 Rust 中部分模拟了 C++ 中面向对象的行为，这需要在 Rust 中额外编写一些机制以对应 C++ 中的类和方法。这种处理方式虽然增加了一些开发工作，但保持了接口的整洁和系统的可维护性。&lt;/p&gt; 
&lt;h3&gt;2. 生成胶水代码的程序&lt;/h3&gt; 
&lt;p&gt;  第二步是编写一个程序，通过 IDL 生成 C++、WASM 和 Rust 之间互相调用的胶水代码。为了实现这一点，我们选择使用 Dora SSR 项目自创的 Yuescript 语言。Yuescript 是基于 Lua 的一门动态编程语言，它结合了 Lua 语言生态中的 lpeg 语法解析库来处理 IDL 的解析和胶水代码的生成。使用 Yuescript 的好处是它继承了 Lua 的灵活性和轻量级，同时提供了更丰富的语法和功能，适合处理复杂的代码生成任务。以下是使用 PEG 文法编写的 IDL 解析器的代码节选。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-lua&quot;&gt;Param = P {
	&quot;Param&quot;
	Param: V&quot;Func&quot; * White * Name / mark&quot;callback&quot; + Type * White * Name / mark&quot;variable&quot;
	Func: Ct P&quot;function&amp;lt;&quot; * White * Type * White * Ct P&quot;(&quot; * White * (V&quot;Param&quot; * (White * P&quot;,&quot; * White * V&quot;Param&quot;)^0 * White)^-1 * P&quot;)&quot; * White * P&quot;&amp;gt;&quot;
}

Method = Docs * Ct(White * MethodLabel) * White * Type * White * (C(P&quot;operator==&quot;) + Name) * White * (P&quot;@&quot; * White * Name + Cc false) * White * Ct(P&quot;(&quot; * White * (Param * (White * P&quot;,&quot; * White * Param)^0 * White)^-1 * P&quot;)&quot;) * White * C(P&quot;const&quot;)^-1 * White * P&quot;;&quot; / mark&quot;method&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. 嵌入 WASM 运行时和代码整合&lt;/h3&gt; 
&lt;p&gt;  最后一步是在游戏引擎中嵌入 WASM 运行时以及所生成的 C++ 胶水代码，完成代码的整合。对于 WASM 运行时，我们选择使用 WASM3，这是一个高性能、轻量级的 WebAssembly 解释器，它支持多种 CPU 架构，能够简化编译链的复杂性，并提高跨平台的兼容性。通过这种方式，Dora SSR 能够支持在各种架构的硬件设备上运行 Rust 开发的游戏，极大地提高了游戏项目的可访问性和灵活性。&lt;/p&gt; 
&lt;p&gt;  在整合过程中，我们发布了供 Rust 开发者使用的 crate 包，包含所有必要的接口和工具，以便开发者未来可以轻松地基于 Dora SSR 游戏引擎开发和再发布使用 Rust 语言编写的其它游戏模块。&lt;/p&gt; 
&lt;h2&gt;四、结语&lt;/h2&gt; 
&lt;p&gt;  选择 Dora SSR + Rust 作为游戏开发工具不仅是追求技术的前沿，也是对游戏开发流程的一次新的探索。在这里诚邀每一位热爱游戏开发的朋友加入我们的社区，一同探索这一激动人心的技术旅程。欢迎访问我们的 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FIppClub%2FDora-SSR&quot; target=&quot;_blank&quot;&gt;GitHub 仓库&lt;/a&gt; 和 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdora-ssr.net&quot; target=&quot;_blank&quot;&gt;项目主页&lt;/a&gt; 来了解更多信息，并参与到我们的开发中来。一起开创游戏开发的新纪元吧！&lt;/p&gt; 
&lt;p&gt;  我们的 Q 群在这里，欢迎来玩吧：512620381&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4925410/blog/11052782</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4925410/blog/11052782</guid>
            <pubDate>Mon, 15 Apr 2024 10:07:12 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>【wu-framework-parent】官网介绍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href=&quot;https://gitee.com/wujiawei1207537021/wu-framework-parent&quot;&gt;官网地址&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p&gt;springboot 版本 3.2.1&lt;/p&gt; 
&lt;p&gt;wu-framework-parent 是一款由 Java 语言开发的框架，目标不写代码但是却能完成功能。 框架涵盖无赖 ORM( &lt;em&gt;&lt;strong&gt;wu-framework-lazy-orm-spring-starter&lt;/strong&gt;&lt;/em&gt;)、&lt;strong&gt;仿生组件&lt;/strong&gt; 、easy 框架系列【Easy-Excel、easy-listener、easy-upsert】 授权框架 (&lt;em&gt;&lt;strong&gt;wu-framework-authorization&lt;/strong&gt;&lt;/em&gt;)、Web 框架、平台操作组件、层组件抽象、 &lt;strong&gt;ACW 模块数据库管理&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;框架设计基本模块介绍&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;1630&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7b9431cf55221e31863fb60b20a7182e2d4.png&quot; width=&quot;2804&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;热门 Java ORM 框架使用与学习&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;1634&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4aa146f2f744cf5681d36fae1918dddef22.png&quot; width=&quot;2832&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;acw 项目使用学习&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;1638&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6275126244b30fae05cc1ff1425cb7408b2.png&quot; width=&quot;2854&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;欢迎👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏👏 大家点赞关注 &lt;a href=&quot;https://gitee.com/wujiawei1207537021/wu-framework-parent&quot;&gt;官网地址&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287822</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287822</guid>
            <pubDate>Mon, 15 Apr 2024 09:59:12 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>超算互联网白皮书发布：我国自主研发的超级计算机 11 次位居世界超算 TOP500 第一</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div style=&quot;text-align:start&quot;&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;《超算互联网的白皮书》由中国超算互联网联合体编写，旨在阐述超算互联网的背景、概念、发展现状、技术架构、运营管理以及未来应用展望。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;429&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0415/152812_yvha_4700705.png&quot; width=&quot;360&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;以下是核心内容的整理：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;发展背景&lt;/strong&gt;：中国的高性能计算事业在过去 20 多年取得了显著进步，自主研发的超级计算机多次位居世界超算 TOP 500 第一。随着人工智能和大数据模型的发展，算力成为衡量国家科技与经济水平的重要指标。同时，外部环境的变化和限制对我国高性能计算的可持续发展提出了挑战。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;基本概念&lt;/strong&gt;：超算互联网是一种基于互联网理念的计算基础设施，追求计算资源的互通共享，提供优质的计算应用服务。它具有开放性、便捷性、交互性、资源共享、创新驱动、跨界融合、泛在化、去中心化和服务化等特征。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;发展现状&lt;/strong&gt;：国际上，美国、欧盟和日本等发达国家和地区高度重视超算设施的互联共享。中国也在推动超算网格向超算互联网的升级，通过建设国家超算互联网联合体，促进资源共享和技术协作。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;技术架构&lt;/strong&gt;：超算互联网的技术架构包括资源层、平台层、服务层和应用层，每一层都遵循统一的运营、安全与标准体系。资源层主要涉及基础资源和资源池化，平台层提供核心支撑功能，服务层提供多样化服务，应用层面向各行业领域用户。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;运营管理&lt;/strong&gt;：超算互联网的运营管理涉及运行机制、参考运营架构和超算互联网联合体的建设。运行机制包括多方共赢商业模式、电商平台应用服务机制、生态协作机制等。参考运营架构强调互联网化运营、XaaS 化产品体系、领域化服务和数智化管理支撑。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;应用展望&lt;/strong&gt;：超算互联网将支持创新的使用模式和丰富的应用场景，如人工智能、科学计算、工程计算等，推动高性能计算与人工智能的融合创新。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;发展倡议&lt;/strong&gt;：白皮书提出了包括加强理论研究与技术攻关、推进关键领域应用示范、完善超算互联网标准规范、强化产教融合培养超算人才、促进数据开放共享与流通、构建超算互联网区域枢纽节点、与中国算力网等计划协调发展等倡议。&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;整体而言，这份白皮书详细描述了超算互联网的愿景、目标、技术路径和实施策略，旨在推动超算互联网的发展，提升我国在高性能计算领域的国际竞争力。&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;报告详情可至&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span style=&quot;background-color:#f39c12&quot;&gt;「开源中国 APP - 报告模块」&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;下载&lt;/span&gt;查看。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;APP 下载地址：&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;889&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-842e51ced6d226559af1af95c8041338cb2.gif&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287792</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287792</guid>
            <pubDate>Mon, 15 Apr 2024 07:33:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>微软向美国军方「推销」DALL-E</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftheintercept.com%2F2024%2F04%2F10%2Fmicrosoft-openai-dalle-ai-military-use%2F&quot; target=&quot;_blank&quot;&gt;The Intercept&lt;/a&gt; 日前公布的文件显示，微软曾于 2023 年 10 月向美国军方推荐，使用&amp;nbsp;OpenAI 开发的图像生成工具 DALL-E&amp;nbsp;来帮助构建执行军事行动的软件。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;而就在今年 1 月份，OpenAI&amp;nbsp;对其&amp;nbsp;AI 模型使用条款进行一番&lt;a href=&quot;https://www.oschina.net/news/275867&quot;&gt;大更新&lt;/a&gt;：将原本禁止的&amp;nbsp;「军事与战争」从页面中删除，留下的只有禁止使用&quot;我们的服务伤害自己或他人&quot;，包括 &quot;开发或使用武器&quot;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软在面向美国国防部的 PPT 中大致介绍了其可如何利用 OpenAI 的机器学习工具，包括大受欢迎的 ChatGPT 文本生成器和 DALL-E 生成工具，完成从文档分析到机器维护的各种任务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这份文件摘自 2023 年 10 月美国国防部在洛杉矶举办的&quot;AI literacy&quot;培训研讨会上提供的大量资料，包括微软和 OpenAI 在内的多家机器学习公司在会上介绍了他们可以为五角大楼提供的服务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软在 PPT 中重点介绍了 OpenAI 可提供的各种「常见」用途，其中就包括了国防。且文件中例举的「高级计算机视觉训练」下的一个要点是「战斗管理系统」：使用 DALL-E 模型创建图像，训练战斗管理系统。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;顾名思义，战斗管理系统是一种指挥和控制软件套件，为军事领导人提供战斗场景的态势概览，使他们能够协调炮火、空袭目标识别和部队调动等工作。计算机视觉训练的提及表明，DALL-E 产生的人造图像可以帮助五角大楼的计算机更好地「看到」战场上的情况，对于寻找和消灭目标尤其有利。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-93f44247ae214f4586714c12d2671e5f5ae.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软在声明中解释称，虽然他们已经提议使用 DALL-E 来训练战场软件，但尚未具体实施。「这是一个潜在用例的示例，是通过与客户就生成 AI 的可能性艺术进行对话而得知的」。微软拒绝透露该言论出自该公司何人之手，也没有解释为什么在其演示中「潜在」用例被标记为「常见」用途。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对此，OpenAI 发言人 Liz Bourgeous 则表示，OpenAI 没有参与微软的宣传活动，也没有向国防部出售任何工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「OpenAI 的政策禁止使用我们的工具来开发或使用武器、伤害他人或破坏财产。我们没有参与这次演示，也没有与美国国防机构就其描述的假设用例进行对话。我们没有证据表明 OpenAI 模型已被用于此用途。 OpenAI 没有与国防机构合作来利用我们的 API 或 ChatGPT 来实现此类目的。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软方面表示，如果美国军方通过与微软签订合同使用 DALL-E 或任何其他 OpenAI 工具，则必须遵守后者的使用政策。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但 The Intercept 指出，尽管如此，对于将其使命描述为开发能够造福全人类的以安全为重点的 AI 的 OpenAI 而言，任何使用其技术来帮助军方更有效地进行杀戮和破坏的行为，对该公司来说都将是一个戏剧性的转折。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;专注于技术伦理研究的牛津大学布拉瓦特尼克政府学院客座研究员 Brianna Rosen 称：「要想建立一个至少不会间接对平民造成伤害的作战管理系统是不可能的。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;曾在奥巴马政府期间任职于国家安全委员会的 Rosen 解释道，OpenAI 的技术既可以用来帮助人们，也可以用来伤害人们，任何政府将其用于后者都是一种政治选择。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&quot;除非像 OpenAI 这样的公司得到政府的书面保证，他们不会将技术用于伤害平民--这可能仍然不具有法律约束力--否则我看不出公司有什么办法可以有把握地声明技术不会被用于（或滥用）产生动能效应的方式。&quot;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287790/microsoft-openai-dall-e-military-use</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287790/microsoft-openai-dall-e-military-use</guid>
            <pubDate>Mon, 15 Apr 2024 07:32:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>经济忧虑下，59% 企业冻结技术人员招聘，但新兴技术领域成招聘新宠</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#060607&quot;&gt;《2023 年技术人才现状报告》&lt;/span&gt;由 Linux 基金会发布，旨在帮助组织了解当前和未来的技术人员配备要求及团队所需技能。报告基于对 400 多名招聘经理和人事专家的全球调查，这些调查对象来自不同的行业和规模的组织。&lt;/p&gt; 
&lt;p&gt;以下是主要发现：&lt;/p&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;经济影响：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;59% 的组织因经济担忧修改了 2023 年的技术人员招聘计划，主要方式是冻结新职位。&lt;/li&gt; 
 &lt;li&gt;尽管有经济不确定性，但更多的组织计划增加而非减少招聘岗位。&lt;/li&gt; 
 &lt;li&gt;云计算/容器、网络安全和人工智能/机器学习是新招聘的主要焦点。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;培训与技能提升：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;70% 的受访组织为现有技术人员提供新技术的培训机会。&lt;/li&gt; 
 &lt;li&gt;当找不到合适的技术候选人时，组织更倾向于培训现有员工而不是雇佣外部顾问。&lt;/li&gt; 
 &lt;li&gt;25% 的组织在 2023 年更加依赖于培训和认证。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;招聘挑战与策略：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;招聘过程被认为成本高、耗时长，且可能导致错误选择候选人和人员快速流失。&lt;/li&gt; 
 &lt;li&gt;组织面临招聘合适技术人员的挑战，特别是对于高级技术职位。&lt;/li&gt; 
 &lt;li&gt;组织采取的策略包括培训现有员工、提高技能认证、职前测试等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;技术人才短缺：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;技术人才短缺是一个普遍问题，组织需要采取多种策略来吸引和保留技术人才。&lt;/li&gt; 
 &lt;li&gt;提供有竞争力的薪酬、工作/生活平衡、专业发展机会和参与开源项目的机会是关键因素。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;未来展望：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;组织对未来技术人员的需求保持乐观，许多组织计划在未来几年增加技术人员数量。&lt;/li&gt; 
 &lt;li&gt;报告鼓励招聘经理使用调查结果作为人员培训和配备工作的参考，并期待未来参与 Linux 基金会的研究项目。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#060607&quot;&gt;报告最后强调了持续学习和发展对个人和组织保持竞争力的重要性，并提供了对未来技术人才市场的洞察。报告还指出，尽管面临经济挑战，但对熟练技术人才的需求依然旺盛，特别是在新兴技术领域。&lt;/span&gt;&lt;/p&gt; 
&lt;div style=&quot;text-align:start&quot;&gt; 
 &lt;div&gt; 
  &lt;div style=&quot;text-align:left&quot;&gt; 
   &lt;hr&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;开放原子基金会对该报告进行了翻译，报告详情可至&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span style=&quot;background-color:#f39c12&quot;&gt;「开源中国 APP - 报告模块」&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;下载&lt;/span&gt;查看。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;APP 下载地址：&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;hr&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;889&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-842e51ced6d226559af1af95c8041338cb2.gif&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div style=&quot;text-align:start&quot;&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287787</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287787</guid>
            <pubDate>Mon, 15 Apr 2024 07:15:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>每周开源观察 | Mistral 8x22B 大模型；PHP 排名跌至历史最低；微软「白嫖」开源？deepin-IDE 实现自举</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;OSCHINA 带你回顾一周开源新闻、开源项目、重磅事件，以及技术分享等值得开发者关注的内容。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;OpenSource Weekly&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;软件更新&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286466/ffmpeg-7-0-released&quot;&gt;FFmpeg 7.0「Dijkstra」发布&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287358/ubuntu-24-04-lts-beta-testing&quot; target=&quot;news&quot;&gt;Ubuntu 24.04 LTS 开启 Beta 测试&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286633/v8-engine-sandbox&quot;&gt;JavaScript 引擎 V8 的内存沙盒 (V8 Sandbox) 开始测试&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286473/redict-7-3-0-released&quot;&gt;Redict 首个稳定版 7.3.0 发布，基于 Redis 7.2.4 的社区分支&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286835/weixin-wcdb2&quot;&gt;微信基于 SQLite 的开源终端数据库 WCDB 迎来重大升级&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286731/zx-8-0-0-released&quot;&gt;zx 8.0.0 正式发布，谷歌开源的脚本工具&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287394/the-first-beta-of-android-15&quot; target=&quot;news&quot;&gt;首个 Android 15 Beta 版本发布&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286806&quot; target=&quot;news&quot;&gt;Oracle 发布 DTrace 2.0.0-1.14&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286799/eslint-v9-0-0-released&quot; target=&quot;news&quot;&gt;ESLint v9.0.0 正式发布&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286503/vs-code-1-88-released&quot; target=&quot;news&quot;&gt;Visual Studio Code 1.88 发布&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286486&quot; target=&quot;news&quot;&gt;JetBrains 全家桶 2024 首个大版本更新 (2024.1)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;综合资讯&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286614/zabbix-7-0-to-be-released-under-agplv3-license&quot;&gt;Zabbix 7.0 变更开源协议，从 GPLv2 转为 AGPLv3&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286615&quot;&gt;通义千问开源 320 亿参数模型&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286974/mistral-8-22b&quot;&gt;Mistral AI 开源 Mistral 8x22B Moe 大模型&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286993/google-codegemma&quot;&gt;谷歌发布代码大模型 CodeGemma&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FK7a3mmMYWFP6957Qr6PThA&quot; target=&quot;_blank&quot;&gt;deepin-IDE 实现自举&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287415&quot; target=&quot;news&quot;&gt;aiXcoder-7B 代码大模型正式开源&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287166/turing-award-2023&quot; target=&quot;news&quot;&gt;首位图灵奖&amp;amp;阿贝尔奖双料获奖者：Avi Wigderson&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286890&quot; target=&quot;news&quot;&gt;老乡鸡「开源」了&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286856&quot; target=&quot;news&quot;&gt;FFmpeg 之父 Fabrice Bellard 发布音频压缩工具 TSAC&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/287629&quot; target=&quot;news&quot;&gt;腾讯云 4 月 8 日故障覆盘及情况说明&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;每周观察&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;社交观察&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1461522430%2FO9l5S4glS&quot; target=&quot;_blank&quot;&gt;Blazor 开发效率很高，实为软件开发个体户之利器&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;在国内，Web 开发这块，微软目前没啥市场份额，后端 Java 王者地位稳固，前端 Vue 则大受欢迎。其实，微软有一个 Web 开发技术 ——Blazor，是相当不错的，经过持续的迭代，到了当前.NET 8.0 版本时，已经相当完善。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;目前，已经将 WebAssembly、服务端渲染（SSR）和 WebSocket 整合为单一的项目模板 ——Blazor Web App，可以自由地切换渲染交互模式，比较好地解决了首页加载慢，复杂 JS 应用性能低等现实开发中的痛点问题。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;对于熟练的.NET 开发者来说，现在可以使用一种编程语言（C#）、一个人就把前后端的活全干了，开发效率很高，实为软件开发个体户之利器。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;软件教书匠金旭亮&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2194035935%2FO9mkeFUzo&quot; target=&quot;_blank&quot;&gt;SQLite 的主代码行数大概是 15 万行，而测试代码大概有 9200 万&lt;/a&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;「SQLite 是开源的。这让很多人认为它没有商业软件经过的测试那么充分，可能不可靠。但这种印象是错误的。SQLite 在实际应用中表现出了非常高的可靠性和非常低的缺陷率，特别是考虑到它的快速发展。SQLite 的质量部分是通过仔细的代码设计和实现来实现的。但广泛的测试也在维护和提高 SQLite 质量方面发挥着至关重要的作用。本文档总结了 SQLite 每个版本所经历的测试程序，希望激发人们对 SQLite 适用于关键任务应用的信心。」&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;蚁工厂&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1781866371%2FO7IZU3TjV&quot; target=&quot;_blank&quot;&gt;华尔街这篇生成式 AI 的文章，让我想起若干年前与网吧老板的闲聊&lt;/a&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;华尔街这篇生成式 AI 的文章，让我想起若干年前与网吧老板的闲聊，我问他一年能挣多少，他说挣的钱都用来换电脑了，向我倒苦水。那时候正是网吧最火爆的时候也是电脑硬件飞速发展的时候。如果不及时更新硬件，就玩不了新游戏，玩不了新游戏就没人来了，于是很大一部分利润不得不投入到电脑的升级换代上。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;现在生成式 AI 的情况更糟，因为它还不能赚钱，却要求投资者不断增大投入，而未来该怎么变现的影子都还看不到。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;嗯，但无论如何这种狂热利好硬件公司，做 GPU 的可是实实在在的挣到钱了，只要 AI 热潮再维持两三年，那股价再涨三五倍可能也没啥压力。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;三思逍遥&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;媒体观察&lt;/h3&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cls.cn%2Fdetail%2F1639637&quot; target=&quot;_blank&quot;&gt;AI 产业的灰色暗面:OpenAI、谷歌、META 如何搞训练语料&lt;/a&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;种种迹象显示，目前站在全世界 AI 领域潮头浪尖的这些公司，早在几年前就已经陷入对训练语料的 「绝望」 追逐中 —— 为此他们不惜修改政策条款、无视互联网信息的使用规则，只为了让自家的产品更加先进一些。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;《纽约时报》在本周末刊发的调查报道中，揭露了 OpenAI、谷歌、Meta 等公司为了获取训练语料所采取的一些 「走捷径」 措施，同时也展现了整个行业迫在眉睫的困境。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;财联社&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FKqPu7S8UVFHmIgdcihxx7Q&quot; target=&quot;_blank&quot;&gt;芯片人才缺口巨大，美国出招！&lt;/a&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;美国 SIA 发表报告表示，美国半导体行业的竞争力以及行业所支持的经济实力、国家安全和技术领先地位取决于高技能的技术劳动力。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;为了确保美国未来的经济和技术领先地位，并确保实现《芯片和科学法案》的目标，美国必须优先采取政策，创造一支强大、可持续、有能力、具备必要技能的劳动力队伍，使美国能够，半导体行业和其他关键和新兴技术行业在未来几年竞争和领先。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;半导体行业观察&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pingwest.com%2Fa%2F293795&quot; target=&quot;_blank&quot;&gt;即使 iPhone 用国产 AI 也别惊讶，因为 Gemini 能做的也不多&lt;/a&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;从 Siri 刚刚发布开始，乔布斯对 Siri 语音助手的定义就不是单纯的搜索工具，而是个人智能助理。&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;从苹果自研基于 Ajax 的聊天机器人服务就能看出，目前苹果最看重的，其实是 Google Gemini 基于自然语义的对话能力，而不是我们上文提到在 Google Pixel 8 Pro 上实现的那些 「工具类」 功能。&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   -&amp;nbsp;
   &lt;span&gt;&amp;nbsp;&lt;/span&gt;
   &lt;strong&gt;品玩&lt;/strong&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_2853016445_aa0d937d02000yqik.html&quot; target=&quot;_blank&quot;&gt;性能增长 250%，英国芯片设计龙头 Imagination 公布全新 RISC-V CPU&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;ARM 竞争对手、英国芯片设计龙头 Imagination 发布第二款基于 RISC-V 架构的 Catapult IP 系列的最新产品 APXM-6200 CPU，搭载 AI 功能，用于物联网、下一代消费和工业设备等领域场景。&lt;/p&gt; 
 &lt;p&gt;相比 Arm Cortex-A53，APXM-6200 CPU 在面积效率配置小约 25%，但能够提供超过 2.5 倍（250%）的性能密度提升，在性能、功耗、面积（PPA）方面实现最大化提升。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;钛媒体&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;每周推荐&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;开源项目&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnextapps-de%2Fflexsearch%2F&quot;&gt;&lt;strong&gt;nextapps-de/flexsearch&lt;/strong&gt;&lt;/a&gt;&lt;br&gt; FlexSearch 是面向 Web 速度最快、内存最灵活的零依赖全文搜索库&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftraas-stack%2Fholoinsight&quot;&gt;traas-stack/holoinsight&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; HoloInsight 是一个云原生可观测性技术平台，特别专注于实时日志分析和 AI 集成。它是蚂蚁集团内部研发了近 10 年的观测平台 AntMonitor 的开源版本。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjenius-apps%2Fambie&quot;&gt;jenius-apps/ambie&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; Ambie 是一款播放白噪声和自然声音的应用程序，可帮助集中注意力、睡眠和放松。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwader%2Ffq&quot;&gt;wader/fq&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; fq 是一个用于检查二进制数据的工具和解析器。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fguillaumechereau%2Fgoxel&quot;&gt;guillaumechereau/goxel&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; Goxel 是一款免费开源的 3D 体素编辑器，用于创建体素图形（由立方体形成的 3D 图像）。它适用于 Linux、BSD、Windows、macOS、iOS&amp;nbsp;和&amp;nbsp;Android。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftoeverything%2FAFFiNE&quot;&gt;toeverything/AFFiNE&lt;/a&gt;&lt;/strong&gt;&lt;br&gt; AFFiNE 是开源协作知识库软件，注重隐私保护，面向专业人士打造。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;技术博客&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/oneflow/blog/11047520&quot;&gt;揭示语言大模型的采样过程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/11048604&quot;&gt;浅谈游戏地图中位置实时更新的技术方案&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/6990971/blog/11049751&quot;&gt;一文搞懂 Kafka consumer 与 broker 交互机制与原理&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/11051025&quot;&gt;前端架构设计的一点考究&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4090830/blog/11051634&quot;&gt;通俗易懂关于 Paxos 的直观解释&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4209276/blog/11051719&quot;&gt;一文讲透 RAG 背后的技术&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;事件点评&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286796/tiobe-index-202404&quot;&gt;TIOBE 4 月榜单：PHP 排名跌至历史最低&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;TIOBE 公布了 2024&amp;nbsp;年 4 月的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot;&gt;编程语言排行榜&lt;/a&gt;。本月，PHP 在 TIOBE 指数中的排名跌至历史最低点（第 17 位）。&lt;/p&gt; 
&lt;p&gt;「随着众多竞争对手进入市场；譬如 Rails、Django 和 React 等 Web 开发框架采用了 Ruby、Python 和 JavaScript 作为主要驱动语言。与此同时，PHP 中还出现了一些安全问题。PHP 不得不重塑自己。如今，PHP 仍在中小型网站领域占有一席之地，它也是最流行的 Web 内容管理系统 WordPress 背后的语言。所以，PHP 当然没有消失，但它的辉煌时代似乎已经过去了。」&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c0754de81df986c5df6f88731f70b0e1ed5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;点评&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;这反映了市场和技术环境的变化，以及开发者对于不同编程语言的选择和偏好。PHP 排名的下降可能促使 PHP 社区重新评估其技术和生态系统，寻求改进和创新的途径，以保持其在市场中的竞争力。可能会导致 PHP 社区更加注重安全性、性能和易用性，以吸引更多的开发者和用户。&lt;/p&gt; 
 &lt;p&gt;TIOBE 指数的变化也反映了开发者对于不同编程语言的选择和偏好。随着市场和技术环境的变化，开发者可能会更多地考虑使用其他编程语言，如 Ruby、Python 和 JavaScript，以满足他们的需求。这可能会导致更多的开发者选择这些编程语言，从而推动这些语言的发展和普及。还揭示了 IT 行业的发展趋势，随着新的编程语言和技术的出现，市场对于不同的技术栈的需求也在发生变化。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286683/ms-high-priority-ffmpeg&quot;&gt;微软都打算付钱了，为何还是被骂 「白嫖」 开源？&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;微软最近在开源社区被 「围攻」 了，起因是该公司工程师希望&lt;strong&gt;一次性支付数千美元&lt;/strong&gt;，让开源多媒体框架 FFmpeg&lt;strong&gt;优先解决自己的问题&lt;/strong&gt;，结果被指责 「白嫖」 开源项目。&lt;/p&gt; 
&lt;p&gt;FFmpeg 开发者认为如果微软产品依赖于 FFmpeg，那么应该签订一个长期支持合同。其他微软工程师指出，在微软签订合同相当繁琐，而微软内部有一个选择开源项目一次性资助数千美元的投票，急于修复代码的微软工程师可能认为后者更方便。&lt;/p&gt; 
&lt;p&gt;对于微软的高优先级错误，FFmpeg 社区的热心开发者帮助修复了这个问题。不过最终并没有看到微软对 FFmpeg 的捐款。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0408/162249_IELV_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;点评&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;微软与 FFmpeg 的事件不仅是一个技术问题，更是一个社会和文化问题，它涉及到开源社区的价值观、公司社会责任、项目治理和经济模式等多个方面。&lt;/p&gt; 
 &lt;p&gt;这一事件对于推动开源社区和商业公司之间的合作与理解，以及制定更明确的行业标准，具有重要的启示意义。特别是对于那些依赖于开源项目的商业公司而言，如何合理地回馈开源社区成为了一个重要议题。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286428/german-state-ditches-microsoft-for-linux-and-libreoffice&quot;&gt;德国也要 「自主可控」，州政府将 3 万台 PC 从 Windows 迁移到 Linux&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;在试点成功之后，德国北部州 Schleswig-Holstein（石勒苏益格 - 荷尔斯泰因）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.schleswig-holstein.de%2FDE%2Flandesregierung%2Fministerien-behoerden%2FI%2FPresse%2FPI%2F2024%2FCdS%2F240403_cds_it-arbeitsplatz.html&quot;&gt;决定&lt;/a&gt;将政府机构使用的 3 万台 PC 从 Microsoft Windows 和 Microsoft Office 迁移到 Linux 和&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.documentfoundation.org%2Fblog%2F2024%2F04%2F04%2Fgerman-state-moving-30000-pcs-to-libreoffice%2F&quot;&gt;LibreOffice&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;不过该政府做出这一决定并不是因为 Linux 和 LibreOffice 的技术优势，而是因为看重 「数字主权」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-be1d934f5ce1dc8328ddb19043233b9e5b3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;州政府总理表示&lt;strong&gt;该州成为德国第一个引入数字主权 IT 工作场所的州&lt;/strong&gt;。数字主权 (Digitally Aovereign) 是指相对于封闭的私有软件，公共管理部门对开源软件构成的 IT 解决方案有更多的控制权。政府部门可以有更多的选择，可以资助当地的程序员改进开源软件，可以根据需要进行修改以部署在自己的基础设施中。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;点评&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;德国石勒苏益格 - 荷尔斯泰因州的决策体现了对数字自主性的重视，同时也是对全球软件供应链依赖性的一次重要反思。&lt;/p&gt; 
 &lt;p&gt;虽然开源软件提供了更大的灵活性和控制权，但历史案例表明，此类迁移并非没有挑战。长远来看，这一举措可能会对开源软件的发展和政府 IT 策略产生深远影响。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;开源之声&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;媒体观点&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fwm%2F2024-04-06%2Fdoc-inaqwuqr8422545.shtml&quot;&gt;搞 AI 的是真没钱了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;尽管现在 AI PC、AI 手机是噱头成分居多，真正在 C 端有决定意义的价值点较少。但这趟列车已经绑定了太多的人：高通、英特尔、三星、联想…… 以及一系列基础模型厂商、模型中间件厂商。某种意义上，这是 「元宇宙 Plus」 版的概念列车，必须找到终点，也必须驶到终点。与当年元宇宙的情况不同的是，大模型当下的技术发展曲线，仍在陡峭上升中 ——&lt;/p&gt; 
&lt;p&gt;至少在 GPT-5 发布前，所有的商业故事，都会如约讲下去。&lt;/p&gt; 
&lt;p style=&quot;text-align:right&quot;&gt;-&lt;strong&gt;虎嗅 APP&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fhe0iWixMCMjCxvAjqPekgA&quot;&gt;AI 手机的未来，苹果和谷歌选择走同一条路&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;4 月 9 日，苹果发布了一篇最新的论文，推出了一个叫 Ferret UI 的新模型。这一模型的技术本身并不复杂，但是它所指向的是一场真正的手机 AI 革命。&lt;/p&gt; 
&lt;p&gt;在 AI 异军突起的 2023 年，很多人都在猜测生成式 AI 会对智能硬件市场带来什么变局。甚至怀疑智能手机还能否适应 AI 时代的新交互模式。也由此应运而生了 Rabitt R1， AI Pin 等多种所谓 AI native 的硬件。他们通过更好地利用了 AI 的交互特性和 Agent 能力试图挑战智能手机的霸权，用取消手机的方式去替代手机。&lt;/p&gt; 
&lt;p&gt;反观智能手机一侧，却只能以功能寥寥的端侧模型，可有可无的应用来做无力的反击。其霸主苹果甚至一度被认为完全落后于 AI 时代。&lt;/p&gt; 
&lt;p&gt;但现在它回到了主场，还准备好了智能手机可能用来面对 AI 时代的答案：AI Native 的手机系统。&lt;/p&gt; 
&lt;p style=&quot;text-align:right&quot;&gt;-&lt;strong&gt;腾讯科技&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_5703921756_153faf05c019013ymy.html&quot;&gt;谷歌向微软英特尔全面宣战！首款自研 Arm CPU，最强大模型公测，AI 视频对垒 Sora&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;此次 Next 大会上，谷歌还正式宣布，将自研首款基于 Arm 的 CPU。据称这款 CPU 处理器 Axion，将提供比英特尔 CPU 更好的性能和能源的效率，其中性能提高 50%，能源效率提高 60%。&lt;/p&gt; 
&lt;p&gt;据悉，比起目前基于 Arm 的最快通用芯片，Axion 的性能还要高出 30%。凭着这个新武器，谷歌也在 AI 军备竞赛中，正式向微软和亚马逊宣战！&lt;/p&gt; 
&lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;新智元&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwap.stockstar.com%2Fdetail%2FIG2024040900015651&quot;&gt;Redis 不再 「开源」，优势厂商有望重塑市场格局&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Redis 变更开源协议，引致供应链及法律合规风险。面对云计算、大数据、人工智能带来的数据处理需求，预计数据缓存中间件的市场规模将不断扩大，为具备技术先发优势的国内中间件厂商带来市场机遇。&lt;/p&gt; 
&lt;p&gt;长远来看，国家适时推出相关政策鼓励科技创新，鼓励国内厂商发展自主产品，此类事件无疑将使国内具备技术先发性、市场优势性的企业充分获益。&lt;/p&gt; 
&lt;p style=&quot;text-align:right&quot;&gt;-&lt;strong&gt;证券时报网&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;用户观点&lt;/h3&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FK7a3mmMYWFP6957Qr6PThA&quot;&gt;国产开发工具 deepin-IDE 实现自举、已上架至 deepin V23 应用商店&lt;/a&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;观点 1：vs code 又不收费，不比这成熟好用吗 
   &lt;ul&gt; 
    &lt;li&gt;观点 2：没有的时候，你们说中国那么多程序员，怎么基础软件全是国外的； 有了之后，你们又说国外已经有了，为什么再开发一套？&lt;/li&gt; 
    &lt;li&gt;观点 3：前端那么多轮子，不还是有人不断造吗&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;观点 4：Qt 变量支持，爱了&lt;/li&gt; 
  &lt;li&gt;观点 5：不支 Go 与 Rust 吗，这两大新热闹语言不支持，错过不少用户啊 
   &lt;ul&gt; 
    &lt;li&gt;观点 6：内置的支持最常见的五种编程语言，这没有问题，剩下的通过插件支持就好了，摊子铺太大了可不好&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;观点 7：先有鸡还是先有蛋有答案了：先有蛋 
   &lt;ul&gt; 
    &lt;li&gt;观点 8：no no，应该是先拿别人的鸡蛋孵出鸡，然后鸡在下蛋，实现自举&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;观点 9：是说用 ide 给 ide 编译插件吧。最牛逼的自举行还得是：360 杀毒把自己卸载了🤣&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/286890&quot;&gt;老乡鸡 「开源」 了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;观点 1：什么时候开放 API，远程调用，返回老乡鸡，调用一次收费老乡鸡对应价格，VIP 打折优惠&lt;/li&gt; 
  &lt;li&gt;观点 2：数据来源可信吗？更新及时吗？&lt;/li&gt; 
  &lt;li&gt;观点 3：老乡鸡这用的什么架构，稳定性，可观测性如何&lt;/li&gt; 
  &lt;li&gt;观点 4：用的什么开源协议？文档收费吗&lt;/li&gt; 
  &lt;li&gt;观点 5：都在说大模型，可是我还在写 curd，怎么办？&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FHM2eUEHJR2qNNsD527HVVA&quot;&gt;李彦宏：大模型开源与传统 Linux 开源不同、闭源才能走通商业模式&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;观点 1：你不愿意开源就算了，说这些是啥意思嘛&lt;/li&gt; 
  &lt;li&gt;观点 2：百度之前造车，现在文心一言，国外火什么他就做什么 
   &lt;ul&gt; 
    &lt;li&gt;观点 3：这没啥好喷的，因为几乎大厂都是这样，什么火做什么，举反例都困难&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;观点 4：对对对，李老板说的都对。 反正阿里开源了 Qwen，零一万物开源了 Yi，还有智谱开源的 ChatGLM……&lt;/li&gt; 
  &lt;li&gt;观点 5：什么样的脚穿什么样的鞋，适合开源的开源，不适合的就闭源，没必要硬贴，装开源更是不可取。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287781</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287781</guid>
            <pubDate>Mon, 15 Apr 2024 06:40:24 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Opera 支持本地 LLM，本地下载大模型即可自建服务</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Opera 近日宣布，其将在开发者频道的 Opera One 浏览器中添加对 150 个本地 LLM 模型的实验性支持。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpress.opera.com%2F2024%2F04%2F03%2Fai-feature-drops-local-llms%2F&quot; target=&quot;_blank&quot;&gt;支持模型&lt;/a&gt;包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Meta 的 Llama&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Vicuna&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Google 的 Gemma&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Mistral AI 的 Mixtral&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;824&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0415/142720_sx9m_3820517.png&quot; width=&quot;1464&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;使用本地大型语言模型意味着用户的数据保存在本地设备上，无需将信息发送到服务器。Opera 正在 Opera One 的开发者频道中测试这套新的本地 LLM。本地 LLM 通常需要每个模型 2-10 GB 的本地存储空间，然后将使用本地 LLM 代替 Opera 的 AI Aria。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;814&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0415/143041_5JrR_3820517.png&quot; width=&quot;1452&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;810&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0415/143057_FJKr_3820517.png&quot; width=&quot;1450&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287780/opera-local-llms</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287780/opera-local-llms</guid>
            <pubDate>Mon, 15 Apr 2024 06:32:24 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>国家天文台人工智能工作组发布大模型「星语 3.0」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;中国科学院国家天文台人工智能工作组发布新一代天文大模型——「星语 3.0」。「星语 3.0」基于阿里云通义千问开源模型打造，目前已成功接入国家天文台兴隆观测站望远镜阵列--Mini「司天」，可实现自主控制望远镜进行观测、分析观测结果，智能地给出下一步观测建议。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这是大模型在科学领域落地的经典案例，也是大模型在天文观测领域的首次应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;534&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e4b192113fde5a546a3e4db4665e0125d61.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据介绍，当收到「观测某星体」的任务时，「星语 3.0」首先查询某星体的座标信息，反馈给观测人员；当得到确认后，「星语 3.0」将按照观测人员输入的计划进行自动观测；单次曝光完成后，大模型将回收并处理数据，根据结果判断目标源的观测价值，推荐接下来的观测计划。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;未来，星语大模型将接入国家天文台大型望远镜阵列「司天」（Mini「司天」即为「司天」的一部分）。「司天」是我国天文学家面向时域天文学提出的国家级重大天文基础设施项目，至 2030 年米级望远镜数量预期达到 72 架，每晚产生约 140TB 处理后数据，成为全球巡天效率最高的项目。星语大模型的接入将科研人员从繁琐的观测中解放出来，更加专注于研究。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;国家天文台人工智能工作组智能体开发方向的李瑀旸表示，「全新升级的星语大模型正在向智能体方向发展。星语将吸收更多天文细分领域知识，融合现有科研模型、算法和成果，打造‘OneForAll’的天文+AI 新范式。星语将降低天文学家在跨方向交流和工作时的门槛，提高科研效率，让天文学家将注意力更多的集中在天文发现上。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287772</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287772</guid>
            <pubDate>Mon, 15 Apr 2024 06:04:24 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>「纯血」鸿蒙真机界面曝光</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;博主&amp;nbsp;@Flanker_017 在&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2214340953%2FO9GVUtbdj%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;微博&lt;/a&gt;晒出 HarmonyOS NEXT 真机上手图，展示了新系统的操作界面。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-73f0f11c641b2ed43a85cdf8b1e8622d7d4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-af5cd779870dd97018278e3a9957e3a3a92.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;该博主透露，&lt;strong&gt;新版本中原生 Android 应用已经无法使用&lt;/strong&gt;。「如果本地数据多的，比如微信聊天、笔记软件，还是得给方案的，否则即使能从云端重新拉，用户体验也太差」。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-fc338caa771b4d4b1b3e4f425413f87a3a6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;今年 1 月，华为&lt;a href=&quot;https://www.oschina.net/news/276094/harmonyos-next-dev-preview&quot;&gt;宣布&lt;/a&gt;&amp;nbsp;HarmonyOS&amp;nbsp;NEXT 鸿蒙星河版系统开发者预览版开放申请。在几日前的华为鸿蒙生态春季沟通会上，华为终端 BG CEO 余承东宣布将在 6 月份举办华为开发者大会，届时 HarmonyOS NEXT 将正式开启 Beta。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287736</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287736</guid>
            <pubDate>Mon, 15 Apr 2024 03:00:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>微软在 Windows 11 「开始」菜单中测试应用广告</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软已开始在 Windows 11 开始菜单中测试广告，该公司&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2024%2F04%2F12%2Fannouncing-windows-11-insider-preview-build-22635-3495-beta-channel%2F&quot; target=&quot;_blank&quot;&gt;表示&lt;/a&gt;，这项新实验将帮助用户在 Microsoft Store 中找到新的「出色」应用程序。目前该试用版已在 Windows 11 Insider Preview Build 22635.3495 的&quot;一小部分 Insiders&quot;测试版渠道中推出。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「基于最近的改进，例如对最近安装的应用程序进行分组并显示您经常使用的应用程序，我们现在正在尝试提供建议，以帮助您在开始菜单上的推荐下从 Microsoft Store 中发现优秀的应用程序。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软表示，这些应用程序广告只会出现在美国的 Windows Insiders 系统上，不会出现在企业环境中的托管设备上。正如 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2024%2F4%2F12%2F24128640%2Fmicrosoft-windows-11-start-menu-ads-app-recommendations&quot; target=&quot;_blank&quot;&gt;The Verge&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt; 首次报道的那样，这些广告将显示在「开始」菜单的「推荐」部分、最近添加的应用程序以及经常打开的文件和程序中。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在此测试阶段，用户可以通过 Settings &amp;gt; Personalization &amp;gt; Start by toggling off the &quot;Show recommendations for tips, app promotions, and more&quot;关闭广告。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;277&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2dc5a1e24a5711ca5ec96b7dbe048bf4eb5.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;事实上，这已经不是微软第一次尝试在 Windows 11 开始菜单中添加广告了。2022 年 11 月，该公司就开始在&quot;开始&quot;菜单的 sign-out flyout 菜单中推广其部分产品（包括 OneDrive 文件托管服务）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这项新功能最初是作为 A/B 测试实验的一部分推出的，但一年前又扩展了新的&quot;处理方法&quot;，现在会显示给安装了 2023 年 3 月预览版更新或 Windows 11 更新的用户。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2022 年 3 月，作为另一项 Windows Insider 测试的一部分，微软还在文件资源管理器应用中显示了一些微软产品（包括 Microsoft Editor）的广告，并在 3 月份向 Office 2021 用户提供了 Microsoft 365 家庭订阅服务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;两年前，还曾在 Windows 10 开始菜单中推广其 Microsoft Edge 网络浏览器，并在某些 Windows Insider 版本中测试 Microsoft Teams 广告时意外地破坏了开始菜单和任务栏。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在最新的公告中，微软方面补充称：「作为提醒，我们会定期在 Windows Insiders 中尝试可能永远不会发布的新体验和新概念，以获得反馈。如果你在开始菜单上看到这种体验，请告诉我们你的想法。我们将首先在 Beta 频道的一小部分 Insiders 中推出这一体验。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287732/microsoft-testing-app-ads-windows-11s-start-men</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287732/microsoft-testing-app-ads-windows-11s-start-men</guid>
            <pubDate>Mon, 15 Apr 2024 02:29:58 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>苹果 iOS 18 的首批 AI 功能将完全运行于设备端</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;彭博社记者 Mark Gurman &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Fnewsletters%2F2024-04-14%2Fhumane-ai-pin-review-the-device-isn-t-going-to-kill-apple-s-iphone-luziqlew&quot; target=&quot;_blank&quot;&gt;报道称&lt;/a&gt;，苹果计划为 iOS 18 推出的首批 AI 功能将完全在端侧上运行，不依赖云服务器。&lt;/p&gt; 
&lt;p&gt;iOS 18 预计不会包含苹果自己的类 ChatGPT 的聊天机器人，但目前还不清楚 Gemini 或其他聊天机器人是否会直接集成到 iOS 18 中。&lt;/p&gt; 
&lt;p&gt;Gurman 表示，目前看来苹果即将在 WWDC 上发布的 AI 技术将完全在设备本地运行，为新功能提供支持的大语言模型将不会在云端处理。&lt;/p&gt; 
&lt;p style=&quot;color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify&quot;&gt;Gurman 补充，苹果可能未来会提供一些基于云端的 AI 功能，此前有报道称苹果已经和 Google、OpenAI 和百度等公司就 AI 上的合作进行了讨论，不过有知情人士否认了百度和苹果之间关于 AI 的合作。&lt;/p&gt; 
&lt;p style=&quot;color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify&quot;&gt;科技媒体&amp;nbsp;MacRumors 则&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.macrumors.com%2F2024%2F04%2F14%2Fapples-first-ios-18-ai-features-no-cloud%2F&quot; target=&quot;_blank&quot;&gt;分析认为&lt;/a&gt;苹果仍有可能推出自家基于云的生成式 AI，因为此前也有消息指出，苹果正在积极购买 AI 服务器。&lt;/p&gt; 
&lt;p style=&quot;color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify&quot;&gt;传闻称，iOS 18 将为 iPhone 的 Spotlight 搜索工具、Siri、Safari、快捷指令、Apple Music、信息、健康、Numbers、Pages、Keynote 等应用带来全新的生成式 AI 功能。Gurman 此前曾报道，生成式 AI 将提升 Siri 回答复杂问题的能力，并允许信息应用自动完成句子输入。&lt;/p&gt; 
&lt;p style=&quot;color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify&quot;&gt;苹果将在 6 月 10 日至 14 日举办 WWDC 2024 全球开发者大会，预计将在大会上推出 iOS 18 更新，并有可能介绍 AI 功能。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287730/apples-first-ios-18-ai-features-no-cloud</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287730/apples-first-ios-18-ai-features-no-cloud</guid>
            <pubDate>Mon, 15 Apr 2024 02:19:58 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Spring AI 0.8.1 中文参考指南发布！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;&lt;span&gt;S&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;n&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;中&lt;/span&gt;&lt;span&gt;文&lt;/span&gt;&lt;span&gt;参&lt;/span&gt;&lt;span&gt;考&lt;/span&gt;&lt;span&gt;指&lt;/span&gt;&lt;span&gt;南&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;布&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;span&gt;助&lt;/span&gt;&lt;span&gt;力&lt;/span&gt;&lt;span&gt;开&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;者&lt;/span&gt;&lt;span&gt;高&lt;/span&gt;&lt;span&gt;效&lt;/span&gt;&lt;span&gt;构&lt;/span&gt;&lt;span&gt;建&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;应&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#e2e2e5; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Spring&amp;nbsp;AI&amp;nbsp;0.8.1&amp;nbsp;版本现已发布，并伴随着一份全新的&amp;nbsp;&lt;strong&gt;中文参考指南&lt;/strong&gt;，为中文开发者带来福音！这份指南由&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcunzaima.cn&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;存在码&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;网站精心打造，旨在帮助开发者更轻松地理解和应用&amp;nbsp;Spring&amp;nbsp;AI&amp;nbsp;框架，构建高效的&amp;nbsp;AI&amp;nbsp;应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#e2e2e5; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Spring&amp;nbsp;AI&amp;nbsp;0.8.1&amp;nbsp;版本带来了哪些新特性？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;强&lt;/span&gt;&lt;span&gt;大&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;模&lt;/span&gt;&lt;span&gt;型&lt;/span&gt;&lt;span&gt;支&lt;/span&gt;&lt;span&gt;持&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;支&lt;/span&gt;&lt;span&gt;持&lt;/span&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;多&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;大&lt;/span&gt;&lt;span&gt;语&lt;/span&gt;&lt;span&gt;言&lt;/span&gt;&lt;span&gt;模&lt;/span&gt;&lt;span&gt;型&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;包&lt;/span&gt;&lt;span&gt;括&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmistral.ai%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;M&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;s&lt;/span&gt;&lt;span&gt;t&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;l&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcohere.ai%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;C&lt;/span&gt;&lt;span&gt;o&lt;/span&gt;&lt;span&gt;h&lt;/span&gt;&lt;span&gt;e&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;e&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;为&lt;/span&gt;&lt;span&gt;开&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;者&lt;/span&gt;&lt;span&gt;提&lt;/span&gt;&lt;span&gt;供&lt;/span&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;多&lt;/span&gt;&lt;span&gt;选&lt;/span&gt;&lt;span&gt;择&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;便&lt;/span&gt;&lt;span&gt;捷&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;函&lt;/span&gt;&lt;span&gt;数&lt;/span&gt;&lt;span&gt;调&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;函&lt;/span&gt;&lt;span&gt;数&lt;/span&gt;&lt;span&gt;调&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;功&lt;/span&gt;&lt;span&gt;能&lt;/span&gt;&lt;span&gt;得&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;增&lt;/span&gt;&lt;span&gt;强&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;支&lt;/span&gt;&lt;span&gt;持&lt;/span&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;多&lt;/span&gt;&lt;span&gt;模&lt;/span&gt;&lt;span&gt;型&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;复&lt;/span&gt;&lt;span&gt;杂&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;调&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;方&lt;/span&gt;&lt;span&gt;式&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;让&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;应&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;开&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;加&lt;/span&gt;&lt;span&gt;灵&lt;/span&gt;&lt;span&gt;活&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;丰&lt;/span&gt;&lt;span&gt;富&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;示&lt;/span&gt;&lt;span&gt;例&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;指&lt;/span&gt;&lt;span&gt;南&lt;/span&gt;&lt;span&gt;中&lt;/span&gt;&lt;span&gt;新&lt;/span&gt;&lt;span&gt;增&lt;/span&gt;&lt;span&gt;了&lt;/span&gt;&lt;span&gt;多&lt;/span&gt;&lt;span&gt;个&lt;/span&gt;&lt;span&gt;示&lt;/span&gt;&lt;span&gt;例&lt;/span&gt;&lt;span&gt;代&lt;/span&gt;&lt;span&gt;码&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;教&lt;/span&gt;&lt;span&gt;程&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;涵&lt;/span&gt;&lt;span&gt;盖&lt;/span&gt;&lt;span&gt;文&lt;/span&gt;&lt;span&gt;本&lt;/span&gt;&lt;span&gt;生&lt;/span&gt;&lt;span&gt;成&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;问&lt;/span&gt;&lt;span&gt;答&lt;/span&gt;&lt;span&gt;系&lt;/span&gt;&lt;span&gt;统&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;图&lt;/span&gt;&lt;span&gt;像&lt;/span&gt;&lt;span&gt;生&lt;/span&gt;&lt;span&gt;成&lt;/span&gt;&lt;span&gt;等&lt;/span&gt;&lt;span&gt;常&lt;/span&gt;&lt;span&gt;见&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;应&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;场&lt;/span&gt;&lt;span&gt;景&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;帮&lt;/span&gt;&lt;span&gt;助&lt;/span&gt;&lt;span&gt;开&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;者&lt;/span&gt;&lt;span&gt;快&lt;/span&gt;&lt;span&gt;速&lt;/span&gt;&lt;span&gt;上&lt;/span&gt;&lt;span&gt;手&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#e2e2e5; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;中文参考指南如何助力开发者？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;全&lt;/span&gt;&lt;span&gt;面&lt;/span&gt;&lt;span&gt;解&lt;/span&gt;&lt;span&gt;析&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;深&lt;/span&gt;&lt;span&gt;入&lt;/span&gt;&lt;span&gt;解&lt;/span&gt;&lt;span&gt;读&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;S&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;n&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;各&lt;/span&gt;&lt;span&gt;个&lt;/span&gt;&lt;span&gt;模&lt;/span&gt;&lt;span&gt;块&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;功&lt;/span&gt;&lt;span&gt;能&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;帮&lt;/span&gt;&lt;span&gt;助&lt;/span&gt;&lt;span&gt;开&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;者&lt;/span&gt;&lt;span&gt;建&lt;/span&gt;&lt;span&gt;立&lt;/span&gt;&lt;span&gt;对&lt;/span&gt;&lt;span&gt;框&lt;/span&gt;&lt;span&gt;架&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;整&lt;/span&gt;&lt;span&gt;体&lt;/span&gt;&lt;span&gt;认&lt;/span&gt;&lt;span&gt;知&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;清&lt;/span&gt;&lt;span&gt;晰&lt;/span&gt;&lt;span&gt;易&lt;/span&gt;&lt;span&gt;懂&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;使&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;简&lt;/span&gt;&lt;span&gt;洁&lt;/span&gt;&lt;span&gt;明&lt;/span&gt;&lt;span&gt;了&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;语&lt;/span&gt;&lt;span&gt;言&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;配&lt;/span&gt;&lt;span&gt;以&lt;/span&gt;&lt;span&gt;丰&lt;/span&gt;&lt;span&gt;富&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;示&lt;/span&gt;&lt;span&gt;例&lt;/span&gt;&lt;span&gt;代&lt;/span&gt;&lt;span&gt;码&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;让&lt;/span&gt;&lt;span&gt;开&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;者&lt;/span&gt;&lt;span&gt;轻&lt;/span&gt;&lt;span&gt;松&lt;/span&gt;&lt;span&gt;理&lt;/span&gt;&lt;span&gt;解&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;掌&lt;/span&gt;&lt;span&gt;握&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;S&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;n&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;使&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;方&lt;/span&gt;&lt;span&gt;法&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;快&lt;/span&gt;&lt;span&gt;速&lt;/span&gt;&lt;span&gt;上&lt;/span&gt;&lt;span&gt;手&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;指&lt;/span&gt;&lt;span&gt;南&lt;/span&gt;&lt;span&gt;中&lt;/span&gt;&lt;span&gt;提&lt;/span&gt;&lt;span&gt;供&lt;/span&gt;&lt;span&gt;了&lt;/span&gt;&lt;span&gt;多&lt;/span&gt;&lt;span&gt;个&lt;/span&gt;&lt;span&gt;实&lt;/span&gt;&lt;span&gt;战&lt;/span&gt;&lt;span&gt;教&lt;/span&gt;&lt;span&gt;程&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;帮&lt;/span&gt;&lt;span&gt;助&lt;/span&gt;&lt;span&gt;开&lt;/span&gt;&lt;span&gt;发&lt;/span&gt;&lt;span&gt;者&lt;/span&gt;&lt;span&gt;快&lt;/span&gt;&lt;span&gt;速&lt;/span&gt;&lt;span&gt;构&lt;/span&gt;&lt;span&gt;建&lt;/span&gt;&lt;span&gt;自&lt;/span&gt;&lt;span&gt;己&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;应&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#e2e2e5; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;无论你是&amp;nbsp;Spring&amp;nbsp;AI&amp;nbsp;的新手，还是经验丰富的开发者，这份中文参考指南都将成为你的得力助手，帮助你更高效地构建&amp;nbsp;AI&amp;nbsp;应用。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#e2e2e5; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;获取中文参考指南：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;访&lt;/span&gt;&lt;span&gt;问&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcunzaima.cn%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;存&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;码&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;网&lt;/span&gt;&lt;span&gt;站&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;即&lt;/span&gt;&lt;span&gt;可&lt;/span&gt;&lt;span&gt;免&lt;/span&gt;&lt;span&gt;费&lt;/span&gt;&lt;span&gt;下&lt;/span&gt;&lt;span&gt;载&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;S&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span&gt;n&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;中&lt;/span&gt;&lt;span&gt;文&lt;/span&gt;&lt;span&gt;参&lt;/span&gt;&lt;span&gt;考&lt;/span&gt;&lt;span&gt;指&lt;/span&gt;&lt;span&gt;南&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#e2e2e5; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;存在码（cunzaima.cn）&lt;/strong&gt;&amp;nbsp;是一个致力于为中文开发者提供&amp;nbsp;Spring&amp;nbsp;AI&amp;nbsp;学习资源的平台，除了中文参考指南，还提供丰富的示例代码、教程和社区交流平台。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#e2e2e5; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;让我们一起用&amp;nbsp;Spring&amp;nbsp;AI&amp;nbsp;开启智能未来！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;400&quot; src=&quot;https://cunzaima.cn/logo.jpg&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287651</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287651</guid>
            <pubDate>Sun, 14 Apr 2024 08:51:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>腾讯云 4 月 8 日故障覆盘及情况说明</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;腾讯云就 4 月 8 日&lt;a href=&quot;https://www.oschina.net/news/286685&quot;&gt;故障&lt;/a&gt;发布了覆盘及情况说明。&lt;/p&gt; 
&lt;p&gt;4 月 8 日 15 点 23 分，腾讯云团队发现云 API 服务异常，并收到大量客户反馈无法登录控制枱。故障影响了依赖云 API 的公有云服务，如云函数、文字识别、微服务平台等，&lt;strong&gt;持续了近 87 分钟，期间共 1957 个客户报障&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;以下为全文：&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;4 月 8 日 15 点 23 分，腾讯云团队收到告警信息，云 API 服务处于异常状态；随即在腾讯云工单、售后服务群以及微博等渠道开始大量出现腾讯云控制枱登录不上的客户反馈。&lt;/p&gt; 
&lt;p&gt;经过故障定位发现，客户登录不上控制枱正是由云 API 异常所导致。云 API 是云上统一的开放接口集合，客户可以通过 API 以编程方式管理和操控云端资源，云控制枱通过组合云 API 提供交互式的网页功能。&lt;/p&gt; 
&lt;p&gt;故障发生后，依赖云 API 提供产品能力的部分公有云服务，也因为云 API 的异常出现了无法使用的情况，比如云函数、文字识别、微服务平台、音频内容安全、验证码等。此次故障一共持续了近 87 分钟，期间共有 1957 个客户报障。&lt;/p&gt; 
&lt;p&gt;从客户的视角来看，云服务大概可以分为数据面和控制面，数据面承载客户自身的业务，控制面负责操作云上不同产品。比如目前使用最广泛的 IaaS 服务基本上都是以直接面向数据面为主，控制面仅在客户购买或需要对资源层面进行调整操作时会涉及。此次发生故障的控制枱和云 API 是对控制面的影响。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;537&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0f6cf28543dfc176b429b2354f84ef56c1e.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通俗来讲，如果把云服务类比为酒店，控制枱相当于酒店的前台，是一个统一的服务入口。一旦酒店前台发生故障，会导致入住、续住等管理能力不可用，但已入住的客房不受影响。&lt;/p&gt; 
&lt;p&gt;这次故障中客户已经配置好的服务器等 IaaS 资源，包括已经部署运行的业务，没有受到云 API 异常的影响。其他以非云&amp;nbsp;API&amp;nbsp;方式提供服务的 PaaS 和 SaaS 服务，处于正常服务的状态。从数据上也验证了这一点。如图 1 显示，当天全产品进出流量趋势没有明显变化。&lt;/p&gt; 
&lt;p&gt;图&amp;nbsp;1：腾讯云全产品进出流量趋势图&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;457&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-298b85d09efe73a3d65c6b23708d45cb2a2.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;但是，用 API 提供的服务类产品（需要「酒店前台服务「）有不同程度的影响，比如腾讯云存储服务调用当天有明显下滑。期间售后团队协助部分客户做了业务容灾预案的实施，将受影响服务做调度以快速恢复客户的业务服务。从图 2 可以看出，当天存储服务调用有一个明显的波动。&lt;/p&gt; 
&lt;p&gt;图&amp;nbsp;2：存储服务调用数据趋势图&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;750&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-099d6f5eeab3daf5d81ae53ecb11f2e2fb6.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;问题覆盘&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;整个处理过程如下：&lt;/p&gt; 
&lt;p&gt;1.&amp;nbsp; 15:23，监测到故障，立即执行服务的恢复，同时进行原因的排查；&lt;/p&gt; 
&lt;p&gt;2.&amp;nbsp; 15:47，发现通过回滚版本没能完全恢复服务，进一步定位问题；&lt;/p&gt; 
&lt;p&gt;3.&amp;nbsp; 15:57，定位出故障根因是配置数据出现错误，紧急设计数据修复方案；&lt;/p&gt; 
&lt;p&gt;4.&amp;nbsp; 16:02，对全地域进行数据修复工作，API 服务逐地域恢复中；&lt;/p&gt; 
&lt;p&gt;5.&amp;nbsp; 16:05，观测到除上海外的地域 API 服务均已恢复，进一步定位上海地域的恢复问题；&lt;/p&gt; 
&lt;p&gt;6.&amp;nbsp; 16:25，定位到上海的技术组件存在 API 循环依赖问题，决定通过流量调度至其他地域来恢复；&lt;/p&gt; 
&lt;p&gt;7.&amp;nbsp; 16:45，观测到上海地域恢复了，此时 API 和依赖 API 的 PaaS 服务彻底恢复，但控制枱流量剧增，按九倍容量进行了扩容；&lt;/p&gt; 
&lt;p&gt;8.&amp;nbsp; 16:50，请求量逐渐恢复到正常水平，业务稳定运行，控制枱服务全部恢复；&lt;/p&gt; 
&lt;p&gt;9.&amp;nbsp; 17:45，持续观察一小时，未发现问题，按预案处理过程完毕。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;298&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-95c2b29c04e33d853905c5880c92f5af24a.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;故障的原因是云 API 服务新版本向前兼容性考虑不够和配置数据灰度机制不足的问题&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;本次 API 升级过程中，由于新版本的接口协议发生了变化，在后台发布新版本之后对于旧版本前端传来的数据处理逻辑异常，导致生成了一条错误的配置数据，由于灰度机制不足导致异常数据快速扩散到了全网地域，造成整体 API 使用异常。&lt;/p&gt; 
&lt;p&gt;发生故障后，按照标准回滚方案将服务后台和配置数据同时回滚到旧版本，并重启 API 后台服务，但此时因为承载 API 服务的容器平台也依赖 API 服务才能提供调度能力，即发生了循环依赖，导致服务无法自动拉起。通过运维手工启动方式才使 API 服务重启，完成整个故障恢复。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;改进措施&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;综合盘点这次故障，最根本的原因是在版本变更过程中，没有有效执行沙箱验证和预案演练，暴露了在变更管理上的不足，接下来将从以下几个方面快速进行改进和完善，以减少故障的影响范围和影响时长。&lt;/p&gt; 
&lt;p&gt;第一，提升系统韧性&lt;/p&gt; 
&lt;p&gt;1、定期执行预定的变更策略模拟演练，确保在真实故障发生时，能够迅速切换到恢复模式，最小化服务中断时间。&lt;/p&gt; 
&lt;p&gt;2、优化服务部署架构，通过分层架构、代码审查和监控等手段，&amp;nbsp;避免 API 服务中潜在的循环依赖问题。&lt;/p&gt; 
&lt;p&gt;3、提供 API 服务逃生通道，当故障发生时，可供调用方快速切换。&lt;/p&gt; 
&lt;p&gt;第二，强化变更管理与保护措施&lt;/p&gt; 
&lt;p&gt;1、完善自动化测试用例库，在系统变更前通过沙箱环境对变更内容进行严格验证。&lt;/p&gt; 
&lt;p&gt;2、实施灰度发布策略，逐步推广新功能或配置更改，按集群、可用区、地域逐步生效，以便在发现问题时能够迅速回滚。&lt;/p&gt; 
&lt;p&gt;3、引入异常自动熔断机制，当检测到系统异常时，能够立即中断变更过程。&lt;/p&gt; 
&lt;p&gt;第三，增强故障响应与沟通能力&lt;/p&gt; 
&lt;p&gt;1、对故障处理流程进行全面升级，确保实时更新故障处理进度和预计恢复时间点，提升故障报告发布效率。&lt;/p&gt; 
&lt;p&gt;2、在对外发布的故障通知中，清晰阐述受影响的业务范围、故障根因及预计修复时长，保持透明度。&lt;/p&gt; 
&lt;p&gt;3、优化腾讯云健康状态看板（StatusPage）的信息展示逻辑，解除对云 API 等云服务的依赖，通过引入缓存和容灾机制，确保即使在云服务出现故障时，能准确、及时地传递故障信息。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287629</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287629</guid>
            <pubDate>Sun, 14 Apr 2024 05:09:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Solon 的事务管理工具类（TranUtils）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;Solon 在编码上，是强调注解与手写并重的一个风格。它有个&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@Tran&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;注解，用于事务管理（可以参考：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F624&quot; target=&quot;_blank&quot;&gt;《事务的全局控制及应用》&lt;/a&gt;）。这里，主要是讲讲它的手动处理工具类&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;TranUtils&lt;/code&gt;。&lt;/p&gt; 
&lt;h3&gt;1、看看它的接口：&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;TranUtils&lt;/span&gt; {
    &lt;em&gt;//执行事务&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;execute&lt;/span&gt;&lt;span&gt;(Tran tran, RunnableEx runnable)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; Throwable;
    &lt;em&gt;//是否在事务中&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;boolean&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;inTrans&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
    &lt;em&gt;//是否在事务中且只读&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;boolean&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;inTransAndReadOnly&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
    &lt;em&gt;//监听事务&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;listen&lt;/span&gt;&lt;span&gt;(TranListener listener)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; IllegalStateException;
    &lt;em&gt;//获取链接&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; Connection &lt;span style=&quot;color:#4078f2&quot;&gt;getConnection&lt;/span&gt;&lt;span&gt;(DataSource ds)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; SQLException;
    &lt;em&gt;//获取链接代理（方便，用于第三方框架事务对接）&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; Connection &lt;span style=&quot;color:#4078f2&quot;&gt;getConnectionProxy&lt;/span&gt;&lt;span&gt;(DataSource ds)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; SQLException;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2、那怎么用它呢？&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;用它判断当前是否在事务中？&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#a626a4&quot;&gt;if&lt;/span&gt;(TranUtils.inTrans()){
    &lt;em&gt;//正在事务中喽...&lt;/em&gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;做一个手动的事务控制（与&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@Tran&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;注解等同效果）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Component&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;UserService&lt;/span&gt;{
    
    &lt;em&gt;//@Tran(policy=TranPolicy.requires_new) &lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;addUser&lt;/span&gt;&lt;span&gt;(UserModel user)&lt;/span&gt;  &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; Throwable{
        TranUtils.execute(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;TranAnno&lt;/span&gt;().policy(TranPolicy.requires_new), ()-&amp;gt;{
            &lt;em&gt;//...&lt;/em&gt;
        });
    }
}

&lt;span style=&quot;color:#4078f2&quot;&gt;@Controller&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DemoController&lt;/span&gt;{
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Inject&lt;/span&gt;
    UserService userService; 
    
    &lt;em&gt;//父回滚，子不回滚&lt;/em&gt;
    &lt;em&gt;//&lt;/em&gt;
    &lt;em&gt;//@Tran&lt;/em&gt;
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Mapping(&quot;/user/add2&quot;)&lt;/span&gt;
    pubblic &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;addUser2&lt;/span&gt;&lt;span&gt;(UserModel user)&lt;/span&gt;{
        TranUtils.execute(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;TranAnno&lt;/span&gt;(), ()-&amp;gt;{
            userService.addUser(user); 
            &lt;span style=&quot;color:#a626a4&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;RuntimeException&lt;/span&gt;(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;不让你加；但还是加了:(&quot;&lt;/span&gt;);
        });
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;用它与 dbvisitor （或者别的第三方框架）做事务托管对接&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;SolonManagedDynamicConnection&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;implements&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DynamicConnection&lt;/span&gt; {
    &lt;span style=&quot;color:#a626a4&quot;&gt;private&lt;/span&gt; DataSource ds;

    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;SolonManagedDynamicConnection&lt;/span&gt;&lt;span&gt;(DataSource ds)&lt;/span&gt; {
        &lt;span style=&quot;color:#c18401&quot;&gt;this&lt;/span&gt;.ds = ds;
    }

    &lt;span style=&quot;color:#4078f2&quot;&gt;@Override&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; Connection &lt;span style=&quot;color:#4078f2&quot;&gt;getConnection&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; SQLException {
        &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; TranUtils.getConnectionProxy(ds);
    }

    &lt;span style=&quot;color:#4078f2&quot;&gt;@Override&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;releaseConnection&lt;/span&gt;&lt;span&gt;(Connection conn)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; SQLException {
        conn.close();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3、TranUtils 是个麻雀工具&lt;/h3&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;麻雀虽然，五脏具全。还可以在运行时，动态添加事务监听哦。先看看事务监听器接口：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;interface&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;TranListener&lt;/span&gt; {
    &lt;em&gt;//顺序位&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;getIndex&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
    &lt;em&gt;//提交之前（可以出异常触发回滚）&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;beforeCommit&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#986801&quot;&gt;boolean&lt;/span&gt; readOnly)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; Throwable;
    &lt;em&gt;//完成之前&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;beforeCompletion&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
    &lt;em&gt;//提交之后&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;afterCommit&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
    &lt;em&gt;//完成之后&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;afterCompletion&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#986801&quot;&gt;int&lt;/span&gt; status)&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;然后，我们试着做一个事务监听：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Component&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;UserService&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Inject&lt;/span&gt;
    UserDao userDao;
    
    &lt;em&gt;//添加并使用事务&lt;/em&gt;
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Tran&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;addUserAndTran&lt;/span&gt;&lt;span&gt;(User user)&lt;/span&gt;{
        userDao.add(user);
        onUserAdd();
        
        &lt;em&gt;//这里明确知道有事务&lt;/em&gt;
        TranUtils.listen(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;TranListener&lt;/span&gt;() {
            &lt;span style=&quot;color:#4078f2&quot;&gt;@Override&lt;/span&gt;
            &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;afterCompletion&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#986801&quot;&gt;int&lt;/span&gt; status)&lt;/span&gt; {
                System.err.println(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;---afterCompletion: &quot;&lt;/span&gt; + status);
            }
        });
    }
    
    &lt;em&gt;//添加（不使用事务）&lt;/em&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; vod &lt;span style=&quot;color:#4078f2&quot;&gt;addUser&lt;/span&gt;&lt;span&gt;(User user)&lt;/span&gt;{
        userDao.add(user);
        onUserAdd();
    }
    
    &lt;span style=&quot;color:#a626a4&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;onUserAdd&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;{
        &lt;em&gt;//这里不确定是否有事务，先判断下&lt;/em&gt;
        &lt;span style=&quot;color:#a626a4&quot;&gt;if&lt;/span&gt;(TranUtils.inTrans()){
            TranUtils.listen(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;TranListener&lt;/span&gt;() {
                &lt;span style=&quot;color:#4078f2&quot;&gt;@Override&lt;/span&gt;
                &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;afterCompletion&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#986801&quot;&gt;int&lt;/span&gt; status)&lt;/span&gt; {
                    System.err.println(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;---afterCompletion: &quot;&lt;/span&gt; + status);
                }
            });
        }
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287626/solon-tranutils</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287626/solon-tranutils</guid>
            <pubDate>Sun, 14 Apr 2024 04:15:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>深数所发布 500 个行业多模态算料集</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在日前举办的「数·算·网」融合发展暨粤港澳大湾区算力服务联盟第一期交流研讨会上，深圳数据交易所发布了 500 个垂直行业多模态算料集，按照大模型应用的不同阶段，有的放矢地提供数据源，让国产大模型厂商「寻数有路」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次深数所发布的首批 500 个人工智能大模型高质量训练数据集，由 37 家不同的数据商提供，涵盖 12 个「数据要素×」领域，3 家境外数据商，7 类数据模态（文本、图像、音频、视频、多模态、3D、GIS 等）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;且本批数据集首次汇聚了来自中国气象局、中国知网、中译语通、万邦同和、微梦数据（新浪微博）、前海数据、海天瑞声、拓尔思、数据堂、智慧芽、网智天元、柏川数据、深信科技等数据商的数据集作为大模型算料。其中大部分算料为全国首发。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;266&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-40f24b403269280223318a149a4c2784913.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;深数所人工智能行业有关人士表示，数据作为一个高效的「乘法」因子，能够与不同行业结合，显著提升行业的生产效率或创新能力，而人工智能技术则通过「加法」方式为传统产业带来渐进式的改进和优化，两者相互交织，共同成为数字经济发展的双翼。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「数据都是零散的，国产大模型厂商无法实现批量采集数据，我们此次推出的算料集就是，将大模型需要的训练数据进行逻辑的汇聚，从而形成了一个大模型训练数据产业高地。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287623</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287623</guid>
            <pubDate>Sun, 14 Apr 2024 03:53:45 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>重新审视 CXL 时代下的分布式内存</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;消息传递与分布式共享内存&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;随着摩尔定律增长的逐渐减缓，系统规模的水平扩展已经成为提升系统性能的关键策略。然而，这种扩展依赖于分布式系统架构的支持，而分布式编程的固有复杂性给构建高效、可靠及弹性的系统带来了严峻挑战。因此，简化分布式编程依旧是分布式编程框架追求的核心目标。&lt;/p&gt; 
&lt;div style=&quot;text-align:center&quot;&gt; 
 &lt;img height=&quot;374&quot; src=&quot;https://pic4.zhimg.com/80/v2-a40be461c48d49a776427b0e11b03c03_720w.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;如图所示，在分布式编程领域，目前主流的编程范式主要分为两类：&lt;strong&gt;消息传递&lt;/strong&gt;（Message Passing，MP）和&lt;strong&gt;分布式共享内存&lt;/strong&gt;（Distributed Shared Memory，DSM）。DSM 范式因其提供一致的内存空间视图和抽象化的数据通信复杂性而更易于使用，这样的设计让分布式应用程序的能够直接编程就像在单机上进行多线程编程一样简单。然而，在实际应用中，较为直接但不太直观的 MP 模型却更为普遍。开发者对 MP 的偏好很大程度上基于这样一个假设：远程通信的高昂开销显著影响了 DSM 系统的性能。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;但是随着网络和互联技术的飞速发展，研究者在逐渐改变对于该领域的看法，特别是随着&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Compute Express Link（CXL）技术&lt;/strong&gt;的推出，我们站在了一个重新思考传统分布式编程范式的新起点。这个技术突破促使我们必须重新评估 DSM 在现代分布式系统中的应用潜力。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;从以太网到 RDMA 再到 CXL&lt;/strong&gt;&lt;/h2&gt; 
&lt;div style=&quot;text-align:center&quot;&gt; 
 &lt;img height=&quot;147&quot; src=&quot;https://pic4.zhimg.com/80/v2-32cdbacaf88f10eadfc3c3bc3654f01f_720w.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;div style=&quot;text-align:center&quot;&gt; 
 &lt;img height=&quot;561&quot; src=&quot;https://pic3.zhimg.com/80/v2-1f9837b03c638e24b3fb67ac2670613a_720w.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;从工业界将重心从以太网转移到远程直接内存访问（RDMA），再到当前对 Compute Express Link（CXL）的关注，这一连串变迁&lt;strong&gt;标志着互连技术领域&lt;/strong&gt;的一系列重大突破。RDMA 的广泛采用极大地革新了现代数据中心的构架，并对众多流行的分布式系统设计产生了深远影响，其中包括许多影响深远的数据库和存储项目。通过利用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;RDMA&lt;/strong&gt;，我们能够将远程数据访问的延迟从 100 多毫秒显著降低到微秒量级，同时提供类似本机内存的读/写接口，&lt;strong&gt;极大地减少了远程操作的成本&lt;/strong&gt;。作为最前沿的互联协议，CXL 旨在提供高速且具备缓存一致性的跨物理节点数据传输。例如，DirectCXL[1] 将主机处理器与远程内存资源连接，支持加载/存储指令，其远程 CXL 内存访问的延迟大约为 300 纳秒，与访问远程 NUMA 节点的延迟相媲美。&lt;strong&gt;CXL 2.0 的一个关键进步在于引入了内存池化功能&lt;/strong&gt;，该功能可以构建全局内存资源池，以此优化内存的总体利用率。内存池化可以通过 CXL 交换机和内存控制器实现，便于内存资源的动态分配与回收。Pond 作为第一个满足云服务提供商需求的全栈内存池[2]，其基于 CXL 的内存池系统已在 Microsoft Azure 云平台上进行了小范围部署。至今，大部分主流云服务提供商都相继宣布了支持并研发基于 CXL 内存池的计划。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;进一步地，已公布的 CXL 3.0/3.1 等规范版本，&lt;strong&gt;承诺将支持内存共享功能&lt;/strong&gt;[3]。共享内存允许在多台机器间映射同一内存区域，在这样的配置下，硬件会自动管理不同机器并发访问产生的缓存一致性问题，从本质上实现了基于硬件的分布式共享内存模型。这一革命性的新功能为分布式计算的未来奠定了充满无限可能性的基石。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;重温 CXL 时代 DSM 范式下的分布式应用&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;尽管 Compute Express Link（CXL）的规范版本已经发展至 3.1，实际的硬件实现却远未跟上规范的快速进步。但这正是一个在即将来临的 CXL 时代背景下，对消息传递（MP）和分布式共享内存（DSM）之间区别重新审视的绝佳时机，关键在于理解它们的差异性，并识别最适合它们的应用场景。这两种范式的&lt;strong&gt;主要区别在于它们所采用的接口&lt;/strong&gt;：MP 依靠传统的发送/接收接口，而 CXL 通过提供更细粒度的远程 LOAD/STORE 指令集与 DSM 实现更紧密的一致性。然而，我们认为计算与内存关系的根本假设才是更关键的考量因素。&lt;/p&gt; 
&lt;div style=&quot;text-align:center&quot;&gt; 
 &lt;img height=&quot;250&quot; src=&quot;https://pic3.zhimg.com/80/v2-542fe9dac666cdf45513d1413ae001ba_720w.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;首先，消息传递范式倾向于采取紧密耦合的架构，每个节点仅能访问其本地内存。而支持 CXL 的 DSM 系统则自然倾向于解耦架构，将计算和内存资源分散到不同的资源池中[4]，这样做能够实现资源的更灵活、更高效利用。其次，就数据通信而言，消息传递通常涉及将数据有效负载从一个节点复制到另一个节点，这是一种按值传递（pass-by-value）的方法。另一方面 DSM 使用了引用传递的方法，只需要交换对于对象的引用使用了引用传递（pass-by-reference）方法。这有助于仅访问必要的数据部分，并实现就地更新，为一些特性的场景带来显著的性能提升。例如，我们开发了一个基于 CXL 的 RPC 系统 POC，用于验证引用传递的优势。它避免了数据复制和网络栈的开销，&lt;strong&gt;因此吞吐量比传统的基于 RDMA 的 RPC 系统高出 4 倍以上&lt;/strong&gt;。&lt;/p&gt; 
&lt;div style=&quot;text-align:center&quot;&gt; 
 &lt;img height=&quot;436&quot; src=&quot;https://pic2.zhimg.com/80/v2-2a13131b3a424f8f2effafbd36439a6d_720w.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;最后，DSM 提供了全局内存空间的可访问性，这意味着所有数据和状态都是共享的。这一特性有利于工作负载的快速迁移。例如，在「share-nothing」架构中解决负载不均衡问题通常需要数据的大量重新分区，而在「share-everything」模式下，只需交换代表数据分区所有权的元数据即可。&lt;/p&gt; 
&lt;div style=&quot;text-align:center&quot;&gt; 
 &lt;img height=&quot;444&quot; src=&quot;https://pic4.zhimg.com/80/v2-b3089359c65cc91a30709d4b6dbc314b_720w.webp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;总而言之，在那些需要高度灵活性的应用场景中，基于 CXL 的 DSM 表现出色。CXL 架构自然支持这种灵活性，它提供了动态且高效的方式来分配和访问远程内存资源，这对于需要能够快速、高效扩展的系统来说至关重要。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;基于 CXL 的 DSM 面临的挑战&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;然而，过渡到基于 CXL 的 DSM 范式不仅仅只是享受硬件进步的红利。DSM 范式通过使用同一地址内存空间来维护共享状态，从而实现更快的数据传输和迁移，同时将计算与内存解耦以增强可扩展性。然而，考虑到并发访问的情况以及可能出现的部分故障（partial failure），管理这些共享状态会比传统的 share-nothing 架构更加复杂。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;本质上，我们面临的挑战源于共享分布式对象和引用它们的客户端分别有单独的故障域。具有这种单独的故障域，能够允许客户端在执行任务期间自由加入、离开系统甚至宕机，因为它们创建、释放和交换对远程内存的引用。虽然这种灵活性是用户友好的，但它给内存管理带来了巨大的挑战。我们将其称为部分故障弹性 DSM (RDSM)，以将其与所有客户端同时失败的情况区分开来。我们认为，有效处理部分故障对于扩大 DSM 的使用至关重要。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;为了应对这些挑战，我们在 SOSP 23 上的论文「Partial Failure Resilient Memory Management System for (CXL-based) Distributed Shared Memory」[5] 提出了一种&lt;strong&gt;采用引用计数来减少回收远程内存所涉及的手动工作量的方法&lt;/strong&gt;。然而，标准引用计数系统对于系统故障而言鲁棒性并不强。我们将维护自动引用计数的过程分为两个不同的操作。当客户端想要创建引用时，第一步是增加引用计数。接下来，我们通过将引用的值赋为被引用空间的地址来链接该引用。而回收引用是一个类似的两步过程：递减引用计数，然后将引用设置为 NULL。虽然只有两个简单的步骤，但它们的顺序至关重要。如果这两个步骤之间发生系统崩溃，就会出现问题。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;例如，如果我们增加引用计数但由于崩溃而未能设置引用，则可能会导致内存泄漏。一个简单的解决方案是使用锁来确保引用计数的修改是幂等的，并记录此更改以用于后续出现错误之后的恢复。然而这种方法仅在所有客户端同时失败的情况下才有效。在部分失败的情况下，客户端可能在获取锁后崩溃，这可能会导致我们方案进一步的复杂化。为了解决这个问题，我们改变了原始算法中使用锁的方式，转而使用了分布式矢量时钟来做非阻塞更新。这一调整使我们能够保持全局一致的时间表，而不需要锁机制。有关该方法的更多详细信息请参见论文。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;未来方向：基于 CXL 的 DSM 商业化策略&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;除了探究基于 CXL 的部分故障容错 DSM 架构的技术细节，我们还发现这种范式与云计算的发展方向不谋而合；云计算本质上追求的是极致的弹性。云基础架构的演进带来了更细腻的计费模式，促使用户和提供方都能实现更高层次的资源使用效率。然而，由于传统应用程序固有的缺乏弹性，尤其是它们对内存状态的本地化处理，常常未能充分利用这些技术进步带来的潜在优势。突破这一局限，将是 CXL 研究领域面临的重要机会和挑战。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_6&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;后记&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;受到 ACM SIGOPS（美国计算机协会操作系统兴趣组）邀请，本文英文版发表在该协会的博客上（&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwww.sigops.org%2F2024%2Frevisiting-distributed-memory-in-the-cxl-era%2F%253Fspm%253Da2c6h.13046898.publish-article.3.2f1c6ffabHEEj7&quot; target=&quot;_blank&quot;&gt;https://www.sigops.org/2024/revisiting-distributed-memory-in-the-cxl-era/&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;）。本文的相关工作 CXL-SHM 则发表在操作系统顶级会议 SOSP 23 上。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;作者：阿里巴巴技术专家马腾 、清华大学助理教授章明星&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;引用&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;[1] Donghyun Gouk, Sangwon Lee, Miryeong Kwon, and Myoungsoo Jung. 2022. Direct Access High-Performance Memory Disaggregation with DirectCXL. In 2022 USENIX Annual Technical Conference (USENIX ATC 22). 287–294.&lt;/li&gt; 
 &lt;li&gt;[2] LI, H., BERGER, D. S., HSU, L., ERNST, D., ZARDOSHTI, P., NOVAKOVIC, S., SHAH, M., RAJADNYA, S.,LEE, S., AGARWAL, I., ET AL. Pond: Cxl-based memory pooling systems for cloud platforms. In Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 2 (2023), pp. 574–587.&lt;/li&gt; 
 &lt;li&gt;[3] 2022. Compute Express Link 3.0.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwww.computeexpresslink.org%2F_files%2Fugd%2F0c1418_a8713008916044ae9604405d10a7773b.pdf.%253Fspm%253Da2c6h.13046898.publish-article.4.2f1c6ffabHEEj7&quot; target=&quot;_blank&quot;&gt;https://www.computeexpresslink.org/_files/ugd/0c1418_a8713008916044ae9604405d10a7773b.pdf.&lt;/a&gt;&lt;br&gt; [4] 2022. Compute Express Link CXL 3.0 is the Exciting Building Block for Disaggregation.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwww.servethehome.com%2Fcompute-expresslink-cxl-3-0-is-the-exciting-building-block-for-disaggregation%2F%253Fspm%253Da2c6h.13046898.publish-article.5.2f1c6ffabHEEj7&quot; target=&quot;_blank&quot;&gt;https://www.servethehome.com/compute-expresslink-cxl-3-0-is-the-exciting-building-block-for-disaggregation/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[5] ZHANG, M., MA, T., HUA, J., LIU, Z., CHEN, K., DING, N., DU, F., JIANG, J., MA, T., AND WU, Y. Partial failure resilient memory management system for (cxl-based) distributed shared memory. In Proceedings of the 29th Symposium on Operating Systems Principles (2023), pp. 658–674.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1432194%3Futm_content%3Dg_1000391695&quot; target=&quot;_blank&quot;&gt;原文链接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;本文为阿里云原创内容，未经允许不得转载。&lt;/strong&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/yunqi/blog/11048457</link>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/11048457</guid>
            <pubDate>Sun, 14 Apr 2024 03:37:45 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>彭博社：苹果计划以 AI 为重点的 M4 芯片改造 Mac 产品线</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;彭博社援引知情人士&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-04-11%2Fapple-aapl-readies-m4-chip-mac-line-including-new-macbook-air-and-mac-pro&quot; target=&quot;_blank&quot;&gt;消息称&lt;/a&gt;，为了刺激低迷的电脑销售，苹果公司计划生产新的 M4 处理器以全面改造其整个 Mac 产品线，从而突出 AI 功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中，iMac、低端 14 英寸 MacBook Pro、高端 14 英寸 MacBook Pro、16 英寸 MacBook Pro 和 Mac mini 机器将在 2024 年率先采用 M4 芯片，随后在 2025 年中期的某个时候更新 13 英寸和 15 英寸 MacBook Air 机型，Mac Studio 和 Mac Pro 则将在晚些时候获得更新。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;报道指出，M4 芯片将至少分为三个不同的级别，包括代号为 Donan 的入门级 M4 芯片、中端的 Brava 芯片和性能最高的 Hidra 芯片。这三个版本的芯片都将拥有高于 M3 的 AI 处理能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;苹果将为入门级 MacBook Pro、MacBook Air 和低端 Mac Mini 添加 Donan 芯片。为高配置的 MacBook Pro、Mac Minis 和 Mac Studio 保留中端 Brava 芯片，为 Mac Pro 添加顶级 Hidra 芯片。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;去年 10 月份，苹果公司于发布了新一代 &lt;a href=&quot;https://www.oschina.net/news/264233/apple-m3-silicon&quot;&gt;M3 芯片&lt;/a&gt;以及采用该芯片的新款 MacBook Pro 和 iMac 电脑。近段时间以来，苹果的 Mac 系列产品正值困难时期，其销量持续下滑；在苹果公司截至 9 月份的最近一个财年中，Mac 销量下降了 27%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4b873d2a11a318754f6315c42b0e6c81f6f.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;有外媒认为，该公司可能会在 6 月的年度开发者大会上宣布新的 AI 合作伙伴关系，并公布 iOS 的重大变化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;值得一提的是，微软也在加码高通&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;骁龙 X Elite 芯片，预计将其&lt;/span&gt;应用于今年推出的多款 Windows 笔记本电脑中。&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;骁龙 X Elite 芯片于去年 10 月推出，并针对 AI 功能进行了优化。&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软&lt;/span&gt;认为，搭载了这一芯片的设备&lt;span style=&quot;color:#000000&quot;&gt;在 CPU 性能和 AI 加速任务方面均优于搭载了 M3 芯片的苹果 MacBook Air。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287615/apple-ai-m4-chips-macs-line</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287615/apple-ai-m4-chips-macs-line</guid>
            <pubDate>Sun, 14 Apr 2024 03:02:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>1Panel 官方出品丨 MaxKB：基于 LLM 大模型的知识库问答系统</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;1Panel（&lt;/span&gt;&lt;em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;github.com/1Panel-dev/1Panel&lt;/span&gt;&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;）是一款现代化、开源的 Linux 服务器运维管理面板，它致力于通过开源的方式，帮助用户简化建站与运维管理流程。为了方便广大用户快捷安装部署相关软件应用，1Panel 特别开通应用商店，精选各类高质量的开源工具和应用软件，为用户的应用安装与升级操作提供便利。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;2024 年 3 月，1Panel 应用商店在「AI/大模型」产品类别中正式上架 MaxKB 开源项目，目前已经累计了超过 3,000 次下载。MaxKB 是 1Panel 官方出品的开源子项目（&lt;/span&gt;&lt;em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;github.com/1Panel-dev/MaxKB&lt;/span&gt;&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;）。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ZWE4MjBmZTdiMWRhMjgzMWU1Y2E5ZjQxNjA2MjkzNTIsMTcxMjk5MDQ1NTM1Mg==&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;MaxKB 是一款基于 LLM（Large Language Model）大语言模型的知识库问答系统。MaxKB 的产品命名内涵为「Max Knowledge Base」，为用户提供强大的学习能力和问答响应速度，致力于成为企业的最强大脑。&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;与同类基于 LLM 的知识库问答提供系统相比，MaxKB 的核心优势包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;开箱即用：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;支持直接上传文档、自动爬取在线文档，支持文本自动拆分、向量化，智能问答交互体验好；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;/span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;无缝嵌入：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;支持零编码快速嵌入到第三方业务系统；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;多模型支持：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;支持对接主流的大模型，包括本地私有大模型（如 Llama 2）、OpenAI、Azure OpenAI 和百度千帆大模型等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;一、MaxKB UI 界面展示&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0f5a22473118d1ce678ba54edadf6fcf263.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;▲ 图 1 基于 MaxKB 的 DataEase 小助手问答界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-67a4064eeadf14e2c03bae1ff90b7f553e1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;▲ 图 2 MaxKB 文档分段管理&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1692&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5b8474ff7ae137350f0686382a364424a22.png&quot; width=&quot;2946&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲ 图 3 MaxKB 应用嵌入第三方脚本&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-06093f38c1f8ef4d54cf17601895f0534d5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲ 图 4 MaxKB 模型设置界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;二、30 分钟上线基于大语言模型的知识库问答系统&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;如果您对本地部署大模型应用感兴趣，可以尝试在 1Panel 应用商店（&lt;em&gt;apps.fit2cloud.com/1panel&lt;/em&gt;）中同时部署 MaxKB 和 Ollama（开源的本地部署大模型项目），30 分钟即可上线基于 LLM 大语言模型的知识库问答系统，并且可以嵌入到第三方业务系统中。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;三、MaxKB 落地案例：DataEase 智能问答小助手&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;DataEase 开源数据可视化分析工具（&lt;em&gt;github.com/dataease&lt;/em&gt;）是一款人人可用的 BI 分析软件，它支持用户通过拖拉拽的方式快速制作仪表板和数据大屏，并且方便地与他人分享。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;目前，基于 MaxKB 的 DataEase 小助手已经嵌入至 DataEase 操作界面以及 DataEase 在线文档（&lt;em&gt;https://dataease.io/docs/&lt;/em&gt;）页面，用户点击操作界面或者页面中的 MaxKB 图标，即可打开「DataEase 小助手」对话框进行提问，并快速获取答案。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a42c44b8b94da19608a2b0668194223ccdd.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;▲ 图 5 DataEase 操作界面中的「DataEase 小助手」对话框&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-15c07e993ab73323769c7644169a8fd7024.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;▲ 图 6 DataEase 在线文档页面中的「DataEase 小助手」对话框&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;目前，MaxKB 已经正式发布 v1.0.0 版本。欢迎广大社区用户在 1Panel 应用商店下载并使用 MaxKB，您同样可以通过 1Panel 应用商店无缝升级后续版本的 MaxKB。MaxKB 提供的智能交互能力帮助企业为用户带来良好的服务体验，MaxKB 将通过持续的版本迭代完善自身的功能性、易用性和安全性，欢迎广大社区用户下载使用。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/287529</link>
            <guid isPermaLink="false">https://www.oschina.net/news/287529</guid>
            <pubDate>Sat, 13 Apr 2024 06:55:31 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>