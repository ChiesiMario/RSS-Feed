<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 11 Sep 2024 15:25:34 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>开源日报 | 李彦宏内部讲话曝光；阿里 25 周年马云内部发声；今天的 App 必须要把自己 AI 化；软件有半衰期；开源大模型编程框架 ell</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.11&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311456/canonical-graalvm-for-ubuntu&quot;&gt;Canonical 正在将 GraalVM 打包成 deb 格式引入 Ubuntu&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Linux 发行版 Ubuntu 基础设施团队工程师最近在论坛中&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Ffoundations-team-updates-thursday-2024-09-05%2F47785%2F5&quot; target=&quot;_blank&quot;&gt;透露&lt;/a&gt;，他们正在为 GraalVM&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaunchpad.net%2F%7Epushkarnk%2F%2Barchive%2Fubuntu%2Fgraalvm-packages%2F%2Bpackages&quot; target=&quot;_blank&quot;&gt;制作&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;deb 软件包&lt;/strong&gt;&lt;/a&gt;（不是 Ubuntu 优先支持的 snap）。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/112805_VScj_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;GraalVM 是一个高性能的 JDK 发行版。它旨在加速用 Java 和其他 JVM 语言编写的应用程序的执行，同时还为 JavaScript、Python、基于 LLVM 的语言（如 C 和 C++）以及许多其他流行编程语言提供运行时。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;此外，GraalVM 为编程语言之间提供了高效互操作性，并将 Java 应用程序提前编译为本机可执行文件，从而加快启动时间并降低内存开销。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Oracle 提供了 GraalVM 的通用 Linux x86_64 和 ARM64 二进制包。但到目前为止，GraalVM 并未出现在 Debian/Ubuntu 的软件包仓库中，而 Debian 上的 GraalVM 软件包只有 GitHub 中的几个非官方包。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pingwest.com%2Fw%2F298272&quot; target=&quot;_blank&quot;&gt;Reflection 70B AI 模型被曝第三方基准测试效果不佳&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;据 venturebeat 报道，上周推出的号称可与顶级商业大模型一较高下的开源大模型 Reflection 70B 今日被曝在第三方测试中表现不佳。&lt;/p&gt; 
&lt;p&gt;上周末独立的第三方评估人员和开源人工智能社区成员在 Reddit 和 Hacker News 上发帖，开始质疑该模型的性能，并表示无法自行复制。有些人甚至发现了一些回复和数据，表明该模型与 Anthropic 的 Claude 3.5 Sonnet 模型有关，也许只是一个薄薄的 「包装」。&lt;/p&gt; 
&lt;p&gt;在独立的人工智能评估机构 Artificial Analysis 在 X 上发布其对 Reflection 70B 的测试结果比 HyperWrite 最初声称的得分低得多之后，批评的声音越来越多。&lt;/p&gt; 
&lt;p&gt;Reflection 公司联合创始人兼首席执行官 Matt Shumer 对此表示道歉，并表示这些差异归咎于模型上传到 Hugging Face 的过程中出现的问题，并承诺在上周修正模型权重，但至今仍未做到。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1642088277%2FOwnBvlBEk%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;阿里 25 周年马云内部发声&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    这段话还是有水平的：「没有支付，我们创建支付；没有物流，我们参与物流；没有互联网支撑技术，我们投入云；信用不值钱，我们让信用变得无价。。。我们相信技术可以也必须帮助每一个普通人，让每一个普通的老百姓因为技术也获得尊严。」
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/311486&quot; target=&quot;news&quot;&gt;李彦宏内部讲话曝光：谈大模型三大认知误区，未来模型之间的差距会变大&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;「外界对大模型有相当多的误解」， 近日据媒体报道，李彦宏的一则内部讲话曝光。 在最近一次和员工交流中，李彦宏谈及三个大模型认知误区，涵盖了大模型竞争、开源模型效率、智能体趋势等热点话题。 李彦宏谈到，未来大模型之间的差距可能会越来越大。他表示，大模型的天花板很高，现在距离理想情况还相差非常远，所以模型要不断快速迭代、更新和升级；需要能几年、十几年如一日地投入，不断满足用户需求，降本增效。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1645215240%2FOwuVG7KcR&quot; target=&quot;_blank&quot;&gt;今天的 App 把自己 AI 化，是他们必须要做的事情&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;现有 app 生态，的确开放程度非常低。但是用户用自然语言控制硬件的需求是明确的，天然的，合理合法的。&lt;/p&gt; 
     &lt;p&gt;任何阻挠这种进程的公司，再强大，也必将崩塌。甲骨文强大吗？今天 PostgreSQL 已经完全干掉了 oracle。&lt;/p&gt; 
     &lt;p&gt;今天的 app 把自己 ai 化，然后提供和其他人或者 app 交互的自然语言问答接口，是他们必须要做的事情。如果不做，那么基于 01 app 这种框架新开发的 app ，会干掉他们。&lt;/p&gt; 
     &lt;p&gt;软件的迭代是很快的，消费者不是不喜欢新鲜玩意，商业战场也不是不会新陈迭代，这都是天道。&lt;/p&gt; 
     &lt;p&gt;唯一的问题是，需要一个足够强大的驱动力。比如，我可以用自然语言控制我的手机和电脑了。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;李楠或 kkk&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2194035935%2FOwtFjooUO&quot; target=&quot;_blank&quot;&gt;前 OpenAI 科学家 william 开源了 ell 项目&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;ell 是一个轻量级、功能性的 LM 编程库。ell 是因为使用 LangChainAI 这样的框架时的挫败感而构建的，遵循三个原则：&lt;/p&gt; 
    &lt;p&gt;提示是程序，而不是字符串&lt;br&gt; 提示是机器学习模型的参数&lt;br&gt; 每个调用语言模型都值得其重量的信用&lt;br&gt; 提示应该可读且科学&lt;/p&gt; 
    &lt;p&gt;有了合适的工具，提示工程从一门黑暗的艺术变成了科学。&lt;/p&gt; 
    &lt;p&gt;项目地址：github.com/MadcowD/ell&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;蚁工厂&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1873355712%2FOw31K47Ks&quot; target=&quot;_blank&quot;&gt;最近又流行讨论 AI 程序员&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     其实开发大部分时候，理解业务上下文，流程上下文，小微构架，找人，对需求，等等各种交互，写代码是叶子节点这部分，但是不是全部。
    &lt;/div&gt; 
    &lt;div&gt;
     而且代码这种东西，其实是有时效性的，就是你要是不持续更新维护，它很快就腐化不满足新的需求或者 bug 没人修复，就是软件是有半衰期的。
    &lt;/div&gt; 
    &lt;div&gt;
     &amp;nbsp;
    &lt;/div&gt; 
    &lt;div&gt;
     不要说 AI 写代码了，就算你有两个不错的真人小组员给你写代码，你也还是有一堆事情要做，而且还常常做了好久没解决问题。
    &lt;/div&gt; 
    &lt;div&gt;
     当然，潮流有时候就是范式的转移，潮流说代码会更多的由 AI 来写，那就真是这样，只是你要颠覆传统程序员的价值，那就请用新的组织结构，新的组织结构才能用上新范式的生产力，目前还没有。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;幻灰龙&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5675889356%2FOw1qRjC5m&quot; target=&quot;_blank&quot;&gt;「SkyOS · 天枢」研发背后，还有哪些你不知道的故事？&lt;/a&gt;&lt;/h4&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     蔚来为什么要研发整车全域操作系统？这个过程中克服了哪些困难？整车全域操作系统的研发成功，给蔚来、给行业带来了怎样的改变？今天我们用七个小故事，来告诉你「SkyOS · 天枢」背后的点点滴滴。
    &lt;/div&gt; 
    &lt;div style=&quot;text-align:right&quot;&gt;
     &lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;
     &lt;strong&gt;蔚来&lt;/strong&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FOwaojcwHV%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;开源微信机器人底层框架：wcf.js&lt;/a&gt;&lt;/h4&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;GitHub 上一款强大、快速、开源的微信机器人底层框架：wcf.js。&lt;/p&gt; 
     &lt;p&gt;github.com/wechatferry/wechatferry&lt;/p&gt; 
     &lt;p&gt;具有如下特点：&lt;/p&gt; 
     &lt;p&gt;- 为消息监听、发送以及群聊操作提供一站式解决方案；&lt;br&gt; - 内置强大且易用的 Agent 库，涵盖大部分常用操作；&lt;br&gt; - 内置开发者工具包，包括数据库管理、机器人技能列表以及日志记录；&lt;br&gt; - 具备强大的处理能力，高效管理数据与任务，确保系统稳定可靠；&lt;br&gt; - 可自由控制发消息的频率，降低风险；&lt;br&gt; - 项目完全开源免费且可自由定制。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;GitHubDaily&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-09-11%2Fdoc-incntriy7602835.shtml&quot; target=&quot;_blank&quot;&gt;深圳机器人企业数量全国居首&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;随着人工智能浪潮的爆发，人形机器人有望深入各细分消费端，成为 AI 下一个重要落地应用场景。公开数据显示，目前国内现存机器人相关企业 74.17 万家，广东省机器人企业数量高达 14.15 万家。从城市分布来看，深圳市共有 5.11 万家相关企业，数量稳居全国首位，产业链总产值超过 1700 亿元，实现了从关键核心技术攻关到应用场景拓展的全过程创新发展。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;深圳特区报记者&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.ifeng.com%2Fc%2F8ckzhnkg1NN&quot; target=&quot;_blank&quot;&gt;阿里巴巴走过 1/4 世纪，马云最骄傲的是什么？&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;阿里 25 岁再出发，承载着各界对它的期待。媒体人秦朔在一篇写阿里的文章里有一段表述：「这一过程（阿里三年整改）带来的朴素启示是，即使在某个时点看起来再强大的公司，其命运也是螺旋式的，既有筚路蓝缕、无畏探索，也有高歌猛进、汹涌澎湃，还有调整变革、熵增熵减。一次次地出发、试错与重构，一次次地改变世界与被世界改变，这才是完整的故事。」&lt;/p&gt; 
  &lt;p&gt;如今的阿里蜕去了少年的稚气，它对「取舍」的理解也更加自如和自信。当电商平台「卷低价」「仅退款」伤及中小商家权益时，阿里电商平台果断反对内卷，率先优化政策。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;财经故事荟&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fee.m.ofweek.com%2F2024-09%2FART-8610-2800-30645552.html&quot; target=&quot;_blank&quot;&gt;碎片的 RISC-V 生态江湖，RDI 指明方向&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;生态问题依然是盘旋在 RISC-V 头顶最大的乌云。从发展历程来看，RISC-V 是从物联网起家。IoT 嵌入式场景适合「单兵」突破，对于生态的需求低，软硬件切换的代价小。但是，由于 IoT 是低曝光度领域，尽管 RISC-V 架构芯片的出货量已经突破百亿颗，但普通消费者对其感知度不高，生态也难以复用。向前推进，手机、电脑、服务器等强生态场景对于生态的要求很高，软硬件切换的代价大，需要广泛协同生态链。这方面国内虽有企业在发力，持续朝着高性能方向走，出现了一些芯片，让基于 RISC-V 的高性能芯片成为可能，但是还不够，高势能尚未形成。&lt;/p&gt; 
     &lt;p&gt;因此，RISC-V 发展如何更进一步？解决碎片化问题，搭建属于自己的生态，仍然是一个老大难题。弱生态场景感知度低、强生态场景尚待突破，能否找到合适目前 RISC-V 发展的生态场景？基于此，奕斯伟提出了：RDI（RISC-V Digital Infrastructure，RISC-V 数字基础设施）的产业概念。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;半导体产业纵横&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240911A05VE700&quot; target=&quot;_blank&quot;&gt;为什么这家公司的芯片推理速度比英伟达快 20 倍？&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   OpenAI 在 2024 年初发布的文生视频大模型 Sora 以其惊艳的演示效果震撼了科技界。然而，由于模型复杂度带来的巨大计算量，其推理成本难以压缩至可控范围，以致这一突破性技术迟迟无法公开上线。据悉，OpenAI 正在探索更先进的芯片设计方案，以降低推理成本、提升推理速度，已初步展示出潜力的存算一体技术，很可能成为其重点研究的方向。存算一体不仅有望大幅提升推理速度，还可能彻底改变 AI 系统的设计理念，使得更复杂、更强大的 AI 应用成为现实，成为撬动下一代 AI 革命的支点，为人工智能的未来发展开辟一条全新的道路。通过持续的技术创新和市场验证，存算一体有望成为推动 AI 应用更广泛落地的关键推手，为人类社会带来更智能、更高效的技术体验。
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;腾讯研究院&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_1733360754_6750fc7202001acz4.html&quot; target=&quot;_blank&quot;&gt;李彦宏戳破大模型「跑分」假象：榜单不代表所有实力，未来模型的差距会变大&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;p&gt;李彦宏是闭源大模型的坚定支持者，&quot;在大模型时代之前，大家习惯了开源意味着免费、意味着成本低。&quot; 他解释说，比如开源的 Linux，因为已经有了电脑，所以使用 Linux 是免费的。但这些在大模型时代不成立，大模型推理是很贵的，开源模型也不会送算力，还得自己买设备，无法实现算力的高效利用。&lt;/p&gt; 
    &lt;p&gt;&quot;效率上开源模型是不行的。&quot; 他表示，&quot; 闭源模型准确讲应该叫商业模型，是无数用户分摊研发成本、分摊推理用的机器资源和 GPU，GPU 的使用效率是最高的，百度文心大模型 3.5、4.0 的 GPU 使用率都达到了 90% 多。&quot;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;一财网&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/p/ikun-ui&quot; target=&quot;_blank&quot;&gt;ikun-svelte / ikun-ui&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-ec5ad3ef93045cde41576aa9bb008b0f264.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fikun-svelte%2Fikun-ui&quot; target=&quot;_blank&quot;&gt;https://github.com/ikun-svelte/ikun-ui&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;ikun-ui 是基于 Svelte.js 的 UnoCSS UI 库，可用于制作网站。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
  &lt;li&gt;组件化设计 - 提供整洁美观的 UI 组件&lt;/li&gt; 
  &lt;li&gt;预设 CSS - 有 UnoCSS 预设包可供使用，轻松渲染 UI&lt;/li&gt; 
  &lt;li&gt;主题配置 - 使用 unocss 等属性模式进行设计。支持主题配置，自定义主题。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/311382/nginx-moved-to-github&quot;&gt;NGINX 项目迁移到 GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：&lt;/span&gt;从一个 404 仓库搬到另一个 404 仓库&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：最伟大的开源软件之一&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：与时俱进&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311520</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311520</guid>
            <pubDate>Wed, 11 Sep 2024 11:02:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>化 「腐朽」 为 「神奇」：5 种 RAG 优化技术应对千奇百怪的 Query</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;编者按&lt;/strong&gt;：您是否曾经遇到这样的情况：明明构建了一个功能强大的 RAG 系统，但用户却频繁抱怨&quot;找不到想要的信息&quot;或&quot;返回的结果不够准确&quot;？这是许多 RAG 应用开发者面临的共同挑战。&lt;/p&gt; 
 &lt;p&gt;这个问题不仅会导致用户体验下降，更可能直接影响 RAG 系统的使用率和实际价值。如果未能得到妥善解决，之前的辛苦工作恐将付之东流，甚至影响整个项目的成功。&lt;/p&gt; 
 &lt;p&gt;这篇文章并非纸上谈兵，而是源自作者在实际项目中的第一手经验。文章详细介绍了 5 种 Query Translation 技术:&lt;/p&gt; 
 &lt;p&gt;a) Step-back prompting：将具体问题转化为更宽泛的问题，以便获取更多上下文信息。&lt;/p&gt; 
 &lt;p&gt;b) HyDE (Hypothetical Document Embedding)：利用 LLMs 生成文档，然后基于这个文档检索相关信息。&lt;/p&gt; 
 &lt;p&gt;c) Multi-query：使用 LLMs 根据原始 query 生成多个版本的 query ，以改进基于距离的相似度搜索。&lt;/p&gt; 
 &lt;p&gt;d) RAG-Fusion：与 Multi-query 类似，使用 Reciprocal Rank Fusion 算法对检索结果进行重新排序。&lt;/p&gt; 
 &lt;p&gt;e) Decomposition：将复杂问题分解为多个子问题，分别检索答案后再整合。&lt;/p&gt; 
 &lt;p&gt;这些技术各有优势，在实际应用中可能需要根据实际情况结合使用才能达到最佳效果。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;作者 🎨 |&lt;/strong&gt; &lt;strong&gt;Thuwarakesh Murallie&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;编译 🌺 | 岳扬&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-302b3d064a0f76b21e2ea17142c69259bce.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Photo by travelnow.or.crylater[1] on Unsplash[2]&lt;/p&gt; 
&lt;p&gt;若认为用户会每次都向 LLMs 提出完美的问题，那您就大错特错了。&lt;strong&gt;与其直接执行用户的 query ，为何不选择优化用户的 query 呢？这就是所谓的 query translation 技术。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我们开发了一款应用，用户可以通过它查询我们公司历史上制作过的所有文档，其中包括 PPT、项目提案、进度报告、交付文档和其他各类文档等。这一成果非常了不起，因为过去的许多此类尝试都失败了。多亏了 RAGs，这一次的效果非常好。&lt;/p&gt; 
&lt;p&gt;在项目演示阶段，我们都对这款应用表现出了极大的热情。最初，我们只针对一小部分员工进行了推广。然而，我们观察到的现象并未让我们感到非常兴奋。&lt;/p&gt; 
&lt;p&gt;原本以为这款应用会彻底改变大家的工作方式，但大多数用户只是尝试使用了几次便不再使用了，仿佛这款应用只是孩子们的玩具项目一样。&lt;/p&gt; 
&lt;p&gt;日志数据显示这款应用表现良好，但我们还是与实际使用过该应用的用户进行了交流，以便能够确定问题所在。通过他们的反馈，&lt;strong&gt;我们开始思考如何通过 query translation 技术来消除 user inputs 中的歧义。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;让我们来看一个具体的例子。&lt;/p&gt; 
&lt;p&gt;有位用户对我们提供给客户&quot;XYZ&quot;的关于收购与时尚业务相关的企业的建议感兴趣。他输入的问题是：&quot;合作伙伴 XYZ 进行了哪些与时尚业务相关的收购？（What are the fashion-related acquisitions made by XYZ partners?）&quot;该应用程序检索了相关用于交付的 PPT 文件，给出了一份包含十几家公司的清单。但这份清单与用户的期望大相径庭，合作伙伴 XYZ 实际上已经收购了（比如）7 家时装品牌，而清单中只列出了 4 家。这位用户同时也是一名测试人员（tester），他对实际收购的数量了如指掌。&lt;/p&gt; 
&lt;p&gt;难怪大家会放弃使用这款工具。幸运的是，因为采取了向全体用户逐步推出的策略，我们还有机会挽回失去的信任。&lt;/p&gt; 
&lt;p&gt;为了解决这一问题，我们对这款应用程序采取了一系列的改进措施。其中一项重要更新就是 query translations 技术。&lt;/p&gt; 
&lt;p&gt;本文旨在概述我们使用的不同 query translation 技术，而不进行深入的技术解析。例如，这些技术可以与 few-shot prompting（译者注：提供几个示例输入和输出。） 和 chain of thoughts（译者注：鼓励模型在生成最终答案之前，先产生一系列的中间推理步骤。） 等提示词技术相结合，以优化结果。但这些技术细节将留待后续文章[3]中详细讨论。&lt;/p&gt; 
&lt;p&gt;接下来，我们将逐一研究这些技术。在此之前，先来看一个简单的 RAG 示例。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;01 Basic RAG Example&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;RAG（Retrieval-Augmented Generation）应用都至少会有一个数据库，通常是一个向量数据库（vector store）和一个语言模型（language model）。RAG 的核心概念其实很简单：&lt;strong&gt;在大语言模型（LLM）利用其已有知识回答用户问题之前，它会先在数据库中搜索相关的上下文信息，以此来生成更加精确的答案。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;下图展示了一个最基础的 RAG 应用示例。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-fa3cbbedc3261b32d6d749bd7861c360dce.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Basic RAG application Workflow --- Image by the author.&lt;/p&gt; 
&lt;p&gt;在基础的 RAG（检索增强生成）应用中，与大语言模型（LLMs）的交互仅发生一次，可以是 OpenAI 的 GPT 模型[4]、Cohere 模型[5]，也可以是您自行部署在本地的模型。&lt;/p&gt; 
&lt;p&gt;下面给出的代码展示了如何实现上图的 RAG 基础工作流。我们将以此代码为基础，进一步探讨本文中提到的其他技术。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-dd787d8af73b633aee0ea1380f17e88eaea.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在上述代码中，我们通过一个网页加载器（web-based loader）来获取 Django 的官方文档页面，并将其内容存入 Chroma 向量数据库中。我们可以将这一过程应用于网页文档、本地文本文档、PDF 文档等不同类型的数据资源。&lt;/p&gt; 
&lt;p&gt;在此例中，我们没有采用高级的检索技术，而是直接将检索器整合到了最终的 RAG（检索增强生成）流程中。&lt;strong&gt;后续我们将使用检索器链（retriever chain）来代替单一的检索器。&lt;/strong&gt; 文章后续内容将着重讲解如何构建检索器链。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;02 Step-back prompting&lt;/strong&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;该技术用于确保生成的答案与上下文背景信息保持一致，不发生冲突。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Step-back prompting 与基本的 RAG 流程非常相似，但在处理用户提出的问题时，不是直接针对用户提出的初始问题进行查询，而是用一个更宽泛的问题从数据库中检索相关文档。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;与具体问题相比，更宽泛的问题能捕捉到更多的上下文信息。&lt;/strong&gt; 因此，大语言模型（LLMs）能够基于这些信息为用户提供更多有用的信息，且不会与整体上下文信息相抵触。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;当最初的 query 过于具体和详细，但又缺乏全局视角时，这种方法往往非常有用。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-55858d72e6deff779108940bb164ec0ae03.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Step-back prompting workflow --- image by the author.&lt;/p&gt; 
&lt;p&gt;Step-back prompting 的流程是：语言模型先扩展用户输入的 query ，然后从向量数据库中检索相关文档，以此提供必要的上下文，并回答用户最初提出的问题。&lt;/p&gt; 
&lt;p&gt;下面是 step-back prompting 的代码实现。请注意，我们在这里采用了不同的处理方式，与前文的基本 RAG 流程中直接传递检索器的方法不同。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e4996ed93a56c07411ba66810fac0423456.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Step-back prompting 对于那些需要依赖更广泛的上下文背景信息的应用场景极为有用。&lt;/strong&gt; 通过这种方式，LLMs 能够为相关问题提供前后一致的答案。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;03 HyDE (Hypothetical Document Embedding)&lt;/strong&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;给出的答案不仅仅是直接回答问题，而是包含了与问题相关的背景信息或其他相关内容，使得答案更加全面和有深度。还会提供与答案内容相关的可靠信息来源，比如学术文献、研究报告、官方网站等，以便于验证信息的准确性和可靠性。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;HyDE（Hybrid Document Embedding）是一种近来流行且广受欢迎的文档检索技术。&lt;strong&gt;其核心思想是利用大语言模型（LLMs）的已学习的先验知识（prior knowledge）编写文档，然后使用这个文档从向量数据库中检索或提取相关的上下文信息。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;HyDE 特别适用于用户使用通俗的语言描述问题，而向量数据库中的信息却极为专业的情况。&lt;/strong&gt; 此外，由于 LLMs 生成的文本信息中包含了较多的关键词或关键短语，使得检索到的相关信息更加精准。&lt;/p&gt; 
&lt;p&gt;例如，对于&quot;提高 Django 性能的 10 种方法（10 ways to improve Django&#39;s performance）&quot;这样的 query ，HyDE 能够提供一个涵盖成本考虑（cost implications）、缓存策略（caching）、数据压缩（compression）等全方位的答案。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a9d47939d32fc247ccfdd93370ead3cb660.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;HyDE document retrieval process --- image by the author.&lt;/p&gt; 
&lt;p&gt;下列代码片段是上图的代码实现。这次，我仅提供了使用 HyDE 构建检索器链（retrieval chain）的代码片段。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e3df6836ab57bbe7136e4ad15dd4a1c8cd3.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;04 Multi-query&lt;/strong&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;该技术通过改进基于距离的相似度搜索（the distance base similarly search），从而能够检索到更多与用户提出的问题相关的文档，从而提高检索结果的相关性和准确性。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Multi-query 技术有助于解决在基于距离的相似度搜索中可能遇到的问题。大多数向量数据库在检索向量化文档（vectorized documents）时使用余弦相似度（cosine similarity）作为度量标准。&lt;strong&gt;只要文档之间的相似度足够高，这种方法一般都能表现良好。&lt;/strong&gt; 然而，当相似度太低，以至于无法通过基于距离的相似度度量来有效地识别它们之间的关联时，检索过程就可能无法达到预期效果。&lt;/p&gt; 
&lt;p&gt;在 multi-query 方法中，我们要求大语言模型（LLMs）为同一 query 转换多个版本的 query 。例如， &quot;How to speed up Django apps&quot; 这样的 query 会被转换为另一个版本的 query ------ &quot;How to improve Django-based web apps&#39; performance?&quot;。这些 query 合在一起共同作用，从向量数据库中检索出更多相关的文档。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在将这些文档传递给 RAG-LLM 生成最终回答之前，我们需要对检索到的文档进行去重处理。&lt;/strong&gt; 因为多个 query 可能会检索到相同的文档。如果传递所有文档，可能会包含重复项，超出 LLM 的 tokens 阈值，从而影响最终的回答质量。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-9d13668fa899bc64107e935bcd6e6daa612.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Multi-query retrieval workflow --- image by the author.&lt;/p&gt; 
&lt;p&gt;下面这个代码片段实现了一个额外的功能，可用于去除文档中的重复项。其余部分与其他方法保持一致。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-6aa43b863688f0f5232e252b3aa20b8228b.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;05 RAG-Fusion&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;在信息检索和生成答案的过程中，优先考虑和利用与用户提出的问题更相关的文档是非常重要的，因为这些文档提供的信息更有助于生成准确和有用的答案。&lt;/p&gt; 
&lt;p&gt;RAG fusion 和 multi-query 在文档检索方面有诸多相似之处。&lt;strong&gt;我们在这里再次要求大语言模型（LLM）生成初始 query 的多个不同版本。然后，我们用这些不同版本 query 分别检索相应的文档，并将它们合并。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;然而，在合并和去重文档的同时，我们也会根据文档的相关度对它们进行排序。下面是 RAG-fusion 工作流程的示意图。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-021fb5b48689b7e4ad57e05295ece31a47a.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;RAG-fusion workflow --- image by the author.&lt;/p&gt; 
&lt;p&gt;我们不再只进行去重操作，而是使用排序系统（ranking system）对文档进行排序。Reciprocal fusion ranking（RRF）是一种非常巧妙的文档排序算法。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;如果多个版本的 query 检索到的同一文档是最相关的，那么 RRF 算法就会把该文档排在前面。&lt;/strong&gt; &lt;strong&gt;如果某个文档只在其中一个版本的 query 中出现，且相关度较低，那么 RRF 将把该文档排在较低的位置。&lt;/strong&gt; 这样，我们就能获得更相关的信息并对其进行优先排序。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8ed93eddf1a26e63aa31b1373fffdb9af51.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;06 Decomposition&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;在处理复杂问题时，大语言模型（LLM）能够将问题拆分成多个部分，然后逐步构建出答案。&lt;/p&gt; 
&lt;p&gt;有些情况下，直接给出答案并不是最佳策略。解决复杂任务的高效方法是将问题分解成多个部分，然后逐个部分地回答。&lt;/p&gt; 
&lt;p&gt;这也不仅仅是 LLMs 独有的技巧，对吗？&lt;/p&gt; 
&lt;p&gt;是的，我们在分解 query 的过程中试图将初始问题拆分成多个子问题。回答这些子问题的过程中将获得解决初始问题的线索。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-174f07a5acb1bc058da414df5bd03205579.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Query decomposition in RAG --- image by the author.&lt;/p&gt; 
&lt;p&gt;如图所示，我们为每个子问题检索相关文档并分别回答。然后，我们将这些问答对（question-and-answer pairs）传递给 RAG-LLM 。然后，LLM 拥有了更多、更详细的信息来解决复杂问题。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-3c4f00d00ff71ea97755e817b1f4a22f76f.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;07 Final thoughts&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;这款应用程序从演示版本到部署于生产环境，中间经过了许多优化流程。其中不可避免的一步就是使用 query translation 技术。&lt;/p&gt; 
&lt;p&gt;我们所解决的问题在复杂程度上也各不相同。&lt;strong&gt;必须得考虑用户发送不完美的 query 才是常态。检索过程的缺陷也需要得到解决。&lt;/strong&gt; 这些都是需要考虑的问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;要选出哪一种 query translation 技术最佳，并没有唯一正确的方法。在实际应用中，我们可能需要结合多种技术才能获得理想的输出结果。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hope you have enjoyed and learned new things from this blog!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Thuwarakesh Murallie&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Data Science Journalist &amp;amp; Independent Consultant&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fthuwarakesh%2F&quot; target=&quot;_blank&quot;&gt;https://www.linkedin.com/in/thuwarakesh/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;🔗文中链接🔗&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;[1]&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Funsplash.com%2F%40travelnow_or_crylater%3Futm_source%3Dmedium%26utm_medium%3Dreferral&quot; target=&quot;_blank&quot;&gt;https://unsplash.com/@travelnow_or_crylater?utm_source=medium&amp;amp;utm_medium=referral&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[2]&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Funsplash.com%2F%3Futm_source%3Dmedium%26utm_medium%3Dreferral&quot; target=&quot;_blank&quot;&gt;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[3]&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-retrieval-techniques-for-better-rags-c53e1b03c183&quot; target=&quot;_blank&quot;&gt;https://towardsdatascience.com/advanced-retrieval-techniques-for-better-rags-c53e1b03c183&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[4]&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fmodels&quot; target=&quot;_blank&quot;&gt;https://platform.openai.com/docs/models&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[5]&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcohere.com%2F&quot; target=&quot;_blank&quot;&gt;https://cohere.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;本文经原作者授权，由 Baihai IDP 编译。如需转载译文，请联系获取授权。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;原文链接：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftowardsdatascience.com%2F5-proven-query-translation-techniques-to-boost-your-rag-performance-47db12efe971&quot; target=&quot;_blank&quot;&gt;https://towardsdatascience.com/5-proven-query-translation-techniques-to-boost-your-rag-performance-47db12efe971&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/IDP/blog/15754414</link>
            <guid isPermaLink="false">https://my.oschina.net/IDP/blog/15754414</guid>
            <pubDate>Wed, 11 Sep 2024 10:42:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>鸿蒙生态繁荣背后：WPS 全面适配 HarmonyOS NEXT 的故事</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;在今年 HDC 大会上，华为正式发布 HarmonyOS NEXT，并且宣布鸿蒙原生应用进入全面冲刺阶段，5000 多个常用应用已全部启动开发，其中超过 1500 个应用已完成上架。&lt;/p&gt; 
&lt;p&gt;在这串令人振奋的数字背后，承载着千千万万个开发者的热忱和期待。&lt;/p&gt; 
&lt;p&gt;作为国内最大的办公软件之一，WPS 用了八个月时间完成了鸿蒙化，成为鸿蒙生态中的一员。&lt;/p&gt; 
&lt;p&gt;我们采访了金山办公架构师覃欢，听他讲述 WPS 完成 HarmonyOS NEXT 开发适配背后的故事。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/163715_eFlA_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;覃欢在 HDC 2024 现场&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#d35400&quot;&gt;「HarmonyOS 版本没有一行代码和安卓版本是重复的」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;第一次正式接触 HarmonyOS，是 2022 年底，覃欢被突然拉到一个会议中，讨论 WPS 要不要鸿蒙原生化？他感觉有些莫名其妙。&lt;/p&gt; 
&lt;p&gt;不过也情有可原。覃欢经历过 WPS 体系下的各种架构变更，其个人成长路线与 WPS 的快速发展期高度重合。&lt;/p&gt; 
&lt;p&gt;2012 年，覃欢才刚进入金山办公这家公司，便参与基于 Qt 迁移 WPS 到多平台，包括 Windows、Linux，随后又扩展到 macOS 和信创平台。&lt;/p&gt; 
&lt;p&gt;「我们那一批人，赶上了 WPS 重构的末班车，经历了体系架构变革、多平台适配以及处理各种指令集，几乎全程参与了这些变革。」覃欢表示。&lt;/p&gt; 
&lt;p&gt;答案是肯定的，就跟当年拥抱信创一样。&lt;/p&gt; 
&lt;p&gt;过了个年回来，WPS 就开始与华为围绕鸿蒙原生化这件事进行了长期的技术沟通。「从二月份开始，一直到去年的七月份左右，我们经历了七八轮深入的交流，一直在探讨 WPS 在纯血鸿蒙系统中的技术难点。」覃欢回忆。&lt;/p&gt; 
&lt;p&gt;到了年中，WPS 团队突然得知 HarmonyOS 不再兼容安卓，也就是同年 9 月发布的 HarmonyOS NEXT 计划，即鸿蒙原生应用全面启动。&lt;/p&gt; 
&lt;p&gt;一旦 HarmonyOS NEXT 推出，将开启一扇通往无限机遇的大门。这样的发展路径，或许预示着操作系统的三分天下。&lt;/p&gt; 
&lt;p&gt;华为与金山办公双方的目标，放在国家层面、行业发展层面、企业对市场的预期层面来讲，都高度一致。&lt;/p&gt; 
&lt;p&gt;「我们其实也希望能够搭载 HarmonyOS NEXT 这趟快车，迅速加入这一进程并共同开拓市场，掌握一定的市场话语权。」覃欢表示。&lt;/p&gt; 
&lt;p&gt;为了快速将 WPS 鸿蒙化，覃欢等人迅速组建起一支鸿蒙化团队。「我们抽调了大约 40 多名‘高精尖’技术人员。只要是在 Office 领域的高 P 基本上都被薅完了。」&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/163822_HLfs_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;WPS 鸿蒙版界面&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;团队成员不仅要对 WPS 底层结构尤其内核有深入理解，还要具备跨平台开发的意识。此外，要拥有多系统同时开发的能力，因为要考虑将内核多端统一。&lt;/p&gt; 
&lt;p&gt;纯血鸿蒙 HarmonyOS NEXT 完全摒弃了 Linux 内核，原先运行安卓应用的机制不存在了，WPS 如果不跟着改变，也就无法在 HarmonyOS NEXT 运行。&lt;/p&gt; 
&lt;p&gt;只能重写。&lt;/p&gt; 
&lt;p&gt;为此，覃欢等人将现有的 WPS PC 内核引擎移植到鸿蒙上来，在此基础上重新编写了上层应用程序。为了实现这一点，还构建了一个从内核到上层应用的框架。&lt;/p&gt; 
&lt;p&gt;与之前的安卓版本相比较，鸿蒙版的 WPS 完全不一样。「没有一行代码是重复的，是完全重写的一套。」覃欢强调。&lt;/p&gt; 
&lt;p&gt;2023 年 11 月，WPS 成功在鸿蒙创新产品上运行。&lt;/p&gt; 
&lt;p&gt;紧接着，通过在内核上添加一个简单的 Ark 层，也在一个月后实现了 WPS 在移动设备上的基本操作，如打开文档。这就是上层 ArkUI，底层 C++的鸿蒙版 WPS。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#d35400&quot;&gt;40 多条需求，倒逼 HarmonyOS IDE 成长&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;将鸿蒙创新产品的内核跑在移动设备上之后，又面临了新的问题——如何搭建能够满足跨栈调用的功能、性能与稳定性的要求？&lt;/p&gt; 
&lt;p&gt;此前在安卓平台上，WPS 曾考虑过 C++与 Java 的互调方案（JNI），但由于性能和稳定性不达标，最终该方案被否决。&lt;/p&gt; 
&lt;p&gt;而在 iOS 平台上，由于 OC 和 C++共占同一调用栈，这个问题得到了较好的解决。&lt;/p&gt; 
&lt;p&gt;如今在鸿蒙移动端，上层是 Ark 运行时，底层是 C++，这就必然涉及到类似于 JNI 的调用问题，比如在大量数据的序列化和反序列化以及跨进程调度通信方面。&lt;/p&gt; 
&lt;p&gt;「我们是一群被 Visual Studio 养得非常挑剔的一群人。」覃欢说，WPS 的开发人员绝大多数都是使用市场上成熟的工具链体系，当转向 HarmonyOS 开发时，遇到了前所未有的挑战。&lt;/p&gt; 
&lt;p&gt;「HarmonyOS 的调试工具和开发环境——DevEco Studio 对于我们来说是一个巨大的考验。面对跨语言调试、自定义变量观察、多线程问题分析、内存泄漏等复杂难题时，DevEco 是否能够满足我们的能力要求？」&lt;/p&gt; 
&lt;p&gt;特别是当需要从 JS 穿透到 C++时，由于缺乏有效的跨语言调试能力，类似 CMD 这样的工具，限制了他们在问题分析和处理上的手段，就只能依赖于日志和时间戳来进行问题分析，调试工作变得异常复杂。&lt;/p&gt; 
&lt;p&gt;尤其是在远程调试和交叉编译方面，WPS 对熟练度和性能要求都很高，但现有的工具无法满足这些需求。WPS 的代码量庞大，如何高效地将编译缓存推送到设备上成为了一个难题。&lt;/p&gt; 
&lt;p&gt;「每次修改代码后，都需要等待几分钟才能进行调试，这对我们的工作效率造成了严重影响。我们尝试了各种方法来提高编译、调试速度以及问题验证效率。」&lt;/p&gt; 
&lt;p&gt;在此过程中，华为提供了一系列技术支持，比如对可能出现的逻辑错误和异常情况的分析，以及如何在这些情况下保持框架的稳定性，使得框架在安全性方面得到良好的保障，从而避免了异常崩溃 (crash) 的风险，增强了整个系统的健壮性和可靠性。&lt;/p&gt; 
&lt;p&gt;最终通过内部与华为技术团队的沟通，WPS 搭建了一套支持同步&amp;amp;异步跨语言的调度框架，基本满足了 WPS 的业务诉求。&lt;/p&gt; 
&lt;p&gt;事实上，鸿蒙化编译还没正式开始前，WPS 在与华为的正式交流中，第一个讨论的议题就是开发调试工具是否准备好，是否能够支撑如此大量代码的编译与调试工作？&lt;/p&gt; 
&lt;p&gt;在开发初期，WPS 针对 HarmonyOS 的专用开发调测工具 DevEco 提的需求就多达 25 条。&lt;/p&gt; 
&lt;p&gt;在与华为技术团队早期交流中，覃欢曾表示，如果 WPS 的开发环境能够与 DevEco 很好地兼容或适配，那么之后，几乎所有应用在鸿蒙化过程的开发需求，DevEco 都能满足。&lt;/p&gt; 
&lt;p&gt;随着需求一一得到落实，不仅极大地提升了开发效率，也极大地增强了开发者对鸿蒙生态的信心。&lt;/p&gt; 
&lt;p&gt;覃欢及其团队见证了 DevEco 从一个潜力无限的 IDE 成长为一个能够稳定支撑大型项目开发的强大工具。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/163904_OyWs_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;DevEco 多场景深度调优&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;除了在技术层面提供支持，华为还在战略层面，快速推进第三方库的鸿蒙化进程。&lt;/p&gt; 
&lt;p&gt;WPS Office 是一个办公软件套装，它在开发过程中依赖了多个三方库来提供额外的功能和增强的性能。&lt;/p&gt; 
&lt;p&gt;但是，WPS 也只是第三方库的使用者，对于三方库的驾驭能力并不足。「推动第三方库鸿蒙化，于我们而言是一件精力消耗非常大的事情。WPS 依赖的三方库有 100 多个，但是精通的却只有十多个。」覃欢表示。&lt;/p&gt; 
&lt;p&gt;在鸿蒙生态这艘船上，华为无疑是掌舵者。在推动第三方库适配鸿蒙系统的过程中，华为扮演了关键角色，提供了系统层面的适配与支持，大幅节省了开发团队的研发时间，并确保了性能和研发速度的提升。&lt;/p&gt; 
&lt;p&gt;「在短短一两周内，便实现了第三方库在 HarmonyOS 上的顺利运行，加快了 WPS 向 HarmonyOS 的迁移进程。」覃欢总结道。&lt;/p&gt; 
&lt;p&gt;在整个 WPS 鸿蒙化的过程中，覃欢主导完成了 4000 万行代码应用开发，对 HarmonyOS NEXT 提出的需求超过 150 项，对集成开发环境（IDE）提出的需求超过 40 项，极大地补齐了系统能力——比如窗口、应用框架、文件、字体、打印、Dfx 等子系统能力和对大型应用的工程化支持能力等。&lt;/p&gt; 
&lt;p&gt;为表彰覃欢突出的技术贡献，华为开发者大会（HDC 2024）为其颁发了鸿蒙先锋「卓越技术贡献奖」奖章。&lt;/p&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#d35400&quot;&gt;「没有什么技术点在鸿蒙上无法实现」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;WPS 的系统复杂性和庞大代码量，使得 WPS 在系统资源需求上存在特殊性。即使不算三方库，WPS 也有 4000 万行代码，其安装包体积远远超过大多数鸿蒙 APP。&lt;/p&gt; 
&lt;p&gt;连 WPS 都能在鸿蒙操作系统上流畅运行，也就意味着，应用鸿蒙化的技术障碍已经基本消除。&lt;/p&gt; 
&lt;p&gt;接下来，开发者只需要更多关注如何优化功能的细节和确保稳定性，以及如何进行适配工作。&lt;/p&gt; 
&lt;p&gt;「HarmonyOS 的学习曲线相对平缓，对于有其他编程语言经验的人来说，上手并不困难。」覃欢表示。&lt;/p&gt; 
&lt;p&gt;WPS 在融入鸿蒙生态的过程中，并未特意招募鸿蒙专业开发者，其团队都是由传统 C++、Java、OC 开发人员，以及熟悉前端 H5 开发的技术人员组成。&lt;/p&gt; 
&lt;p&gt;覃欢表示，对于在 C++领域深耕多年的开发者来说，HarmonyOS 的设计理念显得清晰且易于理解，其复杂度并不高。加之鸿蒙已解决了跨语言调试的难题，大多数问题都可以通过制作 demo 或小型化实例来单独细致地调试。&lt;/p&gt; 
&lt;p&gt;「将指令集迁移到华为平台的过程实际上比预期要简单，没有原本想象的那样困难。毕竟经历过信创，遇到过的问题也多如牛毛；在鸿蒙这里，事情并没有比之前更难，相较而言，在各自过往技术积累下，WPS 鸿蒙化相比较还算顺利。」&lt;/p&gt; 
&lt;p&gt;这 8 个月来，WPS 已经全面测试并验证了 HarmonyOS 所提供的各项技术能力。「WPS 基本上已经把大家所需要的所有技术能力，在鸿蒙系统上趟了一个遍，几乎没有什么技术点在鸿蒙上无法实现。」覃欢表示。&lt;/p&gt; 
&lt;p&gt;当前，WPS 现已完成鸿蒙原生版应用开发，在诸如手机端、折叠屏、平板等不同大小尺寸的屏幕上分别做了产品适配，并基于多平台账号统一，实现了跨端、跨设备的文档和数据共享，支持多用户协同、浏览编辑、修订能力。&lt;/p&gt; 
&lt;p&gt;目前，WPS 鸿蒙原生应用已在全端流畅运行，WPS AI 也在多端同步上线，数十项 AI 功能都迁移到了 HarmonyOS NEXT。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/163935_GKmx_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;WPS 鸿蒙版亮相 HDC 2024&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#d35400&quot;&gt;WPS 携手鸿蒙，或将颠覆移动办公生态版图&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;HarmonyOS NEXT，作为华为技术实力的体现，在新的发展道路上为用户带来更安全、更自主可控的操作系统体验，能够与微软的 Windows 系统以及国际科技巨头进行有力竞争，助力我国争取科技领域的主动权。&lt;/p&gt; 
&lt;p&gt;众所周知，微软 Office 在 Windows 上拥有系统特权，这是第三方软件所不具备的。在功能上，WPS 完全可以与微软 Office 相媲美，但在 Windows 上依然缺乏系统特权。&lt;/p&gt; 
&lt;p&gt;随着全栈自研的 HarmonyOS NEXT 的发布，意味着属于中国自己的主场已经准备好了。覃欢表示，希望 WPS 能够通过与 HarmonyOS NEXT 的深度结合，打破微软 Office 在 Windows 上的深度绑定策略。&lt;/p&gt; 
&lt;p&gt;覃欢认为，一旦这一想法付诸实现，WPS 将提供超出用户预期的功能和体验。他们最近在做的启动优化就是一个例子，由于能够深入了解系统加载的细节，从而针对性地调整，大幅提升了 WPS 启动速度。&lt;/p&gt; 
&lt;p&gt;截至 2024 年 5 月，鸿蒙生态设备已经超过了 9 亿台。HarmonyOS 在市场上的影响力正在不断增强，为政企办公等应用提供了广阔的市场空间和新的机遇。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/164000_Jc7B_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;覃欢表示：「我们期待华为在这一过程中扮演关键角色，为办公领域带来新的动力，在政企办公生态领域建立一套更成熟，能够与 Windows 系统相媲美甚至超越它的办公生态体系，帮助我们在科技领域占据优势地位。」&lt;/p&gt; 
&lt;p&gt;当前，鸿蒙生态已经超过 5000 个应用，这不仅仅是一个简单的数字，而是一个生态系统的逐渐构建和完善。&lt;/p&gt; 
&lt;p&gt;应用生态的繁荣，绝非一日之功，它需要时间的沉淀、技术的积累，以及各方力量的持续投入。&lt;/p&gt; 
&lt;p&gt;在这个过程中，华为作为生态的发起者和推动者，不断优化鸿蒙的开发工具和平台，降低开发门槛，提升开发效率。&lt;/p&gt; 
&lt;p&gt;同时，华为提供技术支持和资源投入，鼓励开发者创新，扶持优质应用快速成长。&lt;/p&gt; 
&lt;p&gt;相信随着 HarmonyOS NEXT 商用版的发布，将有更多企业投身于鸿蒙带来的蓝海市场，也为彻底颠覆移动办公生态的版图带来新的可能性。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311492</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311492</guid>
            <pubDate>Wed, 11 Sep 2024 08:40:51 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>李彦宏内部讲话曝光：谈大模型三大认知误区，未来模型之间的差距会变大</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;「外界对大模型有相当多的误解」，近日据媒体报道，李彦宏的一则内部讲话曝光。&lt;/p&gt; 
&lt;p&gt;在最近一次和员工交流中，李彦宏谈及三个大模型认知误区，涵盖了&lt;strong&gt;大模型竞争、开源模型效率、智能体趋势&lt;/strong&gt;等热点话题。&lt;/p&gt; 
&lt;p&gt;李彦宏谈到，未来大模型之间的差距可能会越来越大。他表示，大模型的天花板很高，现在距离理想情况还相差非常远，所以模型要不断快速迭代、更新和升级；需要能几年、十几年如一日地投入，不断满足用户需求，降本增效。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;以下为内部讲话内容&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：有观点认为，大模型之间的能力已经没有壁垒了？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;李彦宏：这个说法我不同意。我认为外界对大模型有相当多的误解，每一个新模型发布时，肯定都想说自己有多好，每次都去跟 GPT-4o 做比较，拿测试集或者弄一些榜单，说我的得分已经跟它差不多了，甚至某些单项上得分已经超过它了，但这并不能证明这些新发的模型跟 OpenAl 最先进的模型相比已经没有那么大的差距了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;模型之间的差距是多维度的，一个维度是能力方面，不管是理解能力、生成能力、逻辑推理能力还是记忆能力等这些基本能力上的差距；另一个维度是成本方面&lt;/strong&gt;，你想具备这个能力或者想回答这些问题，你付出的成本是多少？有些模型可能推理速度很慢，虽然也达到同样的效果了，但实际上它的体验还是不如最先进的模型。还有就是对于测试集的 over-fitting,每一个想证明自己能力的模型都会去打榜，打榜时他就要猜别人到底在测什么、哪些题我用什么样的技巧就能做对，所以从榜单或者测试集上看，你觉得能力已经很接近了，但到实际应用中还是有明显差距的。&lt;/p&gt; 
&lt;p&gt;部分自媒体的炒作，再加上每个新模型发布的时候都有宣传的动力，使得大家有一种印象，认为模型之间的能力差别已经比较小了，其实真不是这样。在实际使用过程当中，我不允许我们的技术人员去打榜，真正衡量文心大模型能力的是，你在具体应用场景当中到底有没有能够满足用户的需求，有没有能够产生价值的增益，这是我们真正在乎的。&lt;/p&gt; 
&lt;p&gt;我们需要看到，一方面模型能力之间还有比较明显的差距，另外一方面天花板很高，你今天做到的跟你实际想要做到的、跟理想状态还差得非常远，所以模型还需要不断快速地去迭代、去更新、去升级。**即使今天你看到差距也许没有那么大了，再过一年你看看差距有没有拉大？ 有谁能够持续不断地几年甚至十几年如一日往这个方向上去投入，让它越来越能够满足用户的需求、满足场景、满足提升效率或者说降低成本等需求？**不同的模型之间差距不是越来越小，是会越来越大的，只是他们不知道真实需求的时候，只去做测试集的题可能觉得差不多了。&lt;/p&gt; 
&lt;p&gt;所谓的领先 12 个月或者落后 18 个月，我认为没有那么重要。我们每个公司都处在完全竞争的市场环境中，你不管做什么方向都有很多竞争对手，如果你能永远保证领先对手 12~18 个月，那是天下无敌的，不要觉得 12—18 个月是很短的时间，&lt;strong&gt;哪怕你能保证永远领先竞争对手 6 个月，那就赢了&lt;/strong&gt;，你的市场份额可能是 70%，而对手可能仅为 20% 甚至 10% 的份额。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：有人说开源模型正在缩小与闭源模型的差距，这会摧毁闭源大模型公司的商业模式吗？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;李彦宏：这个问题跟上一个问题是高度关联的，我刚才讲一个模型除了能力或效果之外还要看效率，效率上开源模型是不行的。闭源模型准确地讲应该叫商业模型，商业化的模型是无数个用户或者说客户在共享同样的资源，在分摊研发成本、分摊推理用的机器资源和 GPU，而开源模型需要你自己去部署一套东西，部署之后 GPU 的使用率是多少呢？我们的文心大模型 3.5、4.0 也好，使用率都是 90% 多，你部署一个开源模型有多少人在用？我们对外讲文心大模型每天调用量超过 6 亿，每天生成的 token 数超过万亿，哪个开源模型可以说自己一天调用量是多少、生成了多少 token?没有人用的话成本怎么分担？推理成本怎么能够跟商业化模型相比呢？&lt;/p&gt; 
&lt;p&gt;在大模型时代之前，大家习惯了开源意味着免费、意味着成本低。那时市面上那种商业化的产品，每一个版本都要为之付钱，比如买一个电脑装 Windows，可能微软要从中收多少钱，而你如果跑一个 Linux 就不用花这个钱了。由于 Linux 是开源的，所有程序员都可以看到代码，哪儿做的不好我可以去更新，更新了再 check in，大家众人拾柴火焰高，你在巨人的肩膀上可以不断地进步。但是这些东西在大模型时代都不成立，大模型时代大家经常讲的是 GPU 有多贵，算力是决定大模型成败的一个关键因素，&lt;strong&gt;开源的模型给你送算力吗？它不给你送算力，怎么能够让算力高效地被利用？开源模型解决不了这个问题。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;以前你买电脑的时候就已经为算力付费了，但大模型的推理不是这样，这个推理其实很贵。所以说开源大模型的价值在教学科研这些领域，要想搞清楚大模型的工作原理是啥，如果不知道源代码什么的肯定是有劣势的，但是真正在商业领域，当你追求的是效率、效果，追求的是最低的成本时，开源模型是没有优势的。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：AI 应用的演进方式是什么？为什么强调智能体？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;李彦宏&lt;/strong&gt;：大模型发展的过程必然要经历这几个阶段，一开始是对人进行辅助，最后出来什么东西需要人把最后一道关，我们确定它的效果是 OK 的，各方面都不错才会让它出去，这是 Copilot 阶段；再往下走就是 Agent 智能体，外界对于 Agent 有各种各样不同的定义，最主要还是说它有了一定的自主性，具备自主使用工具、反思、自我进化等能力；这种自动化程度再往下走就变成一个所谓的 Al Worker，能够像人一样做各种各样的脑力和体力劳动，各方面的工作都可以独立完成。肯定要有这么一个过程。&lt;/p&gt; 
&lt;p&gt;「智能体是大模型最重要的发展方向」这个判断，其实是一个非共识。百度 Create 大会上我们发了三个产品，AgentBuilder、AppBuilder、ModelBuilder，其中 AgentBuilder 和 AppBuilder 都是讲智能体的，一个门槛更低一些，另一个功能更强大一些。当我们解释完了之后，有些人终于开始明白这东西确实有意思，能够产生价值，而且已经可以相对比较低门槛地做出来大家感觉可用的东西。从那时候开始智能体的热度才慢慢上来，也开始有很多人看好智能体这个发展方向，&lt;strong&gt;但是到今天为止智能体还不是共识，像百度这样把智能体作为大模型最重要的战略、最重要的发展方向的公司并不多。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;为什么我们这么强调智能体？因为智能体的门槛确实很低，我们去年说要卷应用、大家都去做应用，其实很多人还是说不知道该怎么做，不知道这个方向能不能做出来，我到底要用到什么能力才能够在这个场景下产生价值，这里面有无数不确定性，大家不知道怎么从模型变成应用。&lt;strong&gt;但是智能体提供了一个非常直接、非常高效、非常简单的方式，在模型之上构建智能体是相当方便的&lt;/strong&gt;，这也是为什么今天每周都有上万个新的智能体在文心平台上被创造出来。&lt;/p&gt; 
&lt;p&gt;智能体方面我们已经看到了趋势，也有比较好的先决条件，除了模型本身的能力比较强大之外，我们也有很好的分发通路。百度的 APP，尤其是百度搜索一天有数以亿计的人在用，用户的需求主动向我们表达了，哪一个智能体能更好地去回答他这些问题，去满足他这些需求，这是一个自然匹配的过程，所以我们是最能够帮助这些开发者分发他们智能体的。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311486</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311486</guid>
            <pubDate>Wed, 11 Sep 2024 08:30:51 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Canonical 正在将 GraalVM 打包成 deb 格式引入 Ubuntu</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Linux 发行版 Ubuntu 基础设施团队工程师最近在论坛中&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Ffoundations-team-updates-thursday-2024-09-05%2F47785%2F5&quot; target=&quot;_blank&quot;&gt;透露&lt;/a&gt;，他们正在为 GraalVM &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaunchpad.net%2F%7Epushkarnk%2F%2Barchive%2Fubuntu%2Fgraalvm-packages%2F%2Bpackages&quot; target=&quot;_blank&quot;&gt;制作&lt;strong&gt; deb 软件包&lt;/strong&gt;&lt;/a&gt;（不是 Ubuntu 优先支持的 snap）。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/112805_VScj_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0911/113502_W3k2_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;GraalVM 是一个高性能的 JDK 发行版。它旨在加速用 Java 和其他 JVM 语言编写的应用程序的执行，同时还为 JavaScript、Python、基于 LLVM 的语言（如 C 和 C++）以及许多其他流行编程语言提供运行时。&lt;/p&gt; 
&lt;p&gt;此外，GraalVM 为编程语言之间提供了高效互操作性，并将 Java 应用程序提前编译为本机可执行文件，从而加快启动时间并降低内存开销。&lt;/p&gt; 
&lt;p&gt;Oracle 提供了 GraalVM 的通用 Linux x86_64 和 ARM64 二进制包。但到目前为止，GraalVM 并未出现在 Debian/Ubuntu 的软件包仓库中，而 Debian 上的 GraalVM 软件包只有 GitHub 中的几个非官方包。&lt;/p&gt; 
&lt;p&gt;Ubuntu 的官方软件包目前提供了&amp;nbsp;OpenJDK，同时也是首选 JVM。&lt;/p&gt; 
&lt;p&gt;Ubuntu&amp;nbsp;&lt;span&gt;开发商 Canonical 为增强 Java 开发体验提供了另一个选择，并且不是采用 snap 包格式，而是 deb 软件包，虽然它没有解释这样做的原因，但相信大多数开发者都会支持这个决定。&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸阅读&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/248387/ubuntu-new-unified-install-plans-sound-meh&quot; target=&quot;news&quot;&gt;Ubuntu 强推 Snap，计划移除「最小化安装」选项&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/247869/ubuntu-23-10-new-app-store-deb-support&quot; target=&quot;_blank&quot;&gt;Ubuntu 23.10 引入新的 「应用商店」，优先支持 Snap 格式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/243309/immutable-all-snap-ubuntu-desktop&quot; target=&quot;news&quot;&gt;Ubuntu 明年将推出完全基于 Snap 的桌面版本&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311456/canonical-graalvm-for-ubuntu</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311456/canonical-graalvm-for-ubuntu</guid>
            <pubDate>Wed, 11 Sep 2024 03:45:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>AMD 宣布统一 GPU 架构为 UDNA</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;AMD 计算和图形业务组总经理兼高级副总裁 Jack Huynh 宣布&lt;strong&gt;将消费级的 RDNA 和数据中心级的 CDNA 统一为 UDNA 架构&lt;/strong&gt;，以更有效地挑战英伟达的 CUDA 生态系统。&lt;/p&gt; 
&lt;p&gt;2019 年，AMD 决定摒弃其 GCN 微架构，转而采取新的战略方向，将图形微架构一分为二：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;RDNA 架构专注于服务消费市场的游戏图形产品&lt;/li&gt; 
 &lt;li&gt;CDNA 架构则专为数据中心打造，旨在满足人工智能（AI）和高性能计算（HPC）的工作负载需求&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;大家比较熟悉的 Instinct 数据中心 GPU 就是基于 CDNA 架构。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d620c08fb0cf79f04abb446f95e66897a48.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;现在 AMD 计划将这些架构统一为 UDNA 架构，未来的 UDNA 架构既应用于 Instinct，也应用于消费级显卡，此举将有助于开发者在 AMD 的 GPU 上更便捷地进行开发，不再需要在两种架构中进行选择。&lt;/p&gt; 
&lt;p&gt;Jack Huynh 称统一架构的一个好处是减少频繁更换内存层次结构，避免性能损失。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311443</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311443</guid>
            <pubDate>Wed, 11 Sep 2024 02:43:25 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>openKylin 社区生态委员会第八次会议圆满召开</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年 9 月 10 日，&lt;strong&gt;openKylin 社区生态委员会第八次会议&lt;/strong&gt;召开。openKylin 社区生态委员会作为社区治理架构之一，主要职责为携手社区核心伙伴，推动社区生态共建，打造创新解决方案，提升 openKylin 品牌影响力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;本次会议由社区理事成员单位、生态委员会成员单位&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;先进操作系统创新中心 (天津) 有限公司&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（以下简称「先进操作系统创新中心」）承办，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社区生态委员会主任李震宁&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;担任主持，20 家生态委员会单位代表于线上线下参会。会上总结和回顾了 openKylin 社区 2024 年 7 月-9 月的运营进展，并针对后续运营规划等话题进行了探讨。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;2050&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e6b0900edc3c99f9144213d5511d8d12cdb.jpg&quot; width=&quot;4032&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;先进操作系统创新中心总经理助理张勇军&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;作为会议承办方代表致欢迎词。他表示，有幸承办 openKylin 第八次社区生态委员会议。请允许我代表先进操作系统创新中心及我个人，向在座的每一位嘉宾致以最热烈的欢迎和衷心的感谢。期待与 openKylin 社区及在座的各位伙伴在多个维度深化合作：聚焦&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;关键共性技术&lt;/span&gt;&lt;span&gt;突破，携手构建更加开放、协同、共赢的生态系统。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;致辞结束，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;张勇军&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;针对 openKylin 社区近两月的运营亮点和要点做了回顾，从社区会员、平台、生态、SIG 和活动等方面进展向各委员进行了汇报，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社区 Release SIG Maintainer 张天雄&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;就 openKylin 版本进展向各委员进行汇报。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;621&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5ad996edd0b2537b00b040deb63ae4fe0bd.bmp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年 7 月-9 月，openKylin 社区新增会员&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;36&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;家、新增 SIG&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;6&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;个，截至目前社区会员总数达&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;550&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;家、SIG 总数达&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;118&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;个，涵盖内核/硬件/架构/驱动、基础组件、桌面环境/设计、开发框架、系统安全、人工智能等多个技术方向；&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;平台侧&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，上线社区文档收集活动模块、城市用户组申请模块以及 meetup 活动报名模块；&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;版本侧&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，发布 openKylin 2.0 正式版本，并更新调整社区版本发行策略；&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;活动运营侧&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;，2024 中国操作系统产业大会—openKylin 开源创新论坛计 openKylin 社区第四次理事会会议成功举办、完成中国研究生操作系统开源创新大赛初赛评审、举办上海城市用户组活动及 openKylin 2.0《&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;黑神话悟空&lt;/span&gt;&lt;span&gt;》体验直播、发布社区首个园区站—浦东软件园站，并参与了多场国内外顶级开源活动与行业大会。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;随后，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;飞腾软件技术支持部研发工程师帅家坤&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;以&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;《飞腾在 openKylin 的贡献汇报》&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;为题进行分享。他表示，加入 openKylin 社区后，飞腾发起成立 Phytium SIG。截至目前，飞腾已累计向 openKylin 社区 linux-6.6-next 内核分支推送的 PR 共计 29 项，其内容涉及飞腾硬件平台内核特性及后续功能修复，代码总量约 3 万行。后续，依照 openKylin 社区发展规划，飞腾将针对 openKylin 6.6&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;内核版本&lt;/span&gt;&lt;span&gt;持续制作、维护并在开源社区推送支持飞腾全系处理器的操作系统内核适配代码。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;会议&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;讨论环节&lt;/span&gt;&lt;span&gt;，各参会委员&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;积极发言，&lt;/span&gt;&lt;span&gt;围绕社区运营进展及后续活动规划展开了深入探讨。&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;元心科技，&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;达摩院&lt;/span&gt;&lt;span&gt;，麟卓，兆芯，海光，京东，普华，飞腾，中科申泰，龙芯，麒麟信安等&lt;/span&gt;&lt;/span&gt;分别对社区的运营表示认可，并积极为社区&lt;span style=&quot;color:#000000&quot;&gt;共建&lt;/span&gt;献言献策。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;社区的发展离不开各企业伙伴的大力支持。openKylin 社区生态委员会例会每两月召开一次，会议期间，各委员代表汇聚一堂，就社区运营进展与规划进行细致的探讨，对 openKylin 社区运营工作具有重要指导意义。openKylin 社区也将秉持开源、开放的原则，与各伙伴共同参与、共同治理，一起打造中国领先的开源操作系统根社区。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311438</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311438</guid>
            <pubDate>Wed, 11 Sep 2024 01:36:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | 通用端到端 OCR 模型开源；Cassandra 5.0 正式 GA；NGINX 迁移到 GitHub；iPhone 16 全系列配备 8GB RAM；国产数据库 100% 替代走到哪了?</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.10&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311382/nginx-moved-to-github&quot;&gt;NGINX 项目迁移到 GitHub&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;NGINX 项目&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmailman.nginx.org%2Fpipermail%2Fnginx-announce%2F2024%2FITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;&lt;/u&gt;将开源的代码仓库从 Mercurial 迁移到 Github (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnginx%2Fnginx&quot; target=&quot;_blank&quot;&gt;https://github.com/nginx/nginx&lt;/a&gt;)。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0910/180136_swQp_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;从现在开始，NGINX 项目将以 Pull Requests 形式接受贡献，通过 Github 问题页接受 bug 报告、功能请求和功能增强建议，将 GitHub 的讨论页面成为社区论坛。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;NGINX 项目表示将给予开发者们过渡时间，在 2024 年 12 月 31 日前继续通过邮件列表接受补丁和社区支持。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311300/apple-intelligence-comes-to-iphone-ipad-and-mac-next-month&quot;&gt;Apple Intelligence 将于下月起登陆 iPhone、iPad 与 Mac&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Apple 今日宣布&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com%2Fapple-intelligence%2F&quot; target=&quot;_blank&quot;&gt;Apple 智能 (Apple Intelligence)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/a&gt;将于下月起随 iOS 18.1、iPadOS 18.1 和 macOS Sequoia 15.1 发布，更多相关功能将于未来几个月内陆续推出。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-342f2e7529e1945748166e345e86136dd48.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;「Apple 智能」发布时支持美国英语，将于 12 月拓展至澳大利亚、加拿大、新西兰、南非和英国的本土化英语。&lt;strong&gt;明年，「Apple 智能」将支持中文&lt;/strong&gt;、法语、日语、西班牙语等更多语言。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Apple 还表示，中国大陆的用户需在稍后经过监管部门批准后才能使用该功能。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311298/cassandra-5-0-ga-released&quot;&gt;Apache Cassandra 5.0 正式 GA&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;Cassandra 5.0 标志着 Cassandra 3.x 的终结。几个亮点：&lt;/p&gt; 
  &lt;p&gt;1. 存储附加索引（SAI）&lt;br&gt; 2. Trie memtables 和 trie SSTables&lt;br&gt; 3. JDK 17 支持&lt;br&gt; 4. 统一压缩策略（UCS）&lt;br&gt; 5. 向量搜索&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/311375/byconity-1-0&quot;&gt;字节云原生开源数仓 ByConity 1.0 发布&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;从 ByConity 开源之初，我们一直将产品定位为开源云原生数据仓库。区别于传统 OLAP 产品，ByConity 采用存算分离的云原生架构，通过这种架构获得了弹性和降低资源浪费的优势，但与此同时也在一定程度上提高了产品的复杂度。定位为云原生数据仓库，是希望能够承担更多类型、更复杂的分析任务负载，无论是在线的实时分析还是离线数据的清洗 / 加工任务都能够胜任。更全面的能力能够帮助用户降低数据分析平台的整体复杂度。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240910A00RFJ00%3Fsuid%3D%26media_id%3D&quot; target=&quot;_blank&quot;&gt;开源嵌入式编译器，没想象中那么好？&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;对嵌入式工程师来说，嵌入式编译器是不可或缺的神兵利器，它被人冠以「C 语言翻译官」的名号。 由于 C 语言历史悠久，早期没有规范，整个计算机产业也都处于拓荒的年代，所以就涌现了很多款 C 语言编译器。&lt;br&gt; &lt;br&gt; 根据 EEWorld 的调研，嵌入式工程师比较青睐的嵌入式编译器主要包括 Keil（ArmCC）、IAR、GCC、AVR GCC、CLion、Clang、green hills、TI 的 CSS、ADI 的 Visual DSP++。不过，随着嵌入式开发格局逐渐稳固，Keil、IAR、GCC 成为嵌入式编译器三巨头，基本大部分嵌入式产品都有其身影。&lt;br&gt; &lt;br&gt; 尤其是 GCC，作为一个完全开源的编译器，很多 MCU 厂商的 IDE 都由它改写而来。但最近一段时间，业界出现不同的声音，表示「开源才是最贵的」，这些编译器在开源背后潜藏许多隐形成本。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;电子工程世界&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F6105753431%2F16bee6757019017vrw&quot; target=&quot;_blank&quot;&gt;通用端到端 OCR 模型开源，拒绝多模态大模型降维打击&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;在 AI-2.0 时代，OCR 模型的研究难道到头了吗！？（OCR：一种将图像中的文字转换为可编辑和可搜索文本的技术）&lt;/p&gt; 
  &lt;p&gt;Vary 作者团队开源了第一个迈向 OCR-2.0 的通用端到端模型 GOT。用实验结果向人们证明：No~No~No~&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-5aee5ed59de4c25aa40ada47c095640c7a4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2692486652%2FOw9vIAaRF%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;某 E 的工程师和研发使用期到 50 岁，某 H 到 35 岁&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;我和朋友聊过，某 E 的工程师和研发使用期到 50 岁，某 H 到 35 岁。某 H 刚开始是真不行，但现场铺人，20 多岁一周可以上五到六个夜班，出问题现场解决。后端研发住公司可以每月出一个版本。某 E 除了被活活打死，没有任何选择。&lt;/p&gt; 
   &lt;p&gt;是不是民族骄傲？我觉得是。因为作为后来者，靠慢慢研发三五十年也赶不上。但如果全社会用工企业都认可甘蔗只有中间甜，抛弃两端合理合法，而且在道德上还要觉得是因为两端没有广泛进化出新的开花结果能力。那个体唯一合理的办法，就是在自己还「甜」的时候，996 榨取储存糖分，之后全生命周期压制消费。&lt;/p&gt; 
   &lt;p&gt;没有人永远年轻，但永远有年轻人。所以积极的一面是，只要有源源不断的年轻人，不需要做出改变，也可以继续赢下去。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;落魄的三叔&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FNc9zg7g6C0RvcgYa3J4lIQ&quot; target=&quot;_blank&quot;&gt;现在的大模型榜单，真就没一个可信的。&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;上周，AI 圈有个很炸裂的大模型发布，在全网引起了山呼海啸，一众从业者和媒体尊称它为开源新王。&lt;/p&gt; 
   &lt;p&gt;就是 Reflection 70B。在每项基准测试上都超过了 GPT-4o，还只用 70B 的参数，就击败了 405B 的 Llama 3.1，模型中还有一个叫「Reflection-Tuning」的技术，能让模型能够在最终回复之前，先识别自己有没有错误，如果有，纠正以后再回答。&lt;/p&gt; 
   &lt;p&gt;其实这个东西当时我就很存疑，因为在我的理解里，这玩意，就是个 CoT，就是个纯 Prompt，一个 Prompt 把 70B 模型直接带的螺旋升天？&lt;br&gt; 你这玩意，真要是能做到，奥特曼就真的直接原地给你磕头了。。。&lt;/p&gt; 
   &lt;p&gt;最关键的是，还有一个很离谱的点，这个模型就两个人做，而且，从一拍即合、到找数据集、到模型微调完成并正式发布，一共就花了 3 周。&lt;br&gt; 这效率，这速度，直接卷的螺旋升天，国内大厂速度没卷到这个地步...&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;数字生命卡兹克&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn820397800%3FserialId%3D2c5447277ef79eabeab0f9cfa6c00935&quot; target=&quot;_blank&quot;&gt;倒计时三年:国产数据库 100% 替代走到哪了?&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;上世纪 80 年代，中国数据库开始萌芽；90 年代，IBM、Oracle 垄断国内数据库市场；本世纪初，「四朵金花」陆续成立；10 年代，互联网公司开启「去 O」浪潮；到了 20 年代，国产数据库已然呈现出「百花齐放」的态势。当前，国产数据库仍在不断追赶与超越。&lt;/p&gt; 
    &lt;p&gt;据国资委 2022 年发布的文件，截止到 2027 年，「2+8+N」党政与八大行业要实现数据库的 100% 国产替代。&lt;/p&gt; 
    &lt;p&gt;如今 2024 年接近尾声，但面对国产数据库去「IOE」的口号和替换时间表，行业的态度却各有不同，有的企业已经在分享核心系统替换经验，也有企业依然认为替代难度太大，不敢轻易尝试……&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;蓝鲸新闻&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xinhuanet.com%2Fdigital%2F20240910%2F48d2292eed8c4744a6b5bcb3609a8778%2Fc.html&quot; target=&quot;_blank&quot;&gt;小企业大模型——法国人工智能初创公司的「开源」之道&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;如果说 2023 年的人工智能（AI）敍事始于 ChatGPT 引爆网络，那么 2024 年法国科技初创企业米斯特拉尔人工智能公司（Mistral AI）则以不俗表现引人注目。&lt;/p&gt; 
   &lt;p&gt;米斯特拉尔人工智能公司 2023 年 4 月诞生于巴黎，创始人是三名曾在硅谷工作的「90 后」。首席执行官兼创始人阿瑟·门施曾是谷歌旗下「深层思维」公司的研究员，主要研究语言模型。另两名创始人——纪尧姆·朗普勒和蒂莫泰·拉克鲁瓦此前任职于脸书母公司「元」的 AI 团队。三人曾是大学同窗。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;新华网&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240910A06DWB00&quot; target=&quot;_blank&quot;&gt;英伟达 CUDA 将受到冲击？AMD 将推出统一 UDNA GPU 架构&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   在德国柏林举行的 IFA 2024 上，AMD 计算和图形业务集团高级副总裁兼总经理 Jack Huynh 宣布，公司将把以消费者为中心的 RDNA 和以数据中心为中心 CDNA 架构统一为 UDNA 架构，这将为公司更有效地应对英伟达根深蒂固 CUDA 生态系统奠定基础。
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;br&gt; 在 2019 年，AMD 决定摒弃其 GCN 微架构，转而采取新的战略方向，将图形微架构一分为二：RDNA 架构专注于服务消费市场的游戏图形产品，而 CDNA 架构则专为数据中心打造，旨在满足人工智能（AI）和高性能计算（HPC）的工作负载需求。AMD 展望未来，计划将这些架构统一为 UDNA 架构，这一变革旨在为开发人员带来更加便捷的使用体验。
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;芯榜&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.c114.com.cn%2Fai%2F5339%2Fa1272932.html&quot; target=&quot;_blank&quot;&gt;网安标委发布《人工智能安全治理框架 (1.0 版)》&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;9 月 9 日，全国网络安全标准化技术委员会制定的《人工智能安全治理框架（1.0 版）》对外公开发布。&lt;/p&gt; 
    &lt;p&gt;人工智能安全治理原则指出，秉持共同、综合、合作、可持续的安全观，坚持发展和安全并重，以促进人工智能创新发展为第一要务，以有效防范化解人工智能安全风险为出发点和落脚点，构建各方共同参与、技管结合、分工协作的治理机制，压实相关主体安全责任，打造全过程全要素治理链条，培育安全、可靠、公平、透明的人工智能技术研发和应用生态，推动人工智能健康发展和规范应用，切实维护国家主权、安全和发展利益，保障公民、法人和其他组织的合法权益，确保人工智能技术造福于人类。&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;C114 通信网&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F1914880192%2F7222c0c002001f6o0&quot; target=&quot;_blank&quot;&gt;面向下一代互联网的开源底层软硬件技术平台发布&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;昨天（9 月 9 日）举行的 2024 浦江创新论坛 Web3.0 创新论坛上，上海浦芯未来互联网技术研究院正式发布下一代互联网 Web3.0 底层开源技术平台「ChainWeaver」，它将作为底层核心技术，支撑上海城市级区块链基础设施的建设。&lt;/p&gt; 
   &lt;p&gt;该平台融合区块链、隐私计算等前沿技术，同时具备提供分层多链扩展和零信任隐私安全保障的能力，在超异构融合芯片等专用硬件的加持下，未来可满足在全球布局千万级节点，支撑每秒千万笔数据可信、安全流通，并且具备硬件级隐私安全保护能力，性能国际领先。据悉，该平台将面向政务、金融、能源、航运贸易等一批国家级重大应用场景，支撑我国超大规模数字基础设施的建设。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;文汇报&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.myzaker.com%2Fnews%2Farticle.php%3Fm%3D1725860603%26pk%3D66de71ab7f780b311e000001&quot; target=&quot;_blank&quot;&gt;对话复旦大学教授肖仰华：这轮生成式 AI 泡沫早晚会破，天花板一定会到来&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;肖仰华教授认为，AI 大模型落地的本质仍然是数据工程。但当前，大模型发展过程中，其对数据的消耗和使用极为 &quot; 粗放 &quot;，对数据的使用效率极为 &quot; 低下 &quot;，和人类相比远远不足，同时，千亿大模型的数据可能存在极大 &quot; 水分 &quot;，现在已经处于 &quot; 大模型数据耗光 &quot; 这一状态。因此，发展合成数据、私域数据、个人数据训练，可以进一步提升大模型的技术能力。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;钛媒体&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5783135/blog/15742076&quot; target=&quot;_blank&quot;&gt;说说唯一 ID 与 CAS&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;数据和算法组成了我们现有的应用软件，当然互联网应用也不例外。为了区分应用系统收集和运行所必要的这些数据，我们通过各种方法，来组织其存储形式，方便其为我们所用。从数据结构、文件、到专业数据库等工具，无一不是方便数据存储和访问的利器。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;但无论如何，我们对数据存储，都要通过唯一的标识来对其进行区分，以确保我们根据这个标识来定位到它。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;在不同的系统中，这个标识的表现也各不相同：&lt;/p&gt; 
 &lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在编程语言中，它表现为变量名称、常量名称等；&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在文件系统中，它表现为目录以及目录下的文件名等；&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在数据库表中，它表现为库名、表名、主键或唯一索引；&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在网络通信中，它表现为 IP 地址、MAC 地址等；&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在计算机内存中，它表现为物理内存地址等。&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FxsZtg0z420Noh8cIGNfgiA&quot; target=&quot;_blank&quot;&gt;iPhone 16 全系列配备 8GB RAM &lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：&lt;/span&gt;标准版性价比最高的一次&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：&lt;/span&gt;这下没理由买 pro 了&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：&lt;/span&gt;修手机的看了都要笑醒，边赚钱边骂苹果不是人，笑着把钱赚了&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311392</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311392</guid>
            <pubDate>Tue, 10 Sep 2024 11:00:37 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>NGINX 项目迁移到 GitHub</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;NGINX 项目&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmailman.nginx.org%2Fpipermail%2Fnginx-announce%2F2024%2FITL3AOQSAJANFJXMM3VOVOIGOUADWFFK.html&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;&lt;/u&gt;将开源的代码仓库从 Mercurial 迁移到 Github (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnginx%2Fnginx&quot; target=&quot;_blank&quot;&gt;https://github.com/nginx/nginx&lt;/a&gt;)。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0910/180136_swQp_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;从现在开始，NGINX 项目将以 Pull Requests 形式接受贡献，通过 Github 问题页接受 bug 报告、功能请求和功能增强建议，将 GitHub 的讨论页面成为社区论坛。&lt;/p&gt; 
&lt;p&gt;NGINX 项目表示将给予开发者们过渡时间，在 2024 年 12 月 31 日前继续通过邮件列表接受补丁和社区支持。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311382/nginx-moved-to-github</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311382/nginx-moved-to-github</guid>
            <pubDate>Tue, 10 Sep 2024 10:06:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>当《黑神话：悟空》遇上 openKylin，国产力量的极致碰撞！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;了解&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fso.csdn.net%2Fso%2Fsearch%3Fq%3D%25E9%2593%25B6%25E6%25B2%25B3%25E9%25BA%2592%25E9%25BA%259F%26spm%3D1001.2101.3001.7020&quot; target=&quot;_blank&quot;&gt;更多银河麒麟&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fso.csdn.net%2Fso%2Fsearch%3Fq%3D%25E6%2593%258D%25E4%25BD%259C%25E7%25B3%25BB%25E7%25BB%259F%26spm%3D1001.2101.3001.7020&quot; target=&quot;_blank&quot;&gt;操作系统&lt;/a&gt;全新产品，请点击访问&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;麒麟软件产品专区：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fproduct.kylinos.cn%2FsingleDocument%2F142%2F39&quot; target=&quot;_blank&quot;&gt;https://product.kylinos.cn&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;开发者专区：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fproduct.kylinos.cn%2FsingleDocument%2F142%2F39&quot; target=&quot;_blank&quot;&gt;https://developer.kylinos.cn&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;文档中心：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fproduct.kylinos.cn%2FsingleDocument%2F142%2F39&quot; target=&quot;_blank&quot;&gt;https://documentkylinos.cn&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;471&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-286dd1454d297e69d2e6c85cb9b5d4cd933.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;万众瞩目的国产 3A 游戏巨作&lt;strong&gt;《黑神话：悟空》&lt;/strong&gt;终于上线啦！！！&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;在正式发售后不到 24 小时，Steam 在线玩家峰值突破 222 万，在 Steam 所有游戏在线玩家历史峰值中排名第二。第一拨玩家纷纷晒出好评，称这款现象级产品正式开启国产 3A 游戏元年。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;488&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-32961899f2cf9e8fb9fa71133689e471891.jpg&quot; width=&quot;520&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;那么，&lt;strong&gt;当《黑神话：悟空》遇上 openKylin，会碰撞出怎样的火花呢？&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;想必无数玩家已经与小 K 一样跃跃欲试了，&lt;strong&gt;话不多说，安排！&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;下面就跟着小 K 一起投身于这一探索之旅吧！&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;608&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6f2b6357e318302adc1cb176c9cd628d200.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;320&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bbd69f331f4833319d5f37a4abf56691442.gif&quot; width=&quot;568&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#4d4d4d&quot;&gt;经测试运行，我们可以看到，《黑神话：悟空》可在 openKylin &amp;nbsp; 2.0 上实现完美兼容与流畅运行，让每一位热爱西游文化的社区玩家，都能无碍地享受这场视觉与操作的双重盛宴。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;性能测试&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;608&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6e8de1cac8f10dbc4ccf7fa228deae10d1f.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;游戏配置&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;操作系统：openKylin 2.0&lt;/li&gt; 
 &lt;li&gt;内核：Linux 6.6.0-1-generic&lt;/li&gt; 
 &lt;li&gt;处理器：11th Gen Intel(R) Core(TM) i7-11700 @ 2.50GHz&lt;/li&gt; 
 &lt;li&gt;显卡：GeForce RTX 4080&lt;/li&gt; 
 &lt;li&gt;内存：32GB&lt;/li&gt; 
 &lt;li&gt;磁盘：256GB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;608&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-14cab16a9c9b23b2844885dc89345d76012.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;127&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fe5c94d973b7353f7430d537c01e09a0597.gif&quot; width=&quot;464&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#4d4d4d; margin-left:0; margin-right:0; text-align:start&quot;&gt;openKylin 积极响应用户需求，致力于提升用户体验，欢迎大家使用 openKylin 2.0 畅玩悟空，踏上这场充满挑战与奇遇的西游之旅！&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;52&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-68a5537a75f847758734efc517df543815a.png&quot; width=&quot;108&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;openKylin（开放麒麟）社区旨在以「共创」为核心，在开源、自愿、平等、协作的基础上，通过开源、开放的方式与企业构建合作伙伴生态体系，共同打造开源操作系统顶级社区，推动 Linux 开源技术及其软硬件生态繁荣发展。&lt;/p&gt; 
&lt;p&gt;社区理事成员单位包括麒麟软件、普华基础软件、中科方德、麒麟信安、凝思软件、一铭软件、中兴新支点、元心科技、中国电科 32 所、技德系统、北京麟卓、先进操作系统创新中心、飞腾、兆芯、龙芯中科、景美、京东科技、达摩院、申泰信息、海光信息等 21 家产业同仁和行业机构。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311365</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311365</guid>
            <pubDate>Tue, 10 Sep 2024 08:14:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>说说唯一 ID 与 CAS｜得物技术</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;h1&gt;一、从数据的唯一标识开讲&lt;/h1&gt; 
&lt;h2&gt;数据区分与标识表现&lt;/h2&gt; 
&lt;p&gt;数据和算法组成了我们现有的应用软件，当然互联网应用也不例外。为了区分应用系统收集和运行所必要的这些数据，我们通过各种方法，来组织其存储形式，方便其为我们所用。从数据结构、文件、到专业数据库等工具，无一不是方便数据存储和访问的利器。&lt;/p&gt; 
&lt;p&gt;但无论如何，我们对数据存储，都要通过唯一的标识来对其进行区分，以确保我们根据这个标识来定位到它。&lt;/p&gt; 
&lt;p&gt;在不同的系统中，这个标识的表现也各不相同：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;在编程语言中，它表现为变量名称、常量名称等；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在文件系统中，它表现为目录以及目录下的文件名等；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在数据库表中，它表现为库名、表名、主键或唯一索引；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在网络通信中，它表现为 IP 地址、MAC 地址等；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在计算机内存中，它表现为物理内存地址等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;标识的生成与组织&lt;/h2&gt; 
&lt;p&gt;客观现实要求我们必须要做每一份数据的唯一性区分，在数据量少的时候，我们尚可以简单的命名方式来实现，但是当存在海量数据的时候，我们若想要将其区分标记出来，除了命名，还要相应地进行组织结构的变更，来降低命名的复杂度，否则海量杂乱的数据名称会加大我们管理和获取的难度。&lt;/p&gt; 
&lt;p&gt;最常见的几种区分方式通常有如下几类：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;全随机（可读性差，文字组合其实也可以当成一种全随机的特殊情况）&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;例如 UUID（结构示例如下：6B29FC40-CA47-1067-B31D-00DD010662DA）&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;该方式经常用于小范围数据区分&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;该方式通常不会单独使用，一般会结合树形结构来实现一些目录区分&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;顺序递增的数值结构&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;该方式形式简单，索引方便&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;例如：数据库的自增主键、计算机内存的物理地址、Excel 表的序号&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;树形结构区分&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;组织方式方便直观，便于索引&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;例如：文件目录结构、关系型数据库数据组织方式、编程语言的多层结构体&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;分布式 ID 生成方式&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;例如雪花算法，该算法的分段标记其实有点树形结构的结合，但其增长方式又有数值的使用便利&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;其他：以上方式的结合&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;很多其他的唯一性区分通常都表现成以上方式的结合&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;例如：URL&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;URL 的域名以及 Path，本身就存在树形结构的引子（虽然其本身指向的资源存储不一定是该方式）；&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Path 中的每一小段，都是区分性命名，世界范围内看，都是随机和不确定的。&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;几种形式标识的结构表现图例&lt;/strong&gt;：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//3d31a458ab673d6eb5d3a4a45414d402.jpg&quot; alt=&quot;01.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;全部随机形式以及递增数值&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//37e370806731b300b1e8abe2a0d57a4e.jpg&quot; alt=&quot;02.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;树形结构区分的目录&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//98b7d807b3d6d0ef61cbb67a5bd257f1.jpg&quot; alt=&quot;03.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;分布式 ID 之雪花算法的二进制结构（实际转换为 10 进制就是个长串的数值）&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;标识唯一性保证与核验&lt;/h2&gt; 
&lt;p&gt;虽然我们已经有了唯一性生成的方式，人工确认数据的唯一性是一方面，但是在我们的软件系统中，存储唯一性数据的时候，如何保证其唯一性呢？&lt;/p&gt; 
&lt;p&gt;想必大家在使用计算机文件系统存储文件的时候会发现，在文件改名时，如果当前文件的新名字和同一目录下存在的文件名称冲突，那么系统可能会给出冲突提示，这是一种前置检测。&lt;/p&gt; 
&lt;p&gt;而且在数据库表设置了唯一索引的时候，如果唯一索引字段存在冲突，那么系统也会给出相应的提示。&lt;/p&gt; 
&lt;p&gt;另外一些情况下，不同的软件系统，通过自身的规则设计，保证了其生成的数据唯一性，例如数据库自增主键。&lt;/p&gt; 
&lt;p&gt;全局分布式 ID 生成算法中的雪花算法，一般也保证其生成数据的唯一性，但是在极端情况下，却也可能存在冲突。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;一些软件唯一值冲突提示信息展示&lt;/strong&gt;：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//5401c9427bf63f0b0e6d835ab5084c8f.jpg&quot; alt=&quot;04.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;文件系统命名冲突&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//2e7ae01c701d59dcb75c612fa5a179e3.jpg&quot; alt=&quot;05.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;数据库唯一索引冲突&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//c729fdcd9129245259d3575db2f6adc0.jpg&quot; alt=&quot;06.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;编程语言变量重复命名&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;以上的例子其实提示了我们，在使用唯一标识生成的时候，一定要确认该标识是否在你的系统中能保证唯一，如果不能，那么有可能存在无法预期的风险。这些风险，需要我们提前识别并预设方案来解决，例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;同一个文件夹下如果来了重名文件，是要选择丢弃操作还是进行文件覆盖？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;唯一 ID 重复导致数据写入失败，是要丢弃数据还是通过其他方法来补偿？&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;笔者曾经遇到过这样的场景：历史项目中使用到了一个封装的随机字符串生成库，该库在低并发下生成的字符串无异常，但是在高并发状态下，其生成结果有重复项。而生成的目标字符在使用时未做唯一性校验，这就导致了一些异常的发生。&lt;/p&gt; 
&lt;p&gt;根据如上分析，我们需要通过如下两个方式来处理这个问题：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;切换离散性更高的的唯一字符串生成方式&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;这个可以通过 UUID 算法来实现&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;增加唯一性校验&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;理论上在 UUID 算法下，几乎不会出现重复，但在防御性编程的考量下，我们依然引入校验做双重保障。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;二、唯一索引到分布式锁&lt;/h1&gt; 
&lt;h2&gt;唯一索引的业务契合度&lt;/h2&gt; 
&lt;p&gt;在未说明更详细信息的情况下，一定有人会问：既然你的数据要入库，为什么不使用唯一索引来保证数据不会冲突呢？&lt;/p&gt; 
&lt;p&gt;通常情况下，如果数据满足了全局唯一这个条件，我们确实可以使用唯一索引在保证数据入库数据关键字段唯一，但还存在一些例外的业务场景。&lt;/p&gt; 
&lt;p&gt;例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;数据字符较长，同时又不作为索引字段。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;应用数据软删除的要求，系统中可能存在某个唯一字段的多条数据。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这种情况下，就不得不放弃数据库的校验，将数据唯一性检验的过程纳入到自己的系统中。&lt;/p&gt; 
&lt;h2&gt;前置校验的方式选择&lt;/h2&gt; 
&lt;p&gt;我们考虑到要在系统中加入唯一性校验，那么在数据 INSERT 场景下，首先就要查询数据库以判断其是否存在，不存在再写入。&lt;/p&gt; 
&lt;p&gt;到了这一步，有以下几个问题需要考虑：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;这一步一定要查询数据库才能确认是否存在重复吗？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;你确定自己要查询的这个字段是索引字段吗？如果不是，查询性能太差，要怎么办？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;你查询数据库就一定能保证不重复吗？高并发下检测存在并发与时差怎么处理？&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这里我们拆开来一个一个地讲：&lt;/p&gt; 
&lt;h3&gt;是否必须查询数据库验证&lt;/h3&gt; 
&lt;p&gt;数据库作为我们最终数据的存储载体，它所承载的数据总体来说体量是比较大的，即便我们有索引，但在索引查询以及查询数据库时候的网络交互开销一直不低。所以我们是否必须要从数据库来查询这些内容，存在一定的可选择性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;我们可以适当地通过唯一标识生成的规则，来做一些基本的数据隔离&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;例如以时间段作为前缀，再追加上随机字符来区分数据：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;这样的标识自带时间区分度，我们只要在这个前缀的时间粒度上保证唯一，那么就可以确认整个数据在整个系统的唯一性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;随机数据的生成，通常习惯于用系统时间作为种子值，所以高并发下的冲突不能依赖前缀来解决。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;时间的颗粒度按照数据的量来确认，通常需要自行平衡其同级以及下级的数据量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;例如如下的一串字符串 &quot;foo_bar_20240616_randStr&quot;，我们以 foo、bar 作为一二级前缀，时间日期作为第三级前缀，在这种情况下，我们可以不用关注历史数据的情况，直接校验单日维度的数据是否有重复即可，如果怕并发时间差影响，可以适当扩充延长校验的范围。&lt;/p&gt; 
&lt;p&gt;多级前缀或者类树形数据隔离后需要校验的数据量漏斗：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//6f2b2a550d4beb142646f66436bc57d1.jpg&quot; alt=&quot;07.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;再比如 UUID 算法，根据理论分析，UUID 版本 4（随机生成的 UUID）的冲突概率可以被认为是忽略不计的。这种情况下，我们可以根据业务的需求来确认是否需要前置校验。&lt;/p&gt; 
&lt;p&gt;由此我们知道，只要我们确认数据重复性的可能是不存在的，或者有其他更简洁的替代方法，那么我们确实不需要去数据库查询核验。&lt;/p&gt; 
&lt;h3&gt;非索引字段怎么验证处理&lt;/h3&gt; 
&lt;p&gt;在不确认数据唯一性的情况下，或者查询数据库不是最合适的解决方案的情况下，我们该用什么方法来解决这个问题呢？&lt;strong&gt;通常选择的一种方法是增加分布式锁来进行校验&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;依然针对我们提到的字符串&quot;&lt;strong&gt;foo_bar_20240616_randStr&lt;/strong&gt;&quot;，经过前缀隔离之后，我们判断下来，只要校验按日维度的数据不存在重复即可。&lt;/p&gt; 
&lt;p&gt;这样我们选择分布式锁的时候，需要保证锁的时间维度在一天或者稍多就能满足需求。&lt;/p&gt; 
&lt;h3&gt;高并发下如何保证正确性&lt;/h3&gt; 
&lt;p&gt;如果我们确实要走数据库查询核验，那么在高并发场景下，查询到存储的间隙，有其他进程或线程触发同样的逻辑造成冲突了怎么办？其他机器上部署的业务也同样触发相同的逻辑又该如何？&lt;/p&gt; 
&lt;p&gt;这种情况下，我们自然而然地也想到了分布式锁。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;内存级分布式锁工具的高性能可以弥补直接查询数据库判断比对的处理时间差&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;分布式锁的必要性&lt;/h2&gt; 
&lt;p&gt;我们知道，编程语言中也到处有锁的身影，例如 Go 语言的互斥锁、读写锁，但是其作用是在单应用进程内提供的协程并发访问互斥机制，无法作用到多进程或者多节点部署的情况。&lt;/p&gt; 
&lt;p&gt;而分布式锁，正好可以&lt;strong&gt;帮助多节点部署的业务服务&lt;/strong&gt;来解决并发访问共享资源时的一致性问题。&lt;/p&gt; 
&lt;h1&gt;三、锁的共性问题&lt;/h1&gt; 
&lt;h2&gt;分布式锁的正确性保障&lt;/h2&gt; 
&lt;p&gt;相信对分布式锁感兴趣的小伙伴，或多或少都知道常用的两种分布式锁应用方式：Redis、Zookeeper。&lt;/p&gt; 
&lt;p&gt;通常使用分布式锁时候要考量如下的问题：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;加锁成功之后，后续对该锁的所有操作，能否确认该锁是当前线程持有&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;当前线程释放锁是否有可能释放了不是本线程持有的锁？&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;我加了锁，锁的时间不够我业务执行，后面我再操作锁，这个锁还是本线程的锁吗？&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;加锁的时间问题&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;当前线程持有的锁时间内，任务还没完成锁就过期了该怎么办？&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;当前线程持有的锁还有很长时间才自动释放，但是任务已经结束，并发上不来阻塞了怎么办？&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;锁的释放问题&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;你确定当前线程加的锁在程序正确执行或者异常之后都释放了吗？&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;你如何知道 Redis 或者 Zookeeper 给你保证的锁是唯一的呢？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Redis 的单线程模型保证锁操作的正确性，如果你的 Redis 是主从版或者集群版又正好节点异常切换了呢？&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Zookeeper 的强 CP 原则，牺牲了 A（可用性），但是也可能存在宕机等问题，如何处理？&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;针对业务上的前面几个问题，我们通常可以通过下面的几个方法来解决，但依然存在局限性。&lt;/p&gt; 
&lt;p&gt;对于最常见的基于 Redis 实现的分布式锁：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;获取锁的时候给锁 value 设置随机唯一标识，该标识可以用来判断接下来的锁持有方；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;给锁一个合适的初始有效时长，并在锁即将到期的时候续期；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在程序执行的正常区间和异常区间都要释放锁；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果有自旋场景，那么一定要给自旋场景一个最大过期时间防止死锁；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;对于每一个操作，最好使用 lua 脚本实现操作的原子性；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;针对集群版或者主从版本的 Redis，需要根据业务权衡是否需要采用 redlock 或者单节点的 Redis 来作为锁载体。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;redlock 算法较重而且极端情况下也可能存在问题；&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;单节点显然存在单点问题，但是肯定可以保证强一致性。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;而基于 Zookeeper 实现的分布式锁：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Zookeeper 基于其临时有序节点的&quot;申请-未获取-监听-申请-获取-操作-释放&quot;的循环来实现分布式锁；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;因为临时节点的释放是基于会话级别的，所以在会话关闭或者异常中断的情况下，也都会自动释放，所以避免了死锁的问题，心跳的存在我们也不用手动续期。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Redis 使用自身单线程操作内存的机制、Zookeeper 使用 ZAB 协议，其实都存在一些共同点，它们的共同点就在于要保证我设置的 key 或者节点的次序是首次。&lt;/p&gt; 
&lt;p&gt;它们要保证的是，无论你的业务系统分布式程度多高，基于它们所获取到锁数据，都是唯一的和最先的。&lt;/p&gt; 
&lt;p&gt;以上我们讲了那么多，其实都绕不开一个概念，那就是多个线程的访问，经过层层传递收缩，最终都指向到同一份数据上或者同一个数据标识上（&lt;strong&gt;因为对于分布式缓存而言，数据可能存有多份，并通过半数以上同意的协议形式来确定其一致性&lt;/strong&gt;）。&lt;/p&gt; 
&lt;p&gt;业务线程锁逻辑访问收缩示例：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//df73a8ccb06c0c926550af96d90b78ca.jpg&quot; alt=&quot;08.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;能支持分布式锁的，不只有 Redis 和 Zookeeper。理论上，其他满足 CAP 理论中 CP（一致性和分区容忍性）的分布式系统，在一定程度上都能满足支持分布式锁的条件。&lt;/p&gt; 
&lt;h2&gt;数据库主键唯一性保障&lt;/h2&gt; 
&lt;p&gt;在 MySQL 数据库中，我们知道，主键一定是唯一的，唯一索引却不一定是主键。虽然上面提到的场景，我们引入了分布式锁来保障数据的唯一性，但是 MySQL 自身的自增主键机制，也是我们所离不开的。&lt;/p&gt; 
&lt;p&gt;在 MySQL 中，自增主键通过&quot;AUTO_INCREMENT 控制&quot;的机制来确保主键值的唯一性和自增，AUTO_INCREMENT 控制主要通过数据库的内部机制来实现。&lt;/p&gt; 
&lt;p&gt;具体来说，当表中的某个列被指定为 AUTO_INCREMENT 主键时，MySQL 会自动维护一个用于该列的自增计数器，并确保每次对表的插入操作都会使这个计数器递增。&lt;/p&gt; 
&lt;p&gt;具体实现的方式包括以下几个方面：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;内部计数器：MySQL 内部会维护一个计数器，用来记录下一个可用的自增值。这个计数器通常保存在系统表中，跟踪每个表，以及每个表的 AUTO_INCREMENT 列的当前值。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;锁机制：在插入新记录时，MySQL 会使用锁机制来确保自增值的唯一性。在插入操作之前，会对计数器或相关数据进行锁定，以避免多个客户端同时尝试获取相同的自增值。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;事务支持：对于使用事务的情况，MySQL 也会确保在事务失败时（例如回滚），已分配的自增值不会被使用，以维护自增值的连续性和唯一性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;总的来说，MySQL 的 AUTO_INCREMENT 控制主要依靠内部的自增计数器和相应的锁机制来实现。这种机制有效地确保了主键的自增属性，并保证了主键的唯一性。&lt;/p&gt; 
&lt;h2&gt;进程内协同之一：互斥&lt;/h2&gt; 
&lt;p&gt;以上说到的是分布式锁，但是在单机系统中，也存在不同线程或协程数据交互与执行互斥的问题。例如操作系统多应用互访、单进程应用配置数据的多线程访问和变更、下游访问的并发抑制操作等。&lt;/p&gt; 
&lt;p&gt;编程语言给我们提供了一系列进程内协同的方式：同步、互斥与通信。这里的进程内互斥体，其实也就是称为锁。&lt;/p&gt; 
&lt;p&gt;Go 语言提供的互斥锁功能，其底层依赖有如下一些机制：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;原子操作&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;原子操作是 CPU 提供的功能，由 CPU 保证执行的原子性&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Go 语言互斥锁所依赖的主要原子操作是 CAS（ Compare and Swap ）&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;自旋模式与阻塞模式&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;自旋+CAS 、阻塞/唤醒双模式&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;协程与锁的多对一状态，锁的自旋等待显得尤为必要&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;但对于长 CPU 时间片的操作，自旋等待过程所消耗的资源其实也不低&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Go 语言通过自旋模式到阻塞模式的切换，来缓解锁竞争激烈场景下的 CPU 消耗&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;均衡调度&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;普通模式：普通模式下，老协程相比新的协程，在正常锁竞争下缺乏优势，可能导致长时间无法获得执行权限&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;饥饿模式：饥饿模式会使未得到执行的协程获得更高的执行优先级，以摆脱长时间获取不到锁无法执行的困境&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;其他的编程语言一般也提供相应的锁机制，来保证系统中多线程执行互斥的问题。&lt;/p&gt; 
&lt;h2&gt;分布式锁与进程内锁的共性&lt;/h2&gt; 
&lt;p&gt;从上面的信息，我们看的出来，无论是分布式锁，还是进程内的互斥锁，都存在下面的一些共性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;使用唯一标识来识别锁的当前归属；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通常使用 CAS 方式来实现变更操作的原子性；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;要考虑获得锁的失败自旋以及时间问题；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;根据需要来确定是自旋等待还是失败结束。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;唯一标识与 CAS 的联系&lt;/h2&gt; 
&lt;p&gt;编程语言提供的互斥锁功能，在底层上依赖 CPU 提供的原子操作功能 CAS 。&lt;/p&gt; 
&lt;p&gt;我们在使用 Redis 分布式锁的时候，如果使用 lua 脚本，其比对该锁的 value 是否是本线程持有的时候，也有个比对后再更改的过程。&lt;/p&gt; 
&lt;p&gt;Zookeeper 实现分布式锁的时候，我们也是获取到临时顺序节点的最小序号（有个比对过程），才能确定获取到锁。&lt;/p&gt; 
&lt;p&gt;另外在数据库数据更新的时候，我们也经常用该方式保证数据变更条件的准确性。&lt;/p&gt; 
&lt;p&gt;当然，CAS 这个操作概念，其 C（compare），所依赖的依然是某个数值在当前场景下的唯一性。这也是我为什么从数据唯一性引申到这里的原因，而且 CAS 也是我在这里要重点说的思想。&lt;/p&gt; 
&lt;p&gt;看到这里，不知道大家有没有发现，这里存在一个很有意思的情况：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;数据唯一性检验可以使用锁来解决&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;而锁的获取，又依赖一个小范围的唯一数据&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;所以这也是一个将大范围唯一性校验，通过一定方式转换为小范围唯一性校验的方法。而小范围唯一性的标记，甚至可以深入简化到底层二进制的 0 和 1 两个状态来完成。&lt;/p&gt; 
&lt;h1&gt;四、同类场景延伸&lt;/h1&gt; 
&lt;h2&gt;分布式 ID 生成原理&lt;/h2&gt; 
&lt;p&gt;我们在前面提到了唯一标识的生成组织方式，其中分布式 ID 生成算法之一的雪花算法，就使用了时间前缀区分、分片标识、节点数据自增的方式，将大范围唯一标识生成缩小成小范围的数据自增，还兼顾了按时间增长与高并发等性能优势。&lt;/p&gt; 
&lt;p&gt;常用的分布式 ID 生成算法，各有其特点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;雪花算法：雪花算法是 Twitter 开源的分布式 ID 生成算法，它可以在分布式系统中生成全局唯一的、递增有序的 ID。Snowflake 算法的 ID 由时间戳、机器 ID 和序列号组成。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;数据库自增 ID：在分布式系统中，可以使用单独的数据库服务器生成自增 ID。不同的服务器会有不同的起始值和步长，从而避免冲突。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 Redis 的 INCR 命令：Redis 的 INCR 命令可以用来原子递增一个 key 的值，因此可以利用这个特性来生成全局唯一 ID。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;但是无论使用哪种方案，都需要考虑 ID 的唯一性、性能、可用性以及分布式环境下的并发安全性，选择合适的方案应根据具体需求以及系统架构来进行权衡和决策。&lt;/p&gt; 
&lt;h2&gt;接口幂等与 MQ 消费幂等&lt;/h2&gt; 
&lt;p&gt;业务数据接口幂等操作与消费队列消费的幂等操作，幂等性保证其实是一样的原理。&lt;/p&gt; 
&lt;p&gt;幂等性是指针对同一个操作，多次执行的结果和一次执行的结果是一致的。在计算机科学和网络编程中，幂等性是一个重要的概念，特别是在分布式系统和网络通信中。&lt;/p&gt; 
&lt;p&gt;针对幂等性处理，我们要记住的唯一思想其实也是 CAS。对于存在数据变动的场景，CAS 的原则可以保证数据只在指定条件下才发生变化。&lt;/p&gt; 
&lt;p&gt;以下几种保证 MQ 消费幂等的方式中，CAS 的思想其实是一致的：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;基于数据库中唯一 ID 以及某个状态的值做前置判断，符合条件才执行；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用消息 ID 作为 Redis 分布式锁的 key 来判断当前消息是否消费成功；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用消息 ID 入库以及成功后状态变更来判断消息消费是否已经执行过。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;操作系统进程间通信与互斥&lt;/h2&gt; 
&lt;p&gt;对于进程间协同来说，主流操作系统支持了锁（Mutex）和信号量（Semaphore）。Windows 还额外支持了事件（Event）同步原语。&lt;/p&gt; 
&lt;p&gt;进程间的锁（Mutex），语义上和进程内没有什么区别，只不过标识互斥资源的方法不同。Windows 最简单，用名称（Name）标识资源，iOS 用路径（Path），Linux 则用共享内存。&lt;/p&gt; 
&lt;p&gt;从使用接口看，Windows 和 iOS 更为合理，虽然大家背后实现上可能都是基于共享内存（对用户进程来说，操作系统内核对象都是共享的），但是没必要把实现机理暴露给用户。&lt;/p&gt; 
&lt;h2&gt;CAS 原理的其他应用场景&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;无锁数据结构：CAS 原理通常与无锁数据结构结合使用，以实现高效的并发数据访问。由于 CAS 原子操作的特性，可以在不使用锁的情况下对共享数据进行操作，从而提高并发性能。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;分布式系统：CAS 原理的思想可以应用于分布式系统中的数据同步和一致性问题。在分布式环境中，类似 CAS 的原子操作除了可以用于实现分布式锁，还可以用来实现分布式事务以及一致性算法，确保全局状态的一致性和可靠性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;数据库事务：在数据库系统中，CAS 原理的思想可以用于乐观锁和并发控制。通过比较数据版本或标记位，并进行更新的原子操作，实现数据库事务的并发控制和一致性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;业务流程控制：CAS 原理的思想也可以应用于业务系统中的流程控制，例如利用乐观锁的机制来处理并发访问下的业务逻辑一致性问题。（上面提到的幂等实现其实也是该大类下的）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;五、总结&lt;/h1&gt; 
&lt;h2&gt;唯一标识与 CAS 与多对一模型&lt;/h2&gt; 
&lt;p&gt;到这里，我们发现，上面提到的基于唯一标识与 CAS 原理来解决问题的方式，其本质都是多对一模型下，实现多线程同步互斥，以及并发收缩问题的基础依赖。&lt;/p&gt; 
&lt;p&gt;所以我们遇到的多对少或者多对一模型下的，数据访问或修改的收缩问题，其实都可以通过类似的思想来尝试寻找解决方案。&lt;/p&gt; 
&lt;h2&gt;学会抽象归纳&lt;/h2&gt; 
&lt;p&gt;唯一 ID 与 CAS 这两个点，乍一看好像并无联系，但是经过关联梳理，我们依然能发现它们在多对一模型下的关联。&lt;/p&gt; 
&lt;p&gt;当我们在工作学习中，遇到的比较相似的问题多了，只要愿意深入思考，就能发现其中的共性，并且总结提炼出来，在下一次遇到类似的情况时，自然而然就能想到它。&lt;/p&gt; 
&lt;p&gt;熟能生巧之外，我们也可以主动使用一些通用的思路和方法，配合工具来提升自己的抽象归纳能力。具体来说，抽象归纳有以下思路和方法：观察和辨识共性、提炼概念、泛化思维、归纳推理、应用验证等，可以使用的工具则有：思维导图、数据分析工具、逻辑推理工具或游戏等。&lt;/p&gt; 
&lt;p&gt;希望这些方法思路和工具，可以带大家直击问题本质，提升大家面对问题的分析能力和解决能力。&lt;/p&gt; 
&lt;p&gt;*&lt;strong&gt;文 / 预子&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本文属得物技术原创，更多精彩文章请看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com%2F&quot; target=&quot;_blank&quot;&gt;得物技术&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未经得物技术许可严禁转载，否则依法追究法律责任！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5783135/blog/15742076</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/15742076</guid>
            <pubDate>Tue, 10 Sep 2024 07:49:00 GMT</pubDate>
            <author>得物技术</author>
        </item>
        <item>
            <title>Apple Intelligence 将于下月起登陆 iPhone、iPad 与 Mac</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Apple 今日宣布&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com%2Fapple-intelligence%2F&quot; target=&quot;_blank&quot;&gt;Apple 智能 (Apple Intelligence) &lt;/a&gt;将于下月起随 iOS 18.1、iPadOS 18.1 和 macOS Sequoia 15.1 发布，更多相关功能将于未来几个月内陆续推出。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-342f2e7529e1945748166e345e86136dd48.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;「Apple 智能」发布时支持美国英语，将于 12 月拓展至澳大利亚、加拿大、新西兰、南非和英国的本土化英语。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;明年，「Apple 智能」将支持中文&lt;/strong&gt;、法语、日语、西班牙语等更多语言。&lt;/p&gt; 
&lt;p&gt;Apple 还表示，中国大陆的用户需在稍后经过监管部门批准后才能使用该功能。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311300/apple-intelligence-comes-to-iphone-ipad-and-mac-next-month</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311300/apple-intelligence-comes-to-iphone-ipad-and-mac-next-month</guid>
            <pubDate>Tue, 10 Sep 2024 03:11:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Apple 推出 iPhone 16 系列新产品</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;北京时间 9 月 10 日凌晨，Apple 正式举行发布会，发布 iPhone 16 系列、Apple Watch Series 10、AirPods 4 等多款新品。&lt;/p&gt; 
&lt;p&gt;iPhone 新品包括 iPhone 16、iPhone 16 Plus、iPhone 16 Pro 与 iPhone 16 Pro Max 四款机型，采用的 A18 与 A18 Pro 芯片均基于第二代 3nm 技术。&lt;/p&gt; 
&lt;p&gt;A18 使用 3 纳米工艺制造，包含了 6 核 CPU、5 核 GPU 以及 16 核 NPU。苹果称其 NPU 对大型生成式模型进行优化，运行机器学习模型的速度，相比 A16 提升最高可达 2 倍。&lt;/p&gt; 
&lt;p&gt;iPhone 16 系列引入上代 Pro 机型新增的操作按钮，有黑、白、粉、群青、深青五色可选。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-27e66b6a6e896bf6321746c545fa91623fb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;iPhone 16 Pro 系列提供沙漠色、原色、白色、黑色四色。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b4c644606b192d082431d82e6dd8ecda579.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;所有机型均新增相机控制功能，相机模组、面板材质与散热设计均有更新。&lt;/p&gt; 
&lt;p&gt;iPhone 16 5999 元起售，iPhone 16 Pro 7999 元起售；9 月 13 日（周五）起接受预购，9 月 20 日（周五）起正式发售。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0910/105449_jqyZ_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311297/apple-introduces-iphone-16-iphone-16-plus</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311297/apple-introduces-iphone-16-iphone-16-plus</guid>
            <pubDate>Tue, 10 Sep 2024 03:01:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>【视频】Solon Cloud Gateway: Helloworld （代理 Solon 官网）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;div&gt; 
 &lt;p&gt;以前我对 Cloud Gateway 有些误解，最近发现非常之有意思。录了个简单的视频，给 Solon 官网架了层代理，好玩！&lt;/p&gt; 
 &lt;p&gt;&lt;iframe frameborder=&quot;0&quot; height=&quot;300&quot; scrolling=&quot;no&quot; src=&quot;https://player.bilibili.com/player.html?isOutside=true&amp;amp;aid=113107124880767&amp;amp;bvid=BV1HnpJe6ELE&amp;amp;cid=25800279319&amp;amp;p=1&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/iframe&gt;&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311295</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311295</guid>
            <pubDate>Tue, 10 Sep 2024 02:53:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>域名证书检测平台 Domain Admin 加入 Dromara 开源社区</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span&gt;&lt;/span&gt;Domain Admin 一个 SSL 证书申请，自动续期，到期监控工具&lt;/p&gt; 
&lt;p&gt;Domain Admin 基于 Python + Vue3.js 技术栈实现的域名和 SSL 证书监测平台&lt;/p&gt; 
&lt;p&gt;用于解决，不同业务域名 SSL 证书，申请自不同的平台，到期后不能及时收到通知，导致线上访问异常，被老板责骂的问题&lt;/p&gt; 
&lt;p&gt;Domain Admin 是一个轻量级监控方案，占用系统资源较少。同时，Domain Admin 也可以作为一个 Flask 和 Vue.js 前后端分离的项目模板&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;功能描述 
  &lt;ul&gt; 
   &lt;li&gt;核心功能：&lt;code&gt;域名&lt;/code&gt;、&lt;code&gt;SSL 证书&lt;/code&gt; 和 &lt;code&gt;托管证书文件&lt;/code&gt; 的过期监控，到期提醒&lt;/li&gt; 
   &lt;li&gt;支持证书：单域名证书、多域名证书、泛域名（通配符）证书、IP 证书、自签名证书&lt;/li&gt; 
   &lt;li&gt;证书部署：单一主机部署、多主机部署、动态主机部署&lt;/li&gt; 
   &lt;li&gt;通知渠道：支持邮件、Webhook、企业微信、钉钉、飞书等通知方式&lt;/li&gt; 
   &lt;li&gt;支持平台：macOS、Linux、Windows&lt;/li&gt; 
   &lt;li&gt;辅助功能：&lt;code&gt;Let’s Encrypt&lt;/code&gt; SSL 证书免费申请和 SSL 证书自动续期&lt;/li&gt; 
   &lt;li&gt;多语言：支持中文、英文&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;p&gt;Domain Admin 支持多种安装方式，例如使用 docker 可以很方便的安装&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# 本地文件夹和容器文件夹映射
$ docker run \
-v $(pwd)/database:/app/database \
-v $(pwd)/logs:/app/logs \
-p 8000:8000 \
--name domain-admin \
mouday/domain-admin:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;预览&lt;/h2&gt; 
&lt;p&gt;在线预览地址（账号密码随意）：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmouday.github.io%2Fdomain-admin-web%2F&quot; target=&quot;_blank&quot;&gt;https://mouday.github.io/domain-admin-web/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;登录&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://mouday.github.io/img/2024/09/08/1vn8bcv.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;首页&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://mouday.github.io/img/2024/09/08/z0wolfu.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;证书监控&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//5214335558c454eaed9283f692d77e48.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;证书申请&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//792701de0fcfeb56e530d5aeecc89717.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;该项目已加入 &lt;code&gt;Dromara 开源社区&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;项目地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdomain-admin&quot; target=&quot;_blank&quot;&gt;https://github.com/dromara/domain-admin&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311292</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311292</guid>
            <pubDate>Tue, 10 Sep 2024 02:26:06 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>首期！deepin 技术双周报上线，最新进展和未来双周计划</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;383&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/09/%E8%93%9D%E8%89%B2%E7%AE%80%E7%BA%A63D%E7%A7%91%E6%8A%80%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%B0%81%E9%9D%A2.png&quot; width=&quot;900&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-technical-bi-weekly-issue-1%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;deepin 技术双周报首期上线，我们会简单列出 deepin 各个小组在过去两周的相关工作进展，也会阐述未来两周的大致规划，以便关注 deepin 的朋友们了解相关详情并参与进来。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;DDE&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;DDE 相关项目已针对 deepin 23 切出对应的维护分支，接下来的一段时间内，23 版本将仅推送缺陷修复而不涵盖新的特性，而特性的研发则会在 Master 分支进行。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;进展：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;dde-shell 初步进行应用程序数据整合，尚在进行中&lt;/li&gt; 
 &lt;li&gt;迁移 dde-shell 提供的 launcher 图标组件至 dde-launchpad，尚在进行中&lt;/li&gt; 
 &lt;li&gt;通知中心与横幅通知显示 QML 化，尚在进行中&lt;/li&gt; 
 &lt;li&gt;控制中心准备着手进行 QML 化改造&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;计划：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;对上述「进展」部分的内容进行持续开发&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;系统研发&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;更新部分系统软件包、解决一些软件包构建失败问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;进展：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新 egl-wayland 至 1.1.15 版本&lt;/li&gt; 
 &lt;li&gt;解决 x11-apps 崩溃问题&lt;/li&gt; 
 &lt;li&gt;解决交叉编译工具链编译问题，尚在进行中&lt;/li&gt; 
 &lt;li&gt;集成 cpu 微码包 amd64-microcode 3.20240820.1 版本 intel-microcode 3.20240813.2 版本&lt;/li&gt; 
 &lt;li&gt;依赖分析工具部署 (基于 ocaml 开发的 ben 项目来自&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsalsa.debian.org%2Fdebian%2Fben&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;https://salsa.debian.org/debian/ben&lt;/em&gt;&lt;/a&gt;，用于软件包依赖监控)， 尚在进行中&lt;/li&gt; 
 &lt;li&gt;grub2 更新屏蔽掉冗杂的终端日志输出&lt;/li&gt; 
 &lt;li&gt;更新 fcitx5 5.1.10-1deepin4 版本、fcitx5-rime 5.1.8-2 版本 、libime 1.1.8-1 版本&lt;/li&gt; 
 &lt;li&gt;更新部分系统软件包、解决一些软件包构建失败问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;计划：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;持续处理软件包更新、系统 bug 等&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;TreeLand&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;TreeLand 已完成初步的原型验证，正在开发动画以及功能适配。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;进展：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加窗口动画&lt;/li&gt; 
 &lt;li&gt;支持 wayland 应用程序所需的基础协议&lt;/li&gt; 
 &lt;li&gt;支持 xwayland-shell-v1 协议&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;计划：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;持续适配应用程序&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;内核&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;进展：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;6.10 内核预发布，正在等待上游修复 AMD Radeon 520 等 GCN 1.0/2.0 系列显卡的硬件解码支持，预计完成后推送内测&lt;/li&gt; 
 &lt;li&gt;研究实现使用交叉工具链完成内核编译、维护、测试和发布&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;计划：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;预计下周发布的 6.6 内核会包含更多针对海光、兆芯平台，以及格兰菲显卡的支持改进&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;如果您对 deepin 的研发相关内容感兴趣，希望能够参与进来，那么欢迎您加入社区与其他贡献者们一起展开讨论。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmatrix.to%2F%23%2F%23deepin-community%3Adeepin.org&quot; target=&quot;_blank&quot;&gt;https://matrix.to/#/#deepin-community:deepin.org&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.me%2Fdeepin_community&quot; target=&quot;_blank&quot;&gt;https://t.me/deepin_community&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 全版本镜像下载（含 deepin V15）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-multi-architecture-compatibility%2F&quot; target=&quot;_blank&quot;&gt;deepin 多架构适配之路历程揭秘&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xRpgexE1b%2F%3Fspm_id_from%3D333.999.0.0&quot; target=&quot;_blank&quot;&gt;【视频】在小米平板 5 使用 deepin 23 和 MIUI14&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311285</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311285</guid>
            <pubDate>Tue, 10 Sep 2024 02:13:06 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | AI 被连续否定 30 次；Java「上位」；开源模型之王翻车；A18 芯片采用 Arm 最新架构；鸿蒙系统「飞天」；IBM 曾经是伟大的企业</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.9&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/news/311127/apple-a18-uses-arm-chip&quot;&gt;&lt;span&gt;苹果全新 A18 芯片基于 Arm 最新 V9 架构&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;英国媒体《金融时报》&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ft.com%2Fcontent%2F85f3efa0-c30d-4eaa-9a4d-5bd6c5243e9f&quot; target=&quot;_blank&quot;&gt;报道称&lt;/a&gt;，苹果计划在周一的发布会上推出 iPhone 16 系列新机，以及其采用的基于 Arm 最新 V9 架构的 A18 芯片。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0909/104852_1miq_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;A18 芯片预计将为 iPhone 16 系列带来更强大的机器学习和图像处理能力，从而优化用户体验，并支持更多先进的 AI 功能。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;苹果已经在其最新的 MacBook M4 芯片中使用了 Arm 的 V9 架构，它表示 M4 为下一代 PC 带来了 「巨大飞跃」 的性能提升，预计将在接下来几个月内宣布这些 PC 新品。去年 9 月，苹果与 Arm 签署了一项协议，有效期至 2040 年 「及以后」，确保在可预见的未来能够使用其核心知识产权 Arm 架构，该架构用于其 iPhone 和 Mac 芯片。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;这份多年期许可协议也为 Arm 带来了巨大的推动力。Arm 首席执行官 Rene Haas 此前表示，最初于 2021 年推出的 V9 芯片架构带来的专利费是其上一代 V8 的两倍，后者可用于苹果为 iPhone 15 Pro 和 Pro Max 设计的 A17 Pro 芯片。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/news/311117/tiobe-index-202409&quot;&gt;&lt;span&gt;TIOBE 9 月榜单：Java 上位，C 语言跌至历史最低&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 公布了 2024&amp;nbsp;年 9 月的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot; target=&quot;_blank&quot;&gt;编程语言排行榜&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE CEO Paul Jansen 点评称，C 语言一直以来都嵌入式系统的最爱。到目前为止，C 语言唯一的严重缺点是它不是为扩展而设计的。由于缺乏面向对象特性，大型 C 程序难以维护。现在，嵌入式系统的功能趋于增长，因此代码大小也随之增长，而且由于越来越多的嵌入式编译器具有良好的 C++ 支持，因此人们倾向于从 C 语言切换到 C++。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1644054135%2FOw95ztQv0%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;开源模型之王 Reflection 一夜翻车，炒作背后真相揭晓&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;近日，AI 开源社区因为一款新模型 Reflection 70B 掀起了讨论风暴。该模型由 HyperWrite 公司开发，原本被认为是基于 Llama 3.1 70B Instruct 构建的，并且在多个基准测试中超越了 GPT-4。这个模型横扫了 MMLU、MATH、IFEval、GSM8K，在每项基准测试上都超过了 GPT-4o，还击败了 405B 的 Llama 3.1。&lt;br&gt; 凭借如此惊艳的效果，Reflection 70B 被冠以开源大模型新王。该模型更是由两位开发者（Matt Shumer 和 Glaive AI 创始人 Sahil Chaudhary）花了 3 周完成。&lt;/p&gt; 
&lt;p&gt;但独立分析机构和 Reddit 社区的测试显示，Reflection 70B 可能仅是经过 LoRA 调整的 Llama 3，而非 Llama 3.1。该机构表示，Reflection Llama 3.1 70B 的 MMLU 得分仅与 Llama 3 70B 相同，并且明显低于 Llama 3.1 70B。还有科学推理与知识（GPQA）和定量推理（MATH）基准测试的结果，同样不如 Llama 3.1 70B。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FOvU3a3PwQ%23comment&quot; target=&quot;_blank&quot;&gt;将 Markdown 文档转换为直观可视化的思维导图&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;发现 GitHub 上一款开源免费且颇为实用的工具：markmap。&lt;/p&gt; 
     &lt;p&gt;可以轻松快速将 Markdown 文档内容转换为直观可视化的思维导图，支持图像、链接、代码块、内联样式和数学公式等格式内容。&lt;/p&gt; 
     &lt;p&gt;GitHub：github.com/markmap/markmap&lt;/p&gt; 
     &lt;p&gt;并且支持集成在多种编辑器中使用，包括 VSCode、Vim 和 Emacs 等。 &lt;/p&gt; 
     &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-62675ffb6f4b692319adfd14b58468bb8fd.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;GitHubDaily&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1645215240%2FOwbro5ThP%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;Mini-Omni 是一个开源多模型大型语言模型&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;这个 paper 有点吓人了。。。Mini-Omni 是一个开源多模型大型语言模型，可以一边听、一边说，一边思考。具有实时端到端语音输入和流音频输出对话功能。&lt;/p&gt; 
    &lt;p&gt;第一作者是清华的。http://t.cn/A6RR0Bjt&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;李楠或 kkk&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1261531020%2FOvYou2yiX&quot; target=&quot;_blank&quot;&gt;2 轮算法过， 设计的时候有分歧&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;某 remote 外企：&lt;/p&gt; 
    &lt;p&gt;2 轮算法过， 设计的时候有分歧，虽然最后面试官也同意了我的方案可行性，但最后也没过，可能是他们要会写 RUST 的，我是 JAVA + GO。不过这个面试也就是试着去面了一下&lt;/p&gt; 
    &lt;p&gt;某外卖巨头：&lt;/p&gt; 
    &lt;p&gt;第一轮， 10 个八股问题怼脸，作为一个 10 年经验的，哪会准备这些问题（是的，之前国内对于相对资深的，以项目为主，顶多就是有个算法，不会硬怼八股，这应届生的事），答了 7788，最后一道没见过的 HARD， 直接送走。&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Ridiculeisnormalcy&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1174692545%2FOw54y4Fu0%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;IBM 曾经是伟大的企业，只是曾经&lt;/a&gt;&lt;/h4&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     昨天在现场和华为工程师聊了半个小时，除了谈华为这套技术，更谈了前些年企业从死里求生，谈企业的工程师文化对于员工的影响，尤其是任正非的正确指导性，这个工程师说他以前就在美国 IBM 工作超过 10 年，说 IBM 曾经是伟大的企业，只是曾经，后来选择进入华为是人生最正确的选择。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;V 闪闪&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2963774131%2FOw4PFEAj6&quot; target=&quot;_blank&quot;&gt;鸿蒙系统竟然上天了！&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    我国航天领域基于开源鸿蒙开发的「天鸿」操作系统，是我国航天领域首款智慧物联操作系统，由中国航天科技集团旗下研究院开发，天鸿操作系统不仅更好用，更安全，还集成了鸿蒙的微内核、原子化、分布式软总线等关键技术及信息安全特性，该操作系统可实现航天领域万物互联智能协作，推动航天装备的协同能力迈向新高度。
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;数码科技大爆炸 VVV&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&amp;nbsp;&lt;/h4&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.toutiao.com%2Farticle%2F7412456979408437810%2F&quot; target=&quot;_blank&quot;&gt;身价 700 亿大佬，投身 AGI 创业&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;米哈游创始人蔡浩宇，有了新动作。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;上个月底，蔡浩宇在领英上发文，称 AIGC 已经彻底改变了游戏开发，未来只有两种人制作游戏是有意义的——&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;一种是前 0.0001% 的天才，组成精英团队创造前所未有的东西；其他 99% 的业余爱好者可以为了满足自己的想法而一时兴起创作游戏。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;至于普通和专业的游戏开发者，蔡浩宇则建议不妨考虑转行。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;猎云精选&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5MjE5ODA4MA%3D%3D%26mid%3D2651786416%26idx%3D2%26sn%3D52b70ae3cc0ba8defdf488248cb828d5%26chksm%3Dbc5add5aa35616db7ad4b7152363864256a9c19aa15b02b9c9241258f38418ea7262fefb9afa%23rd&quot; target=&quot;_blank&quot;&gt;AI 跑马圈地时代已经过去&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;眼下投资者们似乎还可以忍受 AI 独角兽们高估值，但这种耐心不可能会永远持续下去。当下投资人已经不对 AI 大模型刷分、打榜感兴趣了，他们看重真刀实枪的商业化竞争，接下来在商业化方面的进展非常关键。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;首席商业评论&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3MTA0MTk1MA%3D%3D%26mid%3D2652520701%26idx%3D1%26sn%3Dd8e5d929ed69fdf26b88f6076edbabec%26scene%3D0&quot; target=&quot;_blank&quot;&gt;Sora 陷研究泥潭？OpenAI 一年血亏 50 亿，高盛报告乌龙引 AI 股地震！&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;Sora 陷入了研究困境！背后原因，就是安全风险以及与好莱坞的合作。另外，最近高盛的报告错误解读了 ChatGPT 流量下降，直接引爆市场的恐慌情绪，导致 AI 股票纷纷被抛售。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;新智元&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yidianzixun.com%2Farticle%2F0whTfdlV&quot; target=&quot;_blank&quot;&gt;AI 泡沫破裂，英伟达市值暴跌 2 万亿？ 英伟达不服输&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;根据 IPA（Infrastructure, Platform, Application）模型理论，每个计算周期都会经历三个阶段：基础设施建设、平台开发、应用程序的出现。现在很显然在进入第二第三个阶段。是否处于「幻灭的谷底」，现在还很难说，但 AI 行业确实进入了调整阶段，连 OpenAI 都在自建芯片和数据中心，英伟达又该如何说服别人接受先进又昂贵的下一代芯片呢？&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;钛媒体&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1809604291069035264%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;AI 被连续否定 30 次：ChatGPT 越改越错，Claude 坚持自我、已读不回&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span style=&quot;color:#000000&quot;&gt;一直否定 AI 的回答会怎么样？GPT-4o 和 Claude 有&lt;strong&gt;截然不同&lt;/strong&gt;的表现，引起热议。GPT-4o 质疑自己、怀疑自己，有「错」就改；Claude 死犟，真错了也不改，最后直接已读不回。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;量子位&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240909A04LR300&quot; target=&quot;_blank&quot;&gt;36 亿融资「造假」被揭穿！挣钱太难了，前苹果 AI 工程师 3 年打造的「欧洲 OpenAI」宣告退出模型竞赛&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对 Aleph Alpha 来说，不再执着于 AI 模型竞赛将使其能够在无需为维持尖端人工智能模型支付巨额费用的情况下追求增长。然而，这不仅反映出大模型当前的市场挑战正在加剧，也表明了资金雄厚的科技巨头在 AI 开发中日益增长的主导地位，最近 Character.AI 、Inflection 等人工智能初创公司在创始人加入大型科技公司后都改变了发展方向。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;AI 前线&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FgrapheneX%2FgrapheneX&quot; target=&quot;_blank&quot;&gt;grapheneX/grapheneX&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;GrapheneX Interactive Shell&quot; src=&quot;https://static.oschina.net/uploads/img/201907/30114232_NXpu.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FgrapheneX%2FgrapheneX&quot; target=&quot;_blank&quot;&gt;https://github.com/grapheneX/grapheneX&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;grapheneX 项目旨在提供一个框架，用于自动为系统提供强化命令。 由于界面选项，它专为最终用户以及 Linux 和 Windows 开发人员而设计。 （交互式 shell /web 界面）除此之外，grapheneX 还可用于保护 Web 服务器 / 应用程序。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5359019/blog/15670585&quot; target=&quot;_blank&quot;&gt;基于事件驱动的邀约自动化机制&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;本文详细介绍了 58 同城邀约业务系统的架构设计和实践经验。文章涵盖了系统的业务背景、整体架构、核心组件设计、技术实现细节等。通过平台化设计和标准化实践，该系统显著提升了产研效率、交付质量和业务复用性，为大规模招聘匹配提供了强有力的技术支撑。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;182&quot; src=&quot;https://oscimg.oschina.net/oscnet/de5c57e1-95bc-49c8-9264-7d076dc52b40.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F-sVftnPHIQm1LObdIiAPsw&quot; target=&quot;_blank&quot;&gt;男子花 3 千升级宽带，商家许诺接入 200 兆光纤：结果网速只有 20 兆、申请退费被赖账&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：运营商说的是 200Mb 二百兆比特，一般人理解的是 200MB 二百兆字节，数据量是 1:8 的关系 200/8=25 正好是 20 多兆」。 200Mbps=20MBps=20Mbps=2MBps 是吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：建议三家运营商直接用实际下载速率来宣传宽带把，就这个问题我的很多朋友都坚信运营商在骗人，他们一直坚信 1000 兆的宽带，必须下载速率 MB/s 跑满一千 1000，哪怕我给他们解释要除以八才是下行速度，他们还是不信&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：建设费早就收回来了吧？现在还这么贵？希望能引入星链&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：200 兆比特每秒（200Mbps）换算成他自己看的网速，也就是兆字节每秒（MB/s）需要除以 8，也就是 200Mbps 的宽带峰值速度是 25MB/s&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：北京直接用中国联通的宽带不香吗？100M 宽带+每月 1000 分钟+22G 流量，每个月才 120 元&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：有的小区联通进不去，所以新闻里提到了物业使坏&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：长宽也是，说升级光纤线路。哈哈哈。其实根本没有变化。倒是光纤，楼梯口放个交换机&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：这个老早跑路了&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fd8D78fGG543cNpWqubmZnw&quot; target=&quot;_blank&quot;&gt;两男子自建视频平台 App&lt;span&gt;——&lt;/span&gt;「盗链」影视作品、获利 3.92 亿&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：想学&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：难的不是技术而是推广，这商业很看流量的，没流量不会太挣钱的。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：某夕夕一堆卖这种的，卖了-&amp;gt;跑路-&amp;gt;换一个名字-&amp;gt;继续卖&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：不是，这玩意能那么挣钱吗，他们哪找的广告？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：难道不是怎么做的流量？ 流量起来了，广告费自然就有了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：应该是没收违法所得，然后再罚款。用脚丫想想也是这样。&lt;img height=&quot;1&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e52a107a9024b766c01f38afd53e9cf707e.png&quot; width=&quot;1&quot; referrerpolicy=&quot;no-referrer&quot;&gt;，你们在想什么，怎么可能不没收违法所得，只是这个上面没写&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：谁说技术不能赚大钱的？没赚到大钱是你的思路没打开而以&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSwZbNd_fwBLFlpL7hXKYAg&quot; target=&quot;_blank&quot;&gt;MongoDB 是没有未来的数据库&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：「研究 mongodb 时顺便水了篇论文，然后发现官方也是我那个思路实现的」 —— 俗话说明人不装暗笔，但这个作者全文都是暗逼&lt;img height=&quot;1&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e72805f4a6614da43e407f97d2bac6d3899.png&quot; width=&quot;1&quot; referrerpolicy=&quot;no-referrer&quot;&gt;。Mongo 作为上市公司自有其财报披露和分析师会议，你要研究股价自己去参与这些好了，低吸高抛你悄咪咪赚钱💰多好，非要扯到技术上捧一踩一装个大逼。法律也没规定技术实现仅限一家，mongo 我们用的就挺好。数据库能发行出来就不可能有致命的内部缺陷，任何数据一致性和可用性的问题都是因为你代码写的烂。说非要上市公司的未来，我管他什么未来不未来，我们现在用的还是 3.2，只要每个月能发我工资就行了，不要老拿双十一和 12306 秒杀这种极端场景来 pua 每个公司&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：mongo 对于小白还是很有好的，这是我用它的第一印象，文档简直太清楚了。但是部署上集群模式资源利用率太低了，分析性能也不好。当 kv 用好使，其它的基本不考虑 mongo&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：nodejs 配合 mongo 简直了，开发快，迭代快，但是你只要一个月没有看你的代码，你可能自己都不清楚 MongoDB 有哪些字段，适合什么样的场景不用我多说了吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：批评 mongo 也应该由大量使用 mongo 的用户来批评，比如文中举的各个外国例子。你上一次用 mongo 还是在 8 年前，你在这儿燃什么？搞的愤世嫉俗一样？抨击别人的产品，抬高自己所站的队，你这也是营销，跟 gnu 说 windows 是邪恶的一个德性&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：很多人没用过易语言不是照样批判易语言？这是宽己严人！实际上，多用用其他数据库，批判才更客观&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：写 web 的人对数据库只有 CRUD，所以你说再多他们也不会有什么感觉，毕竟他们只把数据库当文件用&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：「MongoDB 和 MySQL 属于那种典型的 「面向初学者」 的数据库，针对小白做了许多讨好性的妥协与设计。」这句话太酸了，对用户友好，难道不是大家应该追求的吗？非要搞得小白看不懂，上手难度高才好吗。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：这篇文章不也是对 PostgreSQL 的营销吗&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：性能上没比较过，不过好用方便还是 mongodb 哦。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：不是写 web 的人只有 CRUD，而是你接触到的项目只有 CRUD&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：&quot;Collection 里有整本的小说&quot; 这难道不是你们自己塞进去的么？这都能怪到 mongo 头上&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 12：我目前用的 mongo，还没发现有什么问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 13：做喷子才没有未来，技术是向前发展的，喷子就盯着之前的三瓜两枣挖掘点流量，这东西好不好就看被服务的对象反馈，喷子不懂技术永远是服务业务的，而不是为了炫技，你说 pg 再好，运维起来连个最基本的主从切换都没有，还得以来第三方组件，影响可用性，你去跟你客户解释 pg 是世界上最好的数据库，有问题用不上你，你看客户买不买单&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 14：MongoDB 挺好用，阿里都抄袭，搞得 MongoDB 改了开源协议。SQL 类数据库数据存储灵活性太差了，你用个 pq 或者 MySQL 加个 Java 就以为包打天下了，但是你试试用这套组合拳存储瓦片地图数据试试？MongoDB 在很多复杂结构数据方面就不是 SQL 数据库能比的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 15：SQLite&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 16：单机几百 T 的 Pg 备份恢复要多长时间有相关测试数据参考吗&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 17：抛开使用场景去评价一个产品都是耍流氓，喷了 mongodb 居然还顺带了一下 MySQL&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 18：用 python 写爬虫，数据用 mongodb 存储，依然是目前最好的方案。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 19：mongodb 有个很恶心的地方是 key 一定是字符串，太恶心了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 20：Mongodb 还可以啊，如果一个很差的产品，再怎么营销，也不可能长时间流行的，毕竟用户不是傻子&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 21：我们之前 5 年前几十个自建 mongo 集群从一个云迁移到另一个云，真是灾难，当然请了腾讯某知名专家来也是解决不了。另外也是被我司 rd 用得字段乱七八糟&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 22：再天花乱坠也不影响我开发不到 10 个并发的项目&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 23：知名度上还是 mongo 广泛，而屈居第二的 mysql 更是几乎所有公司必备。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_j1gpz_rNVO8-V1JPwvOgA&quot; target=&quot;_blank&quot;&gt;「宇宙最强」开源代码编辑器&lt;span&gt;——&lt;/span&gt;VS Code 优化 Linux 版本 UI、改进 Copilot 功能……&amp;nbsp;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：太好了，又添加这么多特性，真是太好了！我更喜欢 Vim 了。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：要么是远古大神要么就是编程小白&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：Linux 版本 vscode 体验是最差的，很多插件搜不到，字体显示也很烂，tmd 开源软件面对开源系统做的最烂的软件&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：？？？为啥我的正常？无能狂怒&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：读研期间从 vscode0.7 公测版开始使用，如今工作 7 年了，一直是重度用户&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：已经换 cursor 了比起 vsc 的 copilot 好用太多了&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：国内用它唯一遗憾的是用不了@web 联网搜索的功能。。。这个功能阅读 api 文档可太有用了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：如果 sourceinsight 能一直更新一直做就好了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：想不到会为 Linux 优化，话说默认 wayland 快了不&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311213</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311213</guid>
            <pubDate>Mon, 09 Sep 2024 10:28:50 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>《家里有个程序员》征集启事</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div&gt; 
 &lt;p&gt;今天我们不关心宏大敍事，只关心你。&lt;/p&gt; 
 &lt;p&gt;你在哪里生活？&lt;/p&gt; 
 &lt;p&gt;你过得开心吗？&lt;/p&gt; 
 &lt;p&gt;我想知道，你今天在烦恼什么，关心着什么？&lt;/p&gt; 
 &lt;p&gt;我想知道，下了班后，你在鼓捣什么？&lt;/p&gt; 
 &lt;p&gt;也许你热爱开发这个工作，每天乐此不疲；&lt;/p&gt; 
 &lt;p&gt;也许谈不上热爱，这只是一份谋生的职业。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;请告诉我。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;也许你家里也养了猫猫，很粘人或者很高冷；&lt;/p&gt; 
 &lt;p&gt;也许你周末也会去爬山，一个人或者一群人；&lt;/p&gt; 
 &lt;p&gt;也许你也爱看电影，在家里或者去电影院；&lt;/p&gt; 
 &lt;p&gt;也许你也爱听音乐，上班时间或者下班路上；&lt;/p&gt; 
 &lt;p&gt;也许你也有想陪伴的人，在身边或者在远方。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;都请告诉我。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;请你写下来，告诉我关于你的一切。你爱吃的美食，你喜欢的电影，你想见的人，你想掌握的事情，你要去的地方，你想要的工作，你理想中的生活，都是什么样的？你在为之努力还是已经实现了？&lt;/p&gt; 
 &lt;p&gt;你的家人，你的朋友，你的习惯，你的爱好，你看过的书，你走过的路，你的思考，你的生活······还有很多我不知道的，我想用关于你告诉我的一切，来拼凑出一个你。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;在开源中国，你不是某份报告的里一个数字，你就是你。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;我们计划新增一个栏目——「&lt;strong&gt;家里有个程序员&lt;/strong&gt;」，来存放这样一个你。就像 GitHub 的代码封存在北极——当然我们肯定没这个实力。&lt;/p&gt; 
 &lt;p&gt;现在就开始吧！&lt;strong&gt;栏目将于 9 月 24 日正式开放，直到 10 月 23 日那天截止。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;等到 1024 那天，我们一起过节&lt;/strong&gt;，你想要什么礼物，一起在评论区许愿吧！（许愿的小伙伴注意控制一下预算！！！小编翻了钱包恬不知耻说出了这句话······Orz）&lt;/p&gt; 
 &lt;p&gt;如果你真的不知道从哪里开始，就从「今天是 2024 年 9 月 9 日，天气晴」或者「早上七点半，我起床了」开始吧。&lt;/p&gt; 
 &lt;p&gt;如果你写好了，可以直接发布博客，然后&lt;a href=&quot;https://my.oschina.net/u/3859945&quot;&gt;私信我&lt;/a&gt;；或者发我邮箱：xiaoying@oschina.cn。要是写了一半不知如何进行，也可以发邮件给我，我们一起完成它。&lt;br&gt; &amp;nbsp;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p&gt;9 月 10 日，我们收到了第 1 篇稿件：&lt;a href=&quot;https://my.oschina.net/tangdu/blog/15743251&quot; target=&quot;_blank&quot;&gt;唐豆的 10 年工作心得&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3859945/blog/15727245</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/15727245</guid>
            <pubDate>Mon, 09 Sep 2024 09:00:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>基于事件驱动的邀约自动化机制</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;本文详细介绍了 58 同城邀约业务系统的架构设计和实践经验。文章涵盖了系统的业务背景、整体架构、核心组件设计、技术实现细节等。通过平台化设计和标准化实践，该系统显著提升了产研效率、交付质量和业务复用性，为大规模招聘匹配提供了强有力的技术支撑。&lt;/p&gt; 
 &lt;hr style=&quot;border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);&quot;&gt; 
 &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;strong&gt;背景介绍&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;系统邀约是招聘业务模式中一种高效的人岗撮合机制，它通过推荐匹配技术，将合适的职位推荐给需要的求职者，借助 AI 对话等能力引导双方更高效完成沟通最终实现意向达成。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;从技术层面而言，一次邀约的过程，可以分如下重要步骤：邀约触发、双端匹配、效果调控、以及消息触达、AI 对话等环节，本文重点介绍从触发到消息发出这些环节中的设计和实现方案。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013919&quot; data-ratio=&quot;0.177&quot; src=&quot;https://oscimg.oschina.net/oscnet/a14a679c-1b8a-4f53-89b1-0726dc8e52f7.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default !important;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;一、技术挑战&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;为了支持上述这些功能，我们设计并实现了一个基于事件驱动的自动化邀约平台。这套系统高效地支撑了邀约业务的快速增长和功能迭代。然而，在系统的落地和演进过程中，我们也面临了许多技术挑战，这些挑战可以归纳为三大类。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;1.1、架构设计&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;我们的系统设计面临着一个挑战：需要适应多样化的业务场景，这些场景在复杂性和规模上各不相同，特别是在触发时机和业务流程的处理上。因此如何设计出「&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;扩展性高并且流程可定义的系统架构&lt;/span&gt;」，成为重点考虑的方向。其中系统设计的关键指标包括，不同业务场景中的统一的管理控制能力，如触发时机的定义、业务流程的配置化、流量的分发调控、系统的监控等等；如何支持业务流量错峰，提升资源利用率；如何提升并发性能等等。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;1.2、触发时机&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;这里的触发时机主要分为以下两大类：&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;实时触发：即基于用户的行为，实时触发，对实时性要求较高，经验证 5s 内触发用户得到的转化最高&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;定时触发：即基于目前用户群，在某个时刻触发，这类一般转化效率较低且对时效性要求低。&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;1.3、业务流程的抽象和复用&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;无论是定时触发还是实时触发，都会涉及到一些相同的业务流程。例如，需要进行前置条件判断、用户筛选、AB 实验、效果调控（如频控和岗位校验等）、双端匹配、消息样式等 (如下图)。然而，每个流程节点又存在差异。因此，&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;如何将这些功能抽象为具备通用性的原子能力，并通过统一的接口和框架实现编排以及组合&lt;/span&gt;，成为了业务流程抽象和复用的关键。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013921&quot; data-ratio=&quot;0.26&quot; src=&quot;https://oscimg.oschina.net/oscnet/de5c57e1-95bc-49c8-9264-7d076dc52b40.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default !important;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;下面针对上述三方面的技术挑战，我们逐一进行深入探讨。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;font-size: 20px;&quot;&gt;二、整体设计&lt;/span&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;2.1 整体思想&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;基于前述业务背景，我们设计了一个高度模块化和标准化的系统架构。这个架构的核心思想是从整体流程定义出发，逐步细化到具体的原子能力抽象，即系统能力的精细划分。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;我们的系统设计遵循标准化的抽象流程，形成了一套完整的产品研发 (产研) 和质量保证 (QA) 协作的标准化流程。这种方法不仅确保了系统的模块化和可扩展性，还显著提高了交付效率和质量。系统架构图如下:&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013922&quot; data-ratio=&quot;0.77&quot; src=&quot;https://oscimg.oschina.net/oscnet/cd7d25f9-843f-4eb3-a4b1-6575c066a96d.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;这种模块化和标准化的设计使我们能够更好地应对复杂的业务需求，同时保持系统的灵活性和可维护性。每个功能模块都可以独立开发、测试和优化，从而提高整体系统的稳定性和性能。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;2.2 触发时机与流程编排&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;邀约系统的触发机制主要分为实时触发和定时触发两大类，分别适用于不同的业务场景。这种分类为系统提供了灵活应对各种复杂业务需求的能力。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;流程编排是我们系统的另一个关键特性。它的主要目的是解决不同业务场景下执行流程的差异化问题。通过抽象和模块化的设计，我们实现了高度可配置的流程管理。这使得系统能够根据不同的业务需求，快速组装和调整处理流程，而无需大幅度修改底层代码。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;如系统架构图所示，流程编排模块允许我们灵活定义和组合各个处理步骤。这种设计不仅提高了系统的适应性，也大大增强了其可维护性和可扩展性。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;关于触发机制和流程编排的详细技术实现，将在第三部分的技术框架设计中进行深入探讨。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_9&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;font-size: 20px;&quot;&gt;三、技术框架设计&lt;/span&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h3_10&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;strong&gt;3.1.触发时机&lt;/strong&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;上文说到我们的触发时机分为两大类，即实时触发 (用户行为) 和离线调度 (定时触发) 两大类，这里重点说下&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;实时触发&lt;/span&gt;的系统设计。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_11&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;3.1.1 事件驱动服务&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在这块的设计中，我们将用户的行为抽象成一个事件，采用异步消息的方式来进行解耦。这就很容易让我们联想到这种基于&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(34, 34, 34);cursor: default;&quot;&gt;事件和消息的响应式系统架构设计。这里引入几个核心概念。&lt;/span&gt;&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;事件源：即事件的来源，负责产生事件。这里一般是用户活跃、浏览职位、投递等&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;事件处理器：接收事件并进行处理的组件，这里主要负责事件的中间存储，规则以及该事件关联的一系列投递目标。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;事件目标：即获取该事件后最终的动作，这里是指触发后链路的流程&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013920&quot; data-ratio=&quot;0.423&quot; src=&quot;https://oscimg.oschina.net/oscnet/3e577620-0519-4db3-9c8d-5b89cefaad20.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;上图介绍了一个事件驱动服务的核心流程。我们可以基于接入方来定义识别一个标准事件，也即事件源。而事件处理器接收到事件后，查询该时间的关联数据和规则，对事件进行过滤、协议转换、目标投递。当然也可按照需求选择是否延迟执行。这里以用户活跃为例来介绍下这几个核心流程。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_12&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;1)、过滤规则&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在处理事件时，我们采用了前置过滤机制，主要针对消息体中的字段进行筛选。这种场景下，规则引擎成为了显而易见的技术选择。在众多规则引擎中，我们选用了 Aviator。Aviator 作为一个轻量级但功能强大的规则引擎，具备以下几个突出特点:&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;多样化的数据类型支持&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;cursor: default;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;基本类型:数字、字符串、正则表达式、布尔值等&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;高精度类型:bigint 和 decimal，适用于超大整数和高精度数值运算&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;全面的语法功能&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;cursor: default;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;多行数据处理、条件语句和循环语句&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;异常处理机制，这些特性使得复杂逻辑的编写变得简洁明了。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;函数式编程支持：提供 Sequence 抽象工具、简化集合操作、提高数据处理和转换效率&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;扩展性：支持自定义函数，可实现更复杂的业务逻辑&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;Aviator 的这些特性使其成为处理通用规则的理想选择，尤其适合我们的前置过滤需求。通过使用 Aviator，我们可以灵活地定义和管理各种复杂的过滤规则，从而有效地处理不同类型的事件。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_13&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;2)、 协议转换 (指令集)&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在处理不同事件源和多个投递目标时，我们面临着消息体格式不一致的问题。为了避免大量硬编码开发，我们抽象出了一套灵活的协议转换流程。这个流程能够将源消息体（source）高效地转换为目标格式（target）。以下图为示例，我们想要把 source 消息体转化为 target 消息体&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013923&quot; data-ratio=&quot;0.571&quot; src=&quot;https://oscimg.oschina.net/oscnet/0c075919-b090-420a-9c02-42fa4b9fb0f9.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;这中间要做的字段变化如下：&lt;/p&gt; 
 &lt;table&gt; 
  &lt;tbody style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: left;&quot;&gt;source&lt;/p&gt;&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: left;&quot;&gt;操作&lt;/p&gt;&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: left;&quot;&gt;target&lt;/p&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;business_line&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;变更字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;businesType&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;userid&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;变更字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;uid&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;extra.resumeId&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;移动字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;resumeId&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;city&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;删除字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;为了实现这一目标，我们设计了一套自定义指令集：&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;CHANGE 指令：用于字段变更，如将源事件中的 A 字段更名为目标协议中的 B 字段。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;MOVE 指令：用于字段转移，特别适用于多层协议。例如，可以将源中 A 字段（JSON 格式）内的 x 字段移动到目标协议 B 中的 y 字段。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;DELETE 指令：用于删除不需要的字段。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;ADD 指令：用于添加固定字段，主要用作业务标识。&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;通过这套指令集，我们可以灵活地定义各种转换规则。下面是一个具体的转换示例：&lt;/p&gt; 
 &lt;table&gt; 
  &lt;tbody style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;2&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;background-color: rgb(229, 247, 210);border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: center;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;source&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;background-color: rgb(229, 247, 210);border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;command&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;2&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;background-color: rgb(229, 247, 210);border-color: rgb(162, 162, 162) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;target&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;源字段&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;源值&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;转换指令&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;目标字段&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;目标值&lt;/th&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;business_line&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;58&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;CHANGE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;businesType&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;58&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;city&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;beijing&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;new_job_id&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;80xxxx91&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;new_market_id&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;10xxxx74&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;stime&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;17xxxx73&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;CHANGE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;reportTime&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;17xxxx73&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;top_userid&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;20xxxxxxxx02&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;userid&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;10xxxxxxxx16&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;CHANGE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;uid&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;10xxxxxxxx16&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;extra.resumeId&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;9x2&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;MOVE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;resumeId&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;9x2&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;通过这种方式，我们实现了一套标准的、可配置的协议转换机制。每个事件类型可以定义自己的指令集，从而实现灵活的协议转换，无需编写额外的代码。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;这个协议转换机制是事件驱动服务的核心组成部分之一，它极大地提高了系统的灵活性和可维护性。通过这种设计，我们成功地实现了事件驱动服务的核心功能，为整个邀约业务系统奠定了坚实的基础。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_14&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;strong&gt;3.2. 业务流程的抽象和复用&lt;/strong&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在这里我们定义了一个流程引擎的服务。流程引擎作为整个执行链路中的决策中心，承担着极其重要的作用。将各种类型的基础原子能力进行组装编排。这里采用了 DAG 有向图来描述流程。将不同类型的原子能力定义为一个图中的一个路径节点。考虑到业务场景的复杂度，这里将图进行树化，变成一颗多节点的树。如下图所示。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013928&quot; data-ratio=&quot;0.55&quot; src=&quot;https://oscimg.oschina.net/oscnet/9488cdc0-aa30-4209-be15-1f9ead106533.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_15&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;3.2.1 原子能力的抽象&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;整个树由多个节点构成。我们将具有相同功能的节点抽象为一种节点类型（Node）。节点间存在关联性，当前节点完成后是否触发下一个节点取决于一套规则。为实现节点间的串联，我们将节点关系的抽象如下图所示：&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013924&quot; data-ratio=&quot;0.388&quot; src=&quot;https://oscimg.oschina.net/oscnet/6d92dc8f-2540-4bc8-9ab6-1a9c6db089c3.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;每个节点包含两部分内容，即执行该节点的条件 condition，以及执行该节点需要的数据 value。我们会将每个节点的执行结果带入到上下文，作为下一个节点能否执行的条件。以一个简单业务场景为例，可实现如下配置的策略树。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013927&quot; data-ratio=&quot;0.5148842337375965&quot; src=&quot;https://oscimg.oschina.net/oscnet/4d28b33b-99b4-4bca-9a0f-c50d5e76606d.png&quot; data-type=&quot;png&quot; data-w=&quot;907&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_16&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;3.2.2 流程引擎的调度机制&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;流程引擎的调度是由前面的事件驱动服务来发起，这里针对于每个邀约规则抽象了一个邀约计划，即该邀约流程的有效期。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013926&quot; data-ratio=&quot;0.428&quot; src=&quot;https://oscimg.oschina.net/oscnet/e2b73647-4fd4-4d5d-8753-f73de78230fe.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_17&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;3.3 业务组件层沉淀&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;基于流程引擎中用的原子能力，这里抽象出了人群、频控、AB 实验、效果调控、推荐匹配、内容展示等。流程引擎可基于以上原子组件完成常见业务流程的定义。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;该架构设计支持快速接入新的业务场景。通过配置化方式，可以快速完成新业务的接入，无需大规模代码改动。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013925&quot; data-ratio=&quot;0.346&quot; src=&quot;https://oscimg.oschina.net/oscnet/d2527688-1cc6-4db4-bf27-2be38421e869.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_18&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;font-size: 20px;&quot;&gt;四、效果展现&lt;/span&gt;&lt;/h1&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;系统能力沉淀&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;相关业务已经全部完成平台化架构升级，并在此架构上持续运行和迭代&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;业务基础能力积累，包括人群、频控、AB 实验、效果调控、推荐匹配、内容展示等公共组件，每个组件内承接不同业务的不同规则。实现千人千面能力。&lt;/p&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;交付能力&amp;amp;质量&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;通过平台化架构和公共组件的应用，交付质量显著提升，减少了代码冗余和潜在的错误，提高了系统的稳定性和可靠性。&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;对比其他业务架构，邀约整体架构并行承接业务能力较强。大部分功能业务无需开发，包括效果调控、推荐匹配、事件触发等业务基本都是配置化。&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;在新业务接入中，Action 复用 80% 以上。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;span id=&quot;OSC_h1_19&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;font-size: 20px;&quot;&gt;五、总结与展望&lt;/span&gt;&lt;/h1&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;&quot;&gt;本文介绍了针对邀约业务，通过平台化设计在建设和实践中的思考与落地，为未来的业务拓展和创新奠定了坚实的基础。另一方面，我们也在逐步引入更多 AI 能力，通过大模型等技术解决招聘双方撮合过程中意向匹配、对话体验、招聘反馈等各个环节的问题，不断提升全流程的招聘体验，为更多的求职者找到合适的工作和帮助更多商家招到合适的人。&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - 58 技术（architects_58）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5359019/blog/15670585</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5359019/blog/15670585</guid>
            <pubDate>Mon, 09 Sep 2024 08:46:49 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>截至 2023 年底我国已有 60 余款生成式 AI 服务完成备案</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;据中国网信网消息，近日，国家互联网信息办公室发布《国家信息化发展报告 (2023 年)》(以下简称《报告》)。《报告》指出，我国生成式人工智能蓬勃发展，截至 2023 年底，已完成备案的生成式人工智能服务达 60 余款。&lt;/p&gt; 
&lt;p&gt;随着 ChatGPT 在全球范围内掀起生成式人工智能浪潮，2023 年我国互联网企业和研究机构纷纷加大研发应用的投入力度，人工智能大模型从研发环节「百模大战」到应用领域「百花齐放」，取得了显著成效。&lt;/p&gt; 
&lt;p&gt;百度、清华智谱、阿里巴巴、科大讯飞、百川智能、字节跳动等厂商相继发布大模型产品，并进行持续迭代更新，实现部分能力超越 ChatGPT，已在知识问答、医疗咨询、娱乐、视频生成等数十个行业场景领域，展现出广阔应用潜力。截至 2023 年底，已完成备案的生成式人工智能服务达 60 余款，「文心一言」「豆包」等大模型应用日均活跃用户已超过 100 万。&lt;/p&gt; 
&lt;p&gt;大模型开源有力带动产业创新发展，以百度云飞桨、阿里云魔搭社区为代表的开源社区建设成果初现，百川智能相继发布 Baichuan 系列模型，阿里巴巴开源通义千问系列模型，智谱 AI 开源 ChatGLM3 系列模型，昆仑万维开源大语言模型「天工」Skywork-13B 系列，并配套开源了 600GB、150BTokens 的开源中文数据集。大语言模型带来智能算力需求爆炸式增长，国内厂商积极研发用于训练、推理场景的算力芯片，性能不断提升。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311188</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311188</guid>
            <pubDate>Mon, 09 Sep 2024 08:27:49 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>