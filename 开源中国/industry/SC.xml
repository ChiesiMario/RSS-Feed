<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 28 Jul 2025 02:43:10 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>中国政府倡议成立世界人工智能合作组织</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;中国政府 26 日倡议成立世界人工智能合作组织，初步考虑总部设在上海。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img height="218" src="https://oscimg.oschina.net/oscnet/up-d0df9652b4e7e21e9148ac6f456ef0f67af.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;记者获悉，这是中方坚持践行多边主义、推动共商共建共享全球治理的重要举措，也是中方响应全球南方呼声、助力弥合数字和智能鸿沟、促进人工智能向善普惠发展的实际行动。中方期待世界人工智能合作组织作为重要的国际公共产品，实现以下目标：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;一是深化创新合作，释放智能红利。中方愿同各国分享中国式现代化带来的广阔机遇，将世界人工智能合作组织打造成供需对接平台，破除妨碍世界各国间生产要素流动的壁垒，促进中国同各国以及各国之间的人工智能务实合作，让人工智能的无限潜力充分释放，实现共同发展、共同繁荣。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;二是推动普惠发展，弥合智能鸿沟。中方将以世界人工智能合作组织为平台，持续推进落实「加强人工智能能力建设国际合作」联大决议和《人工智能能力建设普惠计划》，帮助全球南方国家加强能力建设、培育人工智能创新生态，确保发展中国家在智能化浪潮中平等受益，推动落实联合国 2030 年可持续发展议程。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;三是加强协同共治，确保智能向善。中方将依托世界人工智能合作组织，加强各国之间发展战略、治理规则、技术标准的对接协调，在充分尊重各国政策和实践差异性的基础上，逐步形成具有广泛共识的人工智能全球治理框架和标准规范，确保人工智能始终沿着人类文明进步的方向发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;中方倡议成立世界人工智能合作组织旨在加强人工智能领域的国际合作。中方初步考虑该组织总部设在上海，希望利用中国特别是上海人工智能先发优势，凝聚国际共识，促进务实合作，让人工智能真正造福全人类。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;中方将秉持共商共建共享的理念，同有意愿加入的国家共同探讨相关安排。包括尊重主权原则，坚持平等相待，支持各国结合自身国情开展人工智能合作。遵循联合国宪章宗旨和原则，支持联合国发挥人工智能治理主渠道作用，为联合国及其相关机构的努力提供有益补充。采取开放包容的态度，践行真正的多边主义，通过世界人工智能合作组织进一步凝聚共识、促进合作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;中方热忱欢迎有诚意、有意愿的国家积极参与世界人工智能合作组织的筹备工作，共同推进人工智能全球治理和国际合作。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362669</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362669</guid>
      <pubDate>Mon, 28 Jul 2025 02:37:07 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>基于模型蒸馏的大模型文案生成最佳实践</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;h2&gt;背景&lt;/h2&gt; 
&lt;p&gt;大语言模型在生成高质量文案方面表现优异，然而其巨大的计算资源消耗和存储需求，使得实际应用尤其是在资源受限场景中的应用充满挑战。企业在寻求高效的文案生成时，常常面临着在性能和资源之间权衡的困境。在这种背景下，模型蒸馏技术为解决这一问题提供了新的思路。模型蒸馏是一种优化技术，旨在通过将知识从大型复杂模型中提取并转移到更小、计算更高效的模型中，使得这些小型模型能够在保留大多数性能优势的情况下显著降低资源需求。这一技术在大模型文案生成领域的应用，不仅能够保持生成质量接近原有大模型，还极大地减少了计算成本和部署难度。本文介绍如何使用 EasyDistill 算法框架以及 PAI 产品，实现基于模型蒸馏的大模型文案生成，通过这种方式节省人力成本，同时提高用户体验，推动业务的可持续增长。&lt;/p&gt; 
&lt;h2&gt;部署教师大语言模型&lt;/h2&gt; 
&lt;h3&gt;部署模型服务&lt;/h3&gt; 
&lt;p&gt;您可以按照以下操作步骤，部署教师大语言模型生成对应回复。&lt;/p&gt; 
&lt;p&gt;在 PAI-Model Gallery 选择 DeepSeek-V3 模型或者其他教师大模型，在模型部署区域，系统已默认配置了模型服务信息和资源部署信息，您也可以根据需要进行修改，参数配置完成后单击部署按钮。以 DeepSeek-V3 为例，其模型卡片如下所示：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-28df44d9861762bd4497b14e096e764f133.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;模型部署和调用&lt;/h3&gt; 
&lt;p&gt;PAI 提供的 DeepSeek-V3 预置了模型的部署配置信息，可以选择 SGLang 部署/vLLM 部署/Transformers 部署，用户仅需提供推理服务的名称以及部署配置使用的资源信息即可将模型部署到 PAI-EAS 推理服务平台。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-cd9de19c221b06b8a1068309ddcb1fd7c0e.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;推理服务同样支持以 OpenAI API 兼容的方式调用，调用示例如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;from openai import OpenAI

##### API 配置 #####
openai_api_key = "&amp;lt;EAS API KEY&amp;gt;"
openai_api_base = "&amp;lt;EAS API Endpoint&amp;gt;/v1"

client = OpenAI(
    api_key=openai_api_key,
    base_url=openai_api_base,
)

models = client.models.list()
model = models.data[0].id
print(model)

def main():
    stream = True
    chat_completion = client.chat.completions.create(
        messages=[
            {
                "role": "user",
                "content": [
                    {
                        "type": "text",
                        "text": "你好，介绍一下你自己，越详细越好。",
                    }
                ],
            }
        ],
        model=model,
        max_completion_tokens=1024,
        stream=stream,
    )
    if stream:
        for chunk in chat_completion:
            print(chunk.choices[0].delta.content, end="")
    else:
        result = chat_completion.choices[0].message.content
        print(result)


if __name__ == "__main__":
    main()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;更多细节可以参考"一键部署 DeepSeek-V3、DeepSeek-R1 模型"。&lt;/p&gt; 
&lt;h2&gt;构建训练数据&lt;/h2&gt; 
&lt;h3&gt;构建 SFT 训练数据&lt;/h3&gt; 
&lt;p&gt;您可以按照以下操作步骤，构建 SFT 训练数据。用户可以根据如下输入数据批量调用教师大模型，输入数据格式如下所示：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[
  {
    "instruction": "xxx"
  },
  {
    "instruction": "xxx"
  },
  {
    "instruction": "xxx"
  }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其中，instruction 为调用大模型的 prompt，由任务模版和实际输入数据组成。这里，我们给出一个任务模版供您参考，实际内容可以根据业务场景和数据特征进行调整：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;你是短视频文案生成专家，专注于根据视频原始标题、视频内容，生成文案的标题和内容。
你的任务是确保文案与视频核心内容高度匹配，并且吸引用户点击。

要求
1: 信息匹配度：确保文案准确反映视频核心看点，禁止出现视频中未呈现的虚构内容。
2. 情绪契合度：文案情绪需与视频内容保持一致。严肃悲伤类内容不要使用搞笑戏谑风格。
3. 内容规范度：确保句意表达清晰、完整、通顺、连贯，没有出现无意义字符。
4. 严格按照 JSON 格式输出：
{
   "title": "",
   "body": ""
}

避免出现情况
1. 标题要求在 10 个汉字以内。
2. 内容要求在 30 个汉字以内。
3. 禁止标题党，和过度夸张的表述。
4. 不得出现高敏感内容，或者低俗用语。

请严格按照 JSON 格式输出内容，不要在输出中加入解析和说明等其他内容。

视频原始标题和视频内容分别如下所示：
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;给定上述输入数据，我们可以批量调用教师大模型生成回复，示例代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import json
from openai import OpenAI

##### API 配置 #####
openai_api_key = "&amp;lt;EAS API KEY&amp;gt;"
openai_api_base = "&amp;lt;EAS API Endpoint&amp;gt;/v1"

client = OpenAI(
    api_key=openai_api_key,
    base_url=openai_api_base,
)

# 获取模型
models = client.models.list()
model = models.data[0].id
print(model)

# 读取输入数据
def read_input_data(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        return json.load(file)

# 调用大模型获取输出
def get_model_output(instruction):
    chat_completion = client.chat.completions.create(
        messages=[
            {
                "role": "user",
                "content": [
                    {
                        "type": "text",
                        "text": instruction,
                    }
                ],
            }
        ],
        model=model,
        max_completion_tokens=1024,
        stream=False,
    )
    return chat_completion.choices[0].message.content

# 处理输入数据并生成输出
def process_data(input_data):
    results = []
    for item in input_data:
        instruction = item.get("instruction")
        output = get_model_output(instruction)
        results.append({
            "instruction": instruction,
            "output": output
        })
    return results

# 保存输出数据到文件
def save_output_data(file_path, data):
    with open(file_path, 'w', encoding='utf-8') as file:
        json.dump(data, file, ensure_ascii=False, indent=2)

def main(input_file_path, output_file_path):
    input_data = read_input_data(input_file_path)
    output_data = process_data(input_data)
    save_output_data(output_file_path, output_data)
    print("Data processing complete.")

if __name__ == "__main__":
    # 指定你的输入和输出文件路径
    input_file_path = "input.json"
    output_file_path = "output.json"
    main(input_file_path, output_file_path)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;当运行完上述代码后，我们得到构造好的 SFT 训练数据，格式如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[
  {
    "instruction": "xxx",
    "output": "xxx"
  },
  {
    "instruction": "xxx",
    "output": "xxx"
  },
  {
    "instruction": "xxx",
    "output": "xxx"
  }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;为了保证 SFT 训练数据集的高质量，我们建议采用如下设置：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;训练数据量至少应在 3000 条以上，而且需要尽可能覆盖输入视频的各种主题；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;生成文案的任务模版可以按照实际业务需求进行修改，需要根据明确的业务需求，用自然语言精确描述生成的文案要求达到的效果和避免出现的情况；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为了保证生成文案的高质量，使用的教师大模型底座参数量需要尽可能高，例如使用满血版的 DeepSeek-V3，一般不需要使用深度思考的模型，例如 DeepSeek-R1 或 QwQ-32B；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在输入中，视频的内容可以通过 OCR、ASR 等多种途径从原始视频中抽取出来，需要保证抽取出来的内容具有较高的准确性；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;建议在生成 SFT 训练数据集后人工抽样进行质量校验，并且根据校验结果，反复调整调用大模型的任务模版，以达到满意的效果。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;构建 DPO 训练数据&lt;/h2&gt; 
&lt;p&gt;如果您需要通过 DPO 算法继续优化较小的学生模型，则需要构造用于 DPO 算法训练的数据集。我们可以基于构造好的 SFT 训练数据进行继续构造流程。其中，DPO 数据格式示例如下所示：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[
  {
    "prompt": "xxx",
    "chosen": "xxx",
    "rejected": "xxx"
  },
  {
    "prompt": "xxx",
    "chosen": "xxx",
    "rejected": "xxx"
  },
  {
    "prompt": "xxx",
    "chosen": "xxx",
    "rejected": "xxx"
  }
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其中，prompt 对应 SFT 训练数据集的 instruction，chosen 可以使用 SFT 训练数据集的 output 字段，rejected 为 DPO 算法中提供的低质量文案。在 DPO 算法的训练过程中，我们鼓励大模型生成高质量的 chosen 文案，惩罚大模型生成类似 rejected 的文案。因此，我们需要额外生成 rejected 文案。我们可以同样采用教师大模型生成 rejected 文案，利用 SFT 训练数据集作为输入，我们需要改变上文使用的任务模版。这里我们给出一个示例供您参考：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;你是视频文案生成初学者，尝试根据视频原始标题、视频内容生成不够吸引人的文案标题和内容。
目标是生成逻辑不清、可能误导、不够吸引用户点击的文案。

要求
1. 信息匹配度：不要求准确反映视频核心看点，甚至可以与视频内容无关。
2. 情绪契合度：文案情绪可以与视频内容不一致。
3. 内容规范度：表达可以不清晰、不完整、不通顺、不连贯，可以出现无意义字符。
4. 可不用严格按照 JSON 格式输出。

视频原始标题和视频内容分别如下所示：
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;我们同样给出一个批量推理的脚本，生成上述数据，我们假设输入数据格式与 SFT 训练数据集相同，但是 instruction 字段采用上文生成低质量文案的任务模版：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import json
from openai import OpenAI

##### API 配置 #####
openai_api_key = "&amp;lt;EAS API KEY&amp;gt;"
openai_api_base = "&amp;lt;EAS API Endpoint&amp;gt;/v1"

client = OpenAI(
    api_key=openai_api_key,
    base_url=openai_api_base,
)

# 获取模型
models = client.models.list()
model = models.data[0].id
print(model)

# 读取输入数据
def read_input_data(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        return json.load(file)

# 调用大模型获取低质量文案
def get_rejected_output(instruction):
    chat_completion = client.chat.completions.create(
        messages=[
            {
                "role": "user",
                "content": [
                    {
                        "type": "text",
                        "text": instruction,
                    }
                ],
            }
        ],
        model=model,
        max_completion_tokens=1024,
        stream=False,
    )
    return chat_completion.choices[0].message.content

# 处理输入数据并生成输出
def process_data(input_data):
    results = []
    for item in input_data:
        instruction = item.get("instruction")
        chosen = item.get("output")
        rejected = get_rejected_output(instruction)
        results.append({
            "prompt": instruction,
            "chosen": chosen,
            "rejected": rejected
        })
    return results

# 保存输出数据到文件
def save_output_data(file_path, data):
    with open(file_path, 'w', encoding='utf-8') as file:
        json.dump([data], file, ensure_ascii=False, indent=2)

def main(input_file_path, output_file_path):
    input_data = read_input_data(input_file_path)
    output_data = process_data(input_data)
    save_output_data(output_file_path, output_data)
    print("Data processing complete.")

if __name__ == "__main__":
    # 指定你的输入和输出文件路径
    input_file_path = "input.json"
    output_file_path = "output.json"
    main(input_file_path, output_file_path)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;为了保证 DPO 训练数据集的高质量，我们建议采用如下设置：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;训练数据量至少应在 1000 条以上，而且需要尽可能覆盖输入视频的各种主题；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;生成 rejected 文案的任务模版可以按照实际业务需求进行修改，需要和 chosen 文案在质量上有明显的差距，特别可以注重生成 chosen 文案中避免出现的情况（即负向样本）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为了保证生成文案质量满足要求，使用的教师大模型底座参数量需要尽可能高，例如使用满血版的 DeepSeek-V3，一般不需要使用深度思考的模型，例如 DeepSeek-R1 或 QwQ-32B；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在输入中，视频的内容可以通过 OCR、ASR 等多种途径从原始视频中抽取出来，需要保证抽取出来的内容具有较高的准确性；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;建议在生成 DPO 训练数据集后人工抽样进行质量校验，并且根据校验结果，反复调整调用大模型的任务模版，以达到满意的效果。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;通过 SFT 算法蒸馏训练较小的学生模型&lt;/h2&gt; 
&lt;p&gt;接下来我们使用 EasyDistill 算法框架，利用准备好的训练数据，训练学生模型。在 PAI-DSW 中，根据"&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1664823" title="阿里云人工智能平台 PAI 开源 EasyDistill 框架助力大语言模型轻松瘦身" target="_blank"&gt;阿里云人工智能平台 PAI 开源 EasyDistill 框架助力大语言模型轻松瘦身&lt;/a&gt;"一文安装 EasyDistill 算法包后使用如下命令进行 SFT 模型训练：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python easydistill/kd/train.py --config=sft.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其中，sft.json 为 SFT 蒸馏训练的配置文件，示例如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
  "job_type": "kd_black_box_api",
  "dataset": {
    "labeled_path": "sft_train.json",
    "template" : "chat_template_kd.jinja",
    "seed": 42
  },
  "models": {
    "student": "model/Qwen/Qwen2.5-0.5B-Instruct/"
  },
  "training": {
    "output_dir": "result_sft/",
    "num_train_epochs": 3,
    "per_device_train_batch_size": 1,
    "gradient_accumulation_steps": 8,
    "save_steps": 1000,
    "logging_steps": 1,
    "learning_rate": 2e-5,
    "weight_decay": 0.05,
    "warmup_ratio": 0.1,
    "lr_scheduler_type": "cosine"
  }
} 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其中，sft_train.json 为 SFT 训练数据集，model/Qwen/Qwen2.5-0.5B-Instruct/为学生模型路径，这里以 Qwen2.5-0.5B-Instruct 为示例，result_sft/为模型输出路径。您可以根据实际需要，在 training 字段中调整训练使用的超参数。&lt;/p&gt; 
&lt;h2&gt;通过 DPO 算法继续优化较小的学生模型&lt;/h2&gt; 
&lt;p&gt;由于 SFT 训练过程中提供给学生模型唯一的正确答案，因此这种训练存在两个限制条件：一为模型的泛化能力有限，二为缺乏更加细粒度的模型对齐。DPO 算法通过提供 chosen 和 rejected 的模型回复，进一步提升模型的对齐能力。根据准备好的 DPO 训练数据，我们在 SFT 训练完的模型 Checkpoint 基础上，使用 EasyDistill 的如下命令，进行 DPO 模型训练：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python easydistill/rank/train.py --config=dpo.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其中，dpo.json 为 DPO 蒸馏训练的配置文件，示例如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-{"&gt;  "job_type": "rank_dpo_api",
  "dataset": {
    "labeled_path": "dpo_train.json",
    "template" : "chat_template_kd.jinja",
    "seed": 42
  },
  "models": {
    "student": "result_sft/"
  },
  "training": {
    "output_dir": "result_dpo/",
    "num_train_epochs": 3,
    "per_device_train_batch_size": 1,
    "gradient_accumulation_steps": 8,
    "save_steps": 1000,
    "logging_steps": 1,
    "beta": 0.1,
    "learning_rate": 2e-5,
    "weight_decay": 0.05,
    "warmup_ratio": 0.1,
    "lr_scheduler_type": "cosine"
  }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其中，dpo_train.json 为 SFT 训练数据集，result_sft/为 SFT 训练之后的学生模型路径，result_dpo/为模型输出路径。您可以根据实际需要，在 training 字段中调整训练使用的超参数。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5583868/blog/18685835</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5583868/blog/18685835</guid>
      <pubDate>Mon, 28 Jul 2025 02:25:07 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>字节跳动 AI Agent 平台扣子拥抱开源</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;字节跳动旗下 AI Agent 开发平台扣子（Coze）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6jGoaE29S2oOrywCAB8zMg" target="_blank"&gt;宣布&lt;/a&gt;正式拥抱开源。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;扣子旗下共有四款子产品：「扣子空间」、「扣子开发平台」、「扣子罗盘」 及 Eino。目前，扣子开发平台 （Coze Studio）与扣子罗盘 （Coze Loop）已在 Apache 2.0 许可证下开源。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="214" src="https://oscimg.oschina.net/oscnet/up-7117b00b0aec66eedb8cac42206d8cab2fa.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Coze Studio 是一个一站式的 AI Agent 可视化开发工具，此次开源的核心功能包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;完整的工作流（Workflow）引擎：只需拖拽节点，就能轻松编排出复杂的业务逻辑。无论是简单的问答机器人，还是需要执行多步任务的 Agent，都能轻松实现。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;插件（Plugin）核心框架：开放了插件的定义、调用与管理机制。你可以便捷地将任何第三方 API 或私有能力封装成插件，无限扩展 Agent 的能力边界。还提供了官方开源插件作为参考，让用户立刻上手。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;开箱即用的开发环境： 你只需一键部署，即可获得一个功能完备的 Agent 开发平台，包括创建、调试、版本管理等全套界面，让你专注于创造本身。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Coze Loop 聚焦于 Agent 从开发到运维的全链路管理，此次开源的核心功能包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Prompt 开发： 提供从编写、调试、一键优化到版本管理的强大能力，让你的 Prompt 工程化、系统化。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;多维度评测：AI 的效果好坏不再凭感觉。Coze Loop 提供系统化的评测能力，能从准确性、简洁性、合规性等多个维度，自动化地评估 Prompt 和 Agent 的输出质量。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;全链路可观测性：Agent 的每一次执行过程都尽在掌握。提供覆盖全过程的可视化观测能力，详细记录每个环节的处理细节与状态，让 Debug 不再是大海捞针。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362658</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362658</guid>
      <pubDate>Mon, 28 Jul 2025 02:11:07 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>我国大模型数量超 1500 个</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;世界人工智能大会的最新数据显示，目前全球已发布的大模型总数达 3755 个，其中中国企业贡献了 1509 个，位居全球首位。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="1124" src="https://oscimg.oschina.net/oscnet/up-76a22434fb01383b49199810b0ee2c20962.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;从中国互联网络信息中心发布的第 56 次报告中可以看出，2025 年上半年，我国的生成式人工智能在技术与应用层面均取得了全面进步，相关产品的数量也在快速增长，应用场景不断扩展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在用户方面，截至 6 月，使用生成式人工智能产品回答问题的比例高达 80.9%。从产业层面来看，预计到 2024 年，我国的人工智能产业规模将突破 7000 亿元，并且连续多年保持 20% 以上的增长率。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362654</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362654</guid>
      <pubDate>Mon, 28 Jul 2025 02:01:07 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软即将发布 Visual Studio 重大升级，应对 AI 编程工具激烈竞争</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;尽管微软向客户提供了 Visual Studio Code 这款轻量级但功能强大的开源代码编辑器，但其旗舰开发环境实际上是原生版 Visual Studio。这是一个功能齐全的集成开发环境 (IDE)，具有 .NET 集成和其他功能，使其更适合复杂的项目管理。现在，一份新报告显示，微软正计划对 Visual Studio 进行重大升级。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0725/194445_SAV6_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;媒体&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.businessinsider.com%2Fmicrosoft-plans-major-update-visual-studio-coding-service-ai-2025-7" target="_blank"&gt;Business Insider&lt;/a&gt;&amp;nbsp;看到了一份微软内部备忘录，其中详细介绍了该公司计划发布 Visual Studio 的重大升级。不出所料，此次更新将重点关注人工智能 (AI)，这对于与亚马逊 Kiro 等其他竞争对手竞争至关重要，亚马逊 Kiro 被誉为基于 AI 的 IDE。&lt;/p&gt; 
&lt;p&gt;这份备忘录由杰伊·帕里克（Jay Parikh）于今年 4 月撰写，他加入微软不到一年，担任执行副总裁（EVP）。帕里克领导着公司的 CoreAI 部门，该部门负责开发人员工具，因此 Visual Studio 恰好属于这位高管的职责范围。&lt;/p&gt; 
&lt;p&gt;Parikh 的备忘录将这次主要版本称为「Visual Studio 18」，考虑到 Visual Studio 目前使用的是 17 版，这颇具趣味。该 IDE 上个月发布了更新，允许开发人员访问更强大的 AI 模型，同时灵活地管理计费。值得注意的是，Visual Studio 的上一次重大更新是在 2021 年，当时微软发布了 Visual Studio 2022 和 .NET 6，因此再次发布主要版本也是合情合理的。&lt;/p&gt; 
&lt;p&gt;话虽如此，虽然 Visual Studio 的下一次重大升级有可能在今年推出，但目前尚未公布具体的时间表。备忘录还指出，这个由人工智能驱动的 IDE 版本目前正处于「早期内部测试」阶段，这意味着微软自己的员工正在积极地使用它进行测试。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362407</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362407</guid>
      <pubDate>Fri, 25 Jul 2025 11:44:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌短链接服务「goo.gl」将于下个月正式停用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Google 将于下个月正式弃用其网址缩短工具生成的链接。自 2025 年 8 月 25 日起，所有「&lt;span style="color:#2980b9"&gt;&lt;em&gt;https://goo.gl/*&lt;/em&gt;&lt;/span&gt;」格式的链接将不再有效，并返回 404 错误信息。&lt;/p&gt; 
&lt;p&gt;Google 于 2019 年关闭了其网址缩短服务，理由是「我们发现人们在互联网上查找内容的方式发生了变化」。此后，使用该工具创建的链接仍然有效，但 Google 去年宣布，随着缩短网址流量的下降，将开始弃用这些服务。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3de2e977a212c4b76a27a10e76c003b1a75.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Google 在其&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevelopers.googleblog.com%2Fen%2Fgoogle-url-shortener-links-will-no-longer-be-available%2F" target="_blank"&gt;2024 年 7 月的博客文章&lt;/a&gt;中表示：「事实上，超过 99% 的缩短网址在过去一个月内没有任何活动。」&lt;/p&gt; 
&lt;p&gt;当时，Google 还开始在用户点击缩短的网址时显示一个警告页面，提示「此链接近期将不再有效」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0bd067dfa47ef36f85743afb32cf6824b04.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;距离「goo.gl」链接关闭仅剩一个月时间，如果您还没有将网址转换到其他缩短服务，现在正是转换的好时机。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362402</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362402</guid>
      <pubDate>Fri, 25 Jul 2025 11:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>RWKV7-G0 7.2B 发布，最强纯 RNN 推理模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;2025 年 7 月 22 日， &lt;strong&gt;RWKV7-G0 7.2B 推理模型&lt;/strong&gt;（Reasoning Model）正式开源发布，它很可能是迄今为止人类训练过的最强纯 RNN 语言模型。&lt;/p&gt; 
&lt;p&gt;RWKV7-G0 7.2B 是在 RWKV6-World-V3-7.6B 的基础上训练 2T tokens 的纯预训练模型，但在预训练加入了大量指令/对话/推理数据，可以解决各种推理问题。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果需要后训练和对齐，最适合 RNN 的方式是 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fadvanced%2FFine-Tune%2FRWKV-PEFT%2FState-Tuning" target="_blank"&gt;state-tuning&lt;/a&gt;，直接微调 RNN 的初始状态，相当于终极 context engineering。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;模型客观指标评测&lt;/h2&gt; 
&lt;h3&gt;英语和多语言能力&lt;/h3&gt; 
&lt;p&gt;RWKV7-G0 7.2B 的基础英语和多语言能力&lt;strong&gt;均强于同规模的开源模型&lt;/strong&gt;：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="eval" src="https://oscimg.oschina.net/oscnet/up-3961b82f0302bbedafaae3e26ce721fe159.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;得益于架构和数据的提升，RWKV7-G0 7.2B 的 MMLU 准确度为 62.7%，显著超过 RWKV6-World-V3-7.6B 的 54.2%。后续我们会发布训练 8T tokens 的满血 RWKV7-G1 7.2B，目标是 MMLU 达到 70%，看齐前沿模型。&lt;/p&gt; 
&lt;h3&gt;无法作弊的评测&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FJellyfish042%2FUncheatableEval" target="_blank"&gt;Uncheatable Eval&lt;/a&gt; 是"无法作弊的评测"，它使用最新的论文和新闻文章等实时数据，评估开源大语言模型的真实建模能力和泛化能力。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RWKV7-G0 7.2B 的 Uncheatable Eval 同样显著提升，满血 8T tokens 预计超越 Llama3 8B（这里测试 2024-07 数据，后续会测新数据，并对比 Qwen2.5、Qwen3）：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="uncheatable-eval" src="https://oscimg.oschina.net/oscnet/up-00ee915e6a6642e230984bbad95c7adda04.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;模型实战：解数学题&lt;/h2&gt; 
&lt;p&gt;我们发现，RWKV7-G0 7.2B 解数学题可使用 &lt;code&gt;temperature top_p penalty&lt;/code&gt; 解码参数都为 0 的纯贪心解码，且无限复读现象较少。&lt;/p&gt; 
&lt;p&gt;但贪心解码会导致推理过程探索度不足，因此可引入随机性，例如 &lt;code&gt;temperature=0.3 top_p=0.3 penalty=0&lt;/code&gt;。模型会自动进行多轮验算（类似 rollout），并可以自我纠错。&lt;/p&gt; 
&lt;p&gt;那么 &lt;code&gt;temperature=0.6 top_p=0.6 penalty=0&lt;/code&gt; 等随机性更高的参数是否更好，后续我们会通过参数扫描实验评估。&lt;/p&gt; 
&lt;p&gt;例子，第一题：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math1" src="https://oscimg.oschina.net/oscnet/up-0cd8d78f631ee7405c4bbca2340892aa1c6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;修改题目表述，模型换了种做法：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math2" src="https://oscimg.oschina.net/oscnet/up-dc97d5561c78acbb5117c3b214de082e7da.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第二题，故意将原题的 99 改为 99.1，模型一开始看错，后来成功纠正了自己：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math3" src="https://oscimg.oschina.net/oscnet/up-e607d6ca88eb49ab4caf0e417262eb39b2b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第三题，原题是计算 1 的幂，改为计算 i 的幂，增加难度：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math4" src="https://oscimg.oschina.net/oscnet/up-8d5d4f106fec7c3c72836c057b1de89bddd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第四题，原题是 2^8 = 4^x，改为 8^x 增加难度：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math5" src="https://oscimg.oschina.net/oscnet/up-4d801cfa9f331b3dca71d086a3c05004e6c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第五题，原题的概率是 1/5，改为 1/4 测试模型：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math6" src="https://oscimg.oschina.net/oscnet/up-39c45f49e2a398f59a7dc87fde27cf46756.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第六题，原题是 one hat，改为 two hat（故意不加 s 复数形式）测试模型：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math7" src="https://oscimg.oschina.net/oscnet/up-2d56afb40928ffd13d17308fc41c6e56369.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第七题，模型有点懵，但反复验算多次后，成功确认了正确答案：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math8" src="https://oscimg.oschina.net/oscnet/up-7730c44785334a3421428c0e7dd153ed6ae.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;结论：【纯 RNN + 纯预训练】可以得到推理模型，而且它理解了一些解题方法，可以用不同方法解决修改过的题目。&lt;/p&gt; 
&lt;h2&gt;模型实战：写代码&lt;/h2&gt; 
&lt;p&gt;在此我们测试用户喜闻乐见的图像输出。生成一个有一只猫的 SVG 的网页：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="code" src="https://oscimg.oschina.net/oscnet/up-06f4dbd1a7c9e178ed8408f93d7bb939c4d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;用 Three.js 创建一个旋转的 3D 红色立方体（完整代码在文末的附录中）：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="code-1" src="https://oscimg.oschina.net/oscnet/up-5965c8a859ccc3bcc7f9db0d86caeb5f612.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;考虑到这是【纯 RNN + 纯预训练 + 只训练 2T tokens】，表现合理。后续更多数据的满血版会显著更强。&lt;/p&gt; 
&lt;h2&gt;RNN 的抗干扰能力&lt;/h2&gt; 
&lt;p&gt;最新论文 &lt;code&gt;Inverse Scaling in Test-Time Compute&lt;/code&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.14417%25EF%25BC%2589%25E5%258F%2591%25E7%258E%25B0%25E5%2589%258D%25E6%25B2%25BF%25E6%25A8%25A1%25E5%259E%258B%25E5%259C%25A8%25E2%2580%259C%25E6%2581%25B6%25E6%2584%258F%25E9%2597%25AE%25E9%25A2%2598%25E2%2580%259D%25EF%25BC%2588%25E4%25BE%258B%25E5%25A6%2582%25E5%25B8%25A6%25E5%25B9%25B2%25E6%2589%25B0%25E9%25A1%25B9%25E7%259A%2584%25E8%25AE%25A1%25E6%2595%25B0%25E3%2580%2581%25E5%25B8%25A6%25E8%2599%259A%25E5%2581%2587%25E7%2589%25B9%25E5%25BE%2581%25E7%259A%2584%25E5%259B%259E%25E5%25BD%2592%25E9%25A2%2584%25E6%25B5%258B%25EF%25BC%258C%25E7%25AD%2589%25E7%25AD%2589%25EF%25BC%2589%25E4%25BC%259A%25E5%2587%25BA%25E7%258E%25B0%25E8%25B6%258A%25E6%2583%25B3%25E8%25B6%258A%25E5%25B7%25AE%25E7%259A%2584%25E6%2583%2585%25E5%2586%25B5%25EF%25BC%259A" target="_blank"&gt;https://arxiv.org/abs/2507.14417）发现前沿模型在「恶意问题」（例如带干扰项的计数、带虚假特征的回归预测，等等）会出现越想越差的情况：&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Inverse Scaling in Test-Time Compute" src="https://oscimg.oschina.net/oscnet/up-6ae323b74fd47a196c5d2c1f9fa0e6eba61.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;我们发现 RWKV7-G0 7.2B 可以克服干扰，得到正确答案：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Test-Time-Compute-test" src="https://oscimg.oschina.net/oscnet/up-ae61d209ca82eea02e344618caff2afca92.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;继续测试：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Test-Time-Compute-test-1" src="https://oscimg.oschina.net/oscnet/up-514174dd1deab6244d08e752e541b0fd36e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;修改数字再测试：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Test-Time-Compute-test-2" src="https://oscimg.oschina.net/oscnet/up-203991398541247ca9e64b89fa8da85280d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;可见 attention 会导致 transformer 更易受前文干扰，而 RNN 在此有优势。而且 RNN 的思考过程永远匀速，不会越想越慢。我们未来训练更大的 RNN 会更有趣。&lt;/p&gt; 
&lt;h2&gt;模型下载&lt;/h2&gt; 
&lt;p&gt;下载 RWKV7-G0 7.2B 模型：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hugging Face：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FBlinkDL%2Frwkv7-g1%2Ftree%2Fmain" target="_blank"&gt;https://huggingface.co/BlinkDL/rwkv7-g1/tree/main&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;魔搭社区：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Fmodels%2FRWKV%2Frwkv7-g1%2Ffiles" target="_blank"&gt;https://modelscope.cn/models/RWKV/rwkv7-g1/files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WiseModel：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwisemodel.cn%2Fmodels%2Frwkv4fun%2FRWKV-7-G1%2Ffile" target="_blank"&gt;https://wisemodel.cn/models/rwkv4fun/RWKV-7-G1/file&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;如何使用 RWKV 模型&lt;/h2&gt; 
&lt;h3&gt;在线 demo（续写模式）&lt;/h3&gt; 
&lt;p&gt;可以在 RWKV 官方 Gradio 中试用 RWKV7-G0 7.2B 模型（为避免排队，这里限制了输入和输出长度）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FBlinkDL%2FRWKV-Gradio-2" target="_blank"&gt;https://huggingface.co/spaces/BlinkDL/RWKV-Gradio-2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Hugging Face Gradio 是续写模式，使用时需要遵循 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fbasic%2FPrompt-Format" target="_blank"&gt;RWKV 的 prompt 格式&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RWKV7-G0 7.2B &lt;strong&gt;不思考模式&lt;/strong&gt;的 QA prompt 格式：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;User: 我可以抽干太平洋的水然后下去抓鱼吗？

Assistant:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如需开启&lt;strong&gt;思考模式&lt;/strong&gt;，可在 QA prompt 的基础上添加 &lt;code&gt;&amp;lt;think&amp;gt;&lt;/code&gt; 标签：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;User: 我可以抽干太平洋的水然后下去抓鱼吗？

Assistant: &amp;lt;think&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;本地部署 RWKV 模型&lt;/h3&gt; 
&lt;p&gt;可以使用 RWKV Runner、Ai00、RWKV pip 等推理工具本地部署 RWKV 模型。&lt;/p&gt; 
&lt;p&gt;此外，RWKV 模型也适配了 llama.cpp、ollama 等热门的模型推理工具。&lt;/p&gt; 
&lt;p&gt;由于 RWKV7-G0 7.2B 是新模型，目前建议使用 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fintermediate%2FRWKV-Runner%2FIntroduction" target="_blank"&gt;RWKV Runner&lt;/a&gt; 以保证得到正确结果。&lt;/p&gt; 
&lt;p&gt;可以在 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fintermediate" target="_blank"&gt;RWKV 官网 - 模型推理教程&lt;/a&gt;中查看上述推理工具的使用教程。&lt;/p&gt; 
&lt;h2&gt;未来训练计划&lt;/h2&gt; 
&lt;p&gt;我们也正在训练 RWKV7-G0 13.3B 模型，以及使用更多 tokens、使用 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FYl79XfbMCO6ecAdKGzboRg" target="_blank"&gt;DeepEmbed&lt;/a&gt; 和 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F3q1cldAEsk1576SLK24CTw" target="_blank"&gt;DEA&lt;/a&gt; 技术的 RWKV-7s 模型。&lt;/p&gt; 
&lt;h2&gt;加入 RWKV 社区&lt;/h2&gt; 
&lt;p&gt;欢迎大家加入 RWKV 社区，可以从 RWKV 中文官网了解 RWKV 模型，也可以加入 RWKV 论坛、QQ 频道和 QQ 群聊，一起探讨 RWKV 模型。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&amp;nbsp;RWKV 中文文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rwkv.cn" target="_blank"&gt;https://www.rwkv.cn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&amp;nbsp;RWKV 论坛：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.rwkv.cn%2F" target="_blank"&gt;https://community.rwkv.cn/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&amp;nbsp;QQ 频道：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpd.qq.com%2Fs%2F9n21eravc" target="_blank"&gt;https://pd.qq.com/s/9n21eravc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&amp;nbsp;BiliBili 视频教程：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546689096910933" target="_blank"&gt;https://space.bilibili.com/3546689096910933&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;欢迎大家基于 RWKV-7 进行创业、科研，我们也会为基于 RWKV 的项目提供技术支持。&lt;/p&gt; 
 &lt;p&gt;如果您的团队正在基于 RWKV 创业或开展研究，请联系我们！（在「RWKV 元始智能」微信公众号留言您的联系方式，或发送邮件到「contact@rwkvos.com」。）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;附录：旋转的红色立方体&lt;/h2&gt; 
&lt;p&gt;将以下代码保存为 &lt;code&gt;3d.html&lt;/code&gt; 并双击运行。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Rotating Red Box&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
        body {
            margin: 0;
            overflow: hidden;
        }
        canvas {
            display: block;
            width: 100%;
            height: 100%;
        }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
        // Create scene
        const scene = new THREE.Scene();
        
        // Create camera
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.z = 5;
        
        // Create renderer
        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);
        // Create box geometry and material
        const geometry = new THREE.BoxGeometry(1, 1, 1);
        const material = new THREE.MeshBasicMaterial({ color: 0xff0000 }); // Red color
        
        // Create box mesh
        const box = new THREE.Mesh(geometry, material);
        
        // Add lighting
        const light = new THREE.DirectionalLight(0xffffff, 1);
        light.position.set(0, 0, 10);
        scene.add(light);
        
        // Add box to scene
        scene.add(box);
        
        // Animation loop
        let angleX = 0;
        let angleY = 0;
        
        function animate() {
            requestAnimationFrame(animate);
            
            // Update rotation angles
            angleX += 0.01;
            angleY += 0.01;
            
            // Update box rotation
            box.rotation.x = angleX;
            box.rotation.y = angleY;
            
            // Render scene
            renderer.render(scene, camera);
        }
        
        animate();
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362400</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362400</guid>
      <pubDate>Fri, 25 Jul 2025 10:54:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>谷歌 DeepMind 新架构 MoR 有望成为「Transformer 杀手」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌 DeepMind 团队发表论文《Mixture-of-Recursions: Learning Dynamic Recursive Depths for Adaptive Token-Level Computation》，&lt;strong&gt;提出新 Transformer 架构 Mixture-of-Recursions（MoR）&lt;/strong&gt;，旨在同时实现参数共享和自适应计算，以解决大型语言模型训练和部署中的计算与内存开销问题。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-17000d1f4f6bc815b75098237c70778d99f.png" referrerpolicy="no-referrer"&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c76175988abdc82ca877e5b51ccc663dba8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://arxiv.org/abs/2507.10524&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;MoR 的核心创新包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;参数效率&lt;/strong&gt;：通过共享层堆栈在不同递归步骤中复用参数，减少参数量。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;动态计算&lt;/strong&gt;：轻量级路由器为每个 token 动态分配递归深度，复杂 token 可深入处理，简单 token 可提前退出，从而将计算资源精准分配 。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;内存优化&lt;/strong&gt;：采用递归级键值（KV）缓存机制，仅缓存活跃 token 的 KV 对，显著降低内存带宽压力并提升推理吞吐量 。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;实验结果显示，在 135M 到 1.7B 参数规模的模型中，MoR 在相同训练计算量下，验证困惑度更低、少样本准确率更高，推理吞吐量相比传统 Transformer 和现有递归基线提升至多 2.18 倍，同时降低内存占用和推理延迟。&lt;/p&gt; 
&lt;p&gt;因此，MoR 被认为可能在无需承担大模型成本的情况下实现大模型质量，甚至被称为「Transformer 杀手」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362399</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362399</guid>
      <pubDate>Fri, 25 Jul 2025 10:53:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>三分之一美国人借助 AI 工具寻求职业转型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;根据东南俄克拉荷马大学（SOU）&lt;span&gt;最新&lt;/span&gt;发布的一项报告，约三分之一的美国人已开始使用 AI 工具，如 ChatGPT，来帮助他们进行职业转型。该报告基于对 1000 名来自四个不同世代的美国人的调查，旨在了解 AI 在当前美国劳动市场剧烈变化中的角色。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;调查显示，超过一半的受访者表示，他们正在积极考虑换工作或职业转型，其中以 Z 世代的 57% 比例&lt;span&gt;最高&lt;/span&gt;，随后是千禧一代的 55%，X 世代的 50%，以及仅 12% 的婴儿潮一代。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在那些表示 AI 对他们的职业转型有所帮助的受访者中，43% 的人使用 AI 工具撰写简历和求职信，47% 的人则利用 AI 进行新工作机会的研究，包括寻找薪资更高的职位。值得注意的是，近五分之一的受访者（18%）表示，AI 建议了他们之前未曾考虑过的全新职业路径。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;不过，尽管有不少人依赖 AI 来提供职业建议，调查也显示大多数受访者对 AI 提供的信息持谨慎态度。60% 的受访者表示，他们更倾向于相信人类职业顾问的意见，而只有 7% 的人选择相信 AI。一部分人（17%）甚至选择遵循 AI 的建议，即使这些建议与他们之前从人类顾问那里得到的意见相悖。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在各年龄层中，受访者主要关注的职业机会集中在技术领域，其次是医疗和金融。随着 AI 技术的不断发展，许多人认为这可能导致大量白领职位的消失。例如，Anthropic 的首席执行官达里奥・阿莫德伊预测，AI 将在未来五年内消除一半的白领工作。而亚马逊首席执行官安迪・贾西也表示，AI 驱动的自动化将取代一些人类工作，同时使其他职位变得更加 「有趣」，并创造出全新的岗位。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在技术公司招聘方面的数据也表明，随着 AI 工具开始接管许多原本由年轻、经验较少的员工完成的日常任务，科技公司对新近计算机科学毕业生的招聘数量有所减少。此外，在硅谷的激烈人才争夺战中，企业之间的竞争愈发激烈，特别是在人工智能研究方面的&lt;span&gt;顶尖&lt;/span&gt;人才更是稀缺。许多公司都愿意为此支付高额薪资，以吸引那些能够在技术突破中发挥关键作用的优秀研究人员。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362398</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362398</guid>
      <pubDate>Fri, 25 Jul 2025 10:52:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>阶跃星辰发布最强开源多模态推理模型 Step3</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;阶跃星辰宣布发布新一代基础大模型 Step3，主打多模态推理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据介绍，这是阶跃星辰首个全尺寸、原生多模态推理模型。在国产芯片 32K 上下文推理效率最高可达 DeepSeek R1 的 300%，在英伟达 H800 芯片将推理效率提升了 70% 以上。该模型将于 7 月 31 日向全球开源。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="262" src="https://oscimg.oschina.net/oscnet/up-e93e689dafce5406835a7db40fe0043af4b.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此外，阶跃星辰宣布与上海国有资本投资有限公司达成深度战略合作，并透露上海国投将参与阶跃星辰的新一轮融资。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;阶跃星辰创始人、CEO 姜大昕表示，阶跃的商业化的成果体现在了收入数字上，基于上半年的高速增长，公司将全年的冲刺目标定在 10 亿元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;会上，阶跃还将联合近 10 家芯片厂商和算力平台成立模新生态创新联盟。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362393</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362393</guid>
      <pubDate>Fri, 25 Jul 2025 10:21:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>宇树科技发布第三款人形机器人 UnitreeR1</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;宇树科技在官微宣布，正式发布第三款人形机器人「Unitree R1 智能伙伴」，售价 3.99 万元起，支持开发/改制，灵活超轻量约 25Kg，集成语音和图像多模态大模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;宣传视频显示，第三款人形机器人 Unitree R1 拥有 26 个关节，包括腿部 6*2+腰部 2+手臂 5*2+头 2，可以实现翻跟头、倒立行走、奔跑、打拳等动作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="361" src="https://oscimg.oschina.net/oscnet/up-47996978da023c9ec22be1f2e1c81a666e7.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此前，7 月 18 日，中国证监会官网显示，宇树科技已开启上市辅导，由中信证券担任辅导机构。辅导备案报告显示，宇树科技控股股东、实际控制人王兴兴直接持有公司 23.8216% 股权，并通过上海宇翼企业管理咨询合伙企业（有限合伙）控制公司 10.9414% 股权，合计控制公司 34.7630% 股权。根据相关规定，宇树科技最快将于 10 月完成辅导，这意味着宇树科技有希望在今年年内登陆 A 股。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;宇树科技是一家知名民用机器人公司。2016 年成立于杭州，创始人兼 CEO 是王兴兴。公司专注于消费级、行业级高性能通用足式/人形机器人及灵巧机械臂的研发、生产和销售。其明星产品有 Unitree Go1 四足机器人等，2023 年起推出 H1、G1 等人形机器人。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362388</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362388</guid>
      <pubDate>Fri, 25 Jul 2025 10:03:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>科大讯飞推出升级版星火 X1 深度推理大模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;科大讯飞&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F-crxs5LkH1UoU0BQsJzmkA" target="_blank"&gt;宣布&lt;/a&gt;正式推出了升级版的星火 X1 深度推理大模型。一些亮点内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;综合能力大幅提升。整体效果对标 OpenAI o3 等国内外一流大模型最新版本效果，在翻译、推理、文本生成、数学等方面保持领先。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;幻觉治理取得显著进步。幻觉问题是掣肘大模型落地应用的关键问题，升级后的星火 X1 在幻觉治理方面领先业界主流模型。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;多语言能力已覆盖 130+语种。为世界提供全栈自主可控大模型底座的「第二种选择」。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;基于星火 X1 底座的语音同传大模型在翻译效果、实时响应、语音听感、专业精深等方面大幅跃升，持续行业领先。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;得益于星火 X1 模型的升级，教育、医疗、企业应用、代码、科研等行业大模型和智能体也取得了新的进步，在复杂行业场景任务上进一步解决用户关键刚需。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="264" src="https://oscimg.oschina.net/oscnet/up-ff3e38322ebbce182a8c6b9c032f75581ae.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-39ea728edd540a2fd33fd97fef826e1c5a7.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="357" src="https://oscimg.oschina.net/oscnet/up-56fed82205eb5013f0c184ec5ea45dc94a2.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，星火 X1 最新升级的各项能力可以通过讯飞星火的网页版和手机应用体验，同时新 API 也已上线。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362377</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362377</guid>
      <pubDate>Fri, 25 Jul 2025 09:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Genkit —— 用于构建全栈 AI 应用的框架</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                            &lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Genkit 是一个用于构建全栈 AI 应用的开源框架，由 Google Firebase 构建并投入生产。它为多种编程语言提供 SDK，且稳定性级别各不相同：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JavaScript/TypeScript（稳定）&lt;/strong&gt;：已准备好投入生产，并支持全部功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Go（测试版）&lt;/strong&gt;：功能齐全，但可能有重大变化&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python（Alpha）&lt;/strong&gt;：具有核心功能的早期开发&lt;/li&gt;
&lt;/ul&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;它提供统一的接口，用于集成来自&lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;、&lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-openai"&gt;OpenAI&lt;/a&gt;、&lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt;Anthropic&lt;/a&gt;、&lt;a href="https://genkit.dev/docs/plugins/ollama/"&gt;Ollama&lt;/a&gt;等供应商的 AI 模型。使用精简的 API（用于多模式内容、结构化输出、工具调用和代理工作流），快速构建和部署可用于生产的聊天机器人、自动化和推荐系统。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;只需几行代码即可开始：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#cf222e"&gt;import&lt;/span&gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;genkit&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;&lt;span style="color:#cf222e"&gt;from&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0a3069"&gt;'genkit'&lt;/span&gt;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#cf222e"&gt;import&lt;/span&gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; &lt;span&gt;googleAI&lt;/span&gt; &lt;span&gt;}&lt;/span&gt; &lt;span&gt;&lt;span style="color:#cf222e"&gt;from&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0a3069"&gt;'@genkit-ai/googleai'&lt;/span&gt;&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;&lt;span style="color:#cf222e"&gt;const&lt;/span&gt;&lt;/span&gt; &lt;span&gt;ai&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#6639ba"&gt;genkit&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;{&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;plugins&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;[&lt;/span&gt;&lt;span&gt;&lt;span style="color:#6639ba"&gt;googleAI&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; &lt;span&gt;}&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

&lt;span&gt;&lt;span style="color:#cf222e"&gt;const&lt;/span&gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt; text &lt;span&gt;}&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#cf222e"&gt;await&lt;/span&gt;&lt;/span&gt; &lt;span&gt;ai&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&lt;span style="color:#6639ba"&gt;generate&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;&lt;span style="color:#0550ae"&gt;model&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;googleAI&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&lt;span style="color:#6639ba"&gt;model&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&lt;span style="color:#0a3069"&gt;'gemini-2.0-flash'&lt;/span&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span&gt;&lt;span style="color:#0550ae"&gt;prompt&lt;/span&gt;&lt;/span&gt;: &lt;span&gt;&lt;span style="color:#0a3069"&gt;'Why is Firebase awesome?'&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;div style="text-align:start"&gt;
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;关键功能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; border:undefined; box-sizing:border-box; display:block; font-variant:tabular-nums; margin-bottom:16px; margin-top:0px; max-width:100%; overflow:auto; width:max-content"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;&lt;strong&gt;广泛的人工智能模型支持&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;使用统一的界面集成来自&lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;、&lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-openai"&gt;&amp;nbsp;OpenAI&lt;/a&gt;、&lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt;&amp;nbsp;Anthropic&lt;/a&gt;、&lt;a href="https://genkit.dev/docs/plugins/ollama"&gt;Ollama&lt;/a&gt;等提供商的数百个模型。探索、比较并使用最符合你需求的模型。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;&lt;strong&gt;简化的 AI 开发&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;使用精简的 API 构建 AI 功能，包括&lt;a href="https://genkit.dev/docs/models#structured-output"&gt;&amp;nbsp;结构化输出&lt;/a&gt;、&lt;a href="https://genkit.dev/docs/tool-calling"&gt;代理工具调用&lt;/a&gt;、&lt;a href="https://genkit.dev/docs/rag"&gt;上下文感知生成&lt;/a&gt;、&lt;a href="https://genkit.dev/docs/models#multimodal"&gt;多模态输入/输出&lt;/a&gt;等。Genkit 可处理 AI 开发的复杂性，让你能够更快地构建和迭代。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;&lt;strong&gt;适用于网络和移动设备&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;使用专门构建的&lt;a href="https://genkit.dev/docs/firebase"&gt;客户端 SDK&lt;/a&gt;和帮助程序与 Next.js、React、Angular、iOS、Android 等框架和平台无缝集成。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;&lt;strong&gt;跨语言支持&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;使用最适合你项目的语言进行构建。Genkit 提供 JavaScript/TypeScript（稳定版）、Go（测试版）和 Python（Alpha 版）的 SDK，并在所有支持的语言中提供一致的 API 和功能。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;&lt;strong&gt;随处部署&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;将 AI 逻辑部署到支持你选择的编程语言的任何环境，例如&lt;a href="https://genkit.dev/docs/firebase"&gt;Firebase 的 Cloud Functions&lt;/a&gt;、&amp;nbsp;&lt;a href="https://genkit.dev/docs/cloud-run"&gt;Google Cloud Run&lt;/a&gt;或&lt;a href="https://genkit.dev/docs/deploy-node"&gt;第三方平台&lt;/a&gt;（无论是否带有 Google 服务）。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;&lt;strong&gt;开发人员工具&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;使用专用的本地&lt;a href="https://genkit.dev/docs/devtools"&gt;CLI 和开发者 UI&lt;/a&gt;加速 AI 开发。针对单个输入或数据集测试提示和流程，比较不同模型的输出，使用详细的执行轨迹进行调试，并使用即时视觉反馈快速迭代提示。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;&lt;strong&gt;生产监控&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;span&gt;使用全面的生产监控，自信地交付 AI 功能。在&lt;a href="https://genkit.dev/docs/observability/getting-started"&gt;专用仪表板&lt;/a&gt;中跟踪模型性能、请求量、延迟和错误率。通过详细的可观察性指标快速识别问题，并确保你的 AI 功能在实际使用中满足质量和性能目标。&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/genkit</link>
      <guid isPermaLink="false">https://www.oschina.net/p/genkit</guid>
      <pubDate>Fri, 25 Jul 2025 09:24:00 GMT</pubDate>
    </item>
    <item>
      <title>一位 Oracle 铁粉的「真香」转变</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:left"&gt;「O 记我用了这么多年，我最有发言权，我可不敢替，你们谁能搞定，谁上。」&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;老邓在会上，狠狠甩了一句气话。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e5a3c8ce9de050c94ac215768d0a3edb.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;老邓（邓铭），某大型期货交易所信息化主管，数据库老司机。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;作为圈里最早的一批 DBA，老顾是 O 记铁杆，他的工位里，最醒目的不是家人照片，而是历代 O 记认证证书。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//c290049cbab7bb43b66e5287b8f4ddf5.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;开完刚才的「数据库替代」内部通气会，老邓「余怒」未消。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;回到工位上，把键盘敲得噼里啪啦响，在工作群里疯狂输出，一口气写出了自己的「六大不敢替」理由↓&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e1371f3a77ac19fc3d0e4478d5d0abc6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//7d4c80b48f32c5c74e48037cc963aac4.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;当然，老邓也知道，既然监管发文了，这替换的趋势肯定无法阻挡。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;只是，作为 O 记铁粉，他心里有点意难平。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//f1f0ebe84f89381dca4a256c4aab9248.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;接下来，单位组织了技术选型会，让一家家国产数据库厂商来「过堂」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;老邓心说这下可好，看我怎么怼你们！&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//3fc85c074efe5b87262e59a632017c4b.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;事情就像预料的那样……&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;选型会上，老邓一顿输出，把前面几家厂商都给喷走了。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//1dfc10a63fc696d8dab13398e2ddd315.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//6f6bd107217abdfc5f942a777cf3e043.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;终于，轮到最后一家讲方案，厂家专家上台了。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;老邓翻了翻白眼，buff 已经叠满了，只等对面讲的有漏洞，就开喷。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//bd295f1eb278b037974d22f4534e693b.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;结果…&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这家一开场，啪啪啪啪啪啪，竟然把老邓想怼的那些点，全堵上了。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//630199d4c3bce018152de5e751817795.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;老邓有点懵，他在脑子里仔细品味刚刚对方讲的那几个点…&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//30ff196d752b0d270b44e9436f425076.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;六大痛点怎么破？&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;请看数据库平替解决方案&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;痛点 1：担心应用改造成本高、难度大&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;替换数据库，最怕动应用，他俩捆绑太深了。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//d6e479d982143780405e2bf6a680f187.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;一旦所选数据库兼容性不够，存储过程、触发器，甚至 SQL 语句全都得改，一改就是成千上万行，没人愿意碰。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;所以说，换数据库，别动应用才是最大的刚需。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;怎么解：不用你改，我们来兼容！&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;应用软件 SQL、PL/SQL 零修改，如果不兼容，这家公司的数据库反向适配，这就是底气。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//d83e9e4fc905ef39447f1c7f7b7b678e.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;都有哪些「姿势」呢？&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;多语法原生兼容的一体化框架，可插拔、可扩展，支持对 Oracle/MySQL/SQL Server/PostgreSQL 等深度兼容；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;Oracle 兼容能力接近 100%，常见复杂语法全支持，真实案例中，银行系统百万行 PL/SQL 代码未改一行，成功迁移上线；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;MySQL 语法全面覆盖，在大多数场景下性能甚至优于原库；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;SQL Server 常用语法兼容度达 99% 以上。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这家公司主打「低难度」迁移—高兼容、零改造。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;往往，在迁移前，别人的内心戏是这样的↓&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//ec2e575c207b9364fbd8dd9783e2d34d.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;结果呢，再复杂的场景，他们都全部搞定了。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;看看这些超级复杂的迁移实战吧，用户应用代码全部零修改。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//ce9c4c6b68cb83df8352e4ad19727be2.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;于是，到最后，完美平替！&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//66c758b2684c4fe65a89db21e0096f8c.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;痛点 2：担心数据迁移复杂，工作量大，劳心劳力&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;数据库迁移的另一大负担，就是历史数据量大、流程繁、比对难。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//36db9a916d1508c218ba85c088dba69a.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;历史数据要搬、增量数据要同步，迁完之后还得一条条校验一致性。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;不仅费时费力，稍有差错就可能返工重来。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//8d6799e1fd36f1de750d0625ff969996.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;怎么解？&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这家厂商提供了一整套全自动迁移工具和解决方案↓&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;①「流水线」作业模式，结构迁移 + 全量迁移 + 增量同步，一次走完。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//0cd7016653118b2421fb602f554281f6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//b0ea9d093dccecd94fcf59391d03ccbd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;②一致性比对，确保新旧数据一致，避免迁完了才发现丢数据或错数据&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//396f9a0508a683459dc494943b6bb916.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这些工具久经沙场，经过大规模验证：数据库原厂人员每年直接为客户迁移部署近万套数据库，服务客户上线近 2000 个系统。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//14d2657c2c09231e79c61aebbf3b9d94.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;痛点 3：担心系统停机时间过长，影响业务连续性&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;在许多业务关键、运行敏感的系统中，停机窗口极短，甚至「几分钟都不能断」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这类「无法停」的系统，是数据库替换中难啃的「硬骨头」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//2ca4517d74500884d1fe8bca7b430968.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;怎么解？他们提供柔性迁移方案，做到重要系统迁移不停机。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这套方案，包含一整套柔性迁移工具链，包括：KDMS、KDTS 和 KFS。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//a7ce2f271d05002379843e42112baeee.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;其实，这三剑客在前面的数据迁移场景，就已经出过手了。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;KDMS：完成历史数据的结构化迁移；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;KDTS：用于按变更记录（如 SCN、LSN）进行全量增量数据迁移；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;KFS：用于在线增量数据的实时同步迁移。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;现在着重谈，如何不停机迁移。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//aecb704aaa1e8c21b56c2a8179703a9c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这套方案的核心理念是：整个过程，原系统可以持续对外提供服务，而新系统利用三个工具的配合，在迁移历史数同时，实时接收变更数据，确保两边数据始终一致。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;有了这套柔性迁移方案，迁移不再等「节假日」或「通宵窗口」，上线更可控，替换更轻松。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//047e82cdb96830bd682ba8a7c58a86b6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;痛点 4：担心系统测试无法全面覆盖生产环境，上线就「翻车」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这是一个灵魂拷问：在迁移测试环境跑得好好的，一上线到生产环境就出问题。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//0e1b6069777e33fe0d364b6df0e671ba.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;传统测试只能覆盖一部分功能，而真实生产环境业务逻辑繁杂、并发压力大、数据链路长，很难完全模拟。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;甚至有些 PoC 测试专挑软骨头，刻意避坑，结果，真上线就踩坑。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//9001f323088732f298eec40d2e5e30d0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;怎么解？&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这家厂商提供了基于真实生产负载的全量回归测试工具，让企业上线前，就像在真实环境里「预演」一遍。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//f5f8ec22a3f9e1c5c530e5b30fd99d13.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这套测试工具的工作方式很直接也很聪明↓&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;从原 O 记系统中捕获完整业务负载（包括 SQL 语句、事务、执行顺序等）将这些业务流量一比一「重放」到自家数据库上；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;自动对比执行效果与性能表现，生成分析报告，提前发现潜在问题，提前解决，确保上线后不「踩雷」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//dce877b174706ead9513de079b64b91f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;测试工具能做到无需应用源码、覆盖全场景、测试结果真实可信。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;让系统上线之前，就像在生产环境里跑了一遍，问题在上线前就被干掉。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//914f012d035f431f32746223326fb08d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;痛点 5：担心国产数据库可能存在丢数据、宕机的风险，导致业务停摆&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;在关键系统中，数据库一旦完成割接替换，就意味着「只能成功，没有回头路」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;但实操中，有些意外总是让人猝不及防。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//c1d6f222372567af0446231f4a58c8ff.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;数据库替换，不冒险，才是好方案。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;怎么解？这家厂商提供双轨并行，随时可回退！&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//790a6929e0c97106fbab2b468b69eca3.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;上线后如果国产数据库出现故障，系统可秒级切换回原有数据库继续运行，业务不中断，数据不丢失，真正做到「万无一失」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;上线有保障，失败可撤回，全程低风险。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//b882f7fa72be590193e0f1d77d42eca9.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;即使是在银行、电网、轨交这类对连续性要求极高的行业，也能实现替完还可回头。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;当然，这其实是一颗定心丸，这家厂商做了无数平替案例，还从来没用过回退这一招。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//9d545b965390ed987cdd008f103449b6.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;痛点 6：性能能否达到 Oracle 同等水平？&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这恐怕是包括老邓在内，最后一个顾虑了：「国产数据库性能行吗？能打得过 O 记吗？」&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;换成国产数据库后，要是性能掉队，业务慢半拍，系统卡顿，那真是换了个寂寞啊。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//cf40186565f5ae94841359b6ec1be45f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;怎么解？&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这家厂商有足够的底气，他们相信数据库的性能优化并不是「纸上谈兵」，而是&lt;strong&gt;真刀真枪地在核心系统中跑出来的&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//96bbdabc9e694ce18008da75bcbd0b61.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;目前，他们的数据库产品已经在&lt;strong&gt;2000+关键业务系统&lt;/strong&gt;中实现替换上线，验证了「替得了、跑得稳、上得去」的能力。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//991c911b18d738cc6d19c9ae40f7d539.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//258db050b5e3dea7e60bb04a2fd15718.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;六条讲完，严丝合缝。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;老邓万万没想到，自己竟然听得津津有味，还记了一大段笔记。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;不由暗暗感慨：士别三日，国产数据库的进步这么大。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//911768e37d0d72a6a859323baa01cc12.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这时候，台上的厂商专家开始了总结：我们不止能替 O 记，更有「全家桶」级别的国产替代能力，涵盖主流数据库全谱系↓&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//93d272f74c5f3eba2ff93353ef8b527a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;讲完这些，厂商专家顿了顿，翻到最后一页——&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;没错，这家数据库厂商就是「金仓数据库」。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;一句话，数据库平替用金仓，让「不敢替」的痛，变成「能平替」的路！&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//0304157f721af366b5a8acc4f835dd78.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;尾声：&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;老邓终于放下了执念……&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;项目验收那晚，老邓望着稳定运行的系统、波澜不惊的监控大屏，拿起手机，悄悄发了个朋友圈。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//2b19a56baa8bf8e03a189a362ded5fc3.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362375</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362375</guid>
      <pubDate>Fri, 25 Jul 2025 09:19:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>RWKV7-G0 7.2B 发布，最强纯 RNN 推理模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;2025 年 7 月 22 日， &lt;strong&gt;RWKV7-G0 7.2B 推理模型&lt;/strong&gt;（Reasoning Model）正式开源发布，它很可能是迄今为止人类训练过的最强纯 RNN 语言模型。&lt;/p&gt; 
&lt;p&gt;RWKV7-G0 7.2B 是在 RWKV6-World-V3-7.6B 的基础上训练 2T tokens 的纯预训练模型，但在预训练加入了大量指令/对话/推理数据，可以解决各种推理问题。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果需要后训练和对齐，最适合 RNN 的方式是 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fadvanced%2FFine-Tune%2FRWKV-PEFT%2FState-Tuning" target="_blank"&gt;state-tuning&lt;/a&gt;，直接微调 RNN 的初始状态，相当于终极 context engineering。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;模型客观指标评测&lt;/h2&gt; 
&lt;h3&gt;英语和多语言能力&lt;/h3&gt; 
&lt;p&gt;RWKV7-G0 7.2B 的基础英语和多语言能力&lt;strong&gt;均强于同规模的开源模型&lt;/strong&gt;：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="eval" src="https://oscimg.oschina.net/oscnet/up-3961b82f0302bbedafaae3e26ce721fe159.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;得益于架构和数据的提升，RWKV7-G0 7.2B 的 MMLU 准确度为 62.7%，显著超过 RWKV6-World-V3-7.6B 的 54.2%。后续我们会发布训练 8T tokens 的满血 RWKV7-G1 7.2B，目标是 MMLU 达到 70%，看齐前沿模型。&lt;/p&gt; 
&lt;h3&gt;无法作弊的评测&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FJellyfish042%2FUncheatableEval" target="_blank"&gt;Uncheatable Eval&lt;/a&gt; 是"无法作弊的评测"，它使用最新的论文和新闻文章等实时数据，评估开源大语言模型的真实建模能力和泛化能力。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RWKV7-G0 7.2B 的 Uncheatable Eval 同样显著提升，满血 8T tokens 预计超越 Llama3 8B（这里测试 2024-07 数据，后续会测新数据，并对比 Qwen2.5、Qwen3）：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="uncheatable-eval" src="https://oscimg.oschina.net/oscnet/up-00ee915e6a6642e230984bbad95c7adda04.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;模型实战：解数学题&lt;/h2&gt; 
&lt;p&gt;我们发现，RWKV7-G0 7.2B 解数学题可使用 &lt;code&gt;temperature top_p penalty&lt;/code&gt; 解码参数都为 0 的纯贪心解码，且无限复读现象较少。&lt;/p&gt; 
&lt;p&gt;但贪心解码会导致推理过程探索度不足，因此可引入随机性，例如 &lt;code&gt;temperature=0.3 top_p=0.3 penalty=0&lt;/code&gt;。模型会自动进行多轮验算（类似 rollout），并可以自我纠错。&lt;/p&gt; 
&lt;p&gt;那么 &lt;code&gt;temperature=0.6 top_p=0.6 penalty=0&lt;/code&gt; 等随机性更高的参数是否更好，后续我们会通过参数扫描实验评估。&lt;/p&gt; 
&lt;p&gt;例子，第一题：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math1" src="https://oscimg.oschina.net/oscnet/up-0cd8d78f631ee7405c4bbca2340892aa1c6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;修改题目表述，模型换了种做法：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math2" src="https://oscimg.oschina.net/oscnet/up-dc97d5561c78acbb5117c3b214de082e7da.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第二题，故意将原题的 99 改为 99.1，模型一开始看错，后来成功纠正了自己：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math3" src="https://oscimg.oschina.net/oscnet/up-e607d6ca88eb49ab4caf0e417262eb39b2b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第三题，原题是计算 1 的幂，改为计算 i 的幂，增加难度：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math4" src="https://oscimg.oschina.net/oscnet/up-8d5d4f106fec7c3c72836c057b1de89bddd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第四题，原题是 2^8 = 4^x，改为 8^x 增加难度：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math5" src="https://oscimg.oschina.net/oscnet/up-4d801cfa9f331b3dca71d086a3c05004e6c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第五题，原题的概率是 1/5，改为 1/4 测试模型：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math6" src="https://oscimg.oschina.net/oscnet/up-39c45f49e2a398f59a7dc87fde27cf46756.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第六题，原题是 one hat，改为 two hat（故意不加 s 复数形式）测试模型：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math7" src="https://oscimg.oschina.net/oscnet/up-2d56afb40928ffd13d17308fc41c6e56369.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;第七题，模型有点懵，但反复验算多次后，成功确认了正确答案：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="math8" src="https://oscimg.oschina.net/oscnet/up-7730c44785334a3421428c0e7dd153ed6ae.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;结论：【纯 RNN + 纯预训练】可以得到推理模型，而且它理解了一些解题方法，可以用不同方法解决修改过的题目。&lt;/p&gt; 
&lt;h2&gt;模型实战：写代码&lt;/h2&gt; 
&lt;p&gt;在此我们测试用户喜闻乐见的图像输出。生成一个有一只猫的 SVG 的网页：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="code" src="https://oscimg.oschina.net/oscnet/up-06f4dbd1a7c9e178ed8408f93d7bb939c4d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;用 Three.js 创建一个旋转的 3D 红色立方体（完整代码在文末的附录中）：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="code-1" src="https://oscimg.oschina.net/oscnet/up-5965c8a859ccc3bcc7f9db0d86caeb5f612.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;考虑到这是【纯 RNN + 纯预训练 + 只训练 2T tokens】，表现合理。后续更多数据的满血版会显著更强。&lt;/p&gt; 
&lt;h2&gt;RNN 的抗干扰能力&lt;/h2&gt; 
&lt;p&gt;最新论文 &lt;code&gt;Inverse Scaling in Test-Time Compute&lt;/code&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.14417%25EF%25BC%2589%25E5%258F%2591%25E7%258E%25B0%25E5%2589%258D%25E6%25B2%25BF%25E6%25A8%25A1%25E5%259E%258B%25E5%259C%25A8%25E2%2580%259C%25E6%2581%25B6%25E6%2584%258F%25E9%2597%25AE%25E9%25A2%2598%25E2%2580%259D%25EF%25BC%2588%25E4%25BE%258B%25E5%25A6%2582%25E5%25B8%25A6%25E5%25B9%25B2%25E6%2589%25B0%25E9%25A1%25B9%25E7%259A%2584%25E8%25AE%25A1%25E6%2595%25B0%25E3%2580%2581%25E5%25B8%25A6%25E8%2599%259A%25E5%2581%2587%25E7%2589%25B9%25E5%25BE%2581%25E7%259A%2584%25E5%259B%259E%25E5%25BD%2592%25E9%25A2%2584%25E6%25B5%258B%25EF%25BC%258C%25E7%25AD%2589%25E7%25AD%2589%25EF%25BC%2589%25E4%25BC%259A%25E5%2587%25BA%25E7%258E%25B0%25E8%25B6%258A%25E6%2583%25B3%25E8%25B6%258A%25E5%25B7%25AE%25E7%259A%2584%25E6%2583%2585%25E5%2586%25B5%25EF%25BC%259A" target="_blank"&gt;https://arxiv.org/abs/2507.14417）发现前沿模型在「恶意问题」（例如带干扰项的计数、带虚假特征的回归预测，等等）会出现越想越差的情况：&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Inverse Scaling in Test-Time Compute" src="https://oscimg.oschina.net/oscnet/up-6ae323b74fd47a196c5d2c1f9fa0e6eba61.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;我们发现 RWKV7-G0 7.2B 可以克服干扰，得到正确答案：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Test-Time-Compute-test" src="https://oscimg.oschina.net/oscnet/up-ae61d209ca82eea02e344618caff2afca92.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;继续测试：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Test-Time-Compute-test-1" src="https://oscimg.oschina.net/oscnet/up-514174dd1deab6244d08e752e541b0fd36e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;修改数字再测试：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Test-Time-Compute-test-2" src="https://oscimg.oschina.net/oscnet/up-203991398541247ca9e64b89fa8da85280d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;可见 attention 会导致 transformer 更易受前文干扰，而 RNN 在此有优势。而且 RNN 的思考过程永远匀速，不会越想越慢。我们未来训练更大的 RNN 会更有趣。&lt;/p&gt; 
&lt;h2&gt;模型下载&lt;/h2&gt; 
&lt;p&gt;下载 RWKV7-G0 7.2B 模型：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hugging Face：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FBlinkDL%2Frwkv7-g1%2Ftree%2Fmain" target="_blank"&gt;https://huggingface.co/BlinkDL/rwkv7-g1/tree/main&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;魔搭社区：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Fmodels%2FRWKV%2Frwkv7-g1%2Ffiles" target="_blank"&gt;https://modelscope.cn/models/RWKV/rwkv7-g1/files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WiseModel：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwisemodel.cn%2Fmodels%2Frwkv4fun%2FRWKV-7-G1%2Ffile" target="_blank"&gt;https://wisemodel.cn/models/rwkv4fun/RWKV-7-G1/file&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;如何使用 RWKV 模型&lt;/h2&gt; 
&lt;h3&gt;在线 demo（续写模式）&lt;/h3&gt; 
&lt;p&gt;可以在 RWKV 官方 Gradio 中试用 RWKV7-G0 7.2B 模型（为避免排队，这里限制了输入和输出长度）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FBlinkDL%2FRWKV-Gradio-2" target="_blank"&gt;https://huggingface.co/spaces/BlinkDL/RWKV-Gradio-2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Hugging Face Gradio 是续写模式，使用时需要遵循 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fbasic%2FPrompt-Format" target="_blank"&gt;RWKV 的 prompt 格式&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RWKV7-G0 7.2B &lt;strong&gt;不思考模式&lt;/strong&gt;的 QA prompt 格式：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;User: 我可以抽干太平洋的水然后下去抓鱼吗？

Assistant:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如需开启&lt;strong&gt;思考模式&lt;/strong&gt;，可在 QA prompt 的基础上添加 &lt;code&gt;&amp;lt;think&amp;gt;&lt;/code&gt; 标签：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;User: 我可以抽干太平洋的水然后下去抓鱼吗？

Assistant: &amp;lt;think&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;本地部署 RWKV 模型&lt;/h3&gt; 
&lt;p&gt;可以使用 RWKV Runner、Ai00、RWKV pip 等推理工具本地部署 RWKV 模型。&lt;/p&gt; 
&lt;p&gt;此外，RWKV 模型也适配了 llama.cpp、ollama 等热门的模型推理工具。&lt;/p&gt; 
&lt;p&gt;由于 RWKV7-G0 7.2B 是新模型，目前建议使用 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fintermediate%2FRWKV-Runner%2FIntroduction" target="_blank"&gt;RWKV Runner&lt;/a&gt; 以保证得到正确结果。&lt;/p&gt; 
&lt;p&gt;可以在 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Ftutorials%2Fintermediate" target="_blank"&gt;RWKV 官网 - 模型推理教程&lt;/a&gt;中查看上述推理工具的使用教程。&lt;/p&gt; 
&lt;h2&gt;未来训练计划&lt;/h2&gt; 
&lt;p&gt;我们也正在训练 RWKV7-G0 13.3B 模型，以及使用更多 tokens、使用 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FYl79XfbMCO6ecAdKGzboRg" target="_blank"&gt;DeepEmbed&lt;/a&gt; 和 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F3q1cldAEsk1576SLK24CTw" target="_blank"&gt;DEA&lt;/a&gt; 技术的 RWKV-7s 模型。&lt;/p&gt; 
&lt;h2&gt;加入 RWKV 社区&lt;/h2&gt; 
&lt;p&gt;欢迎大家加入 RWKV 社区，可以从 RWKV 中文官网了解 RWKV 模型，也可以加入 RWKV 论坛、QQ 频道和 QQ 群聊，一起探讨 RWKV 模型。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📖 RWKV 中文文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rwkv.cn" target="_blank"&gt;https://www.rwkv.cn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 RWKV 论坛：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.rwkv.cn%2F" target="_blank"&gt;https://community.rwkv.cn/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐧 QQ 频道：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpd.qq.com%2Fs%2F9n21eravc" target="_blank"&gt;https://pd.qq.com/s/9n21eravc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📺 BiliBili 视频教程：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546689096910933" target="_blank"&gt;https://space.bilibili.com/3546689096910933&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;欢迎大家基于 RWKV-7 进行创业、科研，我们也会为基于 RWKV 的项目提供技术支持。&lt;/p&gt; 
 &lt;p&gt;如果您的团队正在基于 RWKV 创业或开展研究，请联系我们！（在「RWKV 元始智能」微信公众号留言您的联系方式，或发送邮件到「contact@rwkvos.com」。）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;附录：旋转的红色立方体&lt;/h2&gt; 
&lt;p&gt;将以下代码保存为 &lt;code&gt;3d.html&lt;/code&gt; 并双击运行。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Rotating Red Box&amp;lt;/title&amp;gt;
    &amp;lt;style&amp;gt;
        body {
            margin: 0;
            overflow: hidden;
        }
        canvas {
            display: block;
            width: 100%;
            height: 100%;
        }
    &amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
        // Create scene
        const scene = new THREE.Scene();
        
        // Create camera
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.z = 5;
        
        // Create renderer
        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);
        // Create box geometry and material
        const geometry = new THREE.BoxGeometry(1, 1, 1);
        const material = new THREE.MeshBasicMaterial({ color: 0xff0000 }); // Red color
        
        // Create box mesh
        const box = new THREE.Mesh(geometry, material);
        
        // Add lighting
        const light = new THREE.DirectionalLight(0xffffff, 1);
        light.position.set(0, 0, 10);
        scene.add(light);
        
        // Add box to scene
        scene.add(box);
        
        // Animation loop
        let angleX = 0;
        let angleY = 0;
        
        function animate() {
            requestAnimationFrame(animate);
            
            // Update rotation angles
            angleX += 0.01;
            angleY += 0.01;
            
            // Update box rotation
            box.rotation.x = angleX;
            box.rotation.y = angleY;
            
            // Render scene
            renderer.render(scene, camera);
        }
        
        animate();
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362370</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362370</guid>
      <pubDate>Fri, 25 Jul 2025 09:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>特斯拉强调辅助驾驶安全性：AI 硬件加持</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;特斯拉官方微博今日发文，重申了辅助驾驶技术在提升车辆安全性方面的重要性。根据特斯拉 2025 年第二季度安全报告，开启辅助驾驶功能的特斯拉车辆，其安全性是普通车辆的 9.5 倍。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="414" src="https://oscimg.oschina.net/oscnet/up-96c1d1ada610ee1272da23c291a011df993.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;特斯拉表示，其旗下 S3XY 全系现款在售车型均标配了&lt;strong&gt;AI4 智能辅助驾驶硬件&lt;/strong&gt;和辅助驾驶功能。官方宣称，得益于这些先进的 AI 技术，特斯拉的辅助驾驶系统比人类驾驶更为可靠。特斯拉强调，其最终目标是实现「零事故」，并承诺将持续努力，确保每一位车主都能安心出行。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此次表态被视为特斯拉对近期懂车帝辅助驾驶测试的回应。近日，懂车帝联合央视推出了《懂车智炼场》辅助驾驶科普节目，对 36 款车型进行了实测，测试结果引发了广泛关注。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，鸿蒙智行官微也疑似回应懂车帝测试表示，已看到某平台所谓「测试」，不予置评。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362357</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362357</guid>
      <pubDate>Fri, 25 Jul 2025 08:23:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Claude 集成设计平台 Canva</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Anthropic&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FAnthropicAI%2Fstatus%2F1948489708385816666" target="_blank"&gt;宣布&lt;/a&gt;其 AI 服务 Claude 已集成设计平台 Canva，这一集成旨在简化从文本内容到图形化表达的创作流程。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1458" src="https://static.oschina.net/uploads/space/2025/0725/155325_hioI_2720166.png" width="1290" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0725/155813_ek4B_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;通过这项新功能，用户可以上传任何书面内容，如博客文章、产品指南或会议记录，并要求 Claude 将其转化为带有品牌风格的专业视觉设计。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362351</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362351</guid>
      <pubDate>Fri, 25 Jul 2025 07:58:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>《2025 年度技术人才报告》解读：AI+开源重塑人才市场</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;LF Research 联合 Linux Foundation Education 正式发布了《2025 年度技术人才报告》。该报告是基于全球 500 多位招聘和培训决策者的调研，重点探讨了 AI 对技术岗位日益增长的影响、企业如何为这一工作转型做好准备，以及如何通过开源与技能提升满足新的人才需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-887ec60bec2ffdf3d0a7092dfbbd202fe35.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;AI 正在为众多企业带来深远影响，94% 的组织认为 AI 将为其运营带来显著价值。但报告指出，不足一半的企业拥有适应 AI 时代所需的核心技术能力，难以释放其业务与创新潜力。报告主要发现包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;68% 的企业缺乏具备 AI/ML 技能的员工；网络安全与合规（65%）、FinOps（61%）、云计算（59%）和平台工程（56%）等领域人才短缺的情况加剧了这个问题；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;44% 的受访者认为「技术人才不足」是采纳新技术的主要障碍；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;半数受访组织表示，他们正在扩充 AI 专项人才队伍，新增岗位包括 AI/ML 运维工程主管（64%）与 AI 产品经理（36%）。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;新兴技术与技能缺口已开始实质地改变工作流程。三分之二的组织表示，AI 显著改变了其团队的工作方式。开发者需验证 AI 生成的代码，新员工需具备 AI 专业技能，许多初级的任务也被 AI 自动化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;为应对这些变化，企业正在加大对技能提升的投入。报告发现：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;72% 的组织正在优先考虑提升现有员工的技能，远高于 2024 年的 48%；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;技能提升的速度比招聘新人才快 62%，且技术培训项目在提高员工留存率方面的效果高出 91%；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;71% 的组织在招聘时重视持有认证的人才，将其视为专业能力的有效验证；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;56% 的组织依靠技能提升来满足 AI/ML 岗位需求，而非新增招聘或外包。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;开源技术在 AI 落地中也起到了重要战略作用。40% 的受访者表示，企业正在利用开源框架、模型和工具来加速 AI 应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;调查显示，采用开源实践的企业在员工留存与技能发展方面表现更佳：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;91% 的组织认为技术培训是提高员工留存的有效方式；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;84% 的组织表示，拥有开源文化可提高员工稳定性与满意度。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362350</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362350</guid>
      <pubDate>Fri, 25 Jul 2025 07:58:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Qwen3-Coder 和 Kimi-K2 均已上线模力方舟</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Kimi-K2 和 Qwen3-Coder 这两个模型是最近在编程任务上表现不错的开源模型，关于二者的比较可阅读这篇文章：&lt;em&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/news/362129/kimi-k2-vs-qwen-3-coder-coding-comparison"&gt;Kimi K2 和 Qwen-3 Coder 在编程任务的详细对比&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/360215/kimi-k2"&gt;&lt;strong&gt;Kimi K2&lt;/strong&gt;&amp;nbsp;&lt;/a&gt;是一个最先进的混合专家 (MoE) 语言模型，激活参数为 320 亿，总参数为 1 万亿。通过 Muon 优化器进行训练，Kimi K2 在前沿知识、推理和编码任务上表现出色，同时在智能体能力方面进行了精心优化。&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/361848"&gt;&lt;strong&gt;Qwen3-Coder-480B-A35B-Instruct&lt;/strong&gt;&lt;/a&gt;&amp;nbsp; 是一款专为代码生成、代码理解和高效开发场景设计的大型语言模型。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;模力方舟已上线这两个模型：&lt;/p&gt; 
&lt;p&gt;&lt;img height="798" src="https://static.oschina.net/uploads/space/2025/0725/153841_vb9V_2720166.png" width="2540" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0725/153900_equi_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;访问网址&amp;nbsp;&lt;a href="https://ai.gitee.com/serverless-api" target="_blank"&gt;https://ai.gitee.com/serverless-api&amp;nbsp;&lt;/a&gt;即可体验。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362345</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362345</guid>
      <pubDate>Fri, 25 Jul 2025 07:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Solon 整合 LiteFlow 规则引擎：概念与实战</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;一、引言&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在现代软件开发中，规则引擎允许我们以声明式的方式定义业务逻辑和决策路径。LiteFlow 是一个轻量级、易于使用的组件式规则引擎，它可以与 Solon 应用无缝整合。本文将介绍如何在 Solon 项目中引入 LiteFlow，实现灵活的业务流程管理。&lt;/p&gt; 
&lt;h2&gt;二、LiteFlow 的核心概念&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;LiteFlow 简介&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;LiteFlow 是一个基于 Java 的轻量级流程引擎，专为简化复杂业务逻辑处理设计。通过将业务流程抽象为一系列的节点（components），LiteFlow 提供了一种清晰和可维护的方法来编排业务逻辑。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;主要特点&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;组件化设计：业务逻辑分解为独立的组件，每个组件执行特定的功能。 灵活的流程控制：支持同步和异步执行，以及条件分支、循环等控制结构。 易于配置：使用 XML、YAML 或程序式配置定义流程。&lt;/p&gt; 
&lt;h2&gt;三、实战演示：在 Solon 中使用 LiteFlow&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;环境准备&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;确保你的开发环境已经安装了 JDK 1.8 或以上版本，并且项目是基于 Solon 构建的。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加依赖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件中添加 LiteFlow 的 Maven 依赖：&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;xml 复制代码&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.yomahub&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;liteflow-solon-plugin&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;最新版本号&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;配置 LiteFlow&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;app.yml&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件中配置 LiteFlow 的规则文件路径：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;liteflow:&lt;/span&gt;
  &lt;span style="color:#986801"&gt;rule-source:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;classpath:liteflow-rules.xml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;定义组件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;创建组件类，每个类对应一个处理步骤：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.yomahub.liteflow.core.NodeComponent;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Component;

&lt;span style="color:#4078f2"&gt;@Component("componentA")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;ComponentA&lt;/span&gt; &lt;span style="color:#a626a4"&gt;extends&lt;/span&gt; &lt;span style="color:#c18401"&gt;NodeComponent&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;process&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; {
        System.out.println(&lt;span style="color:#50a14f"&gt;"执行组件 A 的逻辑"&lt;/span&gt;);
        &lt;em&gt;// 添加业务逻辑代码&lt;/em&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;定义流程&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;liteflow-rules.xml&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中定义业务流程，指定组件的执行顺序：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;flow&lt;/span&gt; &lt;span style="color:#986801"&gt;id&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"chain1"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;then&lt;/span&gt; &lt;span style="color:#986801"&gt;value&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"componentA,componentB,componentC"&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;flow&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;触发流程执行&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在 Solon 应用中通过 LiteFlow 的 API 触发流程执行：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.yomahub.liteflow.flow.FlowExecutor;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Controller;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Inject;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Get;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Mapping;

&lt;span style="color:#4078f2"&gt;@Controller&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;FlowController&lt;/span&gt; {

    &lt;span style="color:#4078f2"&gt;@Inject&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; FlowExecutor flowExecutor;

    &lt;span style="color:#4078f2"&gt;@Get&lt;/span&gt;
    &lt;span style="color:#4078f2"&gt;@Mapping("/runFlow")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; String &lt;span style="color:#4078f2"&gt;runFlow&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; {
        &lt;span style="color:#a626a4"&gt;try&lt;/span&gt; {
            flowExecutor.execute2Resp(&lt;span style="color:#50a14f"&gt;"chain1"&lt;/span&gt;);
            &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"流程执行成功"&lt;/span&gt;;
        } &lt;span style="color:#a626a4"&gt;catch&lt;/span&gt; (Exception e) {
            &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"流程执行失败: "&lt;/span&gt; + e.getMessage();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;测试与验证&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;启动 Solon 应用并访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/runFlow&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;路径，检查控制枱输出以验证流程是否按预期执行。&lt;/p&gt; 
&lt;h2&gt;结论&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;通过整合 LiteFlow 规则引擎，Solon 应用可以更加灵活地处理复杂的业务流程。LiteFlow 的组件化和易配置性使得管理和维护业务逻辑变得更简单。此外，借助 LiteFlow 的强大功能，开发者可以构建出更加动态和可扩展的应用系统，满足不断变化的业务需求。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362560</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362560</guid>
      <pubDate>Wed, 16 Jul 2025 05:11:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
  </channel>
</rss>
