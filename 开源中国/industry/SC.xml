<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 05 Aug 2025 12:43:19 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>AI 不但没抹平差距，反而把程序员之间的差距拉成了鸿沟</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;blockquote&gt; 
 &lt;p&gt;作者：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Ffrxiaobei%2Fstatus%2F1950732643055833167" target="_blank"&gt;凡人小北（x.com/frxiaobei）&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;去年我第一次用 Copilot，有点小震撼，自动补全几行代码、写个工具脚本爽得不行，心想：「以后大家差不多了，AI 一上，谁还不是个工程师？」&lt;/p&gt; 
&lt;p&gt;现在回头看，这想法有点天真了。&lt;/p&gt; 
&lt;p&gt;真实情况是：&lt;br&gt; AI 不但没抹平差距，反而把程序员之间的差距拉成了鸿沟。&lt;/p&gt; 
&lt;p&gt;以前顶尖程序员和普通程序员差 10 倍，&lt;br&gt; 现在差的可能是 100 倍、1000 倍。&lt;/p&gt; 
&lt;p&gt;为啥？因为 AI 直把普通程序员的短板暴露出来了。&lt;/p&gt; 
&lt;p&gt;你以前靠写 for 循环、CRUD、接个接口混饭吃，AI 一上来，几秒写完。你价值直接被抹平。&lt;br&gt; 但那些平时就擅长拆系统、搞架构的程序员，AI 简直是为他们量身打造的外挂。&lt;/p&gt; 
&lt;p&gt;特别是在 Cursor 甚至 Claude Code 加持下，给出更清晰意图，AI 秒写函数、重构模块，配合得像多年的搭子。关键是：你指令写得越准，反馈越强；你想不清楚，AI 也只能陪你绕圈。&lt;/p&gt; 
&lt;p&gt;过去写代码是「想 1 写 9」，现在变成「想 9 写 1」。&lt;br&gt; 想不明白的，一样卡死；想得清楚的，效率爆炸。&lt;/p&gt; 
&lt;p&gt;而且这不是简单一句学不学 prompt 的问题，&lt;br&gt; 是有没有那个「我知道这块应该用什么方法做」的系统建模能力。&lt;br&gt; 到底是写代码的，还是在设计系统的，在 AI 面前会无限放大。&lt;/p&gt; 
&lt;p&gt;工具越来越聪明的时代，真正的差距只会转移到一个地方：一个人脑子里到底装了多少「不可替代的判断」。&lt;/p&gt; 
&lt;p&gt;AI 把「怎么做」给你代劳了，但「做什么 + 为什么这么做」那部分，只会更贵。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364413</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364413</guid>
      <pubDate>Sun, 03 Aug 2025 10:48:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Databend 产品月报（2025 年 7 月）</title>
      <description>这个七月，我们专注于优化一个核心目标：JSON 查询性能。最令人兴奋的是，我们对 Virtual Columns 功能进行了全面升级，效果显著 ——JSON 查询速度提升 3 倍，同时数据扫描量减少 26 倍！...</description>
      <link/>
      <guid isPermaLink="false">Databend 产品月报（2025 年 7 月）</guid>
      <pubDate>Sun, 03 Aug 2025 10:35:00 GMT</pubDate>
    </item>
    <item>
      <title>小红书开源基于 VLM 的文档解析模型 dots.ocr</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;小红书发布并开源了 dots.ocr，这是一款基于视觉语言模型（VLM）的文档解析模型，支持多语言识别、布局检测与内容识别的一体化处理。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0805/175620_mM0A_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，dots.ocr&amp;nbsp;在单一的视觉语言模型中统一了布局检测和内容识别，同时能保持良好的阅读顺序。尽管其基础仅是一个 17 亿参数的」 小模型 「，但依然在多个 benchmark 上获得了匹配超大参数量闭源模型的业界领先（SOTA）性能。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0805/175601_Jbxf_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;模型亮点&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 OmniDocBench 上，在文本、表格、阅读顺序三项任务中均取得 SOTA 表现&lt;/li&gt; 
 &lt;li&gt;支持中文、英文及多种小语种，填补开源社区在多语言文档解析领域的空白&lt;/li&gt; 
 &lt;li&gt;通过更换 prompt 可灵活切换任务，省去了多模型流水线的复杂设计&lt;/li&gt; 
 &lt;li&gt;检测能力可媲美 YOLO 类模型&lt;/li&gt; 
 &lt;li&gt;基于 1.7B 参数构建，推理速度优于多种更大规模的 VLM 方案&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;目前 dots.ocr 已在 GitHub 和 Hugging Face 正式开源。&lt;/p&gt; 
&lt;p&gt;GitHub：https://github.com/rednote-hilab/dots.ocr&lt;br&gt; Hugging Face：https://huggingface.co/rednote-hilab/dots.ocr &lt;br&gt; Demo：https://dotsocr.xiaohongshu.com/&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364391</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364391</guid>
      <pubDate>Sun, 03 Aug 2025 09:57:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>全球首个人形机器人 3D 视觉系统诞生</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;北京人形机器人创新中心近日宣布推出名为"Humanoid Occupancy"的革命性视觉感知系统，这项技术被业界认为是人形机器人环境理解能力的重大突破。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;长期以来，机器人感知系统面临着严峻挑战。现有的感知技术大多只能适应单一或特定场景，当面对复杂多变的真实环境时，往往表现不佳。更为严重的是，许多系统无法有效整合来自不同传感器的数据，导致大量有价值的环境信息被浪费，甚至出现感知盲区，这直接影响了机器人的移动、导航和操作精度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;"Humanoid Occupancy"系统的核心创新在于引入了语义占用表征技术。该技术能够对三维空间进行精细化建模，通过体素单元直接描述每个空间位置的占用状态和物体类别信息。与传统的鸟瞰图表征方式相比，这种方法能够提供更加立体和全面的环境信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="314" src="https://oscimg.oschina.net/oscnet/up-7c26c2e343f4ef35a43230bb3975b05b910.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;该系统展现出三大技术优势。在空间信息处理方面，系统实现了对三维环境的完整编码，每个空间单元都能被准确识别和分类。在数据融合层面，语义占用表征天然支持多模态传感器协同工作，能够将 RGB 摄像头、深度传感器、激光雷达等设备采集的数据进行统一处理和分析。在系统架构上，研发团队通过优化传感器配置、构建专门的全景占用感知数据集，并设计了高效的多模态融合网络，确保了感知的准确性和响应速度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;项目团队还解决了数据稀缺这一行业痛点。他们构建了一个涵盖家庭生活、工业生产等多种应用场景的大规模数据集，并提供了详细的语义标注信息。这个数据集不仅为当前系统提供了训练基础，也为整个人形机器人研究领域提供了宝贵的资源支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;业内专家认为，"Humanoid Occupancy"系统的问世标志着人形机器人感知技术进入了新的发展阶段。随着这项技术的成熟和推广，人形机器人有望在家庭服务、工业制造、医疗护理等领域发挥更大作用，真正实现与人类的和谐共存。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;论文地址：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2507.20217" target="_blank"&gt;https://arxiv.org/pdf/2507.20217&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364385</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364385</guid>
      <pubDate>Sun, 03 Aug 2025 09:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>dyad - 本地开源 AI 应用构建器</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;Dyad 是一款本地开源 AI 应用构建器。它速度快、私密性强，并且完全由你自己掌控——就像 Lovable、v0 或 Bolt 一样，但直接在你的设备上运行。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="" height="303" src="https://static.oschina.net/uploads/space/2025/0804/151032_OhnZ_4252687.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;功能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;本地&lt;/strong&gt;：快速、私密、无锁定。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自带密钥&lt;/strong&gt;：使用你自己的 AI API 密钥，无需供应商锁定。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台&lt;/strong&gt;：可轻松在 Mac 或 Windows 上运行。&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/dyad</link>
      <guid isPermaLink="false">https://www.oschina.net/p/dyad</guid>
      <pubDate>Sun, 03 Aug 2025 09:33:00 GMT</pubDate>
    </item>
    <item>
      <title>华为宣布 CANN 全面开源开放</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;8 月 5 日，在升腾计算产业发展峰会上，华为轮值董事长徐直军宣布华为升腾硬件使能 CANN 全面开源开放，Mind 系列应用使能套件及工具链全面开源，支持用户自主的深度挖潜和自定义开发，加速广大开发者的创新步伐，让升腾更好用、更易用。&lt;/p&gt; 
&lt;p&gt;徐直军在主题演讲中提到，华为 AI 战略的核心是算力，并坚持升腾硬件变现。在本次峰会上，华为与合作伙伴、院校、科研机构等代表深入探讨如何更好地构建开源开放的升腾生态，加速 AI 创新和发展，并共同发起了《CANN 开源开放生态共建倡议》。&lt;/p&gt; 
&lt;p&gt;CANN(Compute Architecture for Neural Networks) 是华为面向 AI 推出的端云一致的异构计算架构，对上支持多种 AI 框架，如 PyTorch、TensorFlow、MindSpore 等;对下服务 AI 处理器与编程，发挥承上启下的关键作用，是提升升腾 AI 处理器计算效率的关键平台。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1634" src="https://static.oschina.net/uploads/space/2025/0805/172554_eg56_2720166.png" width="2830" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://www.hiascend.com/cann&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;CANN 已经广泛应用于图像识别、自然语言处理、智能驾驶、智能制造等领域，为这些领域的 AI 应用提供高性能、低功耗的计算支持。例如，在智能驾驶领域，CANN 可以为自动驾驶系统提供强大的 AI 计算支持，帮助车辆快速准确地识别道路标志、行人和其他车辆等信息，提高自动驾驶的安全性和可靠性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364373</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364373</guid>
      <pubDate>Sun, 03 Aug 2025 09:26:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>QuestMobile 发布 2025 年 AI 应用市场半年报，6 月全网 token 消耗量 116.3 万亿</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;QuestMobile 发布了 2025 年 AI 应用市场半年报。&lt;/p&gt; 
&lt;p&gt;&lt;img height="584" src="https://static.oschina.net/uploads/space/2025/0805/164740_qQRS_2720166.png" width="1035" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;QuestMobile 数据显示，上半年 AI 应用快速发展，形成了「四大梯队」的应用格局，其中，第一梯队由 AI 搜索引擎、AI 综合助手两个赛道构成，已经遥遥领先，截止到 2025 年 6 月，二者的月活跃用户规模分别达到 6.85 亿、6.12 亿。&lt;/p&gt; 
&lt;p&gt;第二梯队由 AI 社交互动、AI 专业顾问组成，月活跃用户规模分别为 1.26 亿、1.11 亿。&lt;/p&gt; 
&lt;p&gt;第三梯队由 AI 效率办公、AI 图像处理构成，月活跃用户规模分别为 0.69 亿、0.49 亿；第四梯队包括 AI 创作设计、AI 文案写作、AI 学科教育等等，均在 0.2 亿左右。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0805/164809_1pQN_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;四大梯队应用的表现，落到应用模式上，形成三大类型模式的此消彼长态势。截止到 2025 年 6 月，「移动端-应用插件 (In-App AI)」用户规模 6.3 亿，「移动端-原生 App」用户规模为 5.7 亿，「PC 网页应用」用户规模为 1.8 亿，相比 3 月份变化分别为增长 0.5 亿、下降 0.2 亿、下降 0.3 亿。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0805/164831_n1io_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0805/164844_nbff_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;「应用插件」的增长，反映出了用户使用 AI 时往往采用「场景化工具」的定位，更深层，则体现出用户对「大模型稳定输出结果」的诉求，一旦 AI 插件深度融入到头部厂商的业务流程之中且能持续输出稳定结果，「可选」就成了「优先选」，例如，百度 AI、夸克 AI 搜索的使用率分别达到 9.6%、56.0%；腾讯新闻的「新闻妹」、微博 AI 智搜使用率分别为 20.6%、3.8%。&lt;/p&gt; 
&lt;p&gt;与移动端 6.8 亿用户规模对应的是，有效 Token 消耗量上升至 116.3 万亿，其中五大互联网集团占总消耗量的 51.8%，达 60.3 万亿&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0805/164947_QIHn_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0805/165028_25v9_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;与此相关，PC 网页端玩家早已进入淘汰赛，八成玩家用户量在 50 万以下、68.8% 玩家负增长；原生 APP 市场也进入洗牌期，整个上半年，近七成原生 APP 玩家负增长，尤其是手机厂商预装的 AI 手机助手，以及中长尾玩家，在使用场景缺失叠加同质化的问题下，增长乏力……&lt;/p&gt; 
&lt;p&gt;完整内容查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FdxXwojBUQDXpBuCuC8cAIw" target="_blank"&gt;https://mp.weixin.qq.com/s/dxXwojBUQDXpBuCuC8cAIw&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364363</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364363</guid>
      <pubDate>Sun, 03 Aug 2025 08:46:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI Agent 创企 Reflection AI 正在洽谈融资逾 10 亿美元</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;外媒 The Information 援引知情人士&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Freflection-ai-targets-1-billion-take-meta-deepseek-open-source"&gt;报道称&lt;/a&gt;，美国 AI Agent 创企 Reflection AI 正在洽谈新一轮超 10 亿美元融资，用于打造开源大模型，与 DeepSeek、Mistral、Meta 等公司展开竞争，目前已基本募齐。&lt;/p&gt; 
&lt;p&gt;Reflection AI 于&amp;nbsp;2024 年由前谷歌 DeepMind 研究科学家 Ioannis Antonoglou 与 Misha Laskin 共同创立。两人深度参与过 AlphaGo、AlphaZero、MuZero 及 Gemini 的开发。该公司今年 3 月刚完成 1.3 亿美元 A 轮融资（红杉、CRV、NVentures 等参与），当时估值 5.45 亿美元。目前尚不清楚其 10 亿美元融资完成后的估值。&lt;/p&gt; 
&lt;p&gt;Reflection AI 的目标是构建超智能自主系统，并相信自主编程将推动超级智能发展，今年 7 月其发布首款编程 Agent 「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freflection.ai%2Fblog%2Fintroducing-asimov"&gt;Asimov」&lt;/a&gt;，可帮助开发者读取、编写、测试和部署代码，目前已从企业处获得少量收入。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-718022d3cb4a497e710a2e21dc77442fdaa.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364359</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364359</guid>
      <pubDate>Sun, 03 Aug 2025 08:28:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Mistral Large 2 训练耗水 28 万吨，碳排放堪比中型城市</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Mistral AI 近日发布了一份详尽的环境影响评估报告，首次全面披露了其旗舰模型 Mistral Large2 在整个生命周期中的真实环境代价。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;这份报告由 Mistral AI 携手企业 ESG 咨询公司 Carbone4 以及法国生态转型机构 ADEME 共同完成，采用了严格的科学评估方法，对模型从训练到推理全过程的温室气体排放和水资源消耗进行了精确测算。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;报告数据显示，Mistral Large2 在训练阶段产生的二氧化碳排放量达到 20.4 万吨，这一数字相当于一个拥有数十万人口的中型城市一年的碳排放总量。与此同时，模型训练过程还消耗了约 28.1 万吨水资源，这些水主要用于数据中心的冷却系统。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="405" src="https://oscimg.oschina.net/oscnet/up-75b861b8c2991e1465912b7e3fdd39a39c1.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;从日常使用角度来看，环境成本同样不容忽视。当用户使用 Mistral Large2 进行一次标准的文本生成任务时，比如输出约 400 个 Token 的内容（相当于一页文本），系统会产生 1.14 克的二氧化碳排放，同时消耗 45 毫升水资源。虽然单次使用的环境影响看似微小，但考虑到 AI 模型的广泛应用和高频使用，累积效应将十分可观。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;报告中最具价值的发现之一是模型规模与环境影响之间的直接关系。研究显示，在产生相同数量的推理输出时，不同 AI 模型的环境影响与其参数规模呈现明显的正比关系。这一发现为 AI 行业的可持续发展指明了方向：开发小型化、专业化的 AI 模型不仅能够降低计算成本，更重要的是能够显著减少环境负担。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="254" src="https://oscimg.oschina.net/oscnet/up-e9ea36e0f8905ebaae56e8011826be665d4.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;从行业发展趋势来看，这种透明化的环境影响披露可能将成为 AI 公司的新标准。随着全球对气候变化关注度的不断提升，以及各国政府对企业碳排放监管的日益严格，AI 公司主动公开环境数据不仅体现了社会责任，也有助于建立更加可持续的商业模式。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364355</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364355</guid>
      <pubDate>Sun, 03 Aug 2025 08:21:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>阿里中标工商银行 AI 编程项目</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;8 月 4 日，中国工商银行发布《软件开发中心智能研发平台》中标结果。&lt;/p&gt; 
&lt;p&gt;阿里云凭借通义灵码独家中标，根据中标公告，通义灵码将为工商银行智能研发平台提供代码补全、代码问答及单测智能体等服务。此前，工商银行已将阿里 Qwen 模型应用于智能风控。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0805/161416_W9P9_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根据公告披露，本项目是中国工商银行软件开发中心、业务研发中心、数据中心、 北京分行、宁波分行、浙江分行进行阿里云通义灵码 1 年期的订阅，用户数量 5000 个。&lt;/p&gt; 
&lt;p&gt;公告显示，阿里云计算有限公司、北京百度网讯科技有限公司、华为技术有限公司、北京智谱华章科技有限公司都是推荐供应商，但最终工商银行选择阿里云作为供应商。&lt;/p&gt; 
&lt;p&gt;通义灵码是阿里云研发的 AI 编程助手工具。2024 年以来，阿里云中标多个 AI 智能编程项目，其中包括浙商证券、国投证券、国信证券、国投瑞银基金管理有限公司、邮储银行、南方航空、中原消金、中国一汽等发起的类似采购项目。&lt;/p&gt; 
&lt;p&gt;通义灵码基于阿里云自研的 Qwen 模型。日前，通义千问最新的 AI 编程大模型 Qwen3-Coder 正式开源，该模型拥有卓越的代码和 Agent 能力，在 Agentic Coding、Agentic Browser-Use 和 Foundational Coding Tasks 上均取得了开源模型的 SOTA 效果。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364349</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364349</guid>
      <pubDate>Sun, 03 Aug 2025 08:15:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>得物向量数据库落地实践</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;h1&gt;一、背景&lt;/h1&gt; 
&lt;p&gt;信息通信技术（ICT）正经历着前所未有的变革浪潮，以大模型和生成式人工智能（GenAI）为代表的技术突破，正在引发全球产业体系的深刻变革，成为驱动企业技术架构革新和商业模式转型的关键引擎。&lt;/p&gt; 
&lt;p&gt;得物是广受年轻人喜爱的品质生活购物社区。在 AI 鉴别、图搜、算法、安全风控等场景下都广泛使用了 GenAI 技术。&lt;/p&gt; 
&lt;p&gt;向量数据库作为 GenAI 的基础设施之一，通过量化的高维空间数据结构（如 HNSW 算法），实现对嵌入向量（Embeddings Vector）的高效存储、索引和最近邻搜索（ANN），支撑包括多模态数据表征在内的复杂智能应用。&lt;/p&gt; 
&lt;h1&gt;二、认识向量数据库&lt;/h1&gt; 
&lt;h3&gt;向量数据来源和存储&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-0cda23b204bf56af58eab93814e0f033638.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;一般向量数据库中向量的来源是将图片、音频、视频、文本等非结构化数据，将这些非结构化数据通过对应的量化算法计算出一个多维度的向量（生产使用一般向量维度会大于 512），并且将向量数据持久化在特定的存储上。&lt;/p&gt; 
&lt;h3&gt;向量数据库是如何工作&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-cd7a7eddd06e3ff316c7f5a5fbaf69a81ca.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;向量数据库在查询的时候一般会将需要查询的非结构化数据通过量化，计算成一个多维度向量数据，然后在数据库中搜索出和查询向量相似的数据。（需要注意的是这边查询的是相似的数据而不是相同的数据）。&lt;/p&gt; 
&lt;h1&gt;三、向量数据库对比传统数据库&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-a757c18cd6e206145390cdb2b1d8d2bf7b5.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-69692744f763095569db3b281c391fbb7d7.png" alt="" referrerpolicy="no-referrer"&gt; 向量数据库在数据结构、检索方法、擅长领域与传统数据库有很大的不同。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;传统数据库&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;结构是处理离散的标量数据类型（例如数字和字符串），并通过行和列来表达组织数据（就是一个表格）。传统数据库主要为了解决结构化数据的精确管理和高效查询问题。并且传统数据库通过 B 树索引、哈希索引等数据结构，能够快速定位到精确匹配的记录。更重要的是，传统数据库通过 ACID 事务特性（原子性、一致性、隔离性、持久性）确保了在数据中数据的绝对准确性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;向量数据库&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;为了解决非结构化数据的语义搜索问题，解决如何在海量的高维向量数据中，快速找到与查询向量最相似的结果。比如在推荐系统中找到与用户喜好相似的物品，或在图像库中检索出与查询图片最相近的图片。这类问题的特点是：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;查询的不是精确匹配，而是相似度排名。&lt;/li&gt; 
 &lt;li&gt;数据维度极高（通常 128-2048 维）。&lt;/li&gt; 
 &lt;li&gt;数据规模庞大（可能达到十亿级别）。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;传统数据库的精确查询方式在这种场景下完全失效，因为：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;无法为高维向量建立有效的 B 树索引。&lt;/li&gt; 
 &lt;li&gt;计算全量数据的精确相似度代价过高。&lt;/li&gt; 
 &lt;li&gt;无法支持"相似但不完全相同"的搜索需求。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;四、如何选择向量数据库&lt;/h1&gt; 
&lt;p&gt;向量数据库比较&lt;/p&gt; 
&lt;p&gt;下面我们通过 10 个不同维度来比较一下不同向量数据库的区别： &lt;img src="https://oscimg.oschina.net/oscnet/up-7b3f94f8094ee22638f868bbb85d76dc33c.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;从上面表格可以看到：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;自 2016 年起 ，向量数据库逐渐崭露头角，成为 AI 和大数据领域的重要基础设施。而到了 2021 年之后 ，随着深度学习、大模型和推荐系统的迅猛发展，向量数据库正式迈入爆发式增长时代 ，成为现代数据架构中不可或缺的核心组件。&lt;/li&gt; 
 &lt;li&gt;超过半数的向量数据库均采用分布式架构设计，并且这些支持分布式部署的系统普遍具备弹性扩缩容能力，能够根据业务需求实现资源的动态调整。&lt;/li&gt; 
 &lt;li&gt;当业务需要处理亿级甚至更高规模的向量数据时，推荐以下高性能、可扩展的向量数据库：Vespa、Milvus/Zilliz、Vald、Qdrant。&lt;/li&gt; 
 &lt;li&gt;当前主流的向量数据库普遍采用模块化、插件式的设计理念。其核心引擎大多基于 C/C++ 开发，以追求极致的性能表现。与此同时，Go 和 Rust 也正在这一领域崭露头角。&lt;/li&gt; 
 &lt;li&gt;在向量数据库领域，HNSW（Hierarchical Navigable Small-World）和 DiskANN 正逐渐成为主流索引方案。其中 HNSW 主要以内存搜索为主，DiskANN 主要以磁盘搜索为主。值得注意的是，Qdrant 在优化 HNSW 的基础上，进一步实现了，基于磁盘的 HNSW 检索能力。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;选择流行的索引&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在向量数据库技术领域，有 HNSW 和 DiskANN 作为两大主流索引方案，各自展现了独特的技术优势。我们从以下关键维度进行专业对比分析。 &lt;img src="https://oscimg.oschina.net/oscnet/up-7b31b93db587d573ea308d3a5ec2a4ee2d6.png" alt="" referrerpolicy="no-referrer"&gt; 从上表格我们可以得到，HNSW 和 DiskANN 适用于不同的场景：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;HNSW ：以，内存优先，的设计实现高性能搜索，适合，低延迟、高吞吐，要求严格的场景，如实时推荐、广告检索等。&lt;/li&gt; 
 &lt;li&gt;DiskANN ：以，磁盘存储优化，为核心，在保证较高召回率的同时，显著降低硬件成本 ，适用于大规模数据下的经济型检索需求。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;随着数据规模的持续增长，HNSW 和 DiskANN 的混合部署模式，或将成为行业标准，让用户能根据业务需求灵活选择 "极致性能" 或 "最优成本" 的检索策略。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;综合比较和选择&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-8d0f4993b58093139ccf84e7b71ac1a0406.png" alt="" referrerpolicy="no-referrer"&gt; 从表格中可以得到：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;如果数据流比较小，并且自身对 Redis、PG、ES 比较熟悉，就可以选择 Redis、PG、ES。如 DBA 团队就比较适合。&lt;/li&gt; 
 &lt;li&gt;如果数据量比较大，并且前期人力不足可以使用云托管方案。选择 Zilliz、Pinecone、Vespa 或者 Qdrant，如果后期计划从云上迁移到自建可以选择 Zilliz、Vespa 或者 Qdrant。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;得物选择 Milvus 作为向量数据库&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我们的需求&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;社区图搜和 AI 鉴别需要大量的数据支持，得物业务场景要求能支持十亿级向量数据搜索，有如下要求：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;大数据量高性能搜索，RT 需要在 90ms 以内。&lt;/li&gt; 
 &lt;li&gt;大数据量但是性能要求不高时，RT 满足 500ms 以内。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;需要支持快速扩缩容：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;满足上面 2 点就已经锁定在 Milvus、Qdrant 这两个向量数据库。如果从架构复杂度和维护/学习成本的角度考虑，我们应该优先选择 Qdrant，因为它的架构相比 Milvus 没有那么复杂，并且维护/学习成本没有 Milvus 高，重要的 Qdrant 可以单独集群部署，不需要 k8s 技术栈的支撑。&lt;/p&gt; 
&lt;p&gt;Milvus 和 Qdrant 架构比较&lt;/p&gt; 
&lt;p&gt;Milvus 架构：Milvus 部署依赖许多外部组件，如存储元信息的 ETCD、存储使用的 MinIO、消息存储 Pulasr 等。 &lt;img src="https://oscimg.oschina.net/oscnet/up-ef69a34a4b38ff38a8db51066fa19407038.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Qdrant：Qdrant 完全独立开发，支持集群部署，不需要借助 ETCD、Pulsar 等组件。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-4dbf1bddb8b80795ba364987e6e1e76b0a5.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;选择 Milvus 的原因&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;※ 业务发展需求&lt;/p&gt; 
&lt;p&gt;业务属于快速发展阶段，数量的变化导致扩缩容频繁，使用支持 k8s 的 Milvus 在扩缩容方面会比 Qdrant 快的多。&lt;/p&gt; 
&lt;p&gt;※ 技术储备和社区良好&lt;/p&gt; 
&lt;p&gt;对 DBA 而言，向量数据库领域需要持续的知识更新和技术支持。从问题解决效率来看，国内技术社区对 Milvus 的支持体系相较于 Qdrant 更为完善。&lt;/p&gt; 
&lt;p&gt;※ 契合得物 DBA 开发栈&lt;/p&gt; 
&lt;p&gt;Milvus 使用的开发语言是 Go，契合 DBA 团队技术栈，在部分运维场景下，通过二次开发满足运维需求。例如：使用 milvus-backup 工具做迁移，部分的 segment 有问题需要跳过。自行修改一下代码编译运行即可满足需求。 &lt;img src="https://oscimg.oschina.net/oscnet/up-661ee1f08c24fa70de9a6918270c9920998.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;五、Milvus 在得物的实践&lt;/h1&gt; 
&lt;h3&gt;部署架构演进&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;小试牛刀&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;初始阶段，我们把 Milvus 部署在 K8S 上，默认使用 HNSW 索引。架构图如下，Milvus 整个架构较为复杂，外部依赖的组件多，每个集群需要部署自己的 ETCD、ZK、消息队列模块，多套集群共享着同一个存储。 &lt;img src="https://oscimg.oschina.net/oscnet/up-85c7f3a54e4017a82e2144ca31dc9c9edac.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;存储拆分，每个集群独立存储&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;共享存储瓶颈导致稳定性问题凸显。&lt;/p&gt; 
&lt;p&gt;随着业务规模扩展，集群数量呈指数级增长，我们观测到部分集群节点出现异常重启现象，经诊断确认该问题源于底层共享存储存在性能瓶颈。 &lt;img src="https://oscimg.oschina.net/oscnet/up-91b766b66e4da9cd962490d3db5c76dd12d.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-1fc4ebf1081693776ab1227426d36125274.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;独立资源池迁移至共享资源池&lt;/h3&gt; 
&lt;p&gt;通过混布的方式提升资源利用率。&lt;/p&gt; 
&lt;p&gt;前期为了在性能和稳定性上更好的服务业务，Milvus 部署的底层机器都是独立的，目的就是为了和其他应用隔离开，不相互影响。但是随着集群的越来越多，并不是所有的集群对稳定性和性能要求那么高，从监控上看 Milvus 集群池的资源使用不超过 10%。为了提高公司资源利用率，我们将独立部署的 Milvus 迁移高共享资源池中，和大数据、业务应用等 K8S 部署相关服务进行混合部署。 &lt;img src="https://oscimg.oschina.net/oscnet/up-ccf8f41e8a8b11818d2ad117e1a6ca986f2.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DiskANN 索引的使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;数据量大且搜索 QPS 小时选择 DiskANN 作为索引。通过监控发现有很多集群数据量比较大，但是 QPS 并不是那么高，这时候就考虑对这些性能要求不高的集群是否有降本的方案。通过了解我们默认使用的 HNSW 索引需要将所有数据都加载到内存中进行搜索，第一反应就是它的内存查询和 Redis 一样，那是否有类似 pika 的方案内存只存少部分数据大部分数据存在磁盘上。这时候发现 DiskANN 就能达到这样的效果。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;性能压测&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;※ 集群规格 &lt;img src="https://oscimg.oschina.net/oscnet/up-72cd5eae988980c50cbf3e3e2dbf79e0a58.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-b2bb335233ac7acd5fd772d6fd0595fde98.png" alt="" referrerpolicy="no-referrer"&gt; QPS &lt;img src="https://oscimg.oschina.net/oscnet/up-e3eadce1ef6bb483be8401a1df782d60ca5.png" alt="" referrerpolicy="no-referrer"&gt; 延时（ms）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;新增 DiskANN 索引后集群架构&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;增加 DiskANN 后我们需要对相关服务器上挂载 NVME SSD 磁盘，用于在磁盘上搜索最终数据。 &lt;img src="https://oscimg.oschina.net/oscnet/up-7845f542c099aa420d623ae9f41a1f2ebce.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DiskANN 加载数据过程&lt;/strong&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-b8685110e3f77f8730275a5c1ad905bfaa4.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;引入 Zilliz&lt;/h3&gt; 
&lt;p&gt;经过大规模生产验证，Milvus 在实际业务场景中展现出卓越的性能表现和稳定性，获得业务方的高度认可。并且也吸引来了 C 端核心业务系统的使用。在使用前，我们使用了业务真实流量充分的对 Milvus 进行了压测，发现 Milvus 在亿级别数据量的情况下满足不了业务，因此对于部分核心场景我们使用了 Zilliz。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Milvus 和 Zilliz 压测&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;业务的要求是集群返回的 RT 不能操过 90ms。&lt;/p&gt; 
&lt;p&gt;使用真实的业务数据（亿级别）和业务请求对 Milvus 进行压测，发现 Milvus 并不能满足业务的需求。 &lt;img src="https://oscimg.oschina.net/oscnet/up-d57f42a7b49f4e13d302bf283b080799e09.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Milvus RT 200 不满足业务需求，并且 QPS 一直上不去，无论我们对 QueryNode 扩容多大，其中还发生过，将 Query 扩容到 60 个后，反而 RT 上升的问题，排查后是因为有的 QueryNode 和 Proxy 交互的时候网络会抖动影响了整体的 RT。&lt;/p&gt; 
&lt;p&gt;从上面可以看出就算业务能容忍 RT=200ms 的，Milvus 也需要创建 3 个相同的集群提供业务访问，并且业务需要改造代码实现多写、多读的功能，最终还会发现 3 个集群的成本远高于 Zilliz。&lt;/p&gt; 
&lt;p&gt;通过成本和性能上的考虑，对于大数据量并且性能和稳定性要求高场景，我们将选用 Zilliz。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;迁移方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;对于不同业务场景，我们分别制定了以下 3 种迁移方案：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;方案 1：业务自行导入数据使用&lt;/strong&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-d3e88a2430949dc1c8fface776f221b2e9b.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;方案 2：备份恢复 + 业务增量&lt;/strong&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-a69dc0aedcd116734954e4cfc2254341793.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;方案 3：全量 + 增量 + 业务双写/回滚&lt;/strong&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-69e5aa5e4f32fcbcd967f15ae2b12ac6e7b.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;高可用架构部署&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;随着业务关键性持续提升，Milvus 对应的 SLA 变得越来越重要。在此背景下，构建完善的 Milvus 高可用架构与灾备体系已成为系统设计的核心考量要素。比如：主从、多 zone 部署，Proxy 高可用，Minio 高可用，一个 zone 完全挂了怎么办等问题？&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;方案 1: 同城多机房混部&lt;/strong&gt; 正常访问： &lt;img src="https://oscimg.oschina.net/oscnet/up-63eade557eb2f115580d9c3242450848d2c.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;当 Zone1 不可用：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;访问会切换到 Zone 2 的备用 SLB 中。&lt;/li&gt; 
 &lt;li&gt;备用 SLB 会访问本机房的 Proxy。&lt;/li&gt; 
 &lt;li&gt;由于 QueryNode 1 和 QueryNode 2 已经不可用，需要重建 QueryNode，新生成 QueryNode 5、QueryNode 6 并且加载数据提供访问。 &lt;img src="https://oscimg.oschina.net/oscnet/up-8c1cefbb988e108ca300d55636dfea208f0.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;方案 2: 同城多 zone 多副本就近访问&lt;/strong&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-3f750018da0756f4cfd6909ca43cf97a45d.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;整个 Zone 不可用： 当 Zone1 整个不可用，不影响 Zone2 的访问。 &lt;img src="https://oscimg.oschina.net/oscnet/up-0c816e014c813420c5359e9ac918e28a809.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;方案 3: 同城多 zone 单独部署业务交叉访问互相 backup&lt;/strong&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-b0b40abb751511b869bb9730075b85483a4.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;当整个 zone 不可用&lt;/strong&gt; 整个 zone1 不可用，由于线路 1 会访问到 zone1 的 SLB，因此线路 1 访问会报错，业务需要将线路 1 切换成线路 2。 &lt;img src="https://oscimg.oschina.net/oscnet/up-251500aaeaec5a842676f4a2ad045b6e2f7.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;六、向量数据库运维沉淀&lt;/h1&gt; 
&lt;h3&gt;索引结构和搜索原理&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;HNSW 索引&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;※ 相关信息 &lt;img src="https://oscimg.oschina.net/oscnet/up-8d973662a3da8f42e3d3f72fca2502e3aad.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;※ 内存结构&lt;/p&gt; 
&lt;p&gt;由于空间问题，图中并没有完全按 M=16、ef=200 参数进行画图。 &lt;img src="https://oscimg.oschina.net/oscnet/up-4f12f963d98d331de42c87be583071a9653.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;※ HNSW 搜索过程，现在需要搜索向量 N = [....] &lt;img src="https://oscimg.oschina.net/oscnet/up-07b22aef71df4d82d837b06a7e37193f726.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-5ec718d35908ec0d2ba415a768a4926a038.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-d053eb8181af70cbd4501596a1ef253c3b8.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DiskANN 索引&lt;/strong&gt; ※ 相关信息 &lt;img src="https://oscimg.oschina.net/oscnet/up-450513a5d2d5fe99bbce4a398c680ceaedc.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;※ 存储结构和裁剪过程&lt;/p&gt; 
&lt;p&gt;由于画图空间问题，没办法将，聚类数=10、100/内存聚类、1w/磁盘聚类，信息画全。 &lt;img src="https://oscimg.oschina.net/oscnet/up-a5a0d4a4ece323c50b697f2d55c47f474b7.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-1217534f1bffe9f21462c1cca76c0adeb3a.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;初始化随机连接：DiskANN 算法会将向量数据生成一个密集的网络图，其中点和点是随机链接的，并且每个点大概有 500 个链接。&lt;/li&gt; 
 &lt;li&gt;裁剪冗余链接：通过计算点和点点距离裁剪掉一些冗余的链接，留下质量高的链接。&lt;/li&gt; 
 &lt;li&gt;添加快速导航链接：计算出图中若干个中心点，并且将这些中心点进行链接，并且这些链接会跳过其他点，如果图中黄色链接。&lt;/li&gt; 
 &lt;li&gt;重复进行裁剪优化过程，达到最优的情况。&lt;/li&gt; 
 &lt;li&gt;PQ 量化操作生成索引： 
  &lt;ol&gt; 
   &lt;li&gt;将向量分成多个子空间。&lt;/li&gt; 
   &lt;li&gt;独立对每个子空间进行聚类操作，并且计算出多个质心。&lt;/li&gt; 
   &lt;li&gt;将每个子向量映射到最近的质心 ID。&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;※ DiskANN 搜索过程&lt;/p&gt; 
&lt;p&gt;现在需要搜索向量 N = [....] &lt;img src="https://oscimg.oschina.net/oscnet/up-2e355900f46c204ecf71cfd3422d6d91bdf.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-a146ea721ffe8aa61311104597260cabd17.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;并不是你想的那样&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;querynode 越多越快？&lt;/strong&gt; querynode 越多，查询越快，并发越高？&lt;/p&gt; 
&lt;p&gt;※误区原因，将 querynode 看成 redis cluster，增加节点数能提高查询并发，然而并不是。redis cluster 增加节点，数据量会尽可能的打散到每个节点中，所以增加节点和性能提升是相对成正比。但是 milvus 不一样，milvus 打散的基本单位是 segment，一般 segment 大小 (1G/个)，他的粒度比 redis cluster 要大。理论上的理想情况是 1 个 segment 对应 1 个 querynode，但是实际情况会收到多因素的干扰，会导致 querynode 越多出现不稳定的概率越大，如某个 querynode 网络抖动会影响整体的查询 RT。 &lt;img src="https://oscimg.oschina.net/oscnet/up-13bb234b91f870bc2600d035a46b385949c.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;标量索引提高性能&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在标量上创建索引，搜索带上标量过来能提高性能？&lt;/p&gt; 
&lt;p&gt;※误区原因&lt;/p&gt; 
&lt;p&gt;使用传统关系型数据库的索引查询来理解 Milvus 的索引查询，字段上创建了索引能使用到索引扫描进行数据查询，比全表扫描快。然而并不是，关系型数据库的属于精确查询，Milvus 属于近似最近邻搜索（ANNS），milvus 的查询是不保证绝对精确，使用了标量索引查询反而会导致数据变稀疏查询会变慢。&lt;/p&gt; 
&lt;p&gt;使用标量索引筛选不一定快原因，如下示例： &lt;img src="https://oscimg.oschina.net/oscnet/up-5f5c84c2c52aa813c7cb3dd1c2d529a67e2.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-8b764581d124ee5548a93da66e3b450d0b5.png" alt="" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-92c92c6d89b6d7ce43b0e151e8c1d3a9f26.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;通过 ANNS 搜索后再使用标量搜索，过程如下： &lt;img src="https://oscimg.oschina.net/oscnet/up-d911b5208cd8877467544ceeab2d88d5761.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;思考：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在第二步如果使用 ANNS 搜索完成之后到底是否需要使用标量索引进行搜索。 如果需要使用标量索引进行搜索那边在 ANNS 搜索后的结果集需要额外的进行索引构建，然后再进行过滤。构建构建过程其实也是需要便利结果集，那么是不是可以直接在便利的时候直接进行结果集的筛选。 那么其实在某种程度上是不是标量索引没那么好用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;大量单行 dml 不批量写入能提高数据库性能&lt;/strong&gt; 大量单行 dml，不使用批量写入操作，能提高数据库性能。&lt;/p&gt; 
&lt;p&gt;※误区原因，使用传统关系型数据库为了让系统尽量少的大事务，减少锁问题并且提高数据库性能。然而实际上 Milvus 如果有很多的小事务反而会影响到数据库的性能。因为 Milvus 进行 dml 操作会生成 deltalog、insertlog，当 dml 都是小事务就会生成大量的相对较小的 deltalog 和 insertlog 文件，deltalog 和 insertlog 在和 segment 做合并的时候会增加打开和关闭文件次数，并且增加做合并次数，导致 io 一直处于繁忙状态。&lt;/p&gt; 
&lt;p&gt;deltalog 和 insertlog 生成的契机有 2 种：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;当数据量达到了一定的阈值会进行生成 deltalog 或 insertlog。&lt;/li&gt; 
 &lt;li&gt;Milvus 会定时进行生成 deltalog 或 insertlog。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;eltalog、insertlog 和 segment 合并过程 &lt;img src="https://oscimg.oschina.net/oscnet/up-e83c8301d52b657fd030766551a37493993.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;人为让 deltalog、segment 执行时机可预测&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;如果业务对数据实现要求不是那么高，建议使用定时批量的方式对数据进行写入，比如可以通过监控获取到每天的波谷时间段，在波谷时间段内进行集中式数据写入。原因是如果不停的在做写入，无法判断进行合并 segment 的时间点，要是在高峰期进行了合并操作，很有可能会影响到集群性能。&lt;/p&gt; 
&lt;h3&gt;错误处理&lt;/h3&gt; 
&lt;p&gt;※ 2.2.6 批量删除数据 bug，导致业务无法查询，报错： &lt;img src="https://oscimg.oschina.net/oscnet/up-c2575b184ce6e8e5012630736066d0143f9.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;解决：将集群升级到 2.2.16，并且让业务，批量删除和写入数据。&lt;/strong&gt; ※ find no available rootcoord, check rootcoord state&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;报错：&lt;/strong&gt; &lt;img src="https://oscimg.oschina.net/oscnet/up-7766a121463ad40eae0c37e6de3c5cd7ccd.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问题：rootcoord 和其他 pod 通信出现了问题。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;解决：先重建 rootcoord，再依次重建相关的 querynode、indexnode、queryrecord、indexrecord。&lt;/p&gt; 
&lt;p&gt;※ 页面查询报错 （Search 372 failed, reason Timestamp lag too large lag） &lt;img src="https://oscimg.oschina.net/oscnet/up-62905b004a6c5e69a206b016a8365cca8de.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;问题：pulsar 组件对应相关 pod 问题导致不进行消费。&lt;/p&gt; 
&lt;p&gt;解决：将 pulsar 组件相关 pod 进行重建，查看日志，并且等待消费 pulsar 完成。&lt;/p&gt; 
&lt;p&gt;※ Query Node 限制内存不足 （memory quota exhausted）&lt;/p&gt; 
&lt;p&gt;报错： &lt;code&gt;&amp;lt;MilvusException: (code=53, message=deny to write, reason: memory quota exhausted, please allocate more resources, req: /milvus.proto.milvus.MilvusService/Insert)&amp;gt;&lt;/code&gt; 原因：配置中 Query Node 配置内存上线达到瓶颈。&lt;/p&gt; 
&lt;p&gt;解决：增加 Query Node 配置或者增加 QueryNode 节点数。&lt;/p&gt; 
&lt;p&gt;※ 底层磁盘瓶颈导致 ETCD 访问超时&lt;/p&gt; 
&lt;p&gt;报错： &lt;img src="https://oscimg.oschina.net/oscnet/up-83b4b232ec04a1ec02040f971420eb443ef.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;解决：从架构方面上进行解决，在集群维度将磁盘进行隔离，每个集群使用独立磁盘。&lt;/p&gt; 
&lt;h1&gt;七、未来展望&lt;/h1&gt; 
&lt;h4&gt;数据迁移闭环&lt;/h4&gt; 
&lt;p&gt;数据迁移闭环：对于业务数据加载到向量数据库的场景，业务只关心数据的读取和使用，不需要关心数据的量化和写入。DBA 侧建立数据迁移闭环（下图绿色部分）。&lt;/p&gt; 
&lt;h4&gt;数据准确性校验&lt;/h4&gt; 
&lt;p&gt;对于上游数据（如 MySQL）和下游向量数据库数据库一致性校验问题，DBA 业将协同业务、Milvus 进行共建校验工具，保障数据的准确性。 &lt;img src="https://oscimg.oschina.net/oscnet/up-53a14df5e6ce9901564e14c3a3b541abebe.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;往期回顾&lt;/p&gt; 
&lt;p&gt;1.社区搜索离线回溯系统设计：架构、挑战与性能优化｜得物技术&lt;/p&gt; 
&lt;p&gt;2.从 Rust 模块化探索到 DLB 2.0 实践｜得物技术&lt;/p&gt; 
&lt;p&gt;3.eBPF 助力 NAS 分钟级别 Pod 实例溯源｜得物技术&lt;/p&gt; 
&lt;p&gt;4.正品库拍照 PWA 应用的实现与性能优化｜得物技术&lt;/p&gt; 
&lt;p&gt;5.汇金资损防控体系建设及实践 | 得物技术&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;文 / 呆呆，少晖&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;关注得物技术，每周更新技术干货，要是觉得文章对你有帮助的话，欢迎评论转发点赞～ 未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/p&gt; 
&lt;p&gt;注：本文部分代码上传代码可读性差，换成截图上传，需要复制代码的小伙伴可以去得物技术公众号查询。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18686778</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18686778</guid>
      <pubDate>Sun, 03 Aug 2025 08:14:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>盛大网络挖角代季峰，筹建新 AGI 公司欲对标 DeepSeek</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;AI 科技评论独家获悉，近日盛大网络挖角清华大学电子工程系副教授代季锋，正在筹备一家新的 AGI 公司，号称「对标 DeepSeek」，已有多位技术人才被猎头接触、介绍该团队的工作机会。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，该项目正处于核心团队招募阶段。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;项目的核心人物之一代季峰，是清华大学电子工程系副教授，研究方向聚焦于视觉信息理解的基础模型与核心算法。早年在微软亚洲研究院视觉组任首席研究员和研究经理，2019 年加入商汤科技研究院担任执行研究总监，2022 年起全职回归清华。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;他在相关领域发表国际顶级论文 80 余篇，总引用超过 5 万次，其中以可变形卷积为代表的工作被公认为物体识别领域的重要成果，已成为 PyTorch 等深度学习框架中的标准算子。同时，他也是视觉领域顶刊 TPAMI 的副编辑，IJCV 的编委，和视觉领域顶会 NeurIPS、ICCV、CVPR、ECCV、ICLR 的领域主席，ICCV 2019 的宣传主席。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="375" src="https://oscimg.oschina.net/oscnet/up-b60cee2b1b5417bb8f774db6facc43e46cf.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;代季峰的加入，意味着这可能不仅是一个围绕大模型能力建设的创业项目，更有可能在模型结构与认知机制层面，探索神经科学与主流 AI 架构的深度融合。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;值得一提的是，相较于大模型创业中常见的「AI Lab 科学家 + 大厂工程负责人」组合，这一项目的路径颇为独特：一位深植高校一线，拥有丰富的视觉理解方向学术积累，另一方则来自旧互联网时代的实业背景。这类「旧互联网 + 学术背景」的组合在当前创业市场中并不多见，可能在原始问题定义与研究路径选择上具备更强的探索性，同时也意味着在人才组织、工程落地和产业节奏上将面临更复杂的挑战。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364346</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364346</guid>
      <pubDate>Sun, 03 Aug 2025 08:09:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌 AI 编程 Agent 「Jules」 支持创建 PR</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;谷歌 AI 编程 Agent 「Jules」&amp;nbsp;新增创建拉取请求（PR）的功能，实现了从编码到提交的完整开发闭环。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjules.google%2Fdocs%2Fchangelog%2F" target="_blank"&gt;根据 Jules 的更新日志&lt;/a&gt;，它现在可以将代码变更整合并创建拉取请求（Pull Request）。完成任务后，用户可以要求 Jules 打包变更、撰写摘要并开启一个待审查的 PR，实现了从规划、编码、提交到 PR 的完整闭环。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-be3ad0bacfe87f8715b643becb4e4d845d2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="636" src="https://static.oschina.net/uploads/space/2025/0805/152238_a4vc_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Jules 官方称，本周是「Jules 发布周」，预计将会有更多功能升级。Google AI 开发者关系负责人 Logan Kilpatrick 也在社交媒体上发帖称「big week ahead!」（未来将是重要的一周！），不确定是否仅与 Jules 有关。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0805/152248_VoyB_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364327</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364327</guid>
      <pubDate>Sun, 03 Aug 2025 07:24:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>警惕 AI 数据投毒，0.01% 虚假训练文本可致有害内容增加 11.2%</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;国家安全部发布安全提示&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FjJ33UUZzgVn3LD9BpJe1bA" target="_blank"&gt;文章&lt;/a&gt;指出，当前，人工智能已深度融入经济社会发展的方方面面，在深刻改变人类生产生活方式的同时，也成为关乎高质量发展和高水平安全的关键领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;然而，人工智能的训练数据存在良莠不齐的问题，其中不乏虚假信息、虚构内容和偏见性观点，造成数据源污染，给人工智能安全带来新的挑战。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;人工智能的三大核心要素是算法、算力和数据，其中数据是训练 AI 模型的基础要素，也是 AI 应用的核心资源。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;提供 AI 模型的原料。&lt;/strong&gt;海量数据为 AI 模型提供了充足的训练素材，使其得以学习数据的内在规律和模式，实现语义理解、智能决策和内容生成。同时，数据也驱动人工智能不断优化性能和精度，实现模型的迭代升级，以适应新需求。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;影响 AI 模型的性能。&lt;/strong&gt;AI 模型对数据的数量、质量及多样性要求极高。充足的数据量是充分训练大规模模型的前提；高准确性、完整性和一致性的数据能有效避免误导模型；覆盖多个领域的多样化数据，则能提升模型应对实际复杂场景的能力。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;促进 AI 模型的应用。&lt;/strong&gt;数据资源的日益丰富，加速了「人工智能+」行动的落地，有力促进了人工智能与经济社会各领域的深度融合。这不仅培育和发展了新质生产力，更推动我国科技跨越式发展、产业优化升级、生产力整体跃升。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;高质量的数据能够显著提升模型的准确性和可靠性，但数据一旦受到污染，则可能导致模型决策失误甚至 AI 系统失效，存在一定的安全隐患。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;投放有害内容。&lt;/strong&gt;通过篡改、虚构和重复等「数据投毒」行为产生的污染数据，将干扰模型在训练阶段的参数调整，削弱模型性能、降低其准确性，甚至诱发有害输出。研究显示，当训练数据集中仅有 0.01% 的虚假文本时，模型输出的有害内容会增加 11.2%；即使是 0.001% 的虚假文本，其有害输出也会相应上升 7.2%。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;造成递归污染。&lt;/strong&gt;受到数据污染的人工智能生成的虚假内容，可能成为后续模型训练的数据源，形成具有延续性的「污染遗留效应」。当前，互联网 AI 生成内容在数量上已远超人类生产的真实内容，大量低质量及非客观数据充斥其中，导致 AI 训练数据集中的错误信息逐代累积，最终扭曲模型本身的认知能力。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;引发现实风险。&lt;/strong&gt;数据污染还可能引发一系列现实风险，尤其在金融市场、公共安全和医疗健康等领域。在金融领域，不法分子利用 AI 炮制虚假信息，造成数据污染，可能引发股价异常波动，构成新型市场操纵风险；在公共安全领域，数据污染容易扰动公众认知、误导社会舆论，诱发社会恐慌情绪；在医疗健康领域，数据污染则可能致使模型生成错误诊疗建议，不仅危及患者生命安全，也加剧伪科学的传播。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;为了应对数据污染带来的威胁，国家安全部建议：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;加强源头监管，防止污染数据的产生。&lt;/strong&gt;以《网络安全法》《数据安全法》《个人信息保护法》等法律法规为依据，建立 AI 数据分类分级保护制度，从根本上防范污染数据的产生，助力有效防范 AI 数据安全威胁。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;强化风险评估，保障数据流通。&lt;/strong&gt;加强对人工智能数据安全风险的整体评估，确保数据在采集、存储、传输、使用、交换和备份等全生命周期环节安全。同步加快构建人工智能安全风险分类管理体系，不断提高数据安全综合保障能力。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;末端清洗修复，构建治理框架。&lt;/strong&gt;定期依据法规标准清洗修复受污数据。依据相关法律法规及行业标准，制定数据清洗的具体规则。逐步构建模块化、可监测、可扩展的数据治理框架，实现持续管理与质量把控。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364320</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364320</guid>
      <pubDate>Sun, 03 Aug 2025 07:06:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>阿里巴巴 2026 秋季校招计划超 6 成 AI 相关岗位</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#2a3840; margin-left:.2rem; margin-right:0; text-align:justify"&gt;阿里巴巴 2026 届秋季校园招聘正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftalent-holding.alibaba.com%2Fcampus%2Fhome%3Flang%3Dzh" target="_blank"&gt;启动&lt;/a&gt;，计划发出超过 7000 个录用通知。此次招聘涵盖阿里巴巴控股集团、淘天、阿里云、阿里国际、通义实验室、智能信息、钉钉、高德等 15 个业务集团和公司。&lt;/p&gt; 
&lt;p style="color:#2a3840; margin-left:.2rem; margin-right:0; text-align:justify"&gt;与春季招聘相比，秋季校招显著加大了 AI 人才招聘力度。AI 相关岗位占比超过六成。部分 AI 业务部门的招聘比例更为突出，阿里云、阿里国际、钉钉的 AI 岗位占比达到 80%，高德的相关比例也达到 75%。&lt;/p&gt; 
&lt;p style="color:#2a3840; margin-left:.2rem; margin-right:0; text-align:justify"&gt;&lt;img height="341" src="https://oscimg.oschina.net/oscnet/up-fcbb54eb5d1a7776ad186909f3ec872638f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#2a3840; margin-left:.2rem; margin-right:0; text-align:justify"&gt;据悉，阿里国际在 2026 届校招中，80% 的职位均为 AI 岗位。这些职位包括 AI 算法工程师、研发工程师以及 AI 产品经理等关键技术岗位。与此同时，阿里国际启动了面向全球的头部 AI 科技人才培养计划 Bravo102。&lt;/p&gt; 
&lt;p style="color:#2a3840; margin-left:.2rem; margin-right:0; text-align:justify"&gt;阿里巴巴集团董事会主席蔡崇信此前在香港举行的汇丰全球投资峰会上表示，阿里巴巴的员工数量已触底。公司将重新启动并重新招聘，标志着人才战略的重要转向。&lt;/p&gt; 
&lt;p style="color:#2a3840; margin-left:.2rem; margin-right:0; text-align:justify"&gt;集团 CEO 吴泳铭在财报分析师会上明确表态，未来三年将围绕 AI 战略核心加大投入。投入重点包括 AI 和云计算的基础设施建设、AI 基础模型平台及 AI 原生应用，以及现有业务的 AI 转型升级三个方面。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364315</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364315</guid>
      <pubDate>Sun, 03 Aug 2025 06:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Google Kaggle 举办 AI 国际象棋锦标赛，评估领先模型的推理能力</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;OpenAI 的 o3 和 04-mini、Google LLC 的 Gemini 2.5 Pro 和 Gemini 2.5 Flash、Anthropic 的 Claude Opus 4 以及 xAI Corp. 的 Grok 4 等全球性能最强的人工智能模型将在棋盘上展开正面交锋。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-559fc85f92024cf582bdb7dd5bb9b495a9f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2019%2F11%2F04%2Fgoogle-makes-cloud-automl-service-available-kaggle%2F" target="_blank"&gt;这场为期三天的人工智能象棋对决是 Google 数据科学社区 Kaggle&lt;/a&gt;&amp;nbsp;即将在新开发的 Game Arena 举办的一系列锦标赛的首场。在那里，模型将在一系列旨在评估其思维和推理能力的战略游戏中相互竞争。&lt;img alt="" src="https://static.cnbetacdn.com/article/2025/0805/8cbf492b712fcfe.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Google DeepMind 和 Kaggle 将与 Chess.com、国际象棋应用程序 Take Take Take 以及传奇国际象棋直播主播 Levy Rozman 和 Hikaru Nakamura 合作举办此次比赛，首场模拟比赛将于明天开始。&lt;/p&gt; 
&lt;p&gt;Kaggle&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fkaggle.com%2Fgame-arena" target="_blank"&gt;Game Arena&lt;/a&gt;是一个全新的 AI 基准测试平台，旨在测试大型语言模型在围棋和狼人杀等一系列战略游戏中的竞争力。首先登场的是 AI 国际象棋表演赛，该表演赛将于 8 月 5 日至 7 日举行，模拟比赛将在 Kaggle.com 上进行直播。&lt;/p&gt; 
&lt;p&gt;Hikaru Nakamura 将对每场比赛进行评论，而 Levy Rozman 将在 GothamChess&amp;nbsp;YouTube 频道上提供每日比赛的回顾和分析。比赛结束时，Magnus Carlsen 将在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2F%40TakeTakeTakeApp" target="_blank"&gt;Take Take Take YouTube 频道&lt;/a&gt;上直播冠军对决和赛事回顾。&lt;/p&gt; 
&lt;p&gt;八位选手将角逐国际象棋霸主地位：Gemini 2.5 Pro、Gemini 2.5 Flash、Claude Opus 4、DeepSeek-R1、Moonshot 的 Kimi 2-K2-Instruct、o3、o4-mini 和 Grok 4。比赛将采用标准的单败淘汰赛制，每场比赛的胜负将通过四局两胜制决出。Kaggle Game Arena 每天将直播一轮比赛，因此第一轮四分之一决赛将进行四场八个模型的对决，第二天将进行两场半决赛，第三天将进行一场决赛。&lt;/p&gt; 
&lt;p&gt;Google 在一篇博客文章中概述了一系列&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kaggle.com%2Fbenchmarks%2Fkaggle%2Fchess-fen%2Fversions%2F1%2Ftournament" target="_blank"&gt;规则&lt;/a&gt;，称这些模型将响应基于文本的输入。所有参赛模型都不得访问任何第三方工具，因此它们无法直接使用 Stockfish 国际象棋引擎来识别任何情况下的最佳走法。相反，它们必须自行思考。&lt;/p&gt; 
&lt;p&gt;模型不会获得所有可能的合法走法列表，如果模型尝试走法，则允许重试三次。如果模型未能走法，则将弃权。此外，每步走法都有 60 分钟的时间限制。&lt;/p&gt; 
&lt;p&gt;直播将尝试展示每个竞争模型如何「推理」其下一步行动，以及对任何失败行动的反应。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.cnbetacdn.com/article/2025/0805/3c8d2544fd8be20.png" referrerpolicy="no-referrer"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b875aad4f4c3af6d1e66faa049d0decc0e4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;除了比赛之外，Kaggle 还将创建一个更全面的排行榜，根据每个模型在数百场非直播的「幕后」比赛中的表现进行排名。每个模型将与竞争对手进行多次对决，对决双方随机选择。此举旨在帮助 Kaggle 创建一个更强大的排行榜，作为衡量每个模型棋艺的综合基准。&lt;/p&gt; 
&lt;p&gt;Kaggle 产品经理 Meg Risdal 表示：「虽然比赛是一种有趣的方式，可以观看并了解不同模型在游戏竞技场环境中如何下棋，但最终的排行榜将代表我们长期以来对模型下棋能力的严格基准。」&lt;/p&gt; 
&lt;p&gt;Google 表示，推出 Kaggle 游戏竞技场是因为国际象棋等游戏是评估法学硕士推理能力的最佳方式之一。&lt;/p&gt; 
&lt;p&gt;这是因为游戏能够抵御 Google 所谓的「饱和度」，换句话说，可以用标准公式来解决。国际象棋、围棋和其他游戏极其复杂，每场比赛都是独一无二的，这意味着随着每个参赛者的进步，难度也会随之增加。而狼人杀游戏则能够考验企业的基本技能，例如在不完整信息中导航，以及在合作与竞争之间取得平衡。&lt;/p&gt; 
&lt;p&gt;此外，Google 表示，游戏就像现实世界技能的代理，可以测试模型在战略规划、记忆、推理、适应、欺骗和「心智理论」（即预测对手想法的能力）方面的能力。同时，像「狼人杀」这样的团队游戏可以帮助评估每个模型的沟通和协调能力。&lt;/p&gt; 
&lt;p&gt;Kaggle 的全新 Game Arena 将展示当前和即将举行的直播比赛，每场比赛都将拥有专属页面，列出排名模型的排行榜、比赛结果以及开源游戏环境及其规则的具体细节。随着每个模型玩更多比赛，以及更新的模型添加到排名中，排行榜将动态更新。&lt;/p&gt; 
&lt;p&gt;未来，Kaggle Game Arena 将扩展到包括更复杂的多人视频游戏和真实世界模拟，以生成更全面的基准来评估不断扩展的 AI 模型技能。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364296</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364296</guid>
      <pubDate>Sun, 03 Aug 2025 06:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>deepin 技术双周报 | DDE 稳定性显著提升，6.6 内核大量优化</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;2025 年第 10 期 deepin 双周技术进展报告现已正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fy0-tetQxAjDGl7ooLrAmTw" target="_blank"&gt;发布&lt;/a&gt;，详细梳理了 deepin 各技术组在过去两周内的工作成果，并对未来两周的工作计划进行简要说明。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;01&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;DDE&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;&lt;span&gt;进展&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;提升 dde-shell 的稳定性，避免部分场景下偶现的更新过程中任务栏崩溃的现象；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修复拖拽未驻留在任务栏的图标导致图标被驻留的问题；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修复部分场景中，任务栏驻留的图标可能重复的问题；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修正通知中心空白图标的问题，并增加无通知场景的相应状态；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;针对全屏启动器的应用右键菜单支持跟随主题色变化；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;为启动器增加 F1 帮助快捷键；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修正部分场景下切换小窗口启动器的分类模式可能导致启动器崩溃的问题；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;针对 wine 程序提供更好的卸载功能集成支持；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修正控制中心时区菜单激活色不正确的问题，以及诸多其他类似 UI 问题调整；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修正控制中心调整音量时可能产生的音频反馈问题；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修正控制中心蓝牙界面展示的设备排序问题；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;其他各类琐碎的问题修正和功能开发。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;&lt;span&gt;计划&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;继续针对已发现问题进行修正；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;针对 TreeLand 环境进行积极适配。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;02&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系统研发&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;&lt;span&gt;进展&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;SW64 架构工具链 patch 合入主线；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;usb.ids 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;dh-builtusing 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;apache2 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;git-buildpackage 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;box64 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;db5.3 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;djvulibre 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;fastfetch 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;jq 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;redis 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;usbutils 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;sane-airscan 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;sqlite3 版本更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;CVE 漏洞修复。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;&lt;span&gt;计划&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;软件包更新；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;推进 CVE 安全漏洞修复。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;内核&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;&lt;span&gt;进展&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;小版本更新补丁合入到上游 6.6.100 内核版本和 6.12.40 内核版本；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入并在 x86 和 ARM64 上启用 ashmem 功能；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入补丁，优化对 RISC-V 上的 amdgpu 支持；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入来自申威的补丁 (kvm,acpi,pci 等等)，优化对申威架构的支持；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入来自飞腾的补丁，修复当 SMMU 事件类型为 0x10 且故障转换地址为 0x0 时，跳过该错误信息的打印；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入来自海光的补丁，优化对海光 tdm、ccp 功能的支持；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入上游补丁，移除了部分上游已移除的内容，例如 wait bookmarks；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入上游补丁，优化 pipe 锁的性能；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支合入上游补丁，优化 udp 的性能；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支支持成都华瑞数鑫 D3100s sas/sata raid 卡驱动；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核分支上进行对 IEE 的优化，加入 SLAB_NO_MERGE 标志，防止缓存合并，确保使用独立的内存池；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6.6 内核回合 mt7925 网卡驱动的修复，修复了 reset 进程可能失败的问题和硬件扫描中可能存在不合法的数组下标问题；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;修正了来自 Debian 固件加载失败补丁的错误，只有在所有压缩方式尝试都失败的情况下打印日志，而不是在不压缩的情况下尝试失败就打印日志，导致大量误报问题；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;调整 x86 的编译配置，防止非 root 用户可以访问内核日志以增强安全性；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;在 ARM64 架构上打开内核的 wireguard 编译。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;&lt;span&gt;计划&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;代码评审合入厂商的提交。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364294</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364294</guid>
      <pubDate>Sun, 03 Aug 2025 06:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>GitHub CEO：开发者必须积极拥抱 AI，否则可能被淘汰</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在近期的一篇博客文章中，微软旗下 GitHub 的首席执行官托马斯・多姆克（Thomas Dohmke）对全球的软件工程师发出了重要警告。他指出，开发者必须积极拥抱人工智能 (AI)，否则可能面临被行业淘汰的风险。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;多姆克在文章中提到，软件开发不仅仅是在编写代码，而是正在经历身份的转变。他提到，已经有 22 位开发者分享了他们在工作中深度融入 AI 工具的经历，表明 AI 已成为他们日常工作中不可或缺的伙伴。其中一些开发者最初对 AI 持怀疑态度，但随着时间的推移，他们逐渐认识到 AI 工具的价值，并开始将其视为协作的关键。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;「要么拥抱 AI，要么就离开这个行业。」 这句引人注目的话来自于一位开发者，体现了当前开发者面临的压力和挑战。多姆克进一步强调，开发者的角色正在转变，从传统的编码者变成 AI 战略家，他们不仅负责代码的编写，还需要管理和审核 AI 生成的代码。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;随着 AI 技术的迅速发展，预计未来 90% 的代码编写将实现自动化。这种变化意味着开发者需要掌握新的技能，包括系统设计、AI 应用的熟练度以及任务分配等。多姆克认为，早期采用 AI 工具的开发者已经获得了先发优势，而不是被取代。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;这种转型不仅涉及技术的更新，更是思维方式的变化。开发者们需要把重心从单纯追求速度和效率转向如何利用 AI 提升工作的质量和创意。尽管改变是困难的，许多人可能对此感到抗拒，但多姆克认为，未来只有那些能够适应这一变化的人才能在行业中立足。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在文章的最后，多姆克直言不讳地表示，不愿意改变的人应该考虑寻找其他职业道路。这一观点无疑对许多开发者提出了挑战，同时也在呼唤着未来软件开发的新标准。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364283</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364283</guid>
      <pubDate>Sun, 03 Aug 2025 05:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Anthropic 已开始内部测试 Claude Opus 4.1</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fbtibor91%2Fstatus%2F1952366658326036781" target="_blank"&gt;根据社交媒体上流传的截图&lt;/a&gt;，Anthropic 已开始对其下一代大模型 Claude Opus 4.1 进行内部测试。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1477" src="https://static.oschina.net/uploads/space/2025/0805/115400_Jq4N_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;泄露的信息显示，该模型的内部代号为 claude-leopard-v2-02-prod。一张截图中的宣传语写道：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Opus 4.1 is here - Try our latest model for more problem solving power.&lt;/p&gt; 
 &lt;p&gt;Opus 4.1 来了——试试我们最新的模型，获得更强的问题解决能力。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;这预示着新模型可能在推理和解决复杂问题的能力上会有显著提升。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364260</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364260</guid>
      <pubDate>Sun, 03 Aug 2025 03:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌称其基于 AI 开发的漏洞猎手「Big Sleep」已报告 20 个安全漏洞</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;谷歌安全副总裁 Heather Adkins 周一&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fargvee%2Fstatus%2F1952390039700431184" target="_blank"&gt;宣布&lt;/a&gt;，其大语言模型漏洞研究员「Big Sleep」在多种流行开源软件中发现并报告了 20 个漏洞。这些漏洞主要存在于音频和视频库 FFmpeg 和图像编辑套件 ImageMagick 等开源软件中。「Big Sleep」由谷歌人工智能部门 DeepMind 及其精英黑客团队 Project Zero 开发。&lt;/p&gt; 
&lt;p&gt;鉴于这些漏洞尚未修复，我们目前尚不清楚其影响或严重程度，因为谷歌&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoogleprojectzero.blogspot.com%2F2025%2F07%2Freporting-transparency.html" target="_blank"&gt;目前不愿提供详细信息&lt;/a&gt;，而这在等待漏洞修复时是常规做法。但 Big Sleep 发现这些漏洞这一简单事实意义重大，因为它表明这些工具开始取得实际成效，即使此案例中涉及人为因素。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0805/113208_FaQ8_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgoo.gle%2Fbigsleep" target="_blank"&gt;http://goo.gle/bigsleep&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;谷歌发言人金伯利·萨姆拉 (Kimberly Samra) 表示：「为了确保报告的高质量和可操作性，我们在报告之前会聘请一位人类专家参与，但每个漏洞都是由人工智能代理发现并重现的，无需人工干预。」&lt;/p&gt; 
&lt;p&gt;谷歌工程副总裁 Royal Hansen&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Froyalhansen%2Fstatus%2F1952424018663162235" target="_blank"&gt;在 X 上写道&lt;/a&gt;，这一发现表明「自动化漏洞发现领域开辟了新领域」。 基于 LLM 的工具能够查找和发现漏洞已经成为现实。除了 Big Sleep，还有&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.runsybil.com%2F" target="_blank"&gt;RunSybil&lt;/a&gt;&amp;nbsp;和 XBOW 等。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxbow.com%2Fblog%2Ftop-1-how-xbow-did-it" target="_blank"&gt;XBOW 在漏洞赏金平台 HackerOne 的美国排行榜上名列前茅&lt;/a&gt;后，引起了媒体的关注。值得注意的是，在大多数情况下，这些报告在流程的某个阶段都会有人工参与，以验证人工智能漏洞猎人是否发现了合法的漏洞，Big Sleep 就是这种情况。&lt;/p&gt; 
&lt;p&gt;RunSybil 是一家开发人工智能漏洞猎手的初创公司，其联合创始人兼首席技术官 Vlad Ionescu 介绍说，Big Sleep 是一个「合法」的项目，因为它「设计精良，背后的人知道自己在做什么，Project Zero 拥有漏洞查找经验，而 DeepMind 拥有强大的资源来支持它」。&lt;/p&gt; 
&lt;p&gt;这些工具显然前景光明，但也存在一些明显的缺陷。一些维护不同软件项目的人抱怨说，他们的错误报告实际上是幻觉，有些人甚至称其为「漏洞赏金计划」版的人工智能垃圾。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364254</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364254</guid>
      <pubDate>Sun, 03 Aug 2025 03:33:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
