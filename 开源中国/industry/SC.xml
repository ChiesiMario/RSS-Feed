<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Mon, 09 Sep 2024 12:21:34 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>开源日报 | AI 被连续否定 30 次；Java「上位」；开源模型之王翻车；A18 芯片采用 Arm 最新架构；鸿蒙系统「飞天」；IBM 曾经是伟大的企业</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.9&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/news/311127/apple-a18-uses-arm-chip&quot;&gt;&lt;span&gt;苹果全新 A18 芯片基于 Arm 最新 V9 架构&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;英国媒体《金融时报》&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ft.com%2Fcontent%2F85f3efa0-c30d-4eaa-9a4d-5bd6c5243e9f&quot; target=&quot;_blank&quot;&gt;报道称&lt;/a&gt;，苹果计划在周一的发布会上推出 iPhone 16 系列新机，以及其采用的基于 Arm 最新 V9 架构的 A18 芯片。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0909/104852_1miq_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;A18 芯片预计将为 iPhone 16 系列带来更强大的机器学习和图像处理能力，从而优化用户体验，并支持更多先进的 AI 功能。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;苹果已经在其最新的 MacBook M4 芯片中使用了 Arm 的 V9 架构，它表示 M4 为下一代 PC 带来了 「巨大飞跃」 的性能提升，预计将在接下来几个月内宣布这些 PC 新品。去年 9 月，苹果与 Arm 签署了一项协议，有效期至 2040 年 「及以后」，确保在可预见的未来能够使用其核心知识产权 Arm 架构，该架构用于其 iPhone 和 Mac 芯片。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;这份多年期许可协议也为 Arm 带来了巨大的推动力。Arm 首席执行官 Rene Haas 此前表示，最初于 2021 年推出的 V9 芯片架构带来的专利费是其上一代 V8 的两倍，后者可用于苹果为 iPhone 15 Pro 和 Pro Max 设计的 A17 Pro 芯片。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/news/311117/tiobe-index-202409&quot;&gt;&lt;span&gt;TIOBE 9 月榜单：Java 上位，C 语言跌至历史最低&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 公布了 2024&amp;nbsp;年 9 月的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot; target=&quot;_blank&quot;&gt;编程语言排行榜&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE CEO Paul Jansen 点评称，C 语言一直以来都嵌入式系统的最爱。到目前为止，C 语言唯一的严重缺点是它不是为扩展而设计的。由于缺乏面向对象特性，大型 C 程序难以维护。现在，嵌入式系统的功能趋于增长，因此代码大小也随之增长，而且由于越来越多的嵌入式编译器具有良好的 C++ 支持，因此人们倾向于从 C 语言切换到 C++。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1644054135%2FOw95ztQv0%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;开源模型之王 Reflection 一夜翻车，炒作背后真相揭晓&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;近日，AI 开源社区因为一款新模型 Reflection 70B 掀起了讨论风暴。该模型由 HyperWrite 公司开发，原本被认为是基于 Llama 3.1 70B Instruct 构建的，并且在多个基准测试中超越了 GPT-4。这个模型横扫了 MMLU、MATH、IFEval、GSM8K，在每项基准测试上都超过了 GPT-4o，还击败了 405B 的 Llama 3.1。&lt;br&gt; 凭借如此惊艳的效果，Reflection 70B 被冠以开源大模型新王。该模型更是由两位开发者（Matt Shumer 和 Glaive AI 创始人 Sahil Chaudhary）花了 3 周完成。&lt;/p&gt; 
&lt;p&gt;但独立分析机构和 Reddit 社区的测试显示，Reflection 70B 可能仅是经过 LoRA 调整的 Llama 3，而非 Llama 3.1。该机构表示，Reflection Llama 3.1 70B 的 MMLU 得分仅与 Llama 3 70B 相同，并且明显低于 Llama 3.1 70B。还有科学推理与知识（GPQA）和定量推理（MATH）基准测试的结果，同样不如 Llama 3.1 70B。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FOvU3a3PwQ%23comment&quot; target=&quot;_blank&quot;&gt;将 Markdown 文档转换为直观可视化的思维导图&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;发现 GitHub 上一款开源免费且颇为实用的工具：markmap。&lt;/p&gt; 
     &lt;p&gt;可以轻松快速将 Markdown 文档内容转换为直观可视化的思维导图，支持图像、链接、代码块、内联样式和数学公式等格式内容。&lt;/p&gt; 
     &lt;p&gt;GitHub：github.com/markmap/markmap&lt;/p&gt; 
     &lt;p&gt;并且支持集成在多种编辑器中使用，包括 VSCode、Vim 和 Emacs 等。 &lt;/p&gt; 
     &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-62675ffb6f4b692319adfd14b58468bb8fd.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;GitHubDaily&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1645215240%2FOwbro5ThP%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;Mini-Omni 是一个开源多模型大型语言模型&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;这个 paper 有点吓人了。。。Mini-Omni 是一个开源多模型大型语言模型，可以一边听、一边说，一边思考。具有实时端到端语音输入和流音频输出对话功能。&lt;/p&gt; 
    &lt;p&gt;第一作者是清华的。http://t.cn/A6RR0Bjt&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;李楠或 kkk&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1261531020%2FOvYou2yiX&quot; target=&quot;_blank&quot;&gt;2 轮算法过， 设计的时候有分歧&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;某 remote 外企：&lt;/p&gt; 
    &lt;p&gt;2 轮算法过， 设计的时候有分歧，虽然最后面试官也同意了我的方案可行性，但最后也没过，可能是他们要会写 RUST 的，我是 JAVA + GO。不过这个面试也就是试着去面了一下&lt;/p&gt; 
    &lt;p&gt;某外卖巨头：&lt;/p&gt; 
    &lt;p&gt;第一轮， 10 个八股问题怼脸，作为一个 10 年经验的，哪会准备这些问题（是的，之前国内对于相对资深的，以项目为主，顶多就是有个算法，不会硬怼八股，这应届生的事），答了 7788，最后一道没见过的 HARD， 直接送走。&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Ridiculeisnormalcy&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1174692545%2FOw54y4Fu0%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;IBM 曾经是伟大的企业，只是曾经&lt;/a&gt;&lt;/h4&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     昨天在现场和华为工程师聊了半个小时，除了谈华为这套技术，更谈了前些年企业从死里求生，谈企业的工程师文化对于员工的影响，尤其是任正非的正确指导性，这个工程师说他以前就在美国 IBM 工作超过 10 年，说 IBM 曾经是伟大的企业，只是曾经，后来选择进入华为是人生最正确的选择。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;V 闪闪&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2963774131%2FOw4PFEAj6&quot; target=&quot;_blank&quot;&gt;鸿蒙系统竟然上天了！&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    我国航天领域基于开源鸿蒙开发的「天鸿」操作系统，是我国航天领域首款智慧物联操作系统，由中国航天科技集团旗下研究院开发，天鸿操作系统不仅更好用，更安全，还集成了鸿蒙的微内核、原子化、分布式软总线等关键技术及信息安全特性，该操作系统可实现航天领域万物互联智能协作，推动航天装备的协同能力迈向新高度。
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;数码科技大爆炸 VVV&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&amp;nbsp;&lt;/h4&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.toutiao.com%2Farticle%2F7412456979408437810%2F&quot; target=&quot;_blank&quot;&gt;身价 700 亿大佬，投身 AGI 创业&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;米哈游创始人蔡浩宇，有了新动作。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;上个月底，蔡浩宇在领英上发文，称 AIGC 已经彻底改变了游戏开发，未来只有两种人制作游戏是有意义的——&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;一种是前 0.0001% 的天才，组成精英团队创造前所未有的东西；其他 99% 的业余爱好者可以为了满足自己的想法而一时兴起创作游戏。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;至于普通和专业的游戏开发者，蔡浩宇则建议不妨考虑转行。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;猎云精选&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5MjE5ODA4MA%3D%3D%26mid%3D2651786416%26idx%3D2%26sn%3D52b70ae3cc0ba8defdf488248cb828d5%26chksm%3Dbc5add5aa35616db7ad4b7152363864256a9c19aa15b02b9c9241258f38418ea7262fefb9afa%23rd&quot; target=&quot;_blank&quot;&gt;AI 跑马圈地时代已经过去&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;眼下投资者们似乎还可以忍受 AI 独角兽们高估值，但这种耐心不可能会永远持续下去。当下投资人已经不对 AI 大模型刷分、打榜感兴趣了，他们看重真刀实枪的商业化竞争，接下来在商业化方面的进展非常关键。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;首席商业评论&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3MTA0MTk1MA%3D%3D%26mid%3D2652520701%26idx%3D1%26sn%3Dd8e5d929ed69fdf26b88f6076edbabec%26scene%3D0&quot; target=&quot;_blank&quot;&gt;Sora 陷研究泥潭？OpenAI 一年血亏 50 亿，高盛报告乌龙引 AI 股地震！&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;Sora 陷入了研究困境！背后原因，就是安全风险以及与好莱坞的合作。另外，最近高盛的报告错误解读了 ChatGPT 流量下降，直接引爆市场的恐慌情绪，导致 AI 股票纷纷被抛售。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;新智元&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yidianzixun.com%2Farticle%2F0whTfdlV&quot; target=&quot;_blank&quot;&gt;AI 泡沫破裂，英伟达市值暴跌 2 万亿？ 英伟达不服输&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;根据 IPA（Infrastructure, Platform, Application）模型理论，每个计算周期都会经历三个阶段：基础设施建设、平台开发、应用程序的出现。现在很显然在进入第二第三个阶段。是否处于「幻灭的谷底」，现在还很难说，但 AI 行业确实进入了调整阶段，连 OpenAI 都在自建芯片和数据中心，英伟达又该如何说服别人接受先进又昂贵的下一代芯片呢？&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;钛媒体&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1809604291069035264%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;AI 被连续否定 30 次：ChatGPT 越改越错，Claude 坚持自我、已读不回&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span style=&quot;color:#000000&quot;&gt;一直否定 AI 的回答会怎么样？GPT-4o 和 Claude 有&lt;strong&gt;截然不同&lt;/strong&gt;的表现，引起热议。GPT-4o 质疑自己、怀疑自己，有「错」就改；Claude 死犟，真错了也不改，最后直接已读不回。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;量子位&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240909A04LR300&quot; target=&quot;_blank&quot;&gt;36 亿融资「造假」被揭穿！挣钱太难了，前苹果 AI 工程师 3 年打造的「欧洲 OpenAI」宣告退出模型竞赛&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对 Aleph Alpha 来说，不再执着于 AI 模型竞赛将使其能够在无需为维持尖端人工智能模型支付巨额费用的情况下追求增长。然而，这不仅反映出大模型当前的市场挑战正在加剧，也表明了资金雄厚的科技巨头在 AI 开发中日益增长的主导地位，最近 Character.AI 、Inflection 等人工智能初创公司在创始人加入大型科技公司后都改变了发展方向。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;AI 前线&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FgrapheneX%2FgrapheneX&quot; target=&quot;_blank&quot;&gt;grapheneX/grapheneX&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;GrapheneX Interactive Shell&quot; src=&quot;https://static.oschina.net/uploads/img/201907/30114232_NXpu.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FgrapheneX%2FgrapheneX&quot; target=&quot;_blank&quot;&gt;https://github.com/grapheneX/grapheneX&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;grapheneX 项目旨在提供一个框架，用于自动为系统提供强化命令。 由于界面选项，它专为最终用户以及 Linux 和 Windows 开发人员而设计。 （交互式 shell /web 界面）除此之外，grapheneX 还可用于保护 Web 服务器 / 应用程序。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5359019/blog/15670585&quot; target=&quot;_blank&quot;&gt;基于事件驱动的邀约自动化机制&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;本文详细介绍了 58 同城邀约业务系统的架构设计和实践经验。文章涵盖了系统的业务背景、整体架构、核心组件设计、技术实现细节等。通过平台化设计和标准化实践，该系统显著提升了产研效率、交付质量和业务复用性，为大规模招聘匹配提供了强有力的技术支撑。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;182&quot; src=&quot;https://oscimg.oschina.net/oscnet/de5c57e1-95bc-49c8-9264-7d076dc52b40.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F-sVftnPHIQm1LObdIiAPsw&quot; target=&quot;_blank&quot;&gt;男子花 3 千升级宽带，商家许诺接入 200 兆光纤：结果网速只有 20 兆、申请退费被赖账&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：运营商说的是 200Mb 二百兆比特，一般人理解的是 200MB 二百兆字节，数据量是 1:8 的关系 200/8=25 正好是 20 多兆」。 200Mbps=20MBps=20Mbps=2MBps 是吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：建议三家运营商直接用实际下载速率来宣传宽带把，就这个问题我的很多朋友都坚信运营商在骗人，他们一直坚信 1000 兆的宽带，必须下载速率 MB/s 跑满一千 1000，哪怕我给他们解释要除以八才是下行速度，他们还是不信&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：建设费早就收回来了吧？现在还这么贵？希望能引入星链&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：200 兆比特每秒（200Mbps）换算成他自己看的网速，也就是兆字节每秒（MB/s）需要除以 8，也就是 200Mbps 的宽带峰值速度是 25MB/s&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：北京直接用中国联通的宽带不香吗？100M 宽带+每月 1000 分钟+22G 流量，每个月才 120 元&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：有的小区联通进不去，所以新闻里提到了物业使坏&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：长宽也是，说升级光纤线路。哈哈哈。其实根本没有变化。倒是光纤，楼梯口放个交换机&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：这个老早跑路了&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fd8D78fGG543cNpWqubmZnw&quot; target=&quot;_blank&quot;&gt;两男子自建视频平台 App&lt;span&gt;——&lt;/span&gt;「盗链」影视作品、获利 3.92 亿&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：想学&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：难的不是技术而是推广，这商业很看流量的，没流量不会太挣钱的。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：某夕夕一堆卖这种的，卖了-&amp;gt;跑路-&amp;gt;换一个名字-&amp;gt;继续卖&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：不是，这玩意能那么挣钱吗，他们哪找的广告？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：难道不是怎么做的流量？ 流量起来了，广告费自然就有了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：应该是没收违法所得，然后再罚款。用脚丫想想也是这样。&lt;img height=&quot;1&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e52a107a9024b766c01f38afd53e9cf707e.png&quot; width=&quot;1&quot; referrerpolicy=&quot;no-referrer&quot;&gt;，你们在想什么，怎么可能不没收违法所得，只是这个上面没写&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：谁说技术不能赚大钱的？没赚到大钱是你的思路没打开而以&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSwZbNd_fwBLFlpL7hXKYAg&quot; target=&quot;_blank&quot;&gt;MongoDB 是没有未来的数据库&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：「研究 mongodb 时顺便水了篇论文，然后发现官方也是我那个思路实现的」 —— 俗话说明人不装暗笔，但这个作者全文都是暗逼&lt;img height=&quot;1&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e72805f4a6614da43e407f97d2bac6d3899.png&quot; width=&quot;1&quot; referrerpolicy=&quot;no-referrer&quot;&gt;。Mongo 作为上市公司自有其财报披露和分析师会议，你要研究股价自己去参与这些好了，低吸高抛你悄咪咪赚钱💰多好，非要扯到技术上捧一踩一装个大逼。法律也没规定技术实现仅限一家，mongo 我们用的就挺好。数据库能发行出来就不可能有致命的内部缺陷，任何数据一致性和可用性的问题都是因为你代码写的烂。说非要上市公司的未来，我管他什么未来不未来，我们现在用的还是 3.2，只要每个月能发我工资就行了，不要老拿双十一和 12306 秒杀这种极端场景来 pua 每个公司&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：mongo 对于小白还是很有好的，这是我用它的第一印象，文档简直太清楚了。但是部署上集群模式资源利用率太低了，分析性能也不好。当 kv 用好使，其它的基本不考虑 mongo&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：nodejs 配合 mongo 简直了，开发快，迭代快，但是你只要一个月没有看你的代码，你可能自己都不清楚 MongoDB 有哪些字段，适合什么样的场景不用我多说了吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：批评 mongo 也应该由大量使用 mongo 的用户来批评，比如文中举的各个外国例子。你上一次用 mongo 还是在 8 年前，你在这儿燃什么？搞的愤世嫉俗一样？抨击别人的产品，抬高自己所站的队，你这也是营销，跟 gnu 说 windows 是邪恶的一个德性&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：很多人没用过易语言不是照样批判易语言？这是宽己严人！实际上，多用用其他数据库，批判才更客观&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：写 web 的人对数据库只有 CRUD，所以你说再多他们也不会有什么感觉，毕竟他们只把数据库当文件用&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：「MongoDB 和 MySQL 属于那种典型的 「面向初学者」 的数据库，针对小白做了许多讨好性的妥协与设计。」这句话太酸了，对用户友好，难道不是大家应该追求的吗？非要搞得小白看不懂，上手难度高才好吗。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：这篇文章不也是对 PostgreSQL 的营销吗&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：性能上没比较过，不过好用方便还是 mongodb 哦。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：不是写 web 的人只有 CRUD，而是你接触到的项目只有 CRUD&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：&quot;Collection 里有整本的小说&quot; 这难道不是你们自己塞进去的么？这都能怪到 mongo 头上&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 12：我目前用的 mongo，还没发现有什么问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 13：做喷子才没有未来，技术是向前发展的，喷子就盯着之前的三瓜两枣挖掘点流量，这东西好不好就看被服务的对象反馈，喷子不懂技术永远是服务业务的，而不是为了炫技，你说 pg 再好，运维起来连个最基本的主从切换都没有，还得以来第三方组件，影响可用性，你去跟你客户解释 pg 是世界上最好的数据库，有问题用不上你，你看客户买不买单&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 14：MongoDB 挺好用，阿里都抄袭，搞得 MongoDB 改了开源协议。SQL 类数据库数据存储灵活性太差了，你用个 pq 或者 MySQL 加个 Java 就以为包打天下了，但是你试试用这套组合拳存储瓦片地图数据试试？MongoDB 在很多复杂结构数据方面就不是 SQL 数据库能比的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 15：SQLite&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 16：单机几百 T 的 Pg 备份恢复要多长时间有相关测试数据参考吗&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 17：抛开使用场景去评价一个产品都是耍流氓，喷了 mongodb 居然还顺带了一下 MySQL&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 18：用 python 写爬虫，数据用 mongodb 存储，依然是目前最好的方案。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 19：mongodb 有个很恶心的地方是 key 一定是字符串，太恶心了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 20：Mongodb 还可以啊，如果一个很差的产品，再怎么营销，也不可能长时间流行的，毕竟用户不是傻子&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 21：我们之前 5 年前几十个自建 mongo 集群从一个云迁移到另一个云，真是灾难，当然请了腾讯某知名专家来也是解决不了。另外也是被我司 rd 用得字段乱七八糟&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 22：再天花乱坠也不影响我开发不到 10 个并发的项目&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 23：知名度上还是 mongo 广泛，而屈居第二的 mysql 更是几乎所有公司必备。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_j1gpz_rNVO8-V1JPwvOgA&quot; target=&quot;_blank&quot;&gt;「宇宙最强」开源代码编辑器&lt;span&gt;——&lt;/span&gt;VS Code 优化 Linux 版本 UI、改进 Copilot 功能……&amp;nbsp;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：太好了，又添加这么多特性，真是太好了！我更喜欢 Vim 了。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：要么是远古大神要么就是编程小白&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：Linux 版本 vscode 体验是最差的，很多插件搜不到，字体显示也很烂，tmd 开源软件面对开源系统做的最烂的软件&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：？？？为啥我的正常？无能狂怒&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：读研期间从 vscode0.7 公测版开始使用，如今工作 7 年了，一直是重度用户&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：已经换 cursor 了比起 vsc 的 copilot 好用太多了&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：国内用它唯一遗憾的是用不了@web 联网搜索的功能。。。这个功能阅读 api 文档可太有用了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：如果 sourceinsight 能一直更新一直做就好了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：想不到会为 Linux 优化，话说默认 wayland 快了不&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311213</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311213</guid>
            <pubDate>Mon, 09 Sep 2024 10:28:50 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>《家里有个程序员》征集启事</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div&gt; 
 &lt;p&gt;今天我们不关心宏大敍事，只关心你。&lt;/p&gt; 
 &lt;p&gt;你在哪里生活？&lt;/p&gt; 
 &lt;p&gt;你过得开心吗？&lt;/p&gt; 
 &lt;p&gt;我想知道，你今天在烦恼什么，关心着什么？&lt;/p&gt; 
 &lt;p&gt;我想知道，下了班后，你在鼓捣什么？&lt;/p&gt; 
 &lt;p&gt;也许你热爱开发这个工作，每天乐此不疲；&lt;/p&gt; 
 &lt;p&gt;也许谈不上热爱，这只是一份谋生的职业。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;请告诉我。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;也许你家里也养了猫猫，很粘人或者很高冷；&lt;/p&gt; 
 &lt;p&gt;也许你周末也会去爬山，一个人或者一群人；&lt;/p&gt; 
 &lt;p&gt;也许你也爱看电影，在家里或者去电影院；&lt;/p&gt; 
 &lt;p&gt;也许你也爱听音乐，上班时间或者下班路上；&lt;/p&gt; 
 &lt;p&gt;也许你也有想陪伴的人，在身边或者在远方。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;都请告诉我。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;请你写下来，告诉我关于你的一切。你爱吃的美食，你喜欢的电影，你想见的人，你想掌握的事情，你要去的地方，你想要的工作，你理想中的生活，都是什么样的？你在为之努力还是已经实现了？&lt;/p&gt; 
 &lt;p&gt;你的家人，你的朋友，你的习惯，你的爱好，你看过的书，你走过的路，你的思考，你的生活······还有很多我不知道的，我想用关于你告诉我的一切，来拼凑出一个你。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;在开源中国，你不是某份报告的里一个数字，你就是你。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;我们计划新增一个栏目——「&lt;strong&gt;家里有个程序员&lt;/strong&gt;」，来存放这样一个你。就像 GitHub 的代码封存在北极——当然我们肯定没这个实力。&lt;/p&gt; 
 &lt;p&gt;现就开始吧！&lt;strong&gt;栏目将于 9 月 24 日正式开放，直到 10 月 23 日那天截止。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;等到 1024 那天，我们一起过节&lt;/strong&gt;，你想要什么礼物，一起在评论区许愿吧！（许愿的小伙伴注意控制一下预算！！！小编翻了钱包恬不知耻说出了这句话······Orz）&lt;/p&gt; 
 &lt;p&gt;如果你真的不知道从哪里开始，就从「今天是 2024 年 9 月 9 日，天气晴」或者「早上七点半，我起床了」开始吧。&lt;/p&gt; 
 &lt;p&gt;如果你写好了，可以直接发布博客，然后&lt;a href=&quot;https://my.oschina.net/u/3859945&quot;&gt;私信我&lt;/a&gt;；或者发我邮箱：xiaoying@oschina.cn。要是写了一半不知如何进行，也可以发邮件给我，我们一起完成它。&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3859945/blog/15727245</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/15727245</guid>
            <pubDate>Mon, 09 Sep 2024 09:00:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>基于事件驱动的邀约自动化机制</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;本文详细介绍了 58 同城邀约业务系统的架构设计和实践经验。文章涵盖了系统的业务背景、整体架构、核心组件设计、技术实现细节等。通过平台化设计和标准化实践，该系统显著提升了产研效率、交付质量和业务复用性，为大规模招聘匹配提供了强有力的技术支撑。&lt;/p&gt; 
 &lt;hr style=&quot;border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);&quot;&gt; 
 &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;strong&gt;背景介绍&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;系统邀约是招聘业务模式中一种高效的人岗撮合机制，它通过推荐匹配技术，将合适的职位推荐给需要的求职者，借助 AI 对话等能力引导双方更高效完成沟通最终实现意向达成。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;从技术层面而言，一次邀约的过程，可以分如下重要步骤：邀约触发、双端匹配、效果调控、以及消息触达、AI 对话等环节，本文重点介绍从触发到消息发出这些环节中的设计和实现方案。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013919&quot; data-ratio=&quot;0.177&quot; src=&quot;https://oscimg.oschina.net/oscnet/a14a679c-1b8a-4f53-89b1-0726dc8e52f7.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default !important;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;一、技术挑战&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;为了支持上述这些功能，我们设计并实现了一个基于事件驱动的自动化邀约平台。这套系统高效地支撑了邀约业务的快速增长和功能迭代。然而，在系统的落地和演进过程中，我们也面临了许多技术挑战，这些挑战可以归纳为三大类。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;1.1、架构设计&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;我们的系统设计面临着一个挑战：需要适应多样化的业务场景，这些场景在复杂性和规模上各不相同，特别是在触发时机和业务流程的处理上。因此如何设计出「&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;扩展性高并且流程可定义的系统架构&lt;/span&gt;」，成为重点考虑的方向。其中系统设计的关键指标包括，不同业务场景中的统一的管理控制能力，如触发时机的定义、业务流程的配置化、流量的分发调控、系统的监控等等；如何支持业务流量错峰，提升资源利用率；如何提升并发性能等等。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;1.2、触发时机&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;这里的触发时机主要分为以下两大类：&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;实时触发：即基于用户的行为，实时触发，对实时性要求较高，经验证 5s 内触发用户得到的转化最高&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;定时触发：即基于目前用户群，在某个时刻触发，这类一般转化效率较低且对时效性要求低。&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;1.3、业务流程的抽象和复用&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;无论是定时触发还是实时触发，都会涉及到一些相同的业务流程。例如，需要进行前置条件判断、用户筛选、AB 实验、效果调控（如频控和岗位校验等）、双端匹配、消息样式等 (如下图)。然而，每个流程节点又存在差异。因此，&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;如何将这些功能抽象为具备通用性的原子能力，并通过统一的接口和框架实现编排以及组合&lt;/span&gt;，成为了业务流程抽象和复用的关键。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013921&quot; data-ratio=&quot;0.26&quot; src=&quot;https://oscimg.oschina.net/oscnet/de5c57e1-95bc-49c8-9264-7d076dc52b40.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default !important;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;下面针对上述三方面的技术挑战，我们逐一进行深入探讨。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;font-size: 20px;&quot;&gt;二、整体设计&lt;/span&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;2.1 整体思想&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;基于前述业务背景，我们设计了一个高度模块化和标准化的系统架构。这个架构的核心思想是从整体流程定义出发，逐步细化到具体的原子能力抽象，即系统能力的精细划分。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;我们的系统设计遵循标准化的抽象流程，形成了一套完整的产品研发 (产研) 和质量保证 (QA) 协作的标准化流程。这种方法不仅确保了系统的模块化和可扩展性，还显著提高了交付效率和质量。系统架构图如下:&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013922&quot; data-ratio=&quot;0.77&quot; src=&quot;https://oscimg.oschina.net/oscnet/cd7d25f9-843f-4eb3-a4b1-6575c066a96d.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;这种模块化和标准化的设计使我们能够更好地应对复杂的业务需求，同时保持系统的灵活性和可维护性。每个功能模块都可以独立开发、测试和优化，从而提高整体系统的稳定性和性能。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;2.2 触发时机与流程编排&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;邀约系统的触发机制主要分为实时触发和定时触发两大类，分别适用于不同的业务场景。这种分类为系统提供了灵活应对各种复杂业务需求的能力。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;流程编排是我们系统的另一个关键特性。它的主要目的是解决不同业务场景下执行流程的差异化问题。通过抽象和模块化的设计，我们实现了高度可配置的流程管理。这使得系统能够根据不同的业务需求，快速组装和调整处理流程，而无需大幅度修改底层代码。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;如系统架构图所示，流程编排模块允许我们灵活定义和组合各个处理步骤。这种设计不仅提高了系统的适应性，也大大增强了其可维护性和可扩展性。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;关于触发机制和流程编排的详细技术实现，将在第三部分的技术框架设计中进行深入探讨。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_9&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;font-size: 20px;&quot;&gt;三、技术框架设计&lt;/span&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h3_10&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;strong&gt;3.1.触发时机&lt;/strong&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;上文说到我们的触发时机分为两大类，即实时触发 (用户行为) 和离线调度 (定时触发) 两大类，这里重点说下&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;实时触发&lt;/span&gt;的系统设计。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_11&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;3.1.1 事件驱动服务&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在这块的设计中，我们将用户的行为抽象成一个事件，采用异步消息的方式来进行解耦。这就很容易让我们联想到这种基于&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(34, 34, 34);cursor: default;&quot;&gt;事件和消息的响应式系统架构设计。这里引入几个核心概念。&lt;/span&gt;&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;事件源：即事件的来源，负责产生事件。这里一般是用户活跃、浏览职位、投递等&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;事件处理器：接收事件并进行处理的组件，这里主要负责事件的中间存储，规则以及该事件关联的一系列投递目标。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;事件目标：即获取该事件后最终的动作，这里是指触发后链路的流程&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013920&quot; data-ratio=&quot;0.423&quot; src=&quot;https://oscimg.oschina.net/oscnet/3e577620-0519-4db3-9c8d-5b89cefaad20.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;上图介绍了一个事件驱动服务的核心流程。我们可以基于接入方来定义识别一个标准事件，也即事件源。而事件处理器接收到事件后，查询该时间的关联数据和规则，对事件进行过滤、协议转换、目标投递。当然也可按照需求选择是否延迟执行。这里以用户活跃为例来介绍下这几个核心流程。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_12&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;1)、过滤规则&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在处理事件时，我们采用了前置过滤机制，主要针对消息体中的字段进行筛选。这种场景下，规则引擎成为了显而易见的技术选择。在众多规则引擎中，我们选用了 Aviator。Aviator 作为一个轻量级但功能强大的规则引擎，具备以下几个突出特点:&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;多样化的数据类型支持&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;cursor: default;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;基本类型:数字、字符串、正则表达式、布尔值等&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;高精度类型:bigint 和 decimal，适用于超大整数和高精度数值运算&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;全面的语法功能&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;cursor: default;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;多行数据处理、条件语句和循环语句&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;异常处理机制，这些特性使得复杂逻辑的编写变得简洁明了。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;函数式编程支持：提供 Sequence 抽象工具、简化集合操作、提高数据处理和转换效率&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;扩展性：支持自定义函数，可实现更复杂的业务逻辑&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;Aviator 的这些特性使其成为处理通用规则的理想选择，尤其适合我们的前置过滤需求。通过使用 Aviator，我们可以灵活地定义和管理各种复杂的过滤规则，从而有效地处理不同类型的事件。&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_13&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;2)、 协议转换 (指令集)&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在处理不同事件源和多个投递目标时，我们面临着消息体格式不一致的问题。为了避免大量硬编码开发，我们抽象出了一套灵活的协议转换流程。这个流程能够将源消息体（source）高效地转换为目标格式（target）。以下图为示例，我们想要把 source 消息体转化为 target 消息体&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013923&quot; data-ratio=&quot;0.571&quot; src=&quot;https://oscimg.oschina.net/oscnet/0c075919-b090-420a-9c02-42fa4b9fb0f9.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;这中间要做的字段变化如下：&lt;/p&gt; 
 &lt;table&gt; 
  &lt;tbody style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: left;&quot;&gt;source&lt;/p&gt;&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: left;&quot;&gt;操作&lt;/p&gt;&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: left;&quot;&gt;target&lt;/p&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;business_line&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;变更字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;businesType&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;userid&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;变更字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;uid&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;extra.resumeId&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;移动字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;resumeId&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;city&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;删除字段&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;br&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;为了实现这一目标，我们设计了一套自定义指令集：&lt;/p&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;CHANGE 指令：用于字段变更，如将源事件中的 A 字段更名为目标协议中的 B 字段。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;MOVE 指令：用于字段转移，特别适用于多层协议。例如，可以将源中 A 字段（JSON 格式）内的 x 字段移动到目标协议 B 中的 y 字段。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;DELETE 指令：用于删除不需要的字段。&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;ADD 指令：用于添加固定字段，主要用作业务标识。&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;通过这套指令集，我们可以灵活地定义各种转换规则。下面是一个具体的转换示例：&lt;/p&gt; 
 &lt;table&gt; 
  &lt;tbody style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;2&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;background-color: rgb(229, 247, 210);border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;text-align: center;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;source&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;background-color: rgb(229, 247, 210);border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;command&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; 
    &lt;td colspan=&quot;2&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;background-color: rgb(229, 247, 210);border-color: rgb(162, 162, 162) !important;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;target&lt;/span&gt;&lt;/p&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;源字段&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;源值&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;转换指令&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;目标字段&lt;/th&gt; 
    &lt;th width=&quot;&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-top-width: 1px !important;border-color: rgb(162, 162, 162) !important;cursor: default !important;background-color: rgb(245, 247, 250) !important;&quot;&gt;目标值&lt;/th&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;business_line&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;58&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;CHANGE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;businesType&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;58&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;city&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;beijing&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;new_job_id&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;80xxxx91&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;new_market_id&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;10xxxx74&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;stime&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;17xxxx73&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;CHANGE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;reportTime&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;17xxxx73&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;top_userid&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;20xxxxxxxx02&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;DELETE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;-&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;userid&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;10xxxxxxxx16&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;CHANGE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;uid&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;10xxxxxxxx16&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;extra.resumeId&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;9x2&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;MOVE&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;border-color: rgb(162, 162, 162) !important;cursor: default !important;&quot;&gt;resumeId&lt;/td&gt; 
    &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; width=&quot;&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);padding: 3px 5px;word-break: break-all;cursor: default;border-color: rgb(162, 162, 162) !important;&quot;&gt;9x2&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;通过这种方式，我们实现了一套标准的、可配置的协议转换机制。每个事件类型可以定义自己的指令集，从而实现灵活的协议转换，无需编写额外的代码。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;这个协议转换机制是事件驱动服务的核心组成部分之一，它极大地提高了系统的灵活性和可维护性。通过这种设计，我们成功地实现了事件驱动服务的核心功能，为整个邀约业务系统奠定了坚实的基础。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_14&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;strong&gt;3.2. 业务流程的抽象和复用&lt;/strong&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;在这里我们定义了一个流程引擎的服务。流程引擎作为整个执行链路中的决策中心，承担着极其重要的作用。将各种类型的基础原子能力进行组装编排。这里采用了 DAG 有向图来描述流程。将不同类型的原子能力定义为一个图中的一个路径节点。考虑到业务场景的复杂度，这里将图进行树化，变成一颗多节点的树。如下图所示。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013928&quot; data-ratio=&quot;0.55&quot; src=&quot;https://oscimg.oschina.net/oscnet/9488cdc0-aa30-4209-be15-1f9ead106533.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_15&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;3.2.1 原子能力的抽象&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;整个树由多个节点构成。我们将具有相同功能的节点抽象为一种节点类型（Node）。节点间存在关联性，当前节点完成后是否触发下一个节点取决于一套规则。为实现节点间的串联，我们将节点关系的抽象如下图所示：&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013924&quot; data-ratio=&quot;0.388&quot; src=&quot;https://oscimg.oschina.net/oscnet/6d92dc8f-2540-4bc8-9ab6-1a9c6db089c3.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;每个节点包含两部分内容，即执行该节点的条件 condition，以及执行该节点需要的数据 value。我们会将每个节点的执行结果带入到上下文，作为下一个节点能否执行的条件。以一个简单业务场景为例，可实现如下配置的策略树。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013927&quot; data-ratio=&quot;0.5148842337375965&quot; src=&quot;https://oscimg.oschina.net/oscnet/4d28b33b-99b4-4bca-9a0f-c50d5e76606d.png&quot; data-type=&quot;png&quot; data-w=&quot;907&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_16&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;3.2.2 流程引擎的调度机制&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;流程引擎的调度是由前面的事件驱动服务来发起，这里针对于每个邀约规则抽象了一个邀约计划，即该邀约流程的有效期。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013926&quot; data-ratio=&quot;0.428&quot; src=&quot;https://oscimg.oschina.net/oscnet/e2b73647-4fd4-4d5d-8753-f73de78230fe.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_17&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;3.3 业务组件层沉淀&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;基于流程引擎中用的原子能力，这里抽象出了人群、频控、AB 实验、效果调控、推荐匹配、内容展示等。流程引擎可基于以上原子组件完成常见业务流程的定义。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;该架构设计支持快速接入新的业务场景。通过配置化方式，可以快速完成新业务的接入，无需大规模代码改动。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013925&quot; data-ratio=&quot;0.346&quot; src=&quot;https://oscimg.oschina.net/oscnet/d2527688-1cc6-4db4-bf27-2be38421e869.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;&quot; title=&quot;&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_18&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;font-size: 20px;&quot;&gt;四、效果展现&lt;/span&gt;&lt;/h1&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;系统能力沉淀&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;相关业务已经全部完成平台化架构升级，并在此架构上持续运行和迭代&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;业务基础能力积累，包括人群、频控、AB 实验、效果调控、推荐匹配、内容展示等公共组件，每个组件内承接不同业务的不同规则。实现千人千面能力。&lt;/p&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;交付能力&amp;amp;质量&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;通过平台化架构和公共组件的应用，交付质量显著提升，减少了代码冗余和潜在的错误，提高了系统的稳定性和可靠性。&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;cursor: default;&quot;&gt;对比其他业务架构，邀约整体架构并行承接业务能力较强。大部分功能业务无需开发，包括效果调控、推荐匹配、事件触发等业务基本都是配置化。&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;&quot;&gt;在新业务接入中，Action 复用 80% 以上。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;span id=&quot;OSC_h1_19&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);line-height: 1.5;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;font-size: 20px;&quot;&gt;五、总结与展望&lt;/span&gt;&lt;/h1&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;&quot;&gt;本文介绍了针对邀约业务，通过平台化设计在建设和实践中的思考与落地，为未来的业务拓展和创新奠定了坚实的基础。另一方面，我们也在逐步引入更多 AI 能力，通过大模型等技术解决招聘双方撮合过程中意向匹配、对话体验、招聘反馈等各个环节的问题，不断提升全流程的招聘体验，为更多的求职者找到合适的工作和帮助更多商家招到合适的人。&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - 58 技术（architects_58）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5359019/blog/15670585</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5359019/blog/15670585</guid>
            <pubDate>Mon, 09 Sep 2024 08:46:49 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>截至 2023 年底我国已有 60 余款生成式 AI 服务完成备案</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;据中国网信网消息，近日，国家互联网信息办公室发布《国家信息化发展报告 (2023 年)》(以下简称《报告》)。《报告》指出，我国生成式人工智能蓬勃发展，截至 2023 年底，已完成备案的生成式人工智能服务达 60 余款。&lt;/p&gt; 
&lt;p&gt;随着 ChatGPT 在全球范围内掀起生成式人工智能浪潮，2023 年我国互联网企业和研究机构纷纷加大研发应用的投入力度，人工智能大模型从研发环节「百模大战」到应用领域「百花齐放」，取得了显著成效。&lt;/p&gt; 
&lt;p&gt;百度、清华智谱、阿里巴巴、科大讯飞、百川智能、字节跳动等厂商相继发布大模型产品，并进行持续迭代更新，实现部分能力超越 ChatGPT，已在知识问答、医疗咨询、娱乐、视频生成等数十个行业场景领域，展现出广阔应用潜力。截至 2023 年底，已完成备案的生成式人工智能服务达 60 余款，「文心一言」「豆包」等大模型应用日均活跃用户已超过 100 万。&lt;/p&gt; 
&lt;p&gt;大模型开源有力带动产业创新发展，以百度云飞桨、阿里云魔搭社区为代表的开源社区建设成果初现，百川智能相继发布 Baichuan 系列模型，阿里巴巴开源通义千问系列模型，智谱 AI 开源 ChatGLM3 系列模型，昆仑万维开源大语言模型「天工」Skywork-13B 系列，并配套开源了 600GB、150BTokens 的开源中文数据集。大语言模型带来智能算力需求爆炸式增长，国内厂商积极研发用于训练、推理场景的算力芯片，性能不断提升。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311188</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311188</guid>
            <pubDate>Mon, 09 Sep 2024 08:27:49 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>华为鸿蒙超越苹果 iOS，成为中国市场第二大移动操作系统</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;9 月 9 日，在苹果和华为的新品发布会前夕，Counterpoint 公布了 2024 年第一季度的操作系统详细数据，数据显示， 鸿蒙操作系统在 2024 年第一季度继续保持强劲增长态势，全球市场份额成功突破 4%。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-555fde6f3266fb806beb3060b5e4fdba605.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在中国市场，得益于华为旗舰产品的热销，鸿蒙首次超越 iOS，成为市场第二大操作系统&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-abf94f6304e56f1a8e629084698b82bbcd1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;同时，鸿蒙操作系统的 5G 普及率也取得了显著提升，从 2023 年第一季度的 9% 跃升至 50%。随着华为持续深耕供应链本地化，鸿蒙操作系统未来的市场前景更加广阔。&lt;/p&gt; 
&lt;p&gt;从全球手机系统市场份额来看，Android 和 iOS 同比均下降 1%，份额分别为 77% 和 19%；华为鸿蒙 HarmonyOS 的全球份额从 2% 同比翻了一番，达到 4%。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸阅读：&lt;a href=&quot;https://www.oschina.net/news/297191&quot; target=&quot;_blank&quot;&gt;华为 HarmonyOS 中国市场份额一季度超越苹果 iOS&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311183</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311183</guid>
            <pubDate>Mon, 09 Sep 2024 08:14:49 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>文心一言市场负责人否认放弃通用大模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#0e0e0e; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;9 月 9 日，针对近日网上文心一言背后的通用大模型被放弃的消息，文心一言市场部负责人张全文在朋友圈发文，「所谓‘放弃通用大模型研发’纯属谣言！文心一言刚完成了功能全面升级。我们将持续加大在通用大模型领域的研发投入。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#0e0e0e; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;据了解，文心一言能力升级包含创作内容更加深度专业、问答效果更加全面丰富、支持同时处理上百个多种格式文件、一键关联读取网盘文档、智能翻译和图片理解等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#0e0e0e; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a0f92980fa6afea42fc7a39068eddf02e36.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311159</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311159</guid>
            <pubDate>Mon, 09 Sep 2024 06:36:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>苹果全新 A18 芯片基于 Arm 最新 V9 架构</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;英国媒体《金融时报》&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ft.com%2Fcontent%2F85f3efa0-c30d-4eaa-9a4d-5bd6c5243e9f&quot; target=&quot;_blank&quot;&gt;报道称&lt;/a&gt;，苹果计划在周一的发布会上推出 iPhone 16 系列新机，以及其采用的基于 Arm 最新 V9 架构的 A18 芯片。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0909/104852_1miq_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;A18 芯片预计将为 iPhone 16 系列带来更强大的机器学习和图像处理能力，从而优化用户体验，并支持更多先进的 AI 功能。&lt;/p&gt; 
&lt;p&gt;苹果已经在其最新的 MacBook M4 芯片中使用了 Arm 的 V9 架构，它表示 M4 为下一代 PC 带来了「巨大飞跃」的性能提升，预计将在接下来几个月内宣布这些 PC 新品。&lt;/p&gt; 
&lt;p&gt;去年 9 月，苹果与 Arm 签署了一项协议，有效期至 2040 年「及以后」，确保在可预见的未来能够使用其核心知识产权 Arm 架构，该架构用于其 iPhone 和 Mac 芯片。&lt;/p&gt; 
&lt;p&gt;这份多年期许可协议也为 Arm 带来了巨大的推动力。Arm 首席执行官 Rene Haas 此前表示，最初于 2021 年推出的 V9 芯片架构带来的专利费是其上一代 V8 的两倍，后者可用于苹果为 iPhone 15 Pro 和 Pro Max 设计的 A17 Pro 芯片。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ad2b9b0c319c1e99fcbaa79d9b1239690e6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸阅读：&lt;a href=&quot;https://www.oschina.net/news/268797&quot; target=&quot;_blank&quot;&gt;苹果每台设备的 Arm 专利费比塑料薄膜还便宜&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311127/apple-a18-uses-arm-chip</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311127/apple-a18-uses-arm-chip</guid>
            <pubDate>Mon, 09 Sep 2024 03:02:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>TIOBE 9 月榜单：Java 上位，C 语言跌至历史最低</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 公布了 2024&amp;nbsp;年 9 月的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot; target=&quot;_blank&quot;&gt;编程语言排行榜&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;57&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9e4bd293896dda588da5bbd0c0a6f22bf7e.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;自 6 月份被&amp;nbsp;C++&amp;nbsp;超越跌至榜单第三后，C 语言排名在本月再次下跌一位。目前榜单的 Top 5 位分别是：Python、C++、Java、C 和 C#。这也是自 2001 年 TIOBE 指数开始以来 C 语言的最低排名，C 语言是否正在失去魔力？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE CEO Paul Jansen 点评称，C 语言一直以来都嵌入式系统的最爱。到目前为止，C 语言唯一的严重缺点是它不是为扩展而设计的。由于缺乏面向对象特性，大型 C 程序难以维护。现在，嵌入式系统的功能趋于增长，因此代码大小也随之增长，而且由于越来越多的嵌入式编译器具有良好的 C++ 支持，因此人们倾向于从 C 语言切换到 C++。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;尤其是美国政府开始明确表示希望禁止内存不安全的语言（如 C 语言），转而支持内存安全的语言（如 Rust），很多公司正在考虑用 Rust 来替代 C。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Paul Jansen 认为，「C 可能会失去它的魅力，但它会在很长一段时间内保持在 TIOBE 指数前 10 名。因为它的装机量惊人，是全球数以亿计的安全关键系统的一部分。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;TIOBE 9 月 TOP 20 编程语言&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;415&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-10b8ae83c8a8fb66a41b7f40a86e9104b40.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;C 的排名从 3 跌至 4&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Java 的排名从 4 升至 3&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Visual Basic 的排名从 8 升至 7&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Go 的排名从 9 升至 8&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;SQL&amp;nbsp;的排名从 7 跌至 9&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Delphi/Object Pascal&amp;nbsp;排名从&amp;nbsp;12 升至 11&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;MATLAB&amp;nbsp;的排名从&amp;nbsp;11 跌至 12&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;R 语言的排名从 19 升至 15&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Ruby&amp;nbsp;的排名从&amp;nbsp;15 跌至 16&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Scratch&amp;nbsp;的排名从 20 升至 17&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;COBOL 重回&amp;nbsp;Top 20 至第 19 位&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Swift&amp;nbsp;的排名从&amp;nbsp;16&amp;nbsp;跌至 20&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Assembly language&amp;nbsp;则跌出 Top 20 榜单（17→21）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;TOP 10 编程语言 TIOBE 指数走势（2002-2024）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;226&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b1b32c460a11413f4424844d8392e036841.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;第 21-50 名编程语言排行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;428&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1e5e687f153ab6f10dc237953ca5360e88a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;第 51-100 名如下，由于它们之间的数值差异较小，仅以文本形式列出（按字母排序）：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ABC, ActionScript, Algol, Apex, APL, Bash, Carbon, CFML, CHILL, CL (OS/400), CLIPS, Clojure, Crystal, Curl, DiBOL, Erlang, Forth, Groovy, Hack, Icon, Inform, Io, J, JScript, LabVIEW, Modula-2, Mojo, MQL5, NATURAL, Nim, OCaml, Occam, OpenCL, OpenEdge ABL, PL/I, PostScript, Q, Ring, Scheme, Smalltalk, Snap!, SPARK, Stata, SystemVerilog, Tcl, VHDL, Whitespace, Wolfram, X++, Zig&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 编程社区指数（The TIOBE Programming Community index）是一个衡量编程语言受欢迎程度的指标，该指数每月更新一次。评判的依据来自世界范围内的工程师、课程和第三方供应商，包括流行的搜索引擎，如 Google、必应、雅虎、维基百科、亚马逊、YouTube 和百度都被用于指数计算。值得注意的是，TIOBE 指数并不代表编程语言的好坏或编写代码的多少。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;该指数可以用来检查你的编程技能是否还能跟上时代的步伐，或者在开始建立一个新的软件系统时，基于指数对采用何种编程语言做出决策。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2Fprogramminglanguages_definition%2F&quot; target=&quot;_blank&quot;&gt;TIOBE 指数&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;的定义方式，以及详细榜单信息&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot; target=&quot;_blank&quot;&gt;均可查看官网&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311117/tiobe-index-202409</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311117/tiobe-index-202409</guid>
            <pubDate>Mon, 09 Sep 2024 02:40:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Zadig 上线字节飞书官方：先进组织，一站式高效协同解决方案</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;img height=&quot;1596&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b94b52e8b10d68adefc141d1fc01ab25034.png&quot; width=&quot;3750&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#fd2968&quot;&gt;先进团队，先用飞书！&lt;/span&gt; 作为新一代高效协作的办公工具，使用飞书已成为先进团队的工作方式。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#fd2968&quot;&gt;发布对了，就都对了！&lt;/span&gt; Zadig，基于云原生技术和工程最佳实践打造的 DevOps 平台 ，正式上线飞书官方：真正打通需求到发布全生命周期，为企业带来产研一站式高效协作方案。&lt;/p&gt; 
&lt;p&gt;Zadig 与飞书全家桶，这对代表先进生产力的组合，到底带来了哪些神奇的效果？&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;Zadig x 飞书产研运一体化方案&lt;/h1&gt; 
&lt;p&gt;&lt;img height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b58b340edd051a46a58455ca3922db9521f.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Zadig 连通飞书项目管理、审批、IM 通知、机器人等协作套件，深度融合，在以下四大场景中让产研协作更丝滑、更高效：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;需求管理：降低需求管理成本，明确需求进度，方便产品版本规划。&lt;/li&gt; 
 &lt;li&gt;开发自测联调：通过稳定的测试环境和自动化工作流程，减少研发手工操作，降低研发成本，提高交付效率。&lt;/li&gt; 
 &lt;li&gt;测试集成验证：践行测试驱动开发理念，实现测试过程前置，尽早发现问题，降低沟通和修复成本，实现安全可靠又高效的业务变更。&lt;/li&gt; 
 &lt;li&gt;运维生产发布：自动化执行研发发布规范，提升管理协作效率，降低人为事故的发生概率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;场景一：需求管理&lt;/h2&gt; 
&lt;p&gt;传统的文档管理方式中，需求杂乱，进展不明确，排期难度大且不透明。飞书中的项目视图可以将需求流程可视化，进展一目了然；支持关键指标度量，驱动组织持续迭代。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;708&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c42bb72e82e0a0a3bac48b1a87f690da6a7.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;场景二：开发自测联调&lt;/h2&gt; 
&lt;p&gt;研发工程师在自测联调时面临以下痛点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;需要人工部署新版本到开发环境，操作繁琐且容易出错。出现问题难诊断，需求交付效率低下。&lt;/li&gt; 
 &lt;li&gt;多人共享一套自测环境，资源使用冲突情况频发；环境变更信息不透明无法追溯，团队之间无法丝滑协作。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Zadig 中提供了灵活易用的高并发工作流，多个微服务并行构建、部署、测试，提升代码验证效率；可一键拉起数套独立的开发环境，且环境操作记录公开透明，信息可追溯；支持飞书项目触发器和 IM 通知，实现工作流任务执行完毕后自动更新飞书工作项状态，及时推送环境更新信息，实现高效协作。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;879&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a2e346e06d3ecc251d085aba3fa795afd6.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;场景三：测试集成验证&lt;/h2&gt; 
&lt;p&gt;测试工程师在团队协作中面临以下痛点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;多个成员共享一套测试环境，只能对某个固定的版本进行测试，多个功能无法并行验证，功能验证带宽低下。&lt;/li&gt; 
 &lt;li&gt;测试用例管理困难，本地执行测试的可信度被质疑，自动化测试价值难以体现。&lt;/li&gt; 
 &lt;li&gt;测试结果口头同步，团队内碎片化沟通严重且信息难追溯。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Zadig 支持拉起多套独立的验证环境，服务版本可控，实现并行验证；自动化测试执行过程公开透明，结合工作流测试结果反馈，实现测试前置，为开发赋能；飞书工作项状态变更后自动触发 Zadig 工作流实现测试流程自动化，降低沟通成本。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;711&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6d881721f1c06781a02fd2eaa0516fc4db9.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;场景四：运维生产发布&lt;/h2&gt; 
&lt;p&gt;企业在生产发布时面临以下痛点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;生产发布自动化难以实现，运维手工操作繁重。&lt;/li&gt; 
 &lt;li&gt;发布前需要花大量时间进行人工梳理和汇总发布版本信息，人工失误会导致上线版本不完整，甚至出现严重的生产事故。&lt;/li&gt; 
 &lt;li&gt;传统发布审批使用工单系统，流程冗长且信息不精准；审批内容和实际发版内容存在出入，版本追溯困难。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Zadig 的发布工作流可灵活编排配置变更 Nacos/Apollo、数据变更 DMS/MySQL，支持蓝绿、金丝雀、分批次灰度、Istio 等多种发布策略，实现安全可靠的发布管理；通过多集群、多项目视角呈现生产环境的状态实现发布过程的透明可靠可追溯；在发布过程关键节点通过发布工作流向负责人发起变更审批请求，快速跳转到 Zadig 可审查发布详情，降低沟通成本减少信息差。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;781&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3f6e1db960ea6391eeaae2cbd4aec70b9d0.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;One More Thing：敏捷效能看板&lt;/h1&gt; 
&lt;p&gt;Zadig 提供从需求到发布的产研运一体化支撑，自动收集研发交付全流程过程和结果数据，支持定制企业级 XOps 敏捷效能看板，用数据驱动增长。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1358&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-61392cde36cb3365a4eed2fc0ff8a1703e1.png&quot; width=&quot;2914&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_7&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;谁在用？&lt;/h1&gt; 
&lt;p&gt;&lt;img height=&quot;2306&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-734842e184e3a34191af13f030b2573e53f.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#ff4c88; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;扫码即刻咨询&lt;br&gt; 解锁企业专属最佳实践方案！&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;942&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d28e269b606634af6c301b147a91bdf3fbf.png&quot; width=&quot;1796&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Zadig 在 Github&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://gitee.com/koderover/zadig&quot; rel=&quot;nofollow&quot;&gt;Zadig 在 Gitee&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#002a64; margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://my.oschina.net/koderover/blog/11209278&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;讲不清楚 Zadig 价值？看看他们怎么说&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/11210095&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Zadig 官网博客正式发布，技术干货实践管饱&lt;/a&gt;&amp;nbsp;/&lt;span style=&quot;background-color:#ffffff; color:#002a64&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://my.oschina.net/koderover/blog/10316143&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Jenkins 迁移 Zadig，新项目实施上线效率提升 6 倍&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/11555717&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;云器科技为何选择 Zadig 应对多云发布难题&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/13739473&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Zadig 工作流如何联动 Grafana 进行服务监测&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/koderover/blog/13742490</link>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/13742490</guid>
            <pubDate>Mon, 09 Sep 2024 02:14:56 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>网络工程师使用 deepin 必需掌握的两个工具 minicom 和 cutecom</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-use-minicom-and-cutecom%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Minicom（命令行工具）&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;minicom 属于命令行工具，没有图像化界面，安装包小，占用系统资源小，使用 deepin 的超级终端窗口直接可以使用，优先推荐使用 minicom。&lt;/p&gt; 
&lt;p&gt;minicom 的主要用于串口通信。以下将分别介绍 minicom 的安装步骤和使用方法。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;minicom 的安装&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;minicom 的安装方法主要依赖于你使用的 Linux 发行版。以 deepin 为例，可以通过以下步骤安装 minicom：&lt;/p&gt; 
&lt;p&gt;1、打开终端：首先，需要打开你的 deepin 超级终端。&lt;/p&gt; 
&lt;p&gt;2、获取 root 权限：为了安装软件，通常需要 root 权限。可以通过输入 sudo su -来获取。系统可能会要求你输入管理员密码。&lt;/p&gt; 
&lt;p&gt;3、使用 apt-get 安装 minicom：deepin 及其衍生版（统信 UOS ）通常使用 apt 包管理器。在终端中输入以下命令来安装 minicom：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;sudo apt-get update # 更新软件包列表&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;sudo apt-get install minicom&amp;nbsp;&amp;nbsp;# 安装 minicom&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;这个命令会从 deepin 的软件仓库中下载并安装 minicom。安装过程中，系统可能会询问你是否确认安装，输入 y 并按回车即可继续。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;minicom 的使用&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;minicom 的使用主要涉及配置串口和进行串口通信。以下是基本的使用步骤：&lt;/p&gt; 
&lt;p&gt;1、配置串口：&lt;/p&gt; 
&lt;p&gt;启动 minicom 配置工具：在终端中输入 sudo minicom -s。这将启动 minicom 的配置菜单。&lt;/p&gt; 
&lt;p&gt;选择「Serial port setup」进行串口设置。你需要设置正确的串口设备（如/dev/ttyS0、/dev/ttyUSB0 等）、波特率、数据位、停止位等参数。&lt;/p&gt; 
&lt;p&gt;配置完成后，选择「 Save setup as dfl 」保存为默认配置，并退出配置菜单。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1134&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/09/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240904095842.jpg&quot; width=&quot;1199&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;2、启动 minicom：配置完串口后，可以直接在终端中输入 sudo minicom 来启动 minicom。如果之前已经保存了默认配置，minicom 将自动使用这些配置参数。&lt;/p&gt; 
&lt;p&gt;3、进行串口通信：启动 minicom 后，你就可以开始与连接在指定串口上的设备进行通信了。你可以输入命令并查看设备的响应。正常情况到此你会看到熟悉的设备调测界面，比如华为交换机会提示输入 user 和 password。&lt;/p&gt; 
&lt;p&gt;4、退出 minicom：要退出 minicom，可以按 Ctrl+A，然后按 X 键。系统会询问你是否确定退出，按 y 键确认即可。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;minicom 的常用功能（部分高级功能&lt;/strong&gt;&lt;strong&gt;）&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1、自动卷屏：按 Ctrl+A，然后按 W 键可以启用自动卷屏功能，这样当显示的内容超过一行时，会自动换行显示。&lt;/p&gt; 
&lt;p&gt;2、清除屏幕：按 Ctrl+A，然后按 C 键可以清除屏幕上的显示内容。&lt;/p&gt; 
&lt;p&gt;3、浏览历史显示：按 Ctrl+A，然后按 B 键可以浏览 minicom 的历史显示内容。&lt;/p&gt; 
&lt;p&gt;4、发送文件：minicom 支持通过串口发送文件。具体方法可能因 minicom 版本和配置而异，通常需要使用特定的命令或选项。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在使用 minicom 之前，请确保你有足够的权限来访问指定的串口设备。通常，这些设备文件位于/dev/目录下，并且需要 root 权限才能访问。进入查看驱动方法如下：&lt;/p&gt; 
&lt;p&gt;Lsusb#查看串口线驱动是否安装正常， deepin 默认安装。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;475&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/09/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240904095847.jpg&quot; width=&quot;1267&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;cd /dev 进入 dev 目录&lt;/p&gt; 
&lt;p&gt;ls&amp;nbsp;查看 dev 下驱动是否存在 ttyUSB0&lt;/p&gt; 
&lt;p&gt;minicom 的配置和使用方法可能会因不同的 Linux 发行版和 minicom 版本而有所不同。如果你使用的是其他 Linux 发行版或 minicom 版本，请参考相应的文档或帮助信息。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Cutecom（图形化调测工具）&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;同样在 deepin 上安装和使用 cutecom 可进行串口调试，cutecom 是图形化界面工具，类似用户熟悉操作 Windows 和 MacOS 工具，可以按照以下步骤进行：&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;安装 cutecom&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1、使用 apt-get 安装（适用于 deepin 及其衍生版）&lt;/p&gt; 
&lt;p&gt;打开 deepin 超级命令终端&lt;/p&gt; 
&lt;p&gt;安装 cutecom：输入 sudo apt-get install cutecom 命令，然后按照提示操作即可安装 cutecom。&lt;/p&gt; 
&lt;p&gt;如果安装失败建议执行系统更行命令，确保系统保持在最新版本，输入 sudo apt-get update 命令来更新你的软件包列表，以确保安装的是最新版本的软件。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;使用 cutecom&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1、启动 cutecom&lt;/p&gt; 
&lt;p&gt;安装完成后，你可以在终端中输入 sudo cutecom 命令来启动 cutecom。由于 cutecom 可能需要访问串口设备，因此可能需要使用 sudo 来获取必要的权限。&lt;/p&gt; 
&lt;p&gt;2、设置串口参数&lt;/p&gt; 
&lt;p&gt;查找串口：连接你的串口设备到计算机，然后在终端中输入 dmesg | grep ttyS*（对于传统的串口设备）或 dmesg | grep ttyUSB*（对于 USB 转串口设备）来查找设备对应的串口名称（如/dev/ttyS0、/dev/ttyUSB0 等）。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;619&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/09/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240904095851.jpg&quot; width=&quot;650&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;配置串口参数：在 cutecom 界面中，点击「 Settings 」按钮进入设置界面，设置正确的串口名称、波特率、数据位、停止位等参数。通常，波特率需要根据你的设备手册进行设置。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;备注：在顶部，您可以看到小部件，您可以在其中调整串行通信设置。在此部分下方是输出视图，您可以在其中看到设备的所有内容&amp;nbsp;发回，也是不可打印的字符。在底部，您可以看到输入区域， 使用输入行输入命令，以及包含输入行历史记录的列表。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;3、连接串口设备&lt;/p&gt; 
&lt;p&gt;选择串口：在 cutecom 的「 Device 」一栏中选择你通过 dmesg 命令找到的串口名称，或者手动输入该名称。&lt;/p&gt; 
&lt;p&gt;打开串口：点击软件左上角的「 Open Device 」按钮来连接串口设备。&lt;/p&gt; 
&lt;p&gt;4、发送和接收数据&lt;/p&gt; 
&lt;p&gt;连接成功后，你就可以在 cutecom 的界面中发送和接收数据了。通常，cutecom 的界面会分为上下两个窗口，上面的窗口用于显示接收到的数据，下面的窗口用于输入要发送的数据。&lt;/p&gt; 
&lt;p&gt;5、关闭连接&lt;/p&gt; 
&lt;p&gt;当你完成串口通信后，可以点击软件左上角的「 Close Device 」按钮来关闭当前的串口连接。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在使用 cutecom 之前，请确保你的 deepin 系统已经安装了必要的串口驱动，并且串口设备已经正确连接到计算机上。（同 minicom 操作）&lt;/p&gt; 
&lt;p&gt;如果你的 Linux 发行版不支持 apt-get 包管理器，你可能需要查找适用于你的系统的其他安装方法。&lt;/p&gt; 
&lt;p&gt;在使用 cutecom 进行串口通信时，请确保你了解串口通信的基本原理和参数设置方法，以避免通信失败或数据丢失等问题。&lt;/p&gt; 
&lt;p&gt;感谢 deepin（深度）社区用户：UOS 大局观的投稿。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-use-minicom-and-cutecom%2F&quot; target=&quot;_blank&quot;&gt;查看原文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Ftable.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 全版本镜像（含 deepin V15&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-23-on-xiaomi-5%2F&quot; target=&quot;_blank&quot;&gt;如何在小米 5 平板上运行 deepin 23&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311103</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311103</guid>
            <pubDate>Mon, 09 Sep 2024 02:02:56 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>openKylin 亮相第十四届智博会，以开源之力赋能数字经济</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年 9 月 6 日，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 世界数字经济大会暨第十四届智慧城市与智能经济博览会&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;（以下简称「智博会」）在宁波开幕。本届&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;智博会&lt;/span&gt;&lt;span&gt;围绕「数字赋能新型工业化」这一全新主题，以「1+1+4」模式策划举办开幕、展览展示和论坛研讨、产数合作、赛事赋能、开放互动等 4 大板块系列专项活动，超 300 家企业参展，汇聚了来自全国乃至全球的顶尖科技企业、专家学者及行业精英，共同探索「数字赋能」的无限可能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3966a281fb3e3773a177f5788b192e8428f.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社区秘书长余杰&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;受邀参与&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;大会开源生态体系建设分论坛&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，带来&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;《麒麟开源生态建设实践及体会》&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;主题演讲，围绕开源操作系统发展历程、openKylin 社区及生态建设实践，介绍 openKylin&lt;span style=&quot;color:#000000&quot;&gt;社区&lt;/span&gt;在版本构建、创新发展、技术生态、产业生态以及开发者和用户生态等领域的开源实践成果，并分享社区在开源技术研发、开源社区建设、开源人才培养等方面的经验体会。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;2115&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9dfc884925e7392aebeaf4626617c22f142.jpg&quot; width=&quot;3171&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，openKylin 社区参展本次大会展区，带来社区开源技术、应用实践等最新社区成果展示，&lt;span style=&quot;color:#000000&quot;&gt;吸引了众多参展人员驻足交流，&lt;span style=&quot;color:#000000&quot;&gt;共同见证开源技术的蓬勃生机&lt;/span&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-63132482dfa8019a84ee7b7be163cf89cf4.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1067&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9d4e6314cc384b3ea72c70f873936f722a4.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社区成立至今，已经聚集 6800 多位开发者，吸引来自操作系统、数据库、办公软件、CPU、GPU、整机、人工智能优势企业及高等院校等不同领域的 550 多家单位会员加入，并成立 110 多个 SIG 组开展技术创新。在合作伙伴与开发者共同推动下，openKylin 社区正在以较快的速度稳步发展，截至目前已发布 8 个系统版本，实现了从系统效能、功能体验、生态融合、应用开发等方面的全栈技术创新，将为围绕系统上下游的软硬件生态融合提供有力支撑。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;未来，openKylin 社区将继续聚焦开源操作系统根技术，发挥社区平台支撑作用，聚合产、学、研、用及国内外开源力量，加速系统创新迭代，共同推动操作系统技术创新发展和生态繁荣建设。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311092</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311092</guid>
            <pubDate>Mon, 09 Sep 2024 01:32:56 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | Ilya 融资 10 亿幕后大佬；VS Code 1.93；开源大模型新王干翻 GPT-4o；与「苹果税」的博弈；用 Mac 训练机器人叠衣服</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.6&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310676&quot;&gt;苹果批准了 iOS 版微信本周提交的更新&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;9 月 6 日，据彭博社报道，苹果已经批准了腾讯本周提交的 iOS 系统微信更新，为双方就&lt;strong&gt;应用内购费用&lt;/strong&gt;问题的持续谈判赢得了更多时间。在此之前，App Store 上的微信已经有两个多月没有发布更新。&lt;/p&gt; 
   &lt;blockquote&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cbe924a36238e3f21abac1446e659d7022c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-09-06%2Fapple-clears-wechat-for-iphone-16-as-talks-persist-over-app-fees&quot; target=&quot;_blank&quot;&gt;https://www.bloomberg.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
   &lt;/blockquote&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;据知情人士透露，苹果本周批准了 iOS 版微信更新，新版本在朋友圈和直播功能方面进行了优化。这一决定有望平息中国市场对苹果与腾讯就应用商店费用争议可能升级的猜测。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;双方分歧的焦点在于微信小游戏平台。报道称苹果要求腾讯屏蔽小游戏中的外部支付链接，并停止开发者利用平台内置消息功能引导用户使用其他支付渠道，从而保证能够抽成 30%。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;苹果还要求腾讯完全禁用游戏内消息传递，但腾讯以过于激烈为由拒绝了这一要求。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;知情人士称，腾讯仍在与苹果讨论后续更新的潜在方案。苹果代表拒绝置评，而腾讯则没有回复通过电子邮件发送的询问。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310721/vs-code-1-93-released&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310721/vs-code-1-93-released&quot;&gt; 1.93&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c70f6188249bdf69402000e2242734552aa.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310699/kde-report-2023&quot;&gt;KDE 发布 2023 年度报告：再次亏损&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;KDE 是一个国际技术团队，产品包括适用于 Linux 和 UNIX 平台的现代桌面系统、全面的办公生产力和群件套件以及数百种软件，涵盖互联网和网络应用程序、多媒体、娱乐、教育、图形和软件开发等多个类别。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;报告指出，KDE 在 2023 年的工作重点主要集中在构建 Plasma 6 方面，完成了很多出色的软件开发工作。在 5 月份的一场会议中，Plasma 团队讨论了向 KF6 的过渡及其对 KDE 框架内依赖管理的影响。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中一个重大变化是重组了 colour scheme classes，以减少对&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Qt::Widgets&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的不必要依赖，特别是对于基于 QML 的移动应用程序。这种重组提高了效率并减少了软件包的大小 -- 尤其是对于 Android APK 而言，它们可以占到软件包总大小的 20-25%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;但值得一提的是，KDE 在&amp;nbsp;2023 年的年收入仍略低于预期；总成本高于前几年，主要原因是人员费用和活动相关费用。细分来看，企业支持和个人捐款仍然是其重要的收入来源，其中个人捐款增长尤为显著。但一些传统来源（如 Google Summer of Code）的收入略有下降。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5cf262499217ee79a5e626a9630aa1af7ba.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1684197391%2FOvAy0vAZq&quot; target=&quot;_blank&quot;&gt;这个开源项目过于抽象&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;p&gt;Open and Shut 是一款通过打开、关闭笔记本电脑来发送莫斯电码的开源工具。真的就是打开笔记本、合上笔记本来发送一次信号，组合起来成了莫斯电码，太过于抽象了。&lt;/p&gt; 
        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fveggiedefender%2Fopen-and-shut&quot; target=&quot;_blank&quot;&gt;https://github.com/veggiedefender/open-and-shut&lt;/a&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;&lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;小众软件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGnrEPlKt-8CPhrMcwGRfaA&quot; target=&quot;_blank&quot;&gt;用 Mac 训练个机器人叠衣服&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;该教程主要基于一种开源、价格友好的机器人套件 Koch v1.1 编写，不过也可以通过改变配置轻松适应各种类型的机器人。&lt;/p&gt; 
   &lt;p&gt;Koch v1.1 由一个主导臂和一个从动臂组成，每个臂有 6 个电机。它可以和一个或多个摄像头一起工作来记录场景，这些摄像头被用作机器人的视觉传感器。在数据采集阶段，你将通过移动主导臂来控制从动臂。这个过程被称为「遥操作」。这种技术用于收集机器人轨迹。之后，你将训练一个神经网络来模仿这些轨迹，并部署网络以使你的机器人能够自主操作。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;&lt;span&gt;机器之心&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FDY2R77q6uzsMMsdGc6MLcw&quot; target=&quot;_blank&quot;&gt;批准 iPhone16 上架微信，与「苹果税」的博弈并非不可能&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;腾讯和字节跳动之所以「逃」税，还有一部分原因是因为苹果在世界各地的抽成并不相同。举个例子：&lt;/p&gt; 
    &lt;p&gt;在美国本土，苹果对企业的苹果税为 27%，对小工作室或独立开发者则是 12%；而对刚刚正面硬刚苹果并取得胜利的欧盟地区，苹果对企业的税率标准是 17%，对小工作室或独立开发者的则是 10%；结果到了中国大陆地区，这个标准变成了大企业 30%，小工作室或独立开发者为 15%。&lt;/p&gt; 
    &lt;p&gt;同时，在欧盟、美国和韩国等地区，苹果也是允许应用内通过链接的形式引导用户在应用之外完成交易的，但在中国大陆却不允许。&lt;/p&gt; 
    &lt;p&gt;按理说应用上架 App Store 后苹果进行抽成其实无可厚非，但与安卓不同的是，这个「苹果税」损害的并不是开发商的利益，而是用户。&lt;/p&gt; 
    &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;&lt;span&gt;不客观实验室&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cczWIhhr62&quot; target=&quot;_blank&quot;&gt;Ilya 融资 10 亿幕后大佬：复刻 OpenAI 创始人，21 岁当苹果 AI 总监，手握千卡算力集群&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;OpenAI 前首席科学家伊尔亚·苏茨科夫（Ilya Sutskever）的创企安全超级智能（SSI）在成立 2 个多月、仅有 10 名员工的情况下，一举拿下 10 亿美元融资，估值冲破 50 亿美元（折合约 356 亿元人民币）。&lt;/p&gt; 
  &lt;p&gt;为何 SSI 能以如此之快的速度，拿下大额融资？除了苏茨科夫在 AI 圈的影响力之外，SSI 另一位拥有丰富创投经验的神秘联合创始人丹尼尔·格罗斯（Daniel Gross）也做出了重要贡献。&lt;/p&gt; 
  &lt;p&gt;今年 6 月，格罗斯与苏茨科夫和另一位从 OpenAI 出走的研究科学家丹尼尔·列维（Daniel Levy）共同创立 SSI，苏茨科夫为首席科学家，列维为主要科学家，格罗斯则负责算力、筹款和人才引进。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;智东西&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cdKl09a9oK&quot; target=&quot;_blank&quot;&gt;阿斯麦 CEO：美国以国家安全之名对华设限，但如今更像「出于经济动机」&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;据英国路透社 9 月 4 日报道，荷兰半导体设备制造商阿斯麦公司首席执行官克里斯托夫·富凯当天在纽约花旗银行的会议上表示，随着时间推移，美国以「国家安全」之名实施的对华出口管制变得更像是「出于经济动机」。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「要证明这事关国家安全，越来越难了。」富凯预测，未来反对美国管制的声音将越来越多。「很可能会有更大的限制压力，但同时也会出现更多反对声」，在他看来，企业希望能达到一个平衡，因为做生意需要「一点确定性，一点稳定性」。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年 4 月，富凯从彼得·温宁克手中接棒，成为阿斯麦的掌舵人。多年来，他一直保持低调，很少公开谈论地缘政治问题。从几次公开表态中可以看出，富凯倡导全球技术合作，多次对半导体产业脱钩断链发出警告。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;观察者网&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1808781410725306968%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;谷歌大手笔挖走创始人后 Character.AI 上演裁员风波&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;在科技行业的瞬息万变中，初创公司的命运往往充满了不确定性。据 The Information 报道，与谷歌达成重大交易不久后，美国人工智能创业公司 Character.AI 在当地时间 8 月 29 日进行了至少 5% 的裁员，主要涉及营销和招聘岗位。在裁员前，Character.AI 拥有约 120 名员工。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;科创板日报&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.21jingji.com%2Farticle%2F20240906%2Fherald%2F8a3efa4b532c02da268377a8fe276ce7.html&quot; target=&quot;_blank&quot;&gt;Runway 突然删库跑路之后仍「岁月静好」，信任正在被侵蚀&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Runway 将 HuggingFace 和 GitHub 平台上的资源全部移除，尤其是将 Stable Diffusion v1.5 删除，不仅对依靠这个模型进行项目研究的人员和社区造成了影响，还引发了关于开源人工智能资源的可靠性和稳定性的问题，可能会侵蚀对人工智能开发协作性质的信任。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;此外，发布者的突然跑路，也令 HuggingFace 和 GitHub 这类人工智能模型共享和协作主要平台面临直接挑战。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;21 世纪经济报道&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8ceasbSi0Mq&quot; target=&quot;_blank&quot;&gt;对话帆软：大模型不是 BI 的「万能药」，BI 也不是大模型的「低垂果实」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;「BI 领域肯定不止于大模型，还涉及到数据连接、图表渲染、计算引擎、权限管理等各种基础能力，没有大模型之前，BI 也在用机器学习去解决一些问题，只是大模型是一个增强版的 AI 技术。另外，如果底层数据脏乱差，AI 也很难用起来，数据治理很重要，表面是大模型，冰山之下是数据治理。」翁林君说。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;钛媒体&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.myzaker.com%2Fnews%2Farticle.php%3Fpk%3D66da9388b15ec0654c707fa9&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;开源大模型新王干翻 GPT-4o，新技术可纠正自己幻觉，数学 99.2 分刷爆测试集&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;开源大模型王座突然易主，居然来自一家小创业团队，瞬间引爆业界。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;新模型名为 Reflection 70B，使用一种全新训练技术，让 AI 学会在推理过程中纠正自己的错误和幻觉。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;量子位&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweggli-rs%2Fweggli&quot; target=&quot;_blank&quot;&gt;weggli-rs/weggli&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;343&quot; src=&quot;https://static.oschina.net/uploads/space/2021/1012/170634_nJ1c_4252687.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweggli-rs%2Fweggli&quot; target=&quot;_blank&quot;&gt;https://github.com/weggli-rs/weggli&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#24292f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;weggli 是一个快速且强大的 C 和 C++ 代码库语义搜索工具。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#24292f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;weggli 根据用户提供的查询对抽象语法树执行模式匹配。它的查询语言类似于 C 和 C++ 代码，可以轻松将有趣的代码模式转换为查询。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/15526100&quot; target=&quot;_blank&quot;&gt;HarmonyOS ArkUI 工程框架解析&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通过 HarmonyOS Developer 官网我们可以了解 ArkUI 是一套声明式开放框架，开发者可以基于 ArkTS 语法设计一套极简的 DSL 以及丰富的 UI 组件完成跨设备的界面开发。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;那么 ArkUI 是如何实现这一套声明式开放框架的呢？本文将通过分析开源的 HarmonyOS 渲染引擎 AceEngine 代码以及配套工程能力来进行详细解读。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;208&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1c4a87a-eec8-4a93-aa63-a7e3a2d72b2e.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FjjJiGjA_jCBp3HLSiCqsng&quot; target=&quot;_blank&quot;&gt;苹果批准了 iOS 版微信本周提交的更新&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：微信需要更新吗，每次都是解决了一些已知问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：一人一个赞，坐等后续两家撕逼&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：多大点事，苹果用户多看点广告，这个苹果税不就抵了嘛&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：贼 t 目，iOS 微信消息总是延迟&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：建议微信要硬气！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：再更新，微信就能玩黑神话了。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：苹果你这次不硬起来，我以后都不买苹果的产品了！我肯定天天骂苹果没骨气！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：建议微信学习 epic，硬扛到底，大不了下架呗，反正我可以不用&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F%E5%BE%AE%E8%BD%AF%E5%9C%A8Windows+11%E9%9B%86%E6%88%90%E4%B8%AD%E5%9B%BD%E5%BC%80%E6%BA%90%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%9E%B6%E6%9E%84RWKV%E3%80%81%E8%A3%85%E6%9C%BA%E9%87%8F%E8%BF%915%E4%BA%BF&quot; target=&quot;_blank&quot;&gt;微软在 Windows 11 集成中国开源大模型架构 RWKV、装机量近 5 亿&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：中国的大模型研究现在介于第一梯队和第二梯队之间，第一梯队只有一个就是美国。windows 集成它也是因为中文语料环境占优势&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：rwkv 主要是英文语料，事实上远没有国内大模型中文语料来的多。早期 rwkv 甚至只支持英文&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：微软给别人付费了吗，给授权费了没有。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：如果这个开源项目没有商业授权协议，只有开源协议，那微软不需要给他们付任何的钱。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：这个太牛了，我从版本 3 就开始用，真是见证了牛逼的过程，这可是一个个人的项目啊&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：微软为什么不用它投资的 OpenAI 呢&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：可我还是解决不了 rwkv 复读机问题，中文比英文严重&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：可能微软解决了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：竟，如此🐂🍺&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fq0LXvMeaVi0yMVz4_WVA8w&quot; target=&quot;_blank&quot;&gt;Java 程序员进国企，入职 3 个月还没碰过代码&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：赶紧跑路，跑路的时候咱俩置换下&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：想保持技术建议业余时间参与开源项目&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：才三个月就坐不住了，你不适合大国企&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：国企的 IT 一般都是外包，本职工作是甲方去对接，不是写代码&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：这不叫凡尔赛啥叫凡尔赛&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：你不适合国企，换我来吧，我把互联网公司的岗位给你，能让你天天开心的写很多代码！很灵的，跟你匹配度非常高，来吧置换吧！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：欠卷&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：技术人员没有闲的时候，开源技术，前沿技术，这些技术储备能干的活太多了，要有自己的思路，没思路永远是给别人干。年少不珍惜好环境，后悔了再找真就没有了，不过有些人确实不适合，只适合被安排的工作。还是找个适合自己的更重要。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：这不比写 Java 强？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：找时间提升自己以后去外企可以提升能力也能 WLB&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310791</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310791</guid>
            <pubDate>Fri, 06 Sep 2024 13:12:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>HarmonyOS ArkUI 工程框架解析</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;section data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-backh=&quot;96&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-imgfileid=&quot;503052169&quot; data-ratio=&quot;0.16666666666666666&quot; src=&quot;https://oscimg.oschina.net/oscnet/a9a34e77-55a3-4c9a-86ac-3e4ea58f99d7.gif&quot; data-type=&quot;gif&quot; data-w=&quot;636&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 677px !important;visibility: visible !important;background-size: 16px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-template=&quot;t&quot; data-mpa-template-id=&quot;502&quot; data-mpa-category=&quot;模板&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt; 
  &lt;section data-mpa-category=&quot;模板&quot; data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;&quot;&gt; 
   &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;&quot;&gt; 
    &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;&quot;&gt; 
     &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
    &lt;/section&gt; 
    &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;&quot;&gt; 
     &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-right: 7px;outline: 0px;text-align: left;visibility: visible;&quot;&gt; 
      &lt;p data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &amp;quot;PingFang SC&amp;quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;/p&gt; 
     &lt;/section&gt; 
     &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;&quot;&gt; 
      &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;&quot;&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通过 HarmonyOS Developer 官网我们可以了解 ArkUI 是一套声明式开放框架，开发者可以基于 ArkTS 语法设计一套极简的 DSL 以及丰富的 UI 组件完成跨设备的界面开发。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;那么 ArkUI 是如何实现这一套声明式开放框架的呢？本文将通过分析开源的 HarmonyOS 渲染引擎 AceEngine 代码以及配套工程能力来进行详细解读。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;本篇文章仅先针对响应式和工程化进行浅谈。&lt;/span&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);line-height: 1.75em;visibility: visible;&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052168&quot; data-ratio=&quot;0.3161764705882353&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/a0fdf3aa-4f25-4560-b8b9-722feaf0a594.png&quot; data-type=&quot;png&quot; data-w=&quot;408&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;&quot;&gt;响应式&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h4_1&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;从一个示例来看响应式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;下面是笔者通过 DevEcoStudio 开发者工具模板实例化出来的一个 HelloWorld 实例，从这个简单的片段中我们可以看出来结构体中的&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;message&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;就是驱动数据，在&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;onClick&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;事件中更改值时，会触发界面发生更新。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Entry&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Component&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;struct Index {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;@State&lt;/span&gt; message: &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;&#39;Hello World&#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  build() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Row() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Text(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          .fontSize(&lt;span class=&quot;code-snippet__number&quot;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          .fontWeight(FontWeight.Bold)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      .width(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      .onClick(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Test Reactive&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    .height(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;ArkUI 这套 DSL 封装了很多注解,让开发者可以专注在这套声明式的框架内，不用去关心数据驱动视图变更的细节。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;为了更加深入了解背后的细节，笔者寻找到了这些注解语法糖编译后的产物，来进行更进一步的分析。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;build/default/cache/default/default@CompileArkTS/esmodule/debug/entry/src/main/ets/pages/Index.js&lt;/span&gt;&lt;/code&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt; 
   &lt;ne-clipboard source=&quot;https%3A%2F%2Faliyuque.antfin.com%2Fdisheng.zzy%2Fvu6t3m%2Feohz6eyfi6wimzf7%3FsingleDoc%23&quot; style=&quot;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);letter-spacing: normal;text-align: start;text-wrap: wrap;&quot;&gt;&lt;/ne-clipboard&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_2&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;产物分析&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通过产物可以看到更多语法糖背后的实质操作：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;首先可以清晰看到，在编译后的产物中有针对数据源值的操作，利用重写&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;Componet&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;属性描述器&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;get set&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;劫持&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;message&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;的读写操作，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;message&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;操作最终落入到了&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;ObserverdPropertySimplePU&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中。因此可以看出 ArkUI 的响应式和 Vue 还是非常相似的，都是通过来 Magic Function 追踪属性的读取。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Index&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ViewPU&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;constructor&lt;/span&gt;(parent, params, __localStorage, elmtId = -&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;super&lt;/span&gt;(parent, __localStorage, elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.__message = new ObservedPropertySimplePU(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;Hello World&#39;&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;message&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.setInitiallyProvidedValue(params);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt; message() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.__message.&lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt; message(newValue) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.__message.&lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(newValue);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  initialRender() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation((elmtId, isInitialRender) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Row.create();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Row.height(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Row.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation((elmtId, isInitialRender) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column.create();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column.width(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column.onClick(() =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Test Reactive&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Column.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation((elmtId, isInitialRender) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Text.create(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Text.fontSize(&lt;span class=&quot;code-snippet__number&quot;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Text.fontWeight(FontWeight.Bold);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Text.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Text.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Column.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Row.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_3&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;追踪依赖的过程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在数据被读取的过程中，将当前正在渲染的元素加入到&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;dependentElmtIdsByProperty_&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中去。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;   * during &#39;get&#39; access recording take note of the created component and its elmtId&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;   * and add this component to the list of components who are dependent on this property&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;recordPropertyDependentUpdate&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;/span&gt;) : &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; elmtId = &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.getRenderingElmtId();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dependentElmtIdsByProperty_.addPropertyDependency(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;回看产物代码中的初始函数，每个节点的构建都形成了一个闭包函数并传入到&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;observeComponentCreation&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation(&lt;span class=&quot;code-snippet__function&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;elmtId, isInitialRender&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            Row.create();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            Row.height(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                Row.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        });&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;同时在&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;observeComponentCreation&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中又维护了&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;renderEletIdStack&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;，并且将&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateFunc&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;关联元素存储上。整个过程基本和&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;Vue&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;创建&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;Effect&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;和维护 Dep 的过程类似。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; observeComponentCreation(compilerAssignedUpdateFunc: UpdateFunc): void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; updateFunc = (elmtId: number, isFirstRender: boolean) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.currentlyRenderedElmtIdStack_.push(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      compilerAssignedUpdateFunc(elmtId, isFirstRender);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.currentlyRenderedElmtIdStack_.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; elmtId = ViewStackProcessor.AllocateNewElmetIdForNextComponent();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.updateFuncByElmtId.&lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(elmtId, { updateFunc: updateFunc });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    UINodeRegisterProxy.ElementIdToOwningViewPU_.&lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(elmtId, new WeakRef(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      updateFunc(elmtId, &lt;span class=&quot;code-snippet__comment&quot;&gt;/* is first render */&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;catch&lt;/span&gt; (error) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__comment&quot;&gt;// avoid the incompatible change that move set function before updateFunc.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.updateFuncByElmtId.delete(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      UINodeRegisterProxy.ElementIdToOwningViewPU_.delete(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;throw&lt;/span&gt; error;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;虽然 ArkUI 与 Vue 在某些方面存在相似性，但它们之间有一个显著的差异点。自 Vue 2.x 版本以后，Vue 对响应式绑定的处理变得更加粗犷，限制了更新的精细程度到组件层级，并且融入了 VDOM 的概念以及组件级 DIFF。相比之下，ArkUI 作为声明式 UI 框架，却采取了一种更为「传统」的路径，直接聚焦于细粒度的属性更新绑定，从而在机制上与 Vue 的这一演变形成对比。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_4&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;为什么 ArkUI 要抛弃 DIFF？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;回顾 ArkUI 官网的描述，它进一步证实了笔者从源码分析中的发现：ArkUI 采取了一种策略，从 VDOM DIFF 「回撤」到细粒度的更新，以此来优化性能。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;ArkUI 选择绕过传统的 DIFF 算法，部分原因可能在于 VDOM 可能带来的内存消耗及更新延迟问题。它追求更细粒度的更新管理，以提升性能和响应速度。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;172&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503052171&quot; data-ratio=&quot;0.2972222222222222&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1c4a87a-eec8-4a93-aa63-a7e3a2d72b2e.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;让我们从 js-framework-benchmark 中挑选若干典型框架的测试结果，以此来深入了解 VDOM DIFF 技术与其他技术路径在内存占用和响应时间上的性能差异。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;内存占用&lt;/span&gt; 
   &lt;/section&gt;&lt;p&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;从下图中可以看到 Vue 和 React 在内存占用上明显落后 SolidJS 和 Svelte：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503052172&quot; data-ratio=&quot;0.8385093167701864&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1a3bfd1-dcc9-4b13-a8e6-0cbaa1a936a5.png&quot; data-type=&quot;png&quot; data-w=&quot;483&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;响应时间&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);font-size: 15px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;尽管 Vue 的 DIFF 过程历经众多策略与细节优化，但在响应时间上，与一些未采用 DIFF 机制的框架相比较，仍存在差异。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503052173&quot; data-ratio=&quot;1.2161339421613395&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/934b60d7-7bee-4c15-953b-3343880ca704.png&quot; data-type=&quot;png&quot; data-w=&quot;657&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;Vue2.x 选用 VDOM 是否明智？&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;从性能和跨平台的角度审视，Vue2.x 采用虚拟 DOM（VDOM）的决策似乎缺乏充分理由。特别是考虑到 Vue3.x 的实验性版本 Vue Vapor Mode（无虚拟 DOM 模式），它在性能上已展现出不亚于 VDOM 的表现，这进一步引发了 VDOM 必要性的讨论。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503052174&quot; data-ratio=&quot;5.781512605042017&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/ba529f98-8590-48f0-8346-dc9140c544a2.png&quot; data-type=&quot;png&quot; data-w=&quot;119&quot; style=&quot;width: 91px;height: 526px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_5&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;为什么&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;要将声明式的语法平铺？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;我们先来看看 SolidJS 的产物。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;onClick&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{increment}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;123&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{count() + 1}&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{count()}&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;var _el$ = _tmpl$(),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$2 = _el$.firstChild,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$3 = _el$2.firstChild,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$4 = _el$3.nextSibling,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$5 = _el$2.nextSibling;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    _el$.$$click = increment;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;_&lt;/span&gt;$insert(_el$4, () =&amp;gt; count() + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;_&lt;/span&gt;$insert(_el$5, count);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; _el$;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;SolidJS 选择了在栈上即时创建较多的临时变量，而非增加堆栈深度，以此来优化运行时性能。它的语法设计允许直观地表达 UI 结构的嵌套，但实质上并不导致因语法嵌套而引起的堆栈过深问题，从而避免了因堆栈层次过多而导致的不必要的上下文创建与性能开销。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;这种做法与 ArkUI 有相似之处，提示我们在编程实践中应谨慎设计，以减少不必要的抽象层级，防止堆栈深度无谓增加。然而，ArkUI 采取了一种不同的策略，它通过堆栈的入栈和出栈来跟踪节点的层次和嵌套结构。值得注意的是，ArkUI 为每个组件创建节点时都应用了&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;observeComponentCreation&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;进行包裹，甚至包括那些未使用变量符号标记的节点。从优化角度看，这一做法可能存在过度包装的问题，笔者认为有进一步精简和优化的空间。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h4_6&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;响应式更新&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;对于响应式的更新，ArkUI 就做的比较简单。下面两段是比较核心的代码：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(newValue: T): void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; oldValue = &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.wrappedValue_;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.setValueInternal(newValue)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      TrackedObject.notifyObjectValueAssignment(&lt;span class=&quot;code-snippet__comment&quot;&gt;/* old value */&lt;/span&gt; oldValue, &lt;span class=&quot;code-snippet__comment&quot;&gt;/* new value */&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.wrappedValue_,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.notifyPropertyHasChangedPU,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.notifyTrackedObjectPropertyHasChanged, &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;protected&lt;/span&gt; notifyPropertyHasChangedPU() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.owningView_.viewPropertyHasChanged(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.info_, &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dependentElmtIdsByProperty_.getAllPropertyDependencies());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;viewPropertyHasChanged(varName: PropertyInfo, dependentElmtIds: Set&amp;lt;number&amp;gt;): void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.markNeedUpdate();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; elmtId of dependentElmtIds) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dirtDescendantElementIds_.add(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在关联的属性变化后 ArkUI 会将当前组件标记为脏组件，并且将属性依赖收集到的&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;dependentElmtids&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;维护到组件的&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;dirtDescendantElementIds_&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在笔者从这里来 AkrUI 的升级并未完全到位，它仍然将响应式流程与组件紧密绑定在一起，未能在框架侧落地无组件（NoComponent）的设计理念。&lt;strong&gt;一般而言，节点与组件的绑定是为了给 DIFF 过程设定界限，从而缩小比较范围，提高效率。然而，在当前场景下，这种绑定显得多余。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateDirtyElements&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;消费脏节点，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;UpdateElement&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中获取到&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateFuncs&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中存储的更新函数。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; updateDirtyElements() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      dirtElmtIdsFromRootNode.forEach(elmtId =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.hasRecycleManager()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.UpdateElement(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.recycleManager_.proxyNodeId(elmtId));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        } &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.UpdateElement(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dirtDescendantElementIds_.delete(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dirtDescendantElementIds_.size);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;而&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateDirtyElements&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;被 Native 的&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;JSView&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;关联的 Node 持有。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;markdown&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;auto updateFunction = [&lt;span class=&quot;code-snippet__string&quot;&gt;weak = AceType::WeakClaim(this)&lt;/span&gt;](&lt;span class=&quot;code-snippet__link&quot;&gt;&lt;/span&gt;) -&amp;gt; void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        auto jsView = weak.Upgrade();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        if (!jsView-&amp;gt;needsUpdate_) {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;            return;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        jsView-&amp;gt;needsUpdate_ = false;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        jsView-&amp;gt;jsViewFunction_-&amp;gt;ExecuteRerender();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;    };&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;customNode-&amp;gt;SetUpdateFunction(std::move(info.updateFunc));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;上文中说到的组件&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 16px;&quot;&gt;markNeedUpdate&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最终也会调用到&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 16px;&quot;&gt;JSView&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;背后的 Node 的方案。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;bool&lt;/span&gt; ViewPartialUpdateModelNG::MarkNeedUpdate(&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; WeakPtr&amp;lt;AceType&amp;gt;&amp;amp; node)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    customNode-&amp;gt;MarkNeedUpdate();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最终会将 Node 注册进入渲染管线&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;PipelineContext&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中的脏节点集合中。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; CustomNodeBase::MarkNeedUpdate()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; context = PipelineContext::GetCurrentContext();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    context-&amp;gt;AddDirtyCustomNode(AceType::DynamicCast&amp;lt;UINode&amp;gt;(Claim(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;)));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最终渲染管线在接受到系统的 vSync 信号回调后清理脏节点。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; PipelineContext::FlushVsync(&lt;span class=&quot;code-snippet__keyword&quot;&gt;uint64_t&lt;/span&gt; nanoTimestamp, &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint32_t&lt;/span&gt; frameCount){&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  FlushBuild();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;void PipelineContext::FlushDirtyNodeUpdate()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (!dirtyNodes_.&lt;span class=&quot;code-snippet__keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; auto&amp;amp; node : dirtyNodes) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (AceType::InstanceOf&amp;lt;NG::CustomNodeBase&amp;gt;(node)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                auto customNode = AceType::DynamicCast&amp;lt;NG::CustomNodeBase&amp;gt;(node);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                node-&amp;gt;needRebuild_ = &lt;span class=&quot;code-snippet__keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (node-&amp;gt;updateFunc_) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    node-&amp;gt;updateFunc_();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;至此，一个基本的响应式流程得以完成。不难发现，ArkUI 的响应式架构及其更新机制，都展现了与市面上成熟响应式框架相似的特质。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;pre style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;code&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;visibility: visible;line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052175&quot; data-ratio=&quot;0.3056872037914692&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/4a924c03-206a-40ca-94b8-fba0150afd41.png&quot; data-type=&quot;png&quot; data-w=&quot;422&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;color: rgb(34, 34, 34);visibility: visible;line-height: normal;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;工程化&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_7&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;TypeScript 超集&quot;ohos-typescript&quot;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;/h4&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通过逆向分析 DevEcoStudio 中的多种插件 Jar 包，我们发现 ArkUI 巧妙地对现有各类语言的插件进行了定制改造，从而在研发环节实现了这一功能的集成。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;声明式语法（&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;struct&lt;/span&gt;&lt;/code&gt;&amp;nbsp;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;关键词，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;@Builder&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;,&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Component Inside&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&amp;nbsp;) 研发侧实现即将符合条件的词法节点转成扩展的语法树,其中扩展了&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;StructDeclartion&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;EtsComponentExpression&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;ComponentState&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;等一系列类型 (Intellij 中的 PSI ElementType)。IDE 便能得到一个经过精心调整的抽象语法树（AST），为代码导航、语法高亮等高级功能奠定了坚实基础，也解决了开发者对于这门超集语言研发侧的问题。&lt;/span&gt;&lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;如&lt;/span&gt;&lt;code style=&quot;font-size: var(--articleFontsize);letter-spacing: 0.034em;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;strcut 结构&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;, ArkUI 即重写了 JavaScriptParser 来实现自身的语法分析。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;structDeclaration&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(PsiBuilder b, &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; l)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (JavaScriptParserUtil.recursion_guard_(b, l, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;structDeclaration&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; r2 = r &amp;amp;&amp;amp; structDeclaration_1(b, l + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; r3 = r2 &amp;amp;&amp;amp; JavaScriptParserUtil.consumeTokens(b, &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; IElementType[]{JavaScriptTypes.STRUCT, JavaScriptTypes.IDENTIFIER});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; r4 = r3 &amp;amp;&amp;amp; etsStructClassBlock(b, l + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; r4 || r3;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;DevEcoStudio 的 LSP 服务其实是继承 TypeScriptLanguageServer 进行的，在其中又拓宽了一些自定义的 ESLint 规则。整体架构基本和 Idea 原生 JavaScript 插件保持一致,通过新起一个 Node 进程构建 LSP 协议的通信。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;总结来看，在研发侧不管是语言插件还是 LSP 服务，ArkUI 利用许多原有的 TypeScript 生态能力来包装完成。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_8&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;语法糖处理过程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通过上文对于产物的分析，在了解 ArkTS 的编译链路时笔者看到下面的处理方式也就不足为奇，ArkTS 的打包整体由 Rollup 完成，其中核心 ets 文件的 loader 也是直接复用了 ts compiler 逻辑，注意这里的 ts 指&amp;nbsp;ohos-typescript,利用 loader before 的 hook 提前处理好语法糖以及响应式相关的包装。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;result: ts.TranspileOutput = ts.transpileModule(newContent, {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;compilerOptions&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;compilerOptions,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;fileName&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;id,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;transformers&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{ before: [ processUISyntax(null) ] }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;&quot;&gt;同时 ohos-typescript 中还提供扩展了&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&amp;nbsp;&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;ts.isStructDeclaration,ts.isEtsComponentExpression&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;节点判断函数的辅助解析这棵超集树。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;下面举两个转换的例子：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;1.&amp;nbsp;&lt;/span&gt; 
  &lt;code style=&quot;font-size: var(--articleFontsize);letter-spacing: 0.034em;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;struct Index&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;转变为&lt;/span&gt; 
  &lt;code style=&quot;font-size: var(--articleFontsize);letter-spacing: 0.034em;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;class Index extends ViewPU&lt;/span&gt;&lt;/code&gt; 
 &lt;/section&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (ts.isStructDeclaration(node)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;return&lt;/span&gt; ts.factory.createClassDeclaration(ts.getModifiers(node), node.name,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                           node.typeParameters, updateHeritageClauses(node, &lt;span class=&quot;code-snippet__built_in&quot;&gt;log&lt;/span&gt;), memberNode);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;} &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ts.factory.createHeritageClause(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ts.SyntaxKind.ExtendsKeyword,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  [ts.factory.createExpressionWithTypeArguments(ts.factory.createIdentifier(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ViewPU&quot;&lt;/span&gt;), [])]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;2. 嵌套语法的平铺过程&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;本质是一个语法树的递归的遍历过程，通过维护顶层的 Statements 按需塞入，来实现平铺。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;processNormalComponent&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;node: ts.ExpressionStatement,.....&lt;/span&gt;): &lt;span class=&quot;code-snippet__title&quot;&gt;void&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; newStatements: ts.Statement[] = [];&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; res: CreateResult = createComponent(node, COMPONENT_CREATE_FUNCTION);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  newStatements.push(res.newNode);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; etsComponentResult: EtsComponentResult = parseEtsComponentExpression(node);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; componentName: string = res.identifierNode.getText();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (etsComponentResult.etsComponentNode.body &amp;amp;&amp;amp; ts.isBlock(etsComponentResult.etsComponentNode.body)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    processComponentChild(etsComponentResult.etsComponentNode.body, innerCompStatements, log,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                          {&lt;span class=&quot;code-snippet__attr&quot;&gt;isAcceleratePreview&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;line&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;column&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;fileName&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#39;&#39;&lt;/span&gt;}, isBuilder, parent, &lt;span class=&quot;code-snippet__literal&quot;&gt;    &lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                          isGlobalBuilder, &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;, builderParamsResult);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_9&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;调适能力&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;&quot;&gt;ArkTS 语言的调试功能依托于&lt;/span&gt;&amp;nbsp;&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;arkcompiler_ets_runtime&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&amp;nbsp;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;&quot;&gt;虚拟机来实现，与传统依赖「插桩」等技术的调试方式不同，解释器虚拟机往往采取了一种更为轻量级的处理策略。具体到实现细节，让我们深入了解其如何巧妙地干预字节码操作符执行以实现断点功能。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在虚拟机运行的核心流程&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;RunInternal&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;方法内部，当系统处于调试模式下，会转向一个特殊的调度表。这一转换旨在让原本的操作符执行路径受一个新的、专为调试设计的路由控制。在此机制下，系统不仅能灵活地管理操作符的执行流向，还会检查当前操作符是否触发了预设的断点条件，从而精确控制程序的暂停与继续执行，整个过程流畅而高效。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; EcmaInterpreter::RunInternal(JSThread *thread, &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint8_t&lt;/span&gt; *pc, JSTaggedType *sp)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint8_t&lt;/span&gt; opcode = READ_INST_OP();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; *dispatchTable = instDispatchTable.data();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;// 在调试模式下切换到一张新的 OP Debug 路由表&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    CHECK_SWITCH_TO_DEBUGGER_TABLE();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;goto&lt;/span&gt; *dispatchTable[opcode];&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;DEBUG_HANDLE_OPCODE(LDNAN)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    NOTIFY_DEBUGGER_EVENT();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    REAL_GOTO_DISPATCH_OPCODE(EcmaOpcode::LDNAN);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;DEBUG_HANDLE_OPCODE(LDINFINITY)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    NOTIFY_DEBUGGER_EVENT();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    REAL_GOTO_DISPATCH_OPCODE(EcmaOpcode::LDINFINITY);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;不同于其他虚拟机通常将调试模块内置, ArkTS 选择把调试模块利用 napi(ets_runtime 的扩展注册机制) 注入进入虚拟机中，将调试交互协议的具体实现放在&amp;nbsp;arkcompiler_toolchain&amp;nbsp;项目，让 ets_runtime 也可以轻装上阵。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;发起 BreakCommand&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;即开发者在面板侧选择某一行进行断点，这一信息会被记录在虚拟机容器中。&lt;/span&gt;&lt;/strong&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在这里笔者还发现 ets_runtime 调试模块，原生支持&amp;nbsp;Chrome Debug Protocol&amp;nbsp;协议，为了适配 Intellij 生态做了一层 DAP 和 CDP 的协议交换，可能最初的设计是面向其他研发的场景。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; DebuggerClient::BreakCommand()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;PtJson&amp;gt; request = PtJson::CreateObject();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    request-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;, id);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    request-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;method&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Debugger.setBreakpointByUrl&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;PtJson&amp;gt; params = PtJson::CreateObject();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    params-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;columnNumber&quot;&lt;/span&gt;, breakPointInfoList_.back().columnNumber);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    params-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;lineNumber&quot;&lt;/span&gt;, breakPointInfoList_.back().lineNumber);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    params-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;url&quot;&lt;/span&gt;, breakPointInfoList_.back().url.c_str());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    request-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;params&quot;&lt;/span&gt;, params);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; message = request-&amp;gt;Stringify();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    session-&amp;gt;ClientSendReq(message)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;bool&lt;/span&gt; JSDebugger::SetBreakpoint(&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; JSPtLocation &amp;amp;location, Local&amp;lt;FunctionRef&amp;gt; condFuncRef)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;PtMethod&amp;gt; ptMethod = FindMethod(location);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; [_, success] = breakpoints_.emplace(location.GetSourceFile(), ptMethod.release(),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        location.GetBytecodeOffset(), Global&amp;lt;FunctionRef&amp;gt;(ecmaVm_, condFuncRef));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;落入 Break&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;运行字节码映射到设置的节点。&lt;/span&gt;&lt;/strong&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;ets_runtime 遇到断点映射到操作符会让虚拟机进入一种「空转」状态，期间不断接收并执行新的调试指令，这一机制与其他虚拟机的实现方法相似。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; JSDebugger::BytecodePcChanged(JSThread *thread, JSHandle&amp;lt;Method&amp;gt; method, &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint32_t&lt;/span&gt; bcOffset)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!HandleStep(method, bcOffset)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            HandleBreakpoint(method, bcOffset);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;bool&lt;/span&gt; JSDebugger::HandleBreakpoint(JSHandle&amp;lt;Method&amp;gt; method, &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint32_t&lt;/span&gt; bcOffset)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; breakpoint = FindBreakpoint(method, bcOffset);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (hooks_ == &lt;span class=&quot;code-snippet__literal&quot;&gt;nullptr&lt;/span&gt; || !breakpoint.has_value()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    JSPtLocation location {method-&amp;gt;GetJSPandaFile(), method-&amp;gt;GetMethodId(), bcOffset,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        breakpoint.value().GetSourceFile()};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    hooks_-&amp;gt;Breakpoint(location);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; ProtocolHandler::ProcessCommand()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::unique_lock&amp;lt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::mutex&amp;gt; queueLock(requestLock_);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (requestQueue_.empty()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!waitingForDebugger_) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                requestQueueCond_.wait(queueLock);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            requestQueue_.swap(dispatchingQueue);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        isDispatchingMessage_ = &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (!dispatchingQueue.empty()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; msg = &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::move(dispatchingQueue.front());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            dispatchingQueue.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            [[maybe_unused]] &lt;span class=&quot;code-snippet__function&quot;&gt;LocalScope &lt;span class=&quot;code-snippet__title&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(vm_)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; exception = DebuggerApi::GetAndClearException(vm_);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            dispatcher_.Dispatch(DispatchRequest(msg));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            DebuggerApi::SetException(vm_, exception);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        isDispatchingMessage_ = &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;pre style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt;&lt;code&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;text-wrap: wrap;text-align: center;visibility: visible;color: rgb(34, 34, 34);line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052176&quot; data-ratio=&quot;0.3056872037914692&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;422&quot; src=&quot;https://oscimg.oschina.net/oscnet/401fb380-f9b4-4028-970d-59cfcf545668.png&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;text-wrap: wrap;text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;结语&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;本文通过对 HarmonyOS ArkUI 的介绍与分析，探讨了其作为声明式开放框架的核心特性和实现机制。而 ArkUI 作为 HarmonyOS 的声明式 UI 框架，通过独特的设计思路与实现方式，旨在为开发者提供高效、灵活的跨平台界面开发解决方案。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);font-size: 15px;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052177&quot; data-ratio=&quot;0.328125&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/592a6e75-6320-400a-aba1-ed9557c5d4bb.png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;团队介绍&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;我们是淘天集团-商家&amp;amp;开放平台技术前端团队，本团队负责商家平台建设并围绕淘宝电商 B2C 业务，提供商家应用开放能力，为阿里小程序开发者生态提供高生产力工程化技术产品，打造面向 B 端的桌面/IoT 小程序基础设施，助力商家规模化增长。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;&quot;&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;&quot;&gt; 
   &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;¤&lt;/strong&gt;&lt;/span&gt; 
   &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;&amp;nbsp;拓展阅读&amp;nbsp;&lt;/strong&gt;&lt;/span&gt; 
   &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;¤&lt;/strong&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;&quot;&gt; 
   &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;&quot;&gt; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect&quot; textvalue=&quot;3DXR 技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;3DXR 技术&lt;/a&gt;&amp;nbsp;|&amp;nbsp; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect&quot; textvalue=&quot;终端技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;终端技术&lt;/a&gt;&amp;nbsp;|&amp;nbsp; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect&quot; textvalue=&quot;音视频技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;音视频技术&lt;/a&gt; 
  &lt;/section&gt; 
  &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect&quot; textvalue=&quot;服务端技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;服务端技术&lt;/a&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;&quot;&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect&quot; textvalue=&quot;技术质量&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;技术质量&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect&quot; textvalue=&quot;数据算法&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;数据算法&lt;/a&gt;&lt;/p&gt; 
  &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;&lt;/p&gt; 
  &lt;section class=&quot;mp_profile_iframe_wrp&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 24px;outline: 0px;&quot;&gt; 
   &lt;mp-common-profile class=&quot;custom_select_card mp_profile_iframe js_wx_tap_highlight&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAxNDEwNjk5OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;amp;wxfrom=19&quot; data-nickname=&quot;大淘宝技术&quot; data-alias=&quot;AlibabaMTT&quot; data-signature=&quot;大淘宝技术官方账号&quot; data-from=&quot;2&quot; data-index=&quot;0&quot; data-origin_num=&quot;748&quot; data-isban=&quot;0&quot; data-biz_account_status=&quot;0&quot; data-weui-theme=&quot;light&quot; data-is_biz_ban=&quot;0&quot;&gt;&lt;/mp-common-profile&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4662964/blog/15526100</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/15526100</guid>
            <pubDate>Fri, 06 Sep 2024 09:02:03 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>OpenBMC 成服务器固件发展的「事实标准」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;近年来随着云计算、大数据特别是大模型的快速发展，数据中心规模不断扩张，产生了更多的服务器管理需求。&lt;/p&gt; 
&lt;p&gt;传统 BMC 虽然可以实现部分管理，但是在快速迭代的当今尤其是在 AI 技术的驱动下，存在开发周期长、交付困难、应用单一等难题，并且由于其代码闭源也会导致隐藏的安全漏洞无法及时识别，限制了用户定制开发。&lt;/p&gt; 
&lt;p&gt;OpenBMC 凭借领先的开源理念、可扩展的软件架构，被大型互联网厂商广泛应用，并带动了产业连上下游共同探索，逐步成为服务器固件发展的「事实标准」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.oschina.net/uploads/img/202409/06151327_gW9s.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在日前召开的 2024 开放计算中国峰会上，来自阿里云、字节跳动、浪潮信息和英特尔等公司的专家分享了各自在 OpenBMC 方面的最新进展及未来规划。&lt;/p&gt; 
&lt;p&gt;阿里云自 2020 年逐步采用 OpenBMC 产品，通过四年的探索与实践，已经在 x86 和 ARM 平台中实现 OpenBMC 替代，并计划未来支持 RISC-V 等多元芯片平台。&lt;/p&gt; 
&lt;p&gt;字节跳动通过加强对固件运行时软硬件状态的深入观察和理解，大幅提升问题定位分析效率。&lt;/p&gt; 
&lt;p&gt;浪潮信息发布基于 OpenBMC 的 InBry 管理固件平台，为用户提供开放、稳定、可靠的 BMC 管理固件。浪潮信息更提出「分层解耦」的理念，实现多元化技术赋能。&lt;/p&gt; 
&lt;p&gt;英特尔持续推动 OpenBMC 技术创新，为客户提供接口实现功能上的定制化需求，同时优化安全性和能耗管理。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310712</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310712</guid>
            <pubDate>Fri, 06 Sep 2024 07:13:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>KDE 发布 2023 年度报告：再次亏损</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;KDE 2023 年年度报告现已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkde.org%2Fannouncements%2Freport_2023%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，对过去一年所取得的成就、以及资金的筹集与花费等内容进行了总结。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;KDE 是一个国际技术团队，产品包括适用于 Linux 和 UNIX 平台的现代桌面系统、全面的办公生产力和群件套件以及数百种软件，涵盖互联网和网络应用程序、多媒体、娱乐、教育、图形和软件开发等多个类别。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;报告指出，KDE 在 2023 年的工作重点主要集中在构建 Plasma 6 方面，完成了很多出色的软件开发工作。在 5 月份的一场会议中，Plasma 团队讨论了向 KF6 的过渡及其对 KDE 框架内依赖管理的影响。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中一个重大变化是重组了 colour scheme classes，以减少对&lt;code&gt;Qt::Widgets&lt;/code&gt;的不必要依赖，特别是对于基于 QML 的移动应用程序。这种重组提高了效率并减少了软件包的大小--尤其是对于 Android APK 而言，它们可以占到软件包总大小的 20-25%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但值得一提的是，KDE 在&amp;nbsp;2023 年的年收入仍略低于预期；总成本高于前几年，主要原因是人员费用和活动相关费用。细分来看，企业支持和个人捐款仍然是其重要的收入来源，其中个人捐款增长尤为显著。但一些传统来源（如 Google Summer of Code）的收入略有下降。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;387&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5cf262499217ee79a5e626a9630aa1af7ba.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;具体来说，2023 年期间 KDE 的收入为 349,332.65 欧元，支出总额为 457,071.31 欧元。仅人事费用就花费了 31.7 万欧元，另外 4.3 万欧元用于 Akademy 会议，1.2 万欧元用于 springs，2 万欧元用于其他活动，2.2 万欧元用于税收/保险，以及 1.7 万欧元用于基础设施。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2022 年，KDE 的收入为 285 495.97 欧元，支出为 384 604.78 欧元。而在 2021 年，KDE 的收入为 238,929.67 欧元，支出仅为 218,396.75 欧元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 2024 年，KDE&amp;nbsp;的预算计划重点是在不大幅扩张的情况下保持现有的活动水平。目标是进一步增加收入，同时控制支出增长，将储备金消耗率降低 18% 或更高。长期目标是在几年内实现预算平衡（收支平衡），及时保留充足的储备金，确保组织的可持续发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「总而言之，2023 年是 KDE eV 稳步增长和精心规划的一年。展望未来，我们的重点仍然是确保我们的财务策略支持我们的使命和 KDE 社区的持续工作。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310699/kde-report-2023</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310699/kde-report-2023</guid>
            <pubDate>Fri, 06 Sep 2024 06:30:27 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>vim 里自动缩进 tabstop 的问题</title>
            <description>&lt;h1 class=&quot;header article-title&quot;&gt;
                    &lt;a href=&quot;https://www.oschina.net/question/7101932_2333612&quot;&gt;vim 里自动缩进 tabstop 的问题,一次用 vim?&lt;/a&gt;
                                            &lt;div class=&quot;ui red label horizontal&quot; data-tooltip=&quot;置顶&quot;&gt;顶&lt;/div&gt;
                                                                            &lt;/h1&gt;

                &lt;div class=&quot;extra ui horizontal list meta-wrap&quot;&gt;
                    &lt;div class=&quot;item&quot;&gt;
                        &lt;a href=&quot;https://my.oschina.net/u/7101932&quot; class=&quot;__user&quot;&gt;&lt;span&gt;Codigger 官方&lt;/span&gt;&lt;/a&gt; 发布于，今天 11:54
                    &lt;/div&gt;
                    &lt;div class=&quot;item&quot;&gt;阅读 168&lt;/div&gt;
                    &lt;div class=&quot;item collect-btn &quot; data-id=&quot;2333612&quot; data-user-id=&quot;7101932&quot; data-obj-type=&quot;2&quot; data-max=&quot;99&quot; data-tag-required=&quot;&quot; data-current-user-id=&quot;&quot; data-recommend-tags=&quot;&quot;&gt;&lt;i class=&quot;star outline icon&quot;&gt;&lt;/i&gt; 收藏 &lt;span data-collect-count=&quot;&quot; data-id=&quot;2333612&quot; data-obj-type=&quot;2&quot;&gt;0&lt;/span&gt;&lt;/div&gt;
                    &lt;div class=&quot;item comment-count&quot;&gt;&lt;a href=&quot;https://www.oschina.net/question/7101932_2333612#comments&quot; class=&quot;normal&quot;&gt;&lt;i class=&quot;comment outline icon&quot;&gt;&lt;/i&gt; 答案 &lt;span data-article-reply-count=&quot;&quot;&gt;0&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
                                                                                
                                                        &lt;/div&gt;

                                
                                
                                &lt;div class=&quot;content&quot; id=&quot;articleContent&quot;&gt;
                                                                &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#252933&quot;&gt;vim 里自动缩进 tabstop 的问题,&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#252933&quot;&gt;一次用 vim，开启了 c 语言的自动缩进 cindent，默认的 tabstop 是 8 空格，太长了，我把 tabstop 也设置成了 2，在 vim 下面显示正常，可是程序保存之后用 txt 打开自动缩进还是 8，直接复制粘贴了还是这样，下面该肿么办？&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                                &lt;div class=&quot;poll-wrap&quot;&gt;
                                    &lt;/div&gt;

                                &lt;div class=&quot;additional-remarks&quot;&gt;
                    

                &lt;/div&gt;

                                &lt;div class=&quot;ui basic center aligned segment action&quot;&gt;
                    &lt;div class=&quot;ui big buttons&quot;&gt;
                        &lt;a class=&quot;ui basic button collect-btn hover&quot; data-id=&quot;2333612&quot; data-user-id=&quot;7101932&quot; data-obj-type=&quot;2&quot; data-max=&quot;99&quot; data-tag-required=&quot;&quot; data-current-user-id=&quot;&quot; data-recommend-tags=&quot;&quot;&gt;&lt;i class=&quot;star outline icon&quot;&gt;&lt;/i&gt;收藏 (&lt;span data-collect-count=&quot;&quot; data-id=&quot;2333612&quot; data-obj-type=&quot;2&quot;&gt;0&lt;/span&gt;)&lt;/a&gt;
                        &lt;div class=&quot;ui basic dropdown share button osc-share dropdown-share&quot; data-tag=&quot;share-question&quot;&gt;
                            &lt;i class=&quot;share icon&quot;&gt;&lt;/i&gt; &lt;span&gt;分享&lt;/span&gt;
                            &lt;div class=&quot;menu&quot;&gt;
                                &lt;a class=&quot;item&quot; data-platform=&quot;weibo&quot; data-value=&quot;weibo&quot;&gt;&lt;i class=&quot;weibo icon&quot;&gt;&lt;/i&gt;微博&lt;/a&gt;
                                &lt;a class=&quot;item&quot; data-platform=&quot;qq&quot; data-value=&quot;qq&quot;&gt;&lt;i class=&quot;qq icon&quot;&gt;&lt;/i&gt;QQ&lt;/a&gt;
                                &lt;a class=&quot;item&quot; data-platform=&quot;wechat&quot; data-value=&quot;wechat&quot;&gt;&lt;i class=&quot;weixin icon&quot;&gt;&lt;/i&gt;微信&lt;/a&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;ui basic segment&quot;&gt;
                        &lt;a class=&quot;ban&quot; ban-report=&quot;&quot; data-id=&quot;2333612&quot; data-obj-type=&quot;2&quot; data-url=&quot;https://www.oschina.net/question/7101932_2333612&quot;&gt;
                            &lt;i class=&quot;flag red icon&quot;&gt;&lt;/i&gt;举报&lt;/a&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            </description>
            <link>https://www.oschina.net/question/7101932_2333612</link>
            <guid isPermaLink="false">https://www.oschina.net/question/7101932_2333612</guid>
            <pubDate>Fri, 06 Sep 2024 04:23:00 GMT</pubDate>
        </item>
        <item>
            <title>苹果批准了 iOS 版微信本周提交的更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;9 月 6 日，据彭博社报道，苹果已经批准了腾讯本周提交的 iOS 系统微信更新，为双方就&lt;strong&gt;应用内购费用&lt;/strong&gt;问题的持续谈判赢得了更多时间。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cbe924a36238e3f21abac1446e659d7022c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-09-06%2Fapple-clears-wechat-for-iphone-16-as-talks-persist-over-app-fees&quot; target=&quot;_blank&quot;&gt;https://www.bloomberg.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在此之前，App Store 上的微信已经有两个多月没有发布更新。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0906/121242_3F4c_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;据知情人士透露，&lt;strong&gt;苹果本周批准了 iOS 版微信更新&lt;/strong&gt;，新版本在朋友圈和直播功能方面进行了优化。这一决定有望平息中国市场对苹果与腾讯就应用商店费用争议可能升级的猜测。&lt;/p&gt; 
&lt;p&gt;双方分歧的焦点在于微信小游戏平台。&lt;strong&gt;报道称苹果要求腾讯屏蔽小游戏中的外部支付链接，并停止开发者利用平台内置消息功能引导用户使用其他支付渠道，从而保证能够抽成 30%&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;苹果还要求腾讯完全禁用游戏内消息传递，但腾讯以过于激烈为由拒绝了这一要求。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;知情人士称，腾讯仍在与苹果讨论后续更新的潜在方案。苹果代表拒绝置评，而腾讯则没有回复通过电子邮件发送的询问。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/307168&quot; target=&quot;_blank&quot;&gt;据此前报道&lt;/a&gt;，对于「苹果税」，腾讯管理层在 8 月举行的 2024 年第二季度财报会上曾进行回应：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「目前我们并未通过应用内交易在 iOS 上实现小程序的货币化。&lt;/p&gt; 
 &lt;p&gt;我认为，如果这种货币化能够实现，这不仅符合我们的利益，也符合苹果的利益，更符合游戏开发者和用户的利益。&lt;strong&gt;但我们希望能在经济上可持续且公平的条件下实现这一目标&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p&gt;因此，这个讨论正在进行中，我们希望能达成一个积极的结果，因为这将是一个三赢的局面。」&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310676</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310676</guid>
            <pubDate>Fri, 06 Sep 2024 04:05:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>deepin 实现多架构适配的背后，我们做了什么？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-multi-architecture-compatibility%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;* 全文引述 longlong 在 WHLUG 上的演讲，故存在口语化表达。本文仅代表个人观点和立场。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepin 23 作为 deepin 20 的后继版本，最大的改变之一就是添加了多架构支持：从原本只支持 AMD64 架构，到目前支持 AMD64、RISC-V、LoongArch（新世界）、ARM64 多个 CPU 架构平台。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;目前 deepin 23 已经发布了 AMD64 架构的 Stable 镜像，其他 CPU 架构的镜像还处于生态建设的 Preview 版本阶段，直到我们认为其质量满足正式版发版标准，才会发布 Stable 版本。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;ARM64&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;ARM64 架构是 deepin 23 最早导入支持的架构，当 23 开始正式构建仓库的时候，其就作为主要架构支持目标，现在看来也是除了 x86 架构之外生态最好的架构。我们对于 ARM64 架构的支持也获得了合作伙伴：飞腾和此芯科技的支持。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;主力构建集&lt;/strong&gt;&lt;strong&gt;群&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们在做 deepin 23 适配的时候，只有一台 FT2000/64 服务器，当我们系统软件包增加到 3000+ 的时候，这样的构建规模远远不足以支撑构建。而且市面上也不是很好购买 ARM64 服务器。所以我们发挥了主观能动性，在公司库房寻宝，最后被我找来了一台鲲鹏 920 服务器，和五台盘古 w510 台式机，作为构建集群。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;几乎不存在的生态屏障&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;ARM64 的 Linux 生态，几乎是比肩 x86 ,无需担心软件是否适配的问题，几乎在 x86 上能构建的软件包在 ARM64 上都能正常编译。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;通用启动的拦路虎&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;ARM64 初期的应用场景主要是嵌入式设备，所以用 U-Boot 的较多。但是 U-Boot 在启动 deepin 23 的时候就会有一系列问题，比如需要针对不同的设备使用不同的设备树二进制文件（dtb），这对我们 deepin 23 的主线化带来了挑战。所以目前我们的设备也仅适配了能支持 UEFI 的飞腾 D2000/D3000、鲲鹏 920 和此芯科技的新品。对于其他的 ARM64 设备可能只能提供有限度的支持，因为针对不同开发板的板形做不同的适配，对于我们的人力物力都是一个巨大的挑战。但是也欢迎更多的 ARM64 开发板和设备厂商与我们合作，我们尽力适配好。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;LoongArch&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;LoongArch（新世界）最初并不在 deepin 23 的目标支持架构范围内，但在 2022 年前后，随着龙芯大力推进新世界发行版生态的进程，我们决定尝试适配 LoongArch 系统。这一决定的契机源于 Revy 老师寄来的两台 LA50007A2000 机器。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在我们决定开发新世界发行版之初，便面临着一个问题：硬件从哪里来？当时龙芯发布的新世界支持硬件仅有龙芯 3A5000 和 7A2000。由于新世界刚刚推出，7A2000 的桥片状态并不稳定，时常发生假死情况（即内核仍在运行，但不响应输入输出）。我们最初并不知情，直到 Revy 老师赠送给我们一台龙芯 3A5000 7A2000 新世界主机，并附带了一份长达三页的 PDF 文档，详细说明了龙芯硬件的各种问题，这让我们感到担忧。我也在 Revy 的影响下购买了一台 3A5000 主板，幸运的是，这块主板并未出现类似的问题。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;从 Loong Arch Linux 到 deepin Linux&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们决定站在巨人肩膀上，选择成熟度较高的 LoongArch Linux 作为基础，而不是使用尚不完善的 qemu 手动制作 rootfs。在此基础上，我们构建了 rootfs 并启动了 OBS worker ，进而获得了 LoongArch （新世界）的构建能力。同时，龙芯的固件也在不断改进，假死情况有所改善。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Loongson 3C5000 Power！&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;本着「靠着大树好乘凉」的原则，我们去找我们的兄弟部门友好交流之后，借来了两台四路 Loongson 3C5000L 服务器，这也是我们最强的构建主力服务器。不过，在一开始的时候，它们没有新世界固件的支持。后来，我们找龙芯的人要了一份固件，才得以使用（当然，阵列卡依然没法在新世界下正常运行）。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;而我们社区自己购买的 3C5000LL 双路服务器则出了一点意外：它出厂就自带新世界固件和 BMC，但在通电之后会以最高转速发出「龙鸣」，其声音之大一度盖过我们机房所有的服务器，并且其运行也不是很稳定，几乎每天都会死机。这让我们感到无奈，只得求助于武汉龙芯的工程师的协助。在他们的帮助下，我们弄清了龙芯服务器发出「龙鸣」的原因：「其主板提供了 8 个风扇 4pin 的插座，新的 BMC 会检测 1，2，3，4 位的插座是否连接正常。如果连接不正常，BMC 会让风扇以最大功率运行，导致机器过热。但是，我们购买的主机厂商并不知道这回事，风扇并没有按照顺序插在 1，2，3，4 位上，导致了此现象的产生。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;更多的 3C5000：后来，我们通过 UOS 获取了更多的龙芯 3C5000，极大地增强了我们的构建资源。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;deepin loong64 启动!&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在一切准备完善后。我们手搓了 rootfs ，将 DDE 打包完成，并且做出了第一版的镜像。在龙芯 3a5000 上成功运行，不过由于第一版本我们并不熟悉龙芯内核的特调，所以是从隔壁的 Loong Arch Linux 借用的内核。而系统软件包层面，基本是我们自己打包的系统源，也有部分是从&amp;nbsp;Revy 老师那「偷」的软件包。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;3A6000 性能飞升&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;2024 年初，龙芯发布了 3A6000，Revy 老师又第一时间赞助了一块 3A6000 主板给我们。正如他之前给我们的那些早期样品一样，这块主板遇到了各种问题：开机即死机、系统假死、PCIe 不稳定等。不过，随着后期我们购入的 3A6000 主板和华硕的 3A6000 主板问题逐步得到缓解，系统的稳定性有了很大提升。当然，还是得吐槽一下龙芯的 7A2000 桥片自带的 GPU，因为缺乏稳定和功能完整的驱动，其早期表现非常不稳定，尤其是在外接 4K 显示器时，几乎无法显示，后续我们会和龙芯合作，使用官方驱动解决这一问题，尽情期待。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;生态建设&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在生态建设方面，龙芯的新世界生态可以说是从零开始。UOS 等基于龙芯旧世界的成果无法直接迁移到新世界上，虽然 AOSC 的 libLoL 出现缓解了部分问题。为了推进龙芯的生态，我们也要求第一方应用必须能在 loong64 上编译通过。所以，现在大家可以看到，deepin 的 unioncode（IDE） 已经能够在 Loong 上正常运行，这无疑为龙芯的开发者生态带来了极大的好处。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;然而，我们仍面临一些问题，比如上游对 Loong 补丁的傲慢态度，导致如 neovim 等软件无法在 loong64 上运行。为了解决这个问题，deepin 自主维护了相关补丁，使得 luajit 能够在 Loong 上顺利运行。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;目前，我们与各个新世界发行版社区保持着良好的关系，方便获取最新的技术成果并解决疑难问题。比如 23 预装了 libLoL 和在旧世界机器上启动新世界系统的的支持。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;何时 Stable？&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;阻挡我们将 loong64 架构的镜像 stable 的问题在于：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;1、目前应用商店还只是一个空壳，作为一个目标就是开箱即用的发行版来说，这个肯定达不到发版本的标准。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;2、目前构建资源还是匮乏，没办法做到和 ARM64 同等的构建资源支持，我们目前还在大量使用龙芯台式机作为构建的基础设施。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;3、稳定性不满足发版本要求，因为龙架构无论是硬件软件固件都在一个相对快的迭代过程中，很难在某一个时间点去 stable 一个版本，而要求这个版本能稳定的向用户提供服务，所以我们不发 stable 版本，咱一起滚动更新（let‘s roll！）&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;RISC-V&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;对于 RV 架构，其实作为个人我参与的不多，deepin 对于 RV 架构的支持，主要在我们的杨同学完成，此时她还在杭州的 RV 峰会上和各位大佬交换意见。那我就代为介绍我们的 RV 适配情况。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;板子？食之无味，弃之可惜&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;我们对 RV 架构的支持实际是早于 loong64 的，中科院 PLCT 团队在我们做主线化支持之前就已经做好了一套非常早期的版本，并且可以启动到桌面，然而那时我们获得的硬件是全志 D1，当时我拿了一个回去玩，跑起了 Linux 之后就再也不想动它，让它吃灰去了，因为性能实在是太弱了，和同样价格的 rk3566 相比，无论是性能，生态，都远远不及。为啥我们要做 RV，可能是因为创吧。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;其实我们一开始拿到的开发板也不止全志 D1 还有 TH1520：只能说是能用，但是用不了一点。性能依然堪忧。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;所以在我们只有板子的状态下，也没法去做适配，只能用 qemu 手搓 rootfs ，跑起来了内核和 tty，但是全功能的 dde 由于性能问题，是跑不起来的（吐槽：就算适配了看全志 D1 这个样子，似乎也跑不动 dde)&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Sg2042 中式暴力美学的 RV 处理器&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;后来 Revy 给我们弄来了两台 Sg2042 的机器，每一个 Sg2042 使用的是 64 个平头哥 C910 核心，而这个核心同样用在 TH1520 的板子上。虽然单核很弱，但是耐不住它核心多啊。咱就靠堆核，也做到和 PC 级别的性能，至少我们可以在 sg2042 上插一个 AMD 信创神卡了：DDE 启动！&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;因为 sg2042 的出现，我们已经大概够上了批量构建的门槛了，两台 2042 在机房日夜不休的构建下，我们的 rv 生态几乎追平 ARM64。因为 RISC-V 在上游接受度普遍较高，即使没有比较强的硬件出现，rv 依旧被 Debian 的主线支持，这也极大的方便了我们进行适配。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;从笔记本到遥控车：探索 RV 的更多形态&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;而后我们接触到更多的 RV 设备，（再次感谢各位 RV 厂商的投喂）包括且不限于笔记本，平板，甚至是遥控车这类稀奇古怪的玩意。这样我们接触的设备就不仅限于 EVB 了。这些设备虽然五花八门然而使用的无非那么几种核心，各有各的毛病，现在也还没有一个设备能符合我们测试组的要求的。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;GPU：RV 生态的拦路虎&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;我们对于 RV 生态的构建，其实是非常具有信心的，但是在桌面的支持上我们始终无法忽略 GPU 这个因素。因为 RV 大部分厂商一直以来，未来也将持续把重心放在嵌入式领域，有 PCIE 插槽的设备寥寥可数，寄希望于插一块 AMD 亮机卡就能带动桌面的打算基本上泡汤了。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;于是摆在我们面前的问题就是 RV 的板载 GPU，它不仅不支持桌面的 GL，只支持 GLES，还没有开源驱动，只有魔改版 mesa，要我们适配它，意味着我们要往系统里面塞一坨不受包管理的脏东西。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;于是后来我们便修复了 RV llvmpipe 试图先扔掉这个残废 GPU 直接使用软件渲染，奈何效果不佳，毕竟 DDE 主打的一个特效好看，关闭特效之后完全没法用。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;最后在高人指点下，我们采用了 GLVND 方案实现了开源驱动和闭源驱动的依赖共存，勉强地把它们都纳入到了包管理，这才有了我们现在稍微正常一些的桌面体验。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;嵌入式的局限性&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在当前的 RV 设备适配领域，我们所接触的大多数产品依然是以开发板的形式存在。这可能是因为对于 RV 技术来说，桌面应用的普及尚处于早期阶段。因此，这种嵌入式设备的设计理念一直影响着我们的适配工作，使得适配过程充满了挑战。这段经历让我们深刻认识到，为了推动 RV 技术在桌面环境中的应用，我们需要与厂商更紧密地合作，共同探索和解决适配过程中遇问题。同时，也需要行业内的共同努力，以促进 RV 技术的成熟和广泛应用。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;以上便是本文所有内容了，&lt;strong&gt;感谢所有在 deepin 适配道路提供支持和帮助的老师和伙伴们。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;相关阅读：&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 全版本镜像下载（含 deepin V15）&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;deepin RISC-V 架构镜像（LicheePi 44A、VisionFive2 等）&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.deepin.org%2Fzh%2F02_%25E7%25A1%25AC%25E4%25BB%25B6wiki%2F01_%25E8%25AE%25BE%25E5%25A4%2587%25E9%2580%2582%25E9%2585%258D%25E5%2588%2597%25E8%25A1%25A8%2Fdeepin%25E5%25A4%259A%25E6%259E%25B6%25E6%259E%2584%25E9%2580%2582%25E9%2585%258D%25E6%259C%25BA%25E5%259E%258B%25E6%25B8%2585%25E5%258D%2595&quot; target=&quot;_blank&quot;&gt;deepin 多架构适配机型清单&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310660</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310660</guid>
            <pubDate>Fri, 06 Sep 2024 02:39:06 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>1-7 月我国软件业务收入 73429 亿元，同比增长 11.2%</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;工信部&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fgxsj%2Ftjfx%2Frjy%2Fart%2F2024%2Fart_858cc76215b74c98b8d2a52f8a5dc366.html&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;公告指出，1-7 月我国软件和信息技术服务业（以下简称「软件业」）运行态势良好，软件业务收入和利润保持两位数增长，工业软件、基础软件等重点软件产品增长较快，软件业务出口增速持续向好，西部、东北地区软件业收入增速小幅提升。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;一、总体运行情况&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;软件业务收入保持平稳增长。1－7 月，我国软件业务收入 73429 亿元，同比增长 11.2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-51c3097c097ed6e7f402503ee70e7e3a69b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;利润总额保持两位数增长。1－7 月，软件业利润总额 8754 亿元，同比增长 12%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ca63e6fc000e638545cee7079a01c0a396a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;软件业务出口增速持续向好。1－7 月，软件业务出口 307.7 亿美元，同比增长 2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;252&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a407dd3adc6595b614cad80b4904071415c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;二、分领域运行情况&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;软件产品收入稳定增长。1－7 月，软件产品收入 16524 亿元，同比增长 8.9%，占全行业收入比重为 22.5%。其中工业软件产品收入 1564 亿元，同比增长 10.5%；基础软件产品收入 1029 亿元，同比增长 11.1%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;信息技术服务收入持续两位数增长。1－7 月，信息技术服务收入 49501 亿元，同比增长 12.2%，在全行业收入中占比为 67.4%。其中，云计算、大数据服务共实现收入 7606 亿元，同比增长 11.1%，占信息技术服务收入的比重为 15.4%；集成电路设计收入 2054 亿元，同比增长 14.8%；电子商务平台技术服务收入 6287 亿元，同比增长 6.5%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;信息安全收入增长放缓。1－7 月，信息安全产品和服务收入 1088 亿元，同比增长 7.5%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;嵌入式系统软件收入稳步增长。1－7 月，嵌入式系统软件收入 6317 亿元，同比增长 10%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;240&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fd163adc5ee011c0405ad005cd05d746910.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;三、分地区运行情况&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;西部、东北地区软件业收入增速小幅提升。1－7 月，东部地区完成软件业务收入 61261 亿元，同比增长 11.4%，增速较上半年回落 0.5 个百分点；中部地区完成软件业务收入 3484 亿元，同比增长 12.9%，增速较上半年回落 0.3 个百分点；西部地区完成软件业务收入 7032 亿元，同比增长 9.3%，增速较上半年提升 1.1 个百分点；东北地区完成软件业务收入 1651 亿元，同比增长 10%，增速较上半年提升 0.3 个百分点。4 个地区软件业务收入在全国软件业务总收入中的占比分别为 83.4%、4.7%、9.6% 和 2.2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;245&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3040dac188c517f9c9f544c1042671aa325.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;京津冀、长三角地区软件业务收入稳中有升。1－7 月，京津冀地区完成软件业务收入 18814 亿元，同比增长 14.3%，增速高出全国水平 3.1 个百分点；长三角地区完成软件业务收入 20415 亿元，同比增长 8.2%，增速较上月提升 0.6 个百分点。两个地区软件业务收入在全国总收入中的占比分别为 25.6%、27.8%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;主要软件大省业务收入持续向好。1－7 月，软件业务收入居前 5 名的省份中,北京、广东、山东、江苏、上海软件收入分别为 16671 亿元、12880 亿元、8169 亿元、8022 亿元和 6685 亿元，同比分别增长 14%、12.3%、12.2%、8% 和 11%，5 省 (市) 合计软件业务收入 52428 亿元，占全国比重为 71.4%，占比较去年同期提高 0.5 个百分点。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;240&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-016436d02e887507d7438b59c69c48172e9.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;中心城市软件业务收入稳步增长。1－7 月，全国 15 个副省级中心城市实现软件业务收入 35464 亿元，同比增长 10.1%，占全国软件业务收入比重为 48.3%，占比较去年同期回落 0.5 个百分点。其中，大连、宁波、厦门、深圳、沈阳、武汉和成都等 7 个城市软件业务收入增速超过全国平均增速。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7cafa2274add03a942a02ec163306067e8c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310655</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310655</guid>
            <pubDate>Fri, 06 Sep 2024 02:25:06 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>面壁智能发布 MiniCPM3-4B 基座模型，「端侧 ChatGPT 时刻到来」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;面壁智能官方&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FaxYQOKjYUZKbQnO7UTkjSQ&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;，面壁「小刚炮」系列进化为全新 MiniCPM 3.0 基座模型，以 4B 参数，带来超越 GPT-3.5 的性能，并表示「端侧 ChatGPT 时刻到来」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-28fadcaab3332f759f570d8acc12dd8149c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;面壁智能表示，MiniCPM 3.0 仅以 4B 参数，在包括自然语言理解、知识、代码、数学等多项能力上对 GPT-3.5 实现赶超，在 Qwen2-7B、 Phi-3.5、GLM4-9B、LLaMa3-8B 等一众中外知名模型脱颖而出。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-56bd4ba90ed6c013df4204f10797159d5c0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;此外，MiniCPM 3.0 还拥有端侧最强 Function calling 性能 ，在权威评测榜单 Berkeley Function-Calling Leaderboard 上，其性能接近 GPT-4o，并超越 Llama 3.1-8B、Qwen-2-7B、GLM-4-9B 等众多模型。&lt;/p&gt; 
&lt;p&gt;开源地址：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenBMB%2FMiniCPM%3Ftab%3Dreadme-ov-file&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenBMB/MiniCPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fopenbmb%2FMiniCPM3-4B&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/openbmb/MiniCPM3-4B&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310654/minicpm-3-0-4b</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310654/minicpm-3-0-4b</guid>
            <pubDate>Fri, 06 Sep 2024 02:19:06 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>