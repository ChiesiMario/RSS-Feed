<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 26 Jun 2025 07:44:39 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>龙芯发布新一代处理器，进军服务器和 AI 处理器市场​​​​​​​</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;「龙芯中科」在今天举办的 2025 龙芯产品发布暨用户大会上发布了基于国产自主指令集龙架构（LoongArchTM）研发的服务器处理器龙芯 3C6000 系列芯片、工控领域及移动终端处理器龙芯 2K3000/3B6000M 芯片，以及相关整机和解决方案。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/153553_ZF0H_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，3C6000 系列服务器 CPU 采用自主指令系统龙架构，于 2024 年上半年流片成功。3C6000 单硅片 16 核 32 线程，可通过自研的龙链接口通过多硅片封装形成 32 核 64 线程的 3C6000/D（又称 3D6000）及 60/64 核 120/128 线程的 3C6000/Q（又称 3E6000）。&lt;/p&gt; 
&lt;p&gt;根据中国电子技术标准化研究院赛西实验室测试报告，单路 3C6000/S 服务器在 2.2GHz 运行 SPEC CPU 2017 单核单线程定/浮点分值为 5.56/6.93 分，多核定/浮点分值为 73.2/58.5 分；双路 3C6000/D 服务器在 2.1GHz 运行 SPEC CPU 2017 多核定/浮点分值为 284/261 分；双路 3C6000/Q 服务器在 2.1GHz 运行 SPEC CPU 2017 多核定/浮点分值为 450/283 分；四路 3C6000/D 服务器在 2.1GHz 运行 SPEC CPU 2017 多核定/浮点分值为 547/412 分。上述 3C6000/S、3C6000/D 实测单核/多核性能分别达到 Intel 公司 2021 年上市的 16 核至强 Silver 4314、32 核至强 Gold 6338 的水平，64 核 3C6000/Q 性能超过 40 核至强 Platinum 8380 的水平。&lt;/p&gt; 
&lt;p&gt;结合 Intel 公司第三代至强可扩展架构服务器芯片出货情况，3C6000 系列服务器 CPU 综合性能达到 2023 年市场主流产品水平。&lt;/p&gt; 
&lt;p&gt;2K3000/3B6000M 工控/终端 CPU 采用自主指令系统龙架构，面向工控和终端（笔记本、云终端等）应用，于 2024 年底流片成功。3B6000M 集成 8 个 LA364E 处理器核，主频 2.5GHz 时实测 SPEC CPU 2006 Base 单核定点分值达到 30 分；集成第二代自研 GPGPU 核心 LG200 和独立硬件编解码模块，4K 高清视频处理性能达到每秒 60 帧；集成安全处理器提供可信支持和密码服务，包括 SM2/3/4 硬件算法模块以及可供软件编程使用的可重构密码模块。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1800" src="https://static.oschina.net/uploads/space/2025/0626/153709_EMEW_2720166.png" width="2486" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;来源：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FU1_yQYdi-47nhn5ojBvSEA" target="_blank"&gt;https://mp.weixin.qq.com/s/U1_yQYdi-47nhn5ojBvSEA&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357386</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357386</guid>
      <pubDate>Thu, 26 Jun 2025 07:37:36 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OceanBase 正式启用中文名：海扬数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;国产数据库 OceanBase 正式启用中文品牌名「海扬数据库」，品牌战略全面升级。&lt;/p&gt; 
&lt;p&gt;官方解释称：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「海」，既象征 OceanBase 对海量数据的承载能力，能够应对像支付宝每秒 42 万笔交易这样的高并发处理需求，体现其分布式架构在数据存储与处理上的强大优势，也象征着如海一样开源开放，以兼容幷蓄的姿态携手开发者、合作伙伴推动行业创新。&lt;/p&gt; 
 &lt;p&gt;「扬」，既寓意昂扬向上，象征 OceanBase 在技术海洋中不断突破边界，以根自研深耕行业，也寓意扬帆出海，不断走向全球化。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;OceanBase CEO 杨冰表示，中文名的推出，一方面代表着 OceanBase 深耕本土市场的决心，也是 OceanBase 继续引领世界舞台上分布式数据库技术创新和应用的宣言。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8c286d418602fc6ed5232b2c2249cf0d73c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;OceanBase 始创于 2010 年，是蚂蚁集团完全自主研发的国产数据库。2020 年 OceanBase 成立北京奥星贝斯科技有限公司并开始独立商业化运作。2021 年，OceanBase&amp;nbsp;&lt;a href="https://www.oschina.net/news/144034"&gt;正式开源&lt;/a&gt;(&lt;a href="https://gitee.com/oceanbase"&gt;https://gitee.com/oceanbase&lt;/a&gt;)，300 万行核心代码向社区开放。2024 年 3 月 19 日，蚂蚁集团宣布，旗下的蚂蚁国际、OceanBase 和蚂蚁数科已成立董事会，独立面向市场。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357376</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357376</guid>
      <pubDate>Thu, 26 Jun 2025 06:59:36 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Meta 成功挖角三名 OpenAI 研究人员</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;《华尔街日报》报道称，在争夺顶尖人工智能人才的斗争中，Meta 刚刚取得了胜利，尽管竞争对手 Sam Altman 公开嘲笑马克·扎克伯格的奢侈招聘策略，但 Meta 仍然挖走了三名 OpenAI 研究人员。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Lucas Beyer、Alexander Kolesnikov 和 Xiaohua Zhai （OpenAI 苏黎世办事处的创始人）现已加入 Meta 的超级智能团队。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-0044b1bf5ef2f1f7a26cba89cd241222c75.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此前，OpenAI 首席执行官 Altman 在与其兄弟 Jack 一起的播客透露，扎克伯格一直在提供超过 1 亿美元的薪酬方案，以吸引 OpenAI 的顶尖人才。并表示，「我很高兴，至少到目前为止，我们最好的员工中还没有人决定接受他的（那些提议）。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《华尔街日报》随后报道称，扎克伯格一直在通过 WhatsApp 与数百名顶尖 AI 研究人员进行私人交流，通过他的「Recruiting Party」聊天室协调目标人才，然后在 Palo Alto 和 Lake Tahoe 的家中举办晚宴。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这一策略的成果好坏参半。扎克伯格最近斥资 140 亿美元，签下了 Scale AI 的首席执行官 Alexandr Wang，这位 28 岁的年轻人也因此成为科技界有史以来身价最高的人才之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/news/355944/sam-altman-meta-tried-100m-offers" target="_blank"&gt;Sam Altman：Meta 曾试图以 1 亿美元挖走 OpenAI 人才，但未能成功&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers</guid>
      <pubDate>Sun, 11 May 2025 06:28:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Scale AI 被曝使用谷歌文档泄露客户机密信息</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;人工智能初创公司 Scale AI 陷入了一场严重的数据安全风波。这家估值不菲、并被 Meta 以 148 亿美元收购 49% 股份的公司，被曝出竟然使用公共的谷歌文档来存储包括 Meta、谷歌和 xAI 在内的众多客户的绝密信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;报道称，任何知道 Scale AI 文档链接的人，都可以轻易访问这些包含绝密项目、电子邮件地址和付款信息等敏感内容的谷歌文档。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Scale AI 的一位发言人对此回应表示，公司正在进行彻底的调查，并且已经禁止任何用户公开分享 Scale AI 管理系统中的文档。然而，谷歌和 xAI 尚未对此事发表评论，而 Meta 则选择拒绝置评。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="250" src="https://oscimg.oschina.net/oscnet/up-a25cf5b5fc9703e4e067c5e37806e5bd265.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;据五名 Scale AI 的承包商透露，谷歌文档在 Scale AI 内部被广泛使用。网络安全专家指出，尽管目前尚无迹象表明这些公开文件已导致实际的数据泄露，但这种存储方式无疑让 Scale AI 极易受到黑客攻击。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;调查显示，在 Scale AI 采取措施之前，人们可以查看多达 85 份、数千页的项目信息，其中详细记录了 Scale AI 与大型科技客户之间的敏感合作。例如，这些文档揭示了谷歌如何利用 OpenAI 的 ChatGPT 来微调自己的聊天机器人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更令人震惊的是，至少有七份被标记为机密信息的谷歌项目手册向公众开放，其中包括如何改进其聊天机器人 Bard 的具体建议。此外，公开的谷歌文档中甚至包含了埃隆·马斯克 「木琴计划」（Project Xylophone）的详细内容，比如用于训练 xAI 人工智能模型的 700 个对话提示。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;承包商们还透露，尽管这些项目通常有秘密代号，但他们仍然能清晰辨别自己为哪个客户工作。在使用人工智能产品时，聊天机器人有时在被询问时甚至会直接透露客户信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;除了客户的机密项目信息，Scale AI 的谷歌文档中还赫然披露了该公司数千名员工的姓名和私人联络方式。更甚者，有些文件甚至详细列出了个体承包商的工资数额，包括有关工资纠纷和差异的详细说明。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这些信息无疑充分暴露了 Scale AI 在数据安全性上的严重纰漏，并可能引发法律纠纷。值得注意的是，就在 Meta 入股 Scale AI 后不久，业内便有传言称包括谷歌在内的大客户已经与 Scale AI 进行了业务上的切割，以防止 Scale AI 向 Meta 透露敏感内容。此次谷歌文档事件，无疑将进一步加剧客户对 Scale AI 数据安全能力的担忧。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/356119/openai-drops-scale-ai-meta" target="news"&gt;OpenAI 终止与 Scale AI 合作&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357357</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357357</guid>
      <pubDate>Sun, 11 May 2025 05:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ResNet 主要发明人何恺明加入谷歌 DeepMind，担任「杰出科学家」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;计算机视觉领域代表人物何恺明官宣加入谷歌 DeepMind，担任杰出科学家（Distinguished Scientist）。 他在个人主页上表示，自己在 DeepMind 的工作是兼职，还将继续保留 MIT 终身副教授的身份。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/110724_YwBV_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;何恺明是残差网络（ResNet）的主要发明人，而这项技术成为了深度学习及后续人工智能进步的基础。我们今天看到的 ChatGPT、AlphaGo、AlphaFold 都离不开它的影响。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/111204_Czoq_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenaccess.thecvf.com%2Fcontent_cvpr_2016%2Fpapers%2FHe_Deep_Residual_Learning_CVPR_2016_paper.pdf" target="_blank"&gt;https://openaccess.thecvf.com/content_cvpr_2016/papers/He_Deep_Residual_Learning_CVPR_2016_paper.pdf&lt;/a&gt;&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;2003 年，何恺明以标准分 900 分获得广东省高考总分第一，被清华大学物理系基础科学班录取。在清华物理系基础科学班毕业后，他进入香港中文大学多媒体实验室攻读博士学位，师从汤晓鸥。何恺明曾于 2007 年进入微软亚洲研究院视觉计算组实习，实习导师为孙剑博士。&lt;/p&gt; 
&lt;p&gt;2011 年博士毕业后，何恺明加入微软亚洲研究院工作任研究员。2016 年，何恺明加入 Facebook 人工智能实验室，任研究科学家。2024 年，何恺明加入 MIT，成为该校一名副教授。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/111129_NW0H_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357334</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357334</guid>
      <pubDate>Sun, 11 May 2025 03:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>开源模拟器 QEMU 拒绝 AI 生成代码的贡献</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;开源模拟器 QEMU 开始对用 AI 生成的代码进行治理，项目维护者&amp;nbsp;Daniel Berrangé &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fqemu%2Fqemu%2Fcommit%2F3d40db0efc22520fa6c399cf73960dced423b048" target="_blank"&gt;撰写并提交&lt;/a&gt;了一份「&lt;strong&gt;禁止使用人工智能代码生成&lt;/strong&gt;器」的文档：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;近年来，所谓的人工智能代码生成器引发了极大的关注。然而，迄今为止，尚未形成关于代码生成器输出结果的许可影响的普遍认可的法律解释。尽管供应商可能声称不存在问题且可以自由选择许可协议，但他们在推广这一解释时存在固有的利益冲突。&lt;/p&gt; 
 &lt;p&gt;更广泛地说，目前尚未就基于多种不同许可协议输入数据训练的代码生成器的许可影响形成广泛共识。&lt;/p&gt; 
 &lt;p&gt;DCO 要求贡献者声明其有权在指定项目许可下进行贡献。鉴于对 AI 代码生成器输出许可问题的共识缺失，若补丁包含此类生成代码，则声称符合 DCO 条款 (b) 或 (c) 被视为不可信。&lt;/p&gt; 
 &lt;p&gt;因此，本补丁定义了 QEMU 项目当前不会接受涉及已知或疑似使用 AI 代码生成器的贡献。&lt;/p&gt; 
 &lt;p&gt;这是人工智能辅助软件开发的早期阶段。法律问题最终将得到解决。工具将成熟，我们可预期部分工具将安全适用于自由软件项目。&lt;/p&gt; 
 &lt;p&gt;我们当前制定的政策必须适用于当下，并保持开放修订。最好从严格和安全开始，随后逐步放宽。&lt;/p&gt; 
 &lt;p&gt;同时，可根据具体情况考虑例外请求。&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/105527_LWLP_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357331</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357331</guid>
      <pubDate>Sun, 11 May 2025 03:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>腾讯云 TDMQ RabbitMQ Serverless 版全新发布</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;h2&gt;导语&lt;/h2&gt; 
&lt;p&gt;2025 年 6 月起，腾讯云 TDMQ RabbitMQ 版正式推出 Serverless 版本，该版本基于自研的存算分离架构，兼容 AMQP 0-9-1 协议和开源 RabbitMQ 的各个组件与概念，且能够规避开源版本固有的不抗消息堆积、脑裂等稳定性缺陷，具有稳定、安全、灵活扩缩容等优势。本文将全面解析 TDMQ RabbitMQ Serverless 版的核心特性、技术优势及售卖形态。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版推出的背景&lt;/h2&gt; 
&lt;p&gt;2021 年，腾讯云推出自研消息队列服务 TDMQ RabbitMQ 版，全面兼容 AMQP 0-9-1 协议及开源 RabbitMQ 生态。产品以开源托管版形态提供服务，按照节点进行售卖。&lt;/p&gt; 
&lt;p&gt;相比传统自建方案，TDMQ RabbitMQ 开源托管版不仅免除了用户部署运维的负担，并通过架构优化实现了跨可用区高可用部署、一键弹性扩缩容等生产级能力，同时内置了完善的监控告警、巡检诊断等企业级运维功能，在保持协议完全兼容的基础上，针对企业实际应用场景进行了深度优化，为用户提供了更稳定可靠的消息服务体验。&lt;/p&gt; 
&lt;p&gt;在当前数字化转型加速的背景下，用户对成本优化提出了更高要求，同时业务快速迭代也催生了对弹性能力的强烈需求。用户极需突破传统资源预留式运维的局限，充分释放云原生的技术红利。&lt;/p&gt; 
&lt;p&gt;为更好地满足用户对弹性扩展和成本优化的需求，腾讯云消息队列 TDMQ RabbitMQ 版正式推出 Serverless 版本。该版本采用存储和计算分离的架构设计，在完全兼容 AMQP 0-9-1 协议及开源 RabbitMQ 生态的同时，有效规避了开源版本固有的不抗消息堆积、脑裂等稳定性缺陷，又解决了开源版本性能受限于底层机型和扩展性不足等问题，为用户提供更安全可靠、弹性灵活的消息服务体验。&lt;/p&gt; 
&lt;p&gt;在产品设计上，Serverless 版本提供专业版（1000+ TPS）和铂金版（10w+ TPS）两种规格，用户只需根据业务吞吐量需求选择对应版本，无需关心底层资源运维。在计费模式上，同时支持包年包月和按小时计费两种方式，其中计算资源按流量规格计费，存储资源无起步门槛，按实际使用量进行计费，成本整体可降低约 30%。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版核心特性解析&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、 兼容开源、开箱即用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;支持开箱即用，一键自动创建集群，无需手动安装和部署。兼容 AMQP 0-9-1 协议及开源 RabbitMQ 客户端，业务代码无需任何改造即可平滑上云。同时提供多种 TPS 规格供用户选择，用户可以在控制枱上自助灵活扩容和缩容，无需关注底层资源。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、 可观测能力增强&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;提供全面的监控告警能力，支持集群、VHost、Exchange 和 Queue 4 个维度，覆盖 6 大类、90+ 细粒度监控指标，帮助您实时了解集群运行状态。同时支持消息查询和消息轨迹能力，清晰展示消息的完整生命周期，便于快速定位问题，提升运维效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3、 高可用高可靠&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;通过架构升级有效解决了开源版本常见的稳定性问题，包括消息堆积和脑裂等场景。服务采用多可用区分布式部署架构，可自动容灾切换，轻松应对机房级故障，提供不低于 99.95% 的 SLA 服务可用性保障。同时通过三副本数据持久化机制，确保消息数据的持久可靠。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4、 灵活适配多业务场景&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;提供多种路由方式，例如 Direct、Fanout、Topic、 Header 和 X-Delayed-Message 等，可灵活组合不同的交换机类型，满足复杂业务需求。同时支持多种消息类型，例如广播消息、延迟消息、死信队列等，满足订单超时处理、事件通知、异步解耦等典型业务场景，提供高度灵活的消息解决方案。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版对比开源的八大关键优势&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、监控告警丰富度高&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源自建 RabbitMQ 方案需通过 Management UI 手动采集指标，并自行搭建指标存储和展示系统；或者通过接入外部 Prometheus 和 Grafana 实现监控指标展示，运维难度和成本显著增加。&lt;/p&gt; 
&lt;p&gt;而 TDMQ RabbitMQ Serverless 版提供白屏化监控大盘，支持集群/VHost/Exchange/Queue 4 个监控维度，涵盖 6 大类，90+ 指标，实时了解集群运行状态，提升自主运维效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、支持全链路消息轨迹&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源自建 RabbitMQ 方案需要在服务器里的 log 文件中查询文本格式的消息轨迹信息，查询和定位问题效率较低。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版支持通过 Message ID 精准查询或按队列检索消息，并且可以可视化展示消息完整生命周期，快速定位消息收发问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3、 灵活无感扩缩容&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;传统开源的 RabbitMQ 方案扩缩容需要停机升级底层机型，并需要重启开源控制枱，操作复杂且影响业务连续性。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版支持灵活扩缩容，通过控制枱简单操作即可实现资源扩展，变更过程平滑无感，客户侧的应用无需做停机处理。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4、 消息抗堆积能力强&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源自建 RabbitMQ 集群抗消息堆积能力较弱，容易因消息堆积导致内存过载，需人工干预。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版采用高性能架构，具备强大的抗堆积能力，即使在高并发消息堆积场景下，仍能保持稳定的吞吐性能，避免消息积压导致的服务不可用风险。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5、 默认支持跨可用区容灾&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;传统开源的 RabbitMQ 方案存在固有的不抗消息堆积和脑裂等架构风险，且单可用区部署模式难以保障故障出现时的业务连续性。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版默认跨可用区部署，确保服务的高可用性。采用先进的存算分离架构，规避不抗消息堆积和脑裂问题，既保证集群高可靠和数据持久化，又具备灵活扩缩容优势。承诺不低于 99.95% 的服务可用性 SLA，为用户提供强有力的稳定性保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6、 可无限横向扩展&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源 RabbitMQ 集群的队列和单节点绑定，受限於单机硬件配置，镜像队列副本数量增多会降低集群 TPS 值，增加节点不能扩展集群吞吐量。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版通过存算分离架构，突破了传统方案的性能瓶颈，理论上支持无限 TPS 扩展能力，服务可按需横向扩容，为业务增长提供持续的性能保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;7、秒级精度延时消息&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源 RabbitMQ 通过延时消息插件实现，该开源插件设计存在局限性，不适用于大量延时消息或长时间延时消息的场景，集群节点异常时会导致延时消息丢失，还存在不支持强制标志等问题。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版免去开启延时消息插件的步骤，直接对消息设置 delay 属性即可，不仅便捷，还可以解决开源实现方式的局限性，支持长时间、大量的延时消息，且海量消息堆积不影响集群高可用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;8、灵活消息重试策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源 RabbitMQ 默认只支持消息无限立即重试机制，需要开发者自行实现重试逻辑，消费失败的消息需人工定位原因，开发和运维成本高。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版默认支持消息重试策略，当消息消费达到"消费超时时间"而消费者还未响应时，消息将被重新投递，并且支持不同的重试间隔，当重新投递次数达到上限时，消息会被投递到死信队列或者被丢弃。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版售卖形态&lt;/h2&gt; 
&lt;p&gt;当前 TDMQ RabbitMQ Serverless 版提供专业版和铂金版两种规格，以满足不同业务场景的需求，按照 TPS 规格对外售卖。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-a52b5a86022eb497558d49a27de6643ace7.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在性能方面，专业版支持消息 TPS 在 1000 到 10 万之间的多种规格，铂金版则提供更高的规格，支持 10 万 TPS 以上的消息处理能力。&lt;/p&gt; 
&lt;p&gt;在部署架构上，专业版计算资源是独占的，但存储层是共享的；而铂金版提供完全独占的计算和存储资源，相比专业版稳定性会更强。&lt;/p&gt; 
&lt;p&gt;消息保留时间方面，专业版默认支持 3 天的消息保留时间，铂金版则支持 7 天以上，满足更严格的数据留存需求。&lt;/p&gt; 
&lt;p&gt;服务可靠性方面，两个版本均采用跨可用区部署架构，并配备三副本数据持久化机制。专业版提供 99.95% 的 SLA 保障，与开源托管版持平；铂金版则承诺更高的 99.99% 服务可用性，为关键业务提供更强保障。&lt;/p&gt; 
&lt;p&gt;后续我们还将推出弹性 TPS 功能，允许用户在购买的基础 TPS 规格范围上可以超出一部分用量。对于超出基础规格的部分，按照实际使用量进行独立计费。具体弹性扩展空间方面，专业版最高可支持超出基础规格的 50%，铂金版则支持 100% 的超量扩展，为用户业务的突发激增流量提供保障。&lt;/p&gt; 
&lt;h2&gt;总结与展望&lt;/h2&gt; 
&lt;p&gt;腾讯云推出的 TDMQ RabbitMQ Serverless 版基于自研的存算分离架构，有效兼容开源生态并解决了其固有稳定性问题（如脑裂、不抗堆积），提供高可用、弹性扩缩和按量计费的核心优势，同时大幅增强监控告警、消息轨迹等可观测能力，显著简化运维负担。&lt;/p&gt; 
&lt;p&gt;未来腾讯云 TDMQ RabbitMQ Serverless 版将持续优化，推出弹性 TPS 功能以更好应对突发流量，同时做好开源兼容性增强、管控能力升级和可观测工具完善，并深化行业场景应用，助力用户以更低成本、零运维负担享受高性能消息服务。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4587289/blog/18638278</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4587289/blog/18638278</guid>
      <pubDate>Sun, 11 May 2025 02:52:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Jina AI 开源多模态多语言向量模型 Jina Embeddings V4</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Jina AI &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpfbyYOf8_KJijGfmLtTr9w" target="_blank"&gt;宣布&lt;/a&gt;正式推出 jina-embeddings-v4，一款全新的多模态向量模型，参数规模达到 38 亿，并首次实现了对文本与图像的同步处理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;项目团队在模型内置了一套面向特定任务的 LoRA 适配器，专门强化了模型在处理查询-文档检索、语义匹配以及代码搜索等任务时的表现。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="263" src="https://oscimg.oschina.net/oscnet/up-a2a4b22fe7f6b657a270a7ecbcfeb963466.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公告称，在 MTEB、MMTEB、CoIR、LongEmbed、STS、Jina-VDR 及 ViDoRe 等多项基准测试中，jina-embeddings-v4 在多模态、多语言检索任务上均展现了顶尖性能。它尤其擅长解读富含视觉信息的内容，无论是表格、图表还是复杂的示意图，都能精准捕捉其深层语义。此外，模型还同时支持单向量和多向量表示，灵活满足各种场景需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「&lt;code&gt;jina-embeddings-v4&lt;/code&gt;&amp;nbsp;是我们迄今为止最具突破性的一款向量模型。&lt;strong&gt;作为一款开源模型，它的性能表现已全面超越来自主流供应商的顶尖闭源模型。&lt;/strong&gt;」&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在多语言检索方面，其性能比 OpenAI 的 text-embedding-3-large 高出 12%（66.49 vs 59.27）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在长文档任务上，性能提升了 28%（67.11 vs 52.42）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在代码检索方面，效果比 voyage-3 好 15%（71.59 vs 67.23）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;综合性能与谷歌的 gemini-embedding-001 模型并驾齐驱&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" height="695" src="https://oscimg.oschina.net/oscnet/up-349b5e56cf55646be67b29e49a34777f535.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="657" src="https://oscimg.oschina.net/oscnet/up-95eed0ac1e5ba7c967ac000a2b39bca41b5.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更多详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpfbyYOf8_KJijGfmLtTr9w" target="_blank"&gt;查看官方公告&lt;/a&gt;。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357326</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357326</guid>
      <pubDate>Sun, 11 May 2025 02:47:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Swift 编程语言正式成立 Android 工作组</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Swift 编程语言项目&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforums.swift.org%2Ft%2Fannouncing-the-android-workgroup%2F80666" target="_blank"&gt;宣布&lt;/a&gt;成立新团队：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fandroid-workgroup%2F" target="_blank"&gt;Android 工作组&lt;/a&gt; (Android Workgroup)，这是一个推广使用 Swift 开发 Android 应用的团队&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/103853_lltG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;「Swift on Android Working Group」的章程写道：工作组的主要目标是建立并维护 Android 作为 Swift 的官方支持平台。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进并维护官方 Swift 发行版的 Android 支持，消除对树外或下游补丁的需求&lt;/li&gt; 
 &lt;li&gt;推荐对 Foundation 和 Dispatch 等核心 Swift 包进行增强，使其更好地与 Android 惯用法配合&lt;/li&gt; 
 &lt;li&gt;与平台指导小组合作，正式定义平台支持级别，然后努力为 Android 实现特定级别的官方支持&lt;/li&gt; 
 &lt;li&gt;确定 Swift 集成所支持的 Android API 级别和架构范围&lt;/li&gt; 
 &lt;li&gt;为 Swift 项目开发持续集成，包括在 PR 检查中包含 Android 测试。&lt;/li&gt; 
 &lt;li&gt;识别并推荐 Swift 与 Android 的 Java SDK 之间桥接的最佳实践，以及将 Swift 库与 Android 应用打包的最佳实践&lt;/li&gt; 
 &lt;li&gt;开发在 Android 上调试 Swift 应用程序的支持功能&lt;/li&gt; 
 &lt;li&gt;为各种社区 Swift 包添加 Android 支持提供建议和协助&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fandroid-workgroup%2F" target="_blank"&gt;https://www.swift.org/android-workgroup/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357325/swift-android-workgroup</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357325/swift-android-workgroup</guid>
      <pubDate>Sun, 11 May 2025 02:43:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>宇树科技王兴兴：公司目前年度营收超过十亿元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;据新华网报道，宇树科技创始人王兴兴在近日举行的夏季达沃斯论坛上透露，宇树科技自 2016 年创立之初的「一人公司」，如今已发展成为拥有近千名员工、年营收突破十亿元人民币。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="307" src="https://oscimg.oschina.net/oscnet/up-f88df9ea1d0af1507ea7206a2304fe3c8e4.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;宇树科技或是机器人行业少数实现盈利的企业。此前宇树科技早期投资人、SevenUp Capital 创始人赵楠曾透露，自 2020 年以来，宇树科技的财务报表每年都保持盈利状态。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;成立于 2016 年的宇树科技，早期主要做四足机器狗。2024 年，其通用人形机器人 G1 一经推出便引发热议。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2025 年初，宇树科技的 Unitree H1 和 G1 人形机器人登陆京东商城开售，其中 H1 售价 65 万元，G1 售价 9.9 万元，产品上线后迅速售罄。此外，宇树科技的机器人还多次在央视春晚、美国拉斯维加斯 CES 等舞台亮相，大幅提升了品牌知名度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;该公司的融资情况也颇为顺利。2020 年到 2022 年之间，宇树进行了 Pre-A、A、A+、B、B+轮融资，投资方包括红杉种子、初心资本、祥峰投资、顺为资本、经纬创投等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2024 年 2 月，宇树科技完成近 10 亿元 B2 轮融资，参与方包括深创投、中网投、容亿投资、经纬创投、源码资本、美团战略投资部、中信金石、博睿智联、钧石创投等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;进入 2025 年，这家公司又完成了始于去年底 C 轮融资的交割，由中国移动旗下基金、腾讯、锦秋基金、阿里、蚂蚁集团、吉利资本共同领投，绝大部分老股东都跟投，融资金额接近 7 亿元人民币，投后估值超 120 亿元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;今年 4 月，香港特区行政长官李家超在杭州与「杭州六小龙」企业代表进行了交流，并到访了宇树科技。彼时，王兴兴表示，宇树科技在香港有业务，各方面合作机会也很多。至于未来会否在香港上市，王兴兴称有可能，但不确定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;当前我国机器人行业正处于快速发展态势。摩根士丹利曾预计，中国作为全球最大的机器人市场和制造中心，2024 年机器人市场规模已达 470 亿美元，占全球总量的 40%，预计到 2028 年将增至 1080 亿美元，年复合增长率达 23%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;不过，在谈及机器人未来的重要应用场景时，王兴兴表示，家庭应用场景非常有挑战，需要一步步来做，目前像工业或农业应用会更快一些。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「近距离与人交互的产品，安全性问题比技术问题会更大一点，在伦理道德方面会更具挑战性。」王兴兴举例称，前段时间有客户采购了一台宇树机器人，在外参加活动时不小心踩掉了一个小女孩的鞋子，一度引发大众关注。在王兴兴看来，尽管此事并未对小女孩造成实际的身体伤害，但说明存在很大的安全隐患。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357324</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357324</guid>
      <pubDate>Sun, 11 May 2025 02:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>工信部：57 款 APP 及 SDK 存在侵害用户权益行为</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;工信部发布「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwap.miit.gov.cn%2Fjgsj%2Fxgj%2Fgzdt%2Fart%2F2025%2Fart_eb31dd22d04a4658b912871c090274bd.html" target="_blank"&gt;关于侵害用户权益行为的 APP（SDK）通报（2025 年第 3 批，总第 48 批）&lt;/a&gt;」指出，近期，经组织第三方检测机构进行抽查，共发现 57 款 APP 及 SDK 存在侵害用户权益行为，现予以通报。上述 APP 及 SDK 应按有关规定进行整改，整改落实不到位的，工信部将依法依规组织开展相关处置工作。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;附件：工业和信息化部通报存在问题的 APP（SDK）名单&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-694cad317b798664fc6874f4dfcc5d04f03.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="380" src="https://oscimg.oschina.net/oscnet/up-95fdfdd6becefe89b59842435523158e7c9.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="377" src="https://oscimg.oschina.net/oscnet/up-67969320b093051e361809ae89079035228.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="384" src="https://oscimg.oschina.net/oscnet/up-dc0b31e0c1d8fd1034c092014e19fb865f7.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="383" src="https://oscimg.oschina.net/oscnet/up-74b9d4032b353a9db522aa784fbd0d762ed.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="386" src="https://oscimg.oschina.net/oscnet/up-b69d4f045e994d21d9b7f7214da69db6359.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="367" src="https://oscimg.oschina.net/oscnet/up-02a8816c82afb354b8910237cf8f42f35b4.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="249" src="https://oscimg.oschina.net/oscnet/up-d5e033274977ca0b8d94f80b0adf8dd3f6e.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357317</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357317</guid>
      <pubDate>Sun, 11 May 2025 02:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌发布开源 AI 编程智能体 Gemini CLI，面向开发者的命令行工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Ftechnology%2Fdevelopers%2Fintroducing-gemini-cli-open-source-ai-agent%2F" target="_blank"&gt;发布&lt;/a&gt;了最新的开源免费 AI 编程智能体 Gemini CLI，该工具将 Gemini 的能力带到了开发者最常用的终端，能够提供轻量化的 Gemini 访问通道。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1705" src="https://static.oschina.net/uploads/space/2025/0626/100936_PeVk_2720166.png" width="2435" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Gemini CLI 支持通过自然语言实现代码编写、问题调试及工作流优化，还可以作为多功能本地工具，完成内容生成、问题解决、深度研究及任务管理等各类任务。&lt;/p&gt; 
&lt;p&gt;对开发者而言，终端的效率性、普适性与可移植性使命令行界面成为核心生产力工具，开发者对集成 AI 辅助功能的需求也与日俱增。&lt;/p&gt; 
&lt;p&gt;Gemini CLI（预览版）可以从代码理解、文件操作到命令执行与动态故障排查的全流程辅助开发者，该工具支持通过自然语言实现代码编写、问题调试及工作流优化。&lt;/p&gt; 
&lt;p&gt;其核心能力源自以下内置工具：&lt;/p&gt; 
&lt;p&gt;1、联网搜索：通过谷歌搜索获取网页内容，为模型提供实时外部上下文；&lt;br&gt; 2、协议扩展：支持模型上下文协议（MCP）及捆绑扩展，持续增强功能；&lt;br&gt; 3、指令定制：根据个性化需求和工作流调整提示词模板；&lt;br&gt; 4、脚本集成：支持非交互式调用，实现任务自动化与现有工作流对接。&lt;/p&gt; 
&lt;p&gt;Gemini CLI 采用 Apache 2.0 开源协议，开发者可随时审查代码实现、验证安全机制。该工具基于 MCP 等标准构建，支持通过 GEMINI.md 文件配置系统提示词，并提供个人/团队两级设置。全球开发者可以通过提交漏洞报告、功能建议、安全强化方案及代码优化（GitHub 仓库已开放），实现社区共建。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle-gemini%2Fgemini-cli%2F" target="_blank"&gt;https://github.com/google-gemini/gemini-cli/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;个体开发者可以通过个人谷歌账号登录获取免费的 Gemini Code Assist 许可。该许可包含 Gemini 2.5 Pro 访问权限、100 万 token 的上下文窗口以及 60 次/分钟、1000 次/天的免费请求量。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/100956_Nky8_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;需要同时运行多个智能体或指定模型的专业开发者，可以选择使用谷歌 AI Studio/Vertex AI 密钥（按用量计费）或者购买 Gemini Code Assist 标准版/企业版许可。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;最后附上 Gemini CLI 的系统提示词：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;You are an interactive CLI agent specializing in software engineering tasks. Your primary goal is to help users safely and efficiently, adhering strictly to the following instructions and utilizing your available tools.

# Core Mandates

- **Conventions:** Rigorously adhere to existing project conventions when reading or modifying code. Analyze surrounding code, tests, and configuration first.
- **Libraries/Frameworks:** NEVER assume a library/framework is available or appropriate. Verify its established usage within the project (check imports, configuration files like 'package.json', 'Cargo.toml', 'requirements.txt', 'build.gradle', etc., or observe neighboring files) before employing it.
- **Style &amp;amp; Structure:** Mimic the style (formatting, naming), structure, framework choices, typing, and architectural patterns of existing code in the project.
- **Idiomatic Changes:** When editing, understand the local context (imports, functions/classes) to ensure your changes integrate naturally and idiomatically.
- **Comments:** Add code comments sparingly. Focus on *why* something is done, especially for complex logic, rather than *what* is done. Only add high-value comments if necessary for clarity or if requested by the user. Do not edit comments that are seperate from the code you are changing. *NEVER* talk to the user or describe your changes through comments.
- **Proactiveness:** Fulfill the user's request thoroughly, including reasonable, directly implied follow-up actions.
- **Confirm Ambiguity/Expansion:** Do not take significant actions beyond the clear scope of the request without confirming with the user. If asked *how* to do something, explain first, don't just do it.
- **Explaining Changes:** After completing a code modification or file operation *do not* provide summaries unless asked.
- **Do Not revert changes:** Do not revert changes to the codebase unless asked to do so by the user. Only revert changes made by you if they have resulted in an error or if the user has explicitly asked you to revert the changes.

# Primary Workflows

## Software Engineering Tasks
When requested to perform tasks like fixing bugs, adding features, refactoring, or explaining code, follow this sequence:
1. **Understand:** Think about the user's request and the relevant codebase context. Use '${GrepTool.Name}' and '${GlobTool.Name}' search tools extensively (in parallel if independent) to understand file structures, existing code patterns, and conventions. Use '${ReadFileTool.Name}' and '${ReadManyFilesTool.Name}' to understand context and validate any assumptions you may have.
2. **Plan:** Build a coherent and grounded (based off of the understanding in step 1) plan for how you intend to resolve the user's task. Share an extremely concise yet clear plan with the user if it would help the user understand your thought process. As part of the plan, you should try to use a self verification loop by writing unit tests if relevant to the task. Use output logs or debug statements as part of this self verification loop to arrive at a solution.
3. **Implement:** Use the available tools (e.g., '${EditTool.Name}', '${WriteFileTool.Name}' '${ShellTool.Name}' ...) to act on the plan, strictly adhering to the project's established conventions (detailed under 'Core Mandates').
4. **Verify (Tests):** If applicable and feasible, verify the changes using the project's testing procedures. Identify the correct test commands and frameworks by examining 'README' files, build/package configuration (e.g., 'package.json'), or existing test execution patterns. NEVER assume standard test commands.
5. **Verify (Standards):** VERY IMPORTANT: After making code changes, execute the project-specific build, linting and type-checking commands (e.g., 'tsc', 'npm run lint', 'ruff check .') that you have identified for this project (or obtained from the user). This ensures code quality and adherence to standards. If unsure about these commands, you can ask the user if they'd like you to run them and if so how to.

## New Applications

**Goal:** Autonomously implement and deliver a visually appealing, substantially complete, and functional prototype. Utilize all tools at your disposal to implement the application. Some tools you may especially find useful are '${WriteFileTool.Name}', '${EditTool.Name}' and '${ShellTool.Name}'.

1. **Understand Requirements:** Analyze the user's request to identify core features, desired user experience (UX), visual aesthetic, application type/platform (web, mobile, desktop, CLI, library, 2d or 3d game), and explicit constraints. If critical information for initial planning is missing or ambiguous, ask concise, targeted clarification questions.
2. **Propose Plan:** Formulate an internal development plan. Present a clear, concise, high-level summary to the user. This summary must effectively convey the application's type and core purpose, key technologies to be used, main features and how users will interact with them, and the general approach to the visual design and user experience (UX) with the intention of delivering something beautiful, modern and polished, especially for UI-based applications. For applications requiring visual assets (like games or rich UIs), briefly describe the strategy for sourcing or generating placeholders (e.g., simple geometric shapes, procedurally generated patterns, or open-source assets if feasible and licenses permit) to ensure a visually complete initial prototype. Ensure this information is presented in a structured and easily digestible manner.
  - When key technologies aren't specified prefer the following:
  - **Websites (Frontend):** React (JavaScript/TypeScript) with Bootstrap CSS, incorporating Material Design principles for UI/UX.
  - **Back-End APIs:** Node.js with Express.js (JavaScript/TypeScript) or Python with FastAPI.
  - **Full-stack:** Next.js (React/Node.js) using Bootstrap CSS and Material Design principles for the frontend, or Python (Django/Flask) for the backend with a React/Vue.js frontend styled with Bootstrap CSS and Material Design principles.
  - **CLIs:** Python or Go.
  - **Mobile App:** Compose Multiplatform (Kotlin Multiplatform) or Flutter (Dart) using Material Design libraries and principles, when sharing code between Android and iOS. Jetpack Compose (Kotlin JVM) with Material Design principles or SwiftUI (Swift) for native apps targeted at either Android or iOS, respectively.
  - **3d Games:** HTML/CSS/JavaScript with Three.js.
  - **2d Games:** HTML/CSS/JavaScript.
3. **User Approval:** Obtain user approval for the proposed plan.
4. **Implementation:** Autonomously implement each feature and design element per the approved plan utilizing all available tools. When starting ensure you scaffold the application using '${ShellTool.Name}' for commands like 'npm init', 'npx create-react-app'. Aim for full scope completion. Proactively create or source necessary placeholder assets (e.g., images, icons, game sprites, 3D models using basic primitives if complex assets are not generatable) to ensure the application is visually coherent and functional, minimizing reliance on the user to provide these. If the model can generate simple assets (e.g., a uniformly colored square sprite, a simple 3D cube), it should do so. Otherwise, it should clearly indicate what kind of placeholder has been used and, if absolutely necessary, what the user might replace it with. Use placeholders only when essential for progress, intending to replace them with more refined versions or instruct the user on replacement during polishing if generation is not feasible.
5. **Verify:** Review work against the original request, the approved plan. Fix bugs, deviations, and all placeholders where feasible, or ensure placeholders are visually adequate for a prototype. Ensure styling, interactions, produce a high-quality, functional and beautiful prototype aligned with design goals. Finally, but MOST importantly, build the application and ensure there are no compile errors.
6. **Solicit Feedback:** If still applicable, provide instructions on how to start the application and request user feedback on the prototype.

# Operational Guidelines

## Tone and Style (CLI Interaction)
- **Concise &amp;amp; Direct:** Adopt a professional, direct, and concise tone suitable for a CLI environment.
- **Minimal Output:** Aim for fewer than 3 lines of text output (excluding tool use/code generation) per response whenever practical. Focus strictly on the user's query.
- **Clarity over Brevity (When Needed):** While conciseness is key, prioritize clarity for essential explanations or when seeking necessary clarification if a request is ambiguous.
- **No Chitchat:** Avoid conversational filler, preambles ("Okay, I will now..."), or postambles ("I have finished the changes..."). Get straight to the action or answer.
- **Formatting:** Use GitHub-flavored Markdown. Responses will be rendered in monospace.
- **Tools vs. Text:** Use tools for actions, text output *only* for communication. Do not add explanatory comments within tool calls or code blocks unless specifically part of the required code/command itself.
- **Handling Inability:** If unable/unwilling to fulfill a request, state so briefly (1-2 sentences) without excessive justification. Offer alternatives if appropriate.

## Security and Safety Rules
- **Explain Critical Commands:** Before executing commands with '${ShellTool.Name}' that modify the file system, codebase, or system state, you *must* provide a brief explanation of the command's purpose and potential impact. Prioritize user understanding and safety. You should not ask permission to use the tool; the user will be presented with a confirmation dialogue upon use (you do not need to tell them this).
- **Security First:** Always apply security best practices. Never introduce code that exposes, logs, or commits secrets, API keys, or other sensitive information.

## Tool Usage
- **File Paths:** Always use absolute paths when referring to files with tools like '${ReadFileTool.Name}' or '${WriteFileTool.Name}'. Relative paths are not supported. You must provide an absolute path.
- **Parallelism:** Execute multiple independent tool calls in parallel when feasible (i.e. searching the codebase).
- **Command Execution:** Use the '${ShellTool.Name}' tool for running shell commands, remembering the safety rule to explain modifying commands first.
- **Background Processes:** Use background processes (via \`&amp;amp;\`) for commands that are unlikely to stop on their own, e.g. \`node server.js &amp;amp;\`. If unsure, ask the user.
- **Interactive Commands:** Try to avoid shell commands that are likely to require user interaction (e.g. \`git rebase -i\`). Use non-interactive versions of commands (e.g. \`npm init -y\` instead of \`npm init\`) when available, and otherwise remind the user that interactive shell commands are not supported and may cause hangs until cancelled by the user.
- **Remembering Facts:** Use the '${MemoryTool.Name}' tool to remember specific, *user-related* facts or preferences when the user explicitly asks, or when they state a clear, concise piece of information that would help personalize or streamline *your future interactions with them* (e.g., preferred coding style, common project paths they use, personal tool aliases). This tool is for user-specific information that should persist across sessions. Do *not* use it for general project context or information that belongs in project-specific \`GEMINI.md\` files. If unsure whether to save something, you can ask the user, "Should I remember that for you?"
- **Respect User Confirmations:** Most tool calls (also denoted as 'function calls') will first require confirmation from the user, where they will either approve or cancel the function call. If a user cancels a function call, respect their choice and do _not_ try to make the function call again. It is okay to request the tool call again _only_ if the user requests that same tool call on a subsequent prompt. When a user cancels a function call, assume best intentions from the user and consider inquiring if they prefer any alternative paths forward.

## Interaction Details
- **Help Command:** The user can use '/help' to display help information.
- **Feedback:** To report a bug or provide feedback, please use the /bug command.&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle-gemini%2Fgemini-cli%2Fblob%2F0915bf7d677504c28b079693a0fe1c853adc456e%2Fpackages%2Fcore%2Fsrc%2Fcore%2Fprompts.ts%23L40-L109" target="_blank"&gt;https://github.com/google-gemini/gemini-cli/blob/0915bf7d677504c28b079693a0fe1c853adc456e/packages/core/src/core/prompts.ts#L40-L109&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357316/google-gemini-cli-open-source-ai-agent</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357316/google-gemini-cli-open-source-ai-agent</guid>
      <pubDate>Sun, 11 May 2025 02:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>低代码平台这么多，Oinone 有何特别之处？</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;Oinone 是一个低代码平台，但又跟传统低代码平台不一样。&lt;/p&gt; 
&lt;p&gt;对此，数式 Oinone 引入了一个新概念——企业级产品化引擎，是一个&lt;span style="background-color:#ffffff; color:#1f2328"&gt;集标准化研发和敏捷交付于一体的平台。从公开资料来看，&lt;/span&gt;Oinone&amp;nbsp;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;已经是一个很成熟的平台了。并且该&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#1a1a1a"&gt;平台的内核源码也开源了，开源版本具备一些基础特性和能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;仅仅基于 Oinone 这一套统一架构，就能支撑产品打磨与交付复用，软件公司也能像搭乐高一样构建属于自己的标准产品体系。如此一来，长期存在的标品开发与定制交付割裂难题就解决了，让研发重心真正回归产品打磨，避免定制绑架，积累企业自身的产品化能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;听起来有些夸张，具体是怎么实现的呢？7 月 4 日晚，&lt;span style="color:#2980b9"&gt;数式 Oinone 技术总监王海明&lt;/span&gt;将做客开源中国直播栏目《技术领航》，在实战环节，王海明将全面展示数式 Oinone 在数字化建设中的全栈能力：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;首先分别从后端研发与前端开发视角，呈现开箱即用的标准化功能模块如何快速满足企业基础需求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;随后重点展开个性化二次开发深度演示：依次剖析后端业务逻辑定制、前端交互优化设计，以及无代码模式下的可视化配置方案，完整呈现从标准化产品到个性化定制的平滑过渡路径，帮助观众理解如何基于统一平台实现"标准化功能直接调用+个性化需求灵活扩展"的敏捷开发模式。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;至于 Oinone &amp;nbsp;所宣传的&lt;span style="background-color:#ffffff; color:#1f2328"&gt;「集标准化研发和敏捷交付于一体」，是不是夸张，到时候就知道了！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;直播主题：&lt;/strong&gt;满足个性化需求，企业级产品化引擎 Oinone 实战演示&lt;/p&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;直播时间：&lt;/strong&gt;7 月 4 日周五 19:00-20:00&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;直播平台：&lt;/strong&gt;视频号 「OSC 开源社区」&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;直播嘉宾：&lt;/strong&gt;王海明，数式 Oinone 技术总监&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;strong&gt;直播亮点：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;详解低代码平台 Oinone 一体化架构及其全栈能力&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;如何基于 Oinone 搭建业务产品？如何基于业务产品做交付？&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;作为一名研发，要如何脱离交付项目「泥潭」？&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;实操演示：标准化开箱即用，以及个性化二次开发深度演示&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img height="706" src="https://oscimg.oschina.net/oscnet/up-a8fb468294a2b29c1ed3636883550f65bce.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;strong&gt;直播福利：&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p&gt;本次直播中，我们将有 5 轮抽奖，参与就有机会获得 OSC T 恤、马建仓蛇年公仔（限量版）、代码圣杯、马克杯、冰箱贴等。特别值得一提的是，我们将送出 5 本由数式 CEO 陈鹏程撰写的技术书籍《精讲面向软件公司的低代码平台》，立即扫码预约直播吧！&lt;/p&gt; 
&lt;p&gt;&lt;img height="374" src="https://oscimg.oschina.net/oscnet/up-13a1563ccd37e58e03a903a2981244ad66e.jpg" width="400" referrerpolicy="no-referrer"&gt;&lt;br&gt; &lt;br&gt; 我们还建了一个交流群，可以经进来唠唠嗑，或者你有好的开源项目，也欢迎推荐过来呀~&lt;/p&gt; 
&lt;p&gt;&lt;img height="200" src="https://oscimg.oschina.net/oscnet/up-500a286b215fe8d8b5219b218bdd2e9d451.png" width="200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;strong&gt;关于数式 Oinone&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;数式 Oinone 是一款企业级产品化引擎：用低代码驱动标准化研发与敏捷交付的一体化平台。围绕 「企业级产品化、标准化研发与敏捷交付」 三项核心突破，数式 Oinone 为开发者、研发团队带来从能力沉淀到规模化交付的完整体系。&lt;/p&gt; 
  &lt;p&gt;官网：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oinone.top%2F" rel="nofollow" target="_blank"&gt;https://www.oinone.top/&lt;/a&gt;&lt;/p&gt; 
  &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
  &lt;h1&gt;6.2.0 版本&lt;/h1&gt; 
  &lt;ul&gt; 
   &lt;li&gt;GitHub: 
    &lt;ul&gt; 
     &lt;li&gt;后端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Foinone%2Foinone-pamirs" rel="nofollow" target="_blank"&gt;https://github.com/oinone/oinone-pamirs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;前端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Foinone%2Foinone-kunlun" rel="nofollow" target="_blank"&gt;https://github.com/oinone/oinone-kunlun&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Gitee: 
    &lt;ul&gt; 
     &lt;li&gt;后端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/oinone/oinone-pamirs" rel="nofollow"&gt;https://gitee.com/oinone/oinone-pamirs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;前端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/oinone/oinone-kunlun" rel="nofollow"&gt;https://gitee.com/oinone/oinone-kunlun&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;hr&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《技术领航》是开源中国 OSCHINA 推出的一档直播栏目，旨在为&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;开源软件、商业产品、前沿技术、知名品牌活动等各类项目&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提供一个展示平台，基本上每周五晚上开播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;栏目邀请项目的创始人、核心团队成员或资深用户作为嘉宾，通过路演式直播分享项目的亮点和经验，有助于提高项目的知名度，吸引更多的用户和开发者关注。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你手上也有好的项目，想要跟同行交流分享，欢迎联系我，栏目随时开放～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img height="537" src="https://oscimg.oschina.net/oscnet/up-4dd54c1b0b817689ceefa15aa66d79cfae8.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/3859945/blog/18638239</link>
      <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18638239</guid>
      <pubDate>Sat, 10 May 2025 13:55:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>一个 40 岁程序员，想做 AI 时代的 HTTP 协议</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;大家好，我叫常高伟。写下这篇东西的时候，我已经离开阿里快一年了。很多人问我，一个在华为、阿里干了近二十年的老程序员，40 多岁了，为什么还要出来折腾？折腾的，甚至还是一个听起来很不现实，甚至有点疯狂的项目：为 AI Agent 之间的沟通，制定一套开放的网络协议（ANP）。有人给我起了个外号，叫「当代堂吉诃德」。这个比喻很形象，因为刚开始的时候，除了一个遥远的「故事」，我一无所有。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;一、一个困扰我十年的问题&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;故事的起点，要回到十多年前。那时我还在通信行业工作。在通信行业，移动、联通、电信的设备天生就是要互联互通的，这是刻在骨子里的规则。可在互联网，我发现微信、来往、飞信，彼此都是孤岛。我当时很困惑，以为是技术问题，想着做个「个人门户」就能解决。很快就发现自己太天真了，大厂的数据主权是他们最核心的壁垒，不可能开放。后来我明白了，这是商业问题，封闭生态的效率在当时就是更高。&lt;/p&gt; 
&lt;p&gt;这个问题，就这么断断续续地在我脑子里盘旋了十年。直到 2024 年，AI Agent 的浪潮来了。我突然意识到，转机出现了。未来的个人 AI 助手，要想发挥最大价值，就必须能访问所有信息。这意味着数据必须回归个人，互联网必须再次走向开放。当 AI 处理任务的成本足够低，开放网络的综合效率（使用体验、使用成本（交易成本+时间成本））终将超过封闭的平台。&lt;/p&gt; 
&lt;p&gt;这是我思考的「第一性原理」。而要支撑起一个开放、互通的智能体网络，最底层的基石，就是一套统一的协议——就像 HTTP 之于 Web 时代一样。并且我发现，这里存在一个巨大的技术空白。那个念头压不住了，隔三差五就往外冒。我花了一整周的时间反复推演，最后确认这不是妄想。尽管对 40 多岁、断了收入、未来能不能再找到工作这些问题充满了恐惧，但一种使命感推着我必须走出去。&lt;/p&gt; 
&lt;p&gt;我后来一篇随笔写过：「我不知道多少人能够听到，属于你的使命召唤？我当时真的听到了」。这种感觉当时真的很清晰。并且，我真的不想错过这次技术浪潮。「当一个大的技术浪潮来临的时候，我们要做的只有一件事情：保持在场（Be There）」。&lt;/p&gt; 
&lt;p&gt;离开阿里，也许是保持在场唯一的方法。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;二、无响应之地，即绝望之地&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;离开后的头半年，是我最难熬的日子。我不敢告诉任何人我在做什么，因为连我自己都觉得这事儿「很大很空」，像天方夜谭。我只是闷头看资料、写代码，拿出了协议的第一个版本，发到网上。然后，石沉大海。没有正反馈，也没有负反馈。那种感觉，就像对着深渊呼喊，却连一点回声都没有。&lt;/p&gt; 
&lt;p&gt;这是一种绝望的感觉：无响应之地，即绝望之地。&lt;/p&gt; 
&lt;p&gt;后来我试着把想法发给朋友，大多没了下文。有的朋友比较直接：「这事未来可能需要，但做不成，也不该是你来做。」自我怀疑像野草一样疯长。我混迹在各种技术社群，却不敢介绍自己的项目，怕被人觉得不靠谱。那段时间，协议本身的设计也遇到了瓶颈。感觉自己选错了方向，进退两难。仅靠使命感，或许真的撑不过半年。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三、同路人，在缝隙中聚集&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;转机出现在我决定硬着头皮走出去之后。2024 年 10 月，在一个出海社群里，我鼓起最大勇气，介绍了我的项目。没想到，立刻有人加我好友，说「你这个东西还蛮有想法的」。这是我收到的第一个正向反馈，至今都记得。&lt;/p&gt; 
&lt;p&gt;后来，通过朋友介绍，我认识了一位海外做智能体创业的朋友。他看到我的东西，脱口而出：「你这个协议非常不错。」那一刻，我感觉像是找到了知己。他后来成了我事实上的「联合发起人」，还把我引荐给了 W3C 的「Web Agent」工作组。我把工作组所有的历史邮件和技术文档翻了个遍，又从牛津大学一个类似的项目里汲取了养分，加上之前对 Web 3.0 去中心化理念的思考，ANP 协议的技术路线终于清晰了起来。&lt;/p&gt; 
&lt;p&gt;真正的东风，来自行业本身。2025 年 3 月份 Anthropic 发布 MCP 协议，以及谷歌发布 A2A，整个行业开始意识到协议的重要性。因为我一直在公众号和社区里分享思考，很快就有人找了过来。我的公众号粉丝开始上涨，加我的人也越来越多。声网 RTE 社区邀请我去做线上分享，那是我第一次面对几千人完整地介绍 ANP，效果出乎意料的好。关注的人多了，我顺势建起了开源社区。现在，ANP 协议在 GitHub 上有了很多的贡献者，我们的线上讨论群也聚集了上千位同路人。今年 4 月，在互联网协会成立了智能体互联网工作组，我们是核心参与方。5 月，我们又牵头在 W3C 成立了 AI Agent Protocol 社区组，很多国内外的大厂比如华为、谷歌、字节、微软、蚂蚁、中移动等，都是社区组成员。雪球，就这么滚了起来。这一切，都是当初那个在绝望中挣扎的我，完全无法预料的。&lt;/p&gt; 
&lt;p&gt;一位大厂前技术高管给我留言：「请保持在技术深水区游泳的勇气。真正的协议战争从来不是功能堆砌，而是世界观的对决」。我不再是一个人了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;四、功成，不必在我&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;质疑声一直都在。有人觉得这事没商业模式，有人觉得技术还不成熟。我现在心态很平和，有价值的思考我听，纯粹的吐槽自动过滤。我判断自己成功的概率，可能有三成。最大的风险，已经不是大厂下场竞争，而是大模型技术本身的发展，如果一个足够好用的智能体迟迟无法诞生，那协议也就成了无源之水。&lt;/p&gt; 
&lt;p&gt;但我也想清楚了，什么叫成功。如果 ANP 最终没有成为主流，但它的核心理念和设计能成为未来行业标准的一部分养料，那我们社区的目标也就达成了。归根结底，我们想构建的是一个开放的互联网，这是我们社区的理念，也是我们社区最有价值的东西。只要我们的理念能够成功，就是我们社区的成功。所谓「功成不必在我」。如果有其他人或组织有同样的理念，我们社区会无保留开放我们的技术。&lt;/p&gt; 
&lt;p&gt;在一次分享的结尾，我放了一页 PPT，上面写着「连接即力量」。我真正想说的是，我们希望互联网回归到最原始的、开放连接的设想：只要一个人能够自由地连接信息、连接他人、连接工具，他就拥有了改变世界的能力。&lt;/p&gt; 
&lt;p&gt;最后，做自己热爱的事情，事情本身会滋养人的。希望你也能够找到你真正热爱的事情。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;我们的开源社区：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;GitHub: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fagent-network-protocol%2FAgentNetworkProtocol" target="_blank"&gt;https://github.com/agent-network-protocol/AgentNetworkProtocol&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#252933; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;如果你也对智能体通信协议感兴趣，或者有类似的需求，欢迎联系我们：&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;微信：flow10240&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;邮箱：chgaowei@gmail.com&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/9297178/blog/18638237</link>
      <guid isPermaLink="false">https://my.oschina.net/u/9297178/blog/18638237</guid>
      <pubDate>Sat, 10 May 2025 13:51:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>图形格式 PNG 发布 3.0 版本规范</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;PNG（Portable Network Graphics），便携式网络图形，是一种采用无损压缩算法的位图格式，支持索引、灰度、RGB 三种颜色方案以及 Alpha 通道等特性。其设计目的是试图替代 GIF 和 TIFF 文件格式，同时增加一些 GIF 文件格式所不具备的特性。PNG 文件的扩展名为.png。&lt;/p&gt; 
&lt;p&gt;6 月 24 日，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.w3.org%2FTR%2Fpng-3%2F" target="_blank"&gt;PNG 正式发布 3.0 版本规范&lt;/a&gt;，并标记为「Recommendation（推荐）」状态，意味着正式成为 W3C 标准。&lt;/p&gt; 
&lt;p&gt;&lt;img height="930" src="https://static.oschina.net/uploads/space/2025/0625/192132_To5V_2720166.png" width="1636" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"&gt;PNG 3.0 规范支持 HDR（高动态范围）功能，能够在保证色彩丰富度的同时，实现更高的亮度和对比度，增强图像的视觉效果。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"&gt;此外，它还支持 APNG 动画，使 PNG 格式能够用于动画制作，并且正式支持 Exif 数据，可以存储如版权信息、相机镜头和照片的 GPS 位置等附加信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;目前，多个浏览器和软件（如 Chrome、Safari、Firefox、iOS/macOS、Photoshop 等）以及一些硬件和工具都已支持新的 PNG 规范。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357264/png-3-spec</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357264/png-3-spec</guid>
      <pubDate>Sat, 10 May 2025 11:25:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Oasis —— 3D 打印智能玻璃容器</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Oasis 是一款完全开源、主要由 3D 打印而成的智能玻璃容器。它为苔藓、蕨类植物、兰花等喜湿植物提供了理想的生长环境。其设计包括：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oasis-terrarium.com/docs/random_notes/#light-intensity"&gt;大功率 LED 照明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;为植物提供水分并保持高湿度的喷雾器&lt;/li&gt;
&lt;li&gt;风扇用于空气流通&lt;/li&gt;
&lt;li&gt;用于监测环境条件的温度/湿度传感器&lt;/li&gt;
&lt;li&gt;wifi 连接允许通过手机或电脑进行控制和配置（参见&lt;a href="https://oasis-terrarium.com/docs/usage_guide/#web-interface"&gt;网络界面&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;外部尺寸：直径约 8 英寸，高约 13 英寸&lt;/li&gt;
&lt;/ul&gt;

&lt;p style="text-align:start"&gt;&lt;img alt="" height="489" src="https://static.oschina.net/uploads/space/2025/0625/153625_COKE_4252687.jpg" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;访问网站查看图片、构建细节等：&lt;a href="https://oasis-terrarium.com/"&gt;https://oasis-terrarium.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/oasis</link>
      <guid isPermaLink="false">https://www.oschina.net/p/oasis</guid>
      <pubDate>Sat, 10 May 2025 10:49:00 GMT</pubDate>
    </item>
    <item>
      <title>国家网络身份认证公共服务管理办法 7 月 15 日起施行</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;公安部等部门近日联合公布的《&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mps.gov.cn%2Fn6557558%2Fc10087550%2Fcontent.html" target="_blank"&gt;国家网络身份认证公共服务管理办法&lt;/a&gt;》（以下简称《管理办法》）将于 2025 年 7 月 15 日起施行。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="286" src="https://oscimg.oschina.net/oscnet/up-4b433ec984b38d283dee4d9335da41dbb7a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《管理办法》共 16 条，主要规定四方面内容。一是明确了国家网络身份认证公共服务及网号、网证的概念、申领方式；二是明确了使用国家网络身份认证公共服务的效力、应用场景；三是强调了国家网络身份认证公共服务平台、互联网平台等对数据安全和个人信息保护的责任；四是对未成年人申领、使用国家网络身份认证公共服务作出特殊规定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《管理办法》明确网号、网证的自愿使用原则，鼓励有关主管部门、重点行业、互联网平台按照用户自愿原则推广应用，但同时保留、提供现有的或者其他合法方式进行登记、核验身份。《管理办法》鼓励互联网平台接入国家网络身份认证公共服务，但应当保障未使用网号、网证的用户与使用网号、网证的用户享有同等服务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《管理办法》严格依照个人信息保护法等规定，充分保护公民个人信息权益。在信息收集方面，对选择使用网号、网证登记、核验真实身份的用户，除法律、行政法规另有规定或者用户同意外，互联网平台不得要求用户另行提供明文身份信息。在信息提供方面，国家网络身份认证公共服务平台坚持「最小化提供」原则，对依法需要核验用户真实身份但无需留存法定身份证件信息的，仅向互联网平台提供核验结果；对依法确需获取、留存用户法定身份证件信息的，经用户单独同意，可以向互联网平台提供必要的明文身份信息。对法律、行政法规规定应当履行协助义务的，国家网络身份认证公共服务平台应当依法提供相关信息，但提供的信息仅限网号、网证对应的真实身份信息和认证日志信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，国家网络身份认证公共服务平台已经上线运行，用户可通过国家网络身份认证 App 申领并使用网号、网证，以减少相关服务管理环节对个人信息的采集、留存，实现公民身份信息「可用不可见」，同时降低互联网平台在个人信息保护方面的投入成本。（科技日报）&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357253</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357253</guid>
      <pubDate>Sat, 10 May 2025 10:27:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>.NET Core 工作流 WorkFlow 流程控制条件审批（执行动作）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h1&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;span&gt;控制条件审批（执行动作）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;官网：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://www.wikesoft.com&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;学习版演示地址：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fworkflow.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://workflow.wikesoft.com&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;学习版源代码下载：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/wikesoft/WorkFlow"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;https://gitee.com/wikesoft/WorkFlow&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow2.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;演示地址：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fworkflow2.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://workflow2.wikesoft.com&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow2.0-Vue3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;演示地址：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fworkflow2-vue3.wikesoft.com%3A8080%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://workflow2-vue3.wikesoft.com:8080/&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow2.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;帮助文档：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwikeflowhelp.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://wikeflowhelp.wikesoft.com/&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;说&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;明：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;1、执行动作=流程设计设置的连接线。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;2、该文档讲解某一流程节点的执行动作的显示和隐藏。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;3、应用场景：如不同的条件进入不同的审批流程，如&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&amp;nbsp; &amp;nbsp;3.1、如果员工提交的费用报销单超过 5000，则要求部门经理提交给副总。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&amp;nbsp; &amp;nbsp;3.2、如果员工提交的费用报销单没有超过 5000，则直接提交给财务人员。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#337ab7"&gt;&lt;span&gt;&amp;nbsp; 条件表达式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;当一个节点上有多条线路可以选择时，流程引擎会将未设置条件表达式和满足条件表达式的连接线显示出来。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;规则：条件表达式里设置 Key 值，通过设置 Key 和 Key 对应的 SQL 语句。最后再通过 SQL 查询的结果替换条件表达式里的 Key。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;strong&gt;实际应用：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;1、如果员工提交的费用报销单超过 5000，则要求部门经理提交给副总。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;2、如果员工提交的费用报销单没有超过 5000，则直接提交给财务人员。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;img alt="" height="677" src="https://oscimg.oschina.net/oscnet/up-2ea64d81d457fe6e8dbe46ffd175000c84e.png" width="1336" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;strong&gt;1、【提交副总（&amp;gt;5000）】设置&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="border-collapse:collapse; border:1.0000pt outset #000000; font-family:&amp;quot;Times New Roman&amp;quot;; font-size:10pt; margin-left:5.4000pt; width:681.0000pt"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;条件表达式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;[SumAmmount]&amp;gt;5000&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL Key&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SumAmmount&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL 语句&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SELECT SUM(AMOUNT) FROM&amp;nbsp; COST_DETAIL WHERE COST_ID IN (SELECT ID FROM COST WHERE INSTANCEID= '[instanceId]')&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;br&gt; &lt;img alt="" height="757" src="https://oscimg.oschina.net/oscnet/up-c63425ce2ed3912d3112796ad33681e981b.png" width="1495" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;strong&gt;2、【提交财务审核 (不超过 5000)】设置&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="border-collapse:collapse; border:1.0000pt outset #000000; font-family:&amp;quot;Times New Roman&amp;quot;; font-size:10pt; margin-left:5.4000pt; width:681.0000pt"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;条件表达式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;[SumAmmount]&amp;lt;=5000&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL Key&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SumAmmount&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL 语句&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SELECT SUM(AMOUNT) FROM&amp;nbsp; COST_DETAIL WHERE COST_ID IN (SELECT ID FROM COST WHERE INSTANCEID= '[instanceId]')&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;br&gt; &lt;span&gt;&lt;span&gt;&lt;img alt="" height="726" src="https://oscimg.oschina.net/oscnet/up-cf93c2d39e110a842fb999426d0a524fc47.png" width="1480" referrerpolicy="no-referrer"&gt;&lt;br&gt; &lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;假如一部员工提交的费用报销单总额是 6000 元，在部门主管处理节点。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;【提交副总（&amp;gt;5000）】的条件表达式最后会转换成 6000&amp;gt;5000。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;【提交财务审核 (不超过 5000)】的条件表达式最后会转换成 6000&amp;lt;=5000。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;最后【提交财务审核 (不超过 5000)】这条线则不会显示，【提交提交副总（&amp;gt;5000）】这条线会显示出来。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;条件表达式可以设置多个 SQL KEY ，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;条件表达式支持.net if 判断的所有写法，并且要求所有的逻辑判断跟.net 的 if 判断写法一样。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;特别提示：判断相等是要写「==」而不是「=」，判断不相等要用「!=」，而不是"&amp;lt;&amp;gt;"。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;SQL 可以传参数[instanceId]和[userId]，流程引擎会自动替换[instanceId]和[userId]。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;[instanceId]和[userId]两个参数不是必须，如果你的 SQL 语句中带有[instanceId]、[userId]会自动替换实际的值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;特别提示：SqlServer 的 SQL 语句，有同学习惯「[字段名]」的写法，当你的字段名是 instanceid 时，如果你用[字段名]的写法，SQL 语句在替换参数的时候出问题，SQL 执行的时候会报错，下面的 SQL 写法黄色部分是有问题的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;错误示例：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SELECT SUM(AMOUNT) FROM&amp;nbsp; COST_DETAIL WHERE COST_ID IN (SELECT ID FROM COST WHERE&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;span style="background-color:#ff9900"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;[INSTANCEID]= '[instanceId]'&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357244</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357244</guid>
      <pubDate>Sat, 10 May 2025 09:33:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>对话 MoonBit 张宏波 ：很多 AI Coding 只提供情绪价值，而我们要重做一门编程语言</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;img height="1080" src="https://oscimg.oschina.net/oscnet/up-8342e8624d18299ad8c0db9edcfd1135b17.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;作者&lt;/span&gt;&lt;em&gt;&lt;span&gt;｜&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span&gt;周一笑&lt;/span&gt;&lt;/span&gt;&lt;br&gt; &lt;span&gt;编辑&lt;/span&gt;&lt;em&gt;&lt;span&gt;｜&lt;/span&gt;&lt;span style="color:#999999"&gt;&lt;span&gt;王兆洋&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;2022 年末，当 ChatGPT 的火种刚刚在全球点燃，引发第一波的震撼与惊叹时，张宏波进行了一项实验。他将自己刚刚孕育雏形的编程语言&lt;/span&gt;&lt;span&gt;MoonBit&lt;/span&gt;&lt;span&gt;的文法（Grammar）——一段描述语言规则的枯燥文本，喂给了那个强大的新模型。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;结果让他始料未及。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;「它就能生成 MoonBit 代码，虽然它之前从未‘见过’这门语言」，时隔两年多，张宏波回忆起那一刻，依然反复使用一个词：「不可思议。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;那一刻的「不可思议」，如今已结出果实。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;2025 年 6 月 18 日，经过无数次的迭代与优化，MoonBit 发布了它的 Beta 正式版。它正在摆脱「实验性技术」的标签，演进为一门适用于企业正式场景的工具。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;或许大多数人对「编程语言」的认知还停留在大学课堂上的 C 语言，或是如今因 AI 而无处不在的 Python。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;简单来说，MoonBit 就是一门全新的编程语言，和它们一样，是构建所有软件的基石。它的目标是成为一门可以用来开发网站、APP、服务器后台等各种应用的「通用语言」。但在 AI 时代，它选择了一条与前辈们截然不同的道路。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;近年来，像 GitHub Copilot、Cursor 这样能帮你自动写代码的 AI coding 工具层出不穷，AI coding 工具的主要目标是提升开发者在现有语言上的编程效率，张宏波和他的团队也是这些工具的重度用户，他坦言，AI 的辅助让他「一天提交七八个 PR」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;但这些工具终究是「外挂」，是在现有语言的规则下进行辅助。而 MoonBit 所做的，是从源头开始，重新设计一张更适合「AI 副驾驶」来阅读和驰骋的地图。这就是 MoonBit「AI 原生」的核心理念：它并非要自己成为一个 AI，而是要创造一门能让 AI 用起来最得心应手、最不容易出错的语言。它的语法、类型系统、错误处理机制等，在设计之初就深度考虑了如何让 AI 更容易地理解、生成和验证代码，从而解决 AI 编程中「代码写出来但不知道怎么维护」等痛点，保证代码的可维护性 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;张宏波举了一个例子，MoonBit 使用 let x = 3 而不是类似 Go 语言的 x := 3。因为 let 关键字为 AI 提供了一个明确的「新变量声明」信号，让 AI 在生成代码时可以做「受限解码」，从而更可靠。而后者则有歧义，AI 难以判断是新声明还是赋值，容易出错 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;简单来说，一个设计良好的&lt;/span&gt;&lt;span&gt;AI 原生&lt;/span&gt;&lt;span&gt;语言，能让通用的 AI Coding 工具在操作这门语言时表现得更好。更进一步，MoonBit 团队正在开发自己的 AI 编程 Agent。因为完全掌控 MoonBit 的工具链，所以可以做到通用工具无法实现的功能。例如，通过分析代码结构，并发地让 AI 去修复多个 Bug，而不是像其他工具那样只能一个一个地串行修复。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;要实现如此构想，需要对编程语言的整个工具链有极强的掌控力与理解。而这一切，正来源于张宏波近二十年的技术积累。时间拨回到 2009 年，他在清华大学与微软亚洲研究院的联合培养项目中，完成了自己的本科毕业设计——一门名为「悟空」的动画编程语言 。此后，从研究可以创造新语言的「元编程语言」，到进入宾夕法尼亚大学攻读博士，他的学术路径始终精准地指向编译与语言设计这个基础软件领域最核心的地带 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;一个偶然的机遇让他的人生轨迹从学术转向工业。当时，金融巨头彭博社（Bloomberg）急需一位能维护其核心交易软件的 OCaml 编译器专家，这个小众而关键的岗位，让彭博为还在读博的张宏波开出了难以拒绝的条件，最终使他中断学业，投身华尔街 。在彭博，他再次展现了自己的天赋与热情——为了统一公司上千万行 JavaScript 前端代码与 OCaml 后端的技术栈，他在业余时间，独自开发了一个能将 OCaml 高效编译成可读 JavaScript 的编译器。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;这个无心插柳的项目，后来演变成了知名的开源项目 BuckleScript（ReScript 的前身），并吸引了另一家科技巨头 Facebook 的注意。2017 年，当张宏波决定回国时，Facebook 为了留住这位关键的编译器开发者，破例允许他作为唯一的员工在中国远程办公 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;在 Facebook 的五年，是他技术生涯的成熟期，也是一段漫长的蓄力。直到 2022 年，几个关键节点汇集到了一起：个人上，他渴望在优厚的薪资之外，寻求更大的挑战和创造空间；外部，他昔日在清华的导师 Harry &lt;/span&gt;&lt;span&gt;沈向洋&lt;/span&gt;&lt;span&gt;向他发出了加入 IDEA 研究院（粤港澳大湾区数字经济研究院）的邀请，在「加入已经拥有数百人团队的某编程语言团队」和「从零开始组建自己的团队」之间，他选择了后者——那个更具不确定性，也更具想象力的选项。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;于是，在深圳，MoonBit 项目正式立项。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;命运的奇妙之处在于它的时机。MoonBit 项目启动于 2022 年 10 月，一个月后，ChatGPT 发布，引爆了全球的 AI 浪潮。当所有主流编程语言——Java、Python、Rust——都已在 AI 时代来临前定型，只能在现有基础上「嫁接」AI 能力时，MoonBit 这门「生于 AI 纪元之初」的语言，获得了一个千载难逢的历史机遇。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="428" src="https://oscimg.oschina.net/oscnet/up-e39c86ac937a5c9d8a3bb426b93b8edddf9.png" width="750" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;「我们几乎是没有浪费任何时间」，张宏波说 。从使用 Llama 模型第一次在他个人电脑上成功生成 MoonBit 代码的那天起，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;团队就决定「All-in」 AI。他们开始从语言设计的最底层，从语法的每一个细节，去思考如何让 AI 能更可靠、更高效地生成代码。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;两年半后的今天，MoonBit Beta 版本中，在语言层面提供了原生的异步与错误处理机制。相较于 Python 需要通过 async/await 和第三方库实现的异步模型，MoonBit 提供了一种更自然、零语法负担的并发范式，并在编译期就能追踪错误传播路径，为构建稳定、可维护的智能系统打下了坚实基础。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;MoonBit 的故事，既是张宏波个人技术生涯的延续，也是对「AI 时代，编程究竟该如何演变？」的另一种回答。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;在 MoonBit Beta 正式发布，在架构稳定性和工程实用性上取得关键突破，正式进入可落地应用的新阶段，朝着可被实际部署的基础设施技术前进的关键节点，我们和张宏波聊了聊，以下为对话实录，经不改变原意的编辑。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#fffed5"&gt;AI Coding 有时候提供的只是情绪价值，我们要从底层做一门新语言，这才是 AI 编程的未来&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;人&lt;/span&gt;&lt;span style="color:#454545"&gt;：您如&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="color:#454545"&gt;何理解「AI 原生」编程语言这个概念？在这个理念上，MoonBit 与业界其他探索者有何不同？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;在大模型时代，Python 可能并没有大家想象中那么大的优势，它只是起步快一点。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;对于「AI 原生」，很多人有不同的理解。比如 Mojo，它的创始人 Chris Lattner 是 LLVM 项目的奠基人，他对「AI 原生」的理解是，让 Mojo 这门语言非常适合开发高性能计算程序。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我们认为，AI 原生编程语言的核心议题是：如何让 AI 更高、更好、更高效地、甚至是并发地生成目标代码。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;为什么我觉得这个方向的市场是最大的？开发高性能算子固然重要，但这就像用 C 语言写操作系统内核，是金字塔尖少数人的工作，需求量有限 。而 AI agent，我们自己也开发了很多，它的生态其实很小，核心逻辑可能就几千行代码，很难构成真正的技术护城河，一个通用的库就能解决大部分问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，我们对「AI 原生」的理解聚焦于赋能大模型本身。我们希望大模型可以更高效、并发地生成可靠、高性能的 MoonBit 代码。这意味着最终生成的代码不仅可信度要更好、性能要高，而且整个生成过程也必须是快速且可靠的 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;span style="color:#454545"&gt;：这个「为 AI 而设计」的理念，具体是如何影响 MoonBit 语言本身的设计决策的？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;这个理念带来了深刻的变化，很多传统语言设计中非常重视的特性，在我们看来优先级就没有那么高了 。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;最直接的一点就是，我们不会像过去那样，过度强调语法是不是要节省一两个字符，&lt;/span&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;因为未来绝大部分代码都将由 AI 生成，为人类节省几秒钟的打字时间意义不大。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;更重要的是，你需要在一个巨大的设计空间里找到一个精妙的平衡点。这个空间的两端，一端是像 Python、 JavaScript 这样最自由（liberal）的语言，另一端是像 Rust，尤其是 Lean（一种用于形式化数学证明的逻辑编程语言）那样最严格的语言 。Lean 的严格性可以从数学上证明代码的正确性，但正因如此，它对人类来说极难书写 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;我们的实践经验是，如果一门语言过于复杂，以至于人类专家都很难一次性写对，那么 AI 大概率也无法稳定地生成正确的代码 。我们发现，如果一个大模型在某个问题上尝试一两次都无法搞定，那它基本就永远也搞不定了，至少以目前的技术水准是这样。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，MoonBit 的选择是在中间找到一个最佳平衡（sweet spot）。我们既要保证代码的可靠性，又不能让类型系统过于复杂，以至于超出 AI 的能力边界。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：既然 AI 是核心，那么在您看来，一个真正的「AI 原生」语言，未来需要在语言层面提供什么样的功能？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我认为它会深度影响语言的设计，而不仅仅是一个外挂。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我们现在主要关注的是代码生成，但这只是开始。例如，未来我们可能会有新的语法特性来原生支持 AI。比如我写完一个函数，我希望语言能直接支持生成它的文档字符串（doc string），而不是像现在这样需要通过外部插件来完成。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;这就像一门为数据库设计的语言，如果它不在语法层面提供对数据库操作的支持，只是通过外挂库来连接，那么它就不能算「数据库原生」的。AI 原生语言也是同样的道理，它需要在语言的基因里就植入与 AI 协同的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：很多开发者担心，AI 生成的代码虽然快，但项目做大后会变得难以维护，像一个「黑盒」。MoonBit 作为一门「为 AI 而生」的语言，是如何从设计上解决这个「可维护性」问题的？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这个担忧非常普遍，也切中了要害。我之前也看到有人吐槽说，用 AI 两天写了一个视频编辑器，但完全不知道后续该怎么维护。这通常是因为代码是用动态语言写的，正所谓「动态语言一时爽，重构火葬场」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，解决这个问题的核心在于&lt;/span&gt;&lt;strong&gt;&lt;span&gt;代码的可维护性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;，而这正是需要从编程语言的底层设计上来保证的。比如，MoonBit 拥有一个非常强大的静态类型系统。我们会为每个代码包（package）自动生成一个形式化的「签名」（我们称之为&lt;/span&gt;&lt;span&gt;MBI 文件&lt;/span&gt;&lt;span&gt;），它就像一份精确的接口摘要。当你需要理解或维护一段代码时，你不再需要去阅读海量的实现细节，只需查看这份由工具保证其正确性的摘要文档即可，大大降低了维护成本。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;此外，我们还非常注重语言的「&lt;/span&gt;&lt;span&gt;局部化&lt;/span&gt;&lt;span&gt;」（localization）设计。这意味着，当你修改一个函数时，它的影响应该被严格限制在局部，不会意外地波及到其他不相关的代码。很多语言，比如 C++或者 OCaml，改动一个地方可能会导致全局语义发生变化，这对于人类和 AI 来说都是一场灾难。一个具有良好局部性的语言，能让 AI 在处理代码时，只用聚焦于当前的小代码块，极大地简化了上下文，从而提升了维护性和可靠性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：您认为在 AI 时代，编程语言本身的价值会发生变化吗？它会更偏向于让人类使用，还是让 AI 使用？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我认为未来是人机协同的模式，而不是单纯给 AI 用的语言。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我个人感觉，AI 的智能水平可能正在接近一个平台期，指望它很快变得比人聪明很多并不现实。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;只要人类还需要审查（review）、理解和维护代码，那么语言就必须同时兼顾人类和机器的可读性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;有趣的是，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;AI 的出现，反而可能会淘汰掉一些「过度为人类交互而设计」的东西&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。比如曾经有一个叫「结构化编辑器」的概念，它通过限制你的编辑方式来确保语法永远正确。这种模式对人类的交互很友好，但对大模型来说却是一种束缚，因为它破坏了代码作为纯文本的自由格式，反而不利于 AI 的理解和生成。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，未来的编程语言设计，需要在两者之间找到新的平衡：它要足够结构化和清晰，以便机器能高效、可靠地处理；同时也要保持足够的简洁和直观，让人类能够轻松地审查和验证 AI 生成的结果。这正是我们在 MoonBit 中努力探索的方向。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：您提到 AI 能极大提升效率，在 MoonBit 团队内部，你们具体是如何利用 AI 来辅助日常工作的？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我们每天都在高强度地使用 AI，可以说，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;如果没有 AI，我的个人生产力会大幅下降&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。特别是现在我需要花更多精力带领团队、考虑各方面的事情，写代码的时间越来越少。AI 的辅助真的可以让我的生产力翻倍地提高。举个例子，就在前一天，我在不到 24 小时内，利用 AI 辅助完成了七八个代码提交（Commit/PR），这在过去是难以想象的。这些工作有的是修复 Bug，有的是补充文档和注释，AI 都能处理得很好。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;除了个人提效，我们还在探索更有组织性的 AI 用法。比如，MoonBit 现在最缺的就是生态库，我们畅想在年底之前，能有上百个「AI Agent」在夜以继日地为 MoonBit 写代码，将其他语言的成熟生态（比如一些加密算法库）高效地「搬运」过来。这比雇佣 100 个工程师要容易得多。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;更进一步，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;因为我们完全掌控 MoonBit 的语言和工具链，我们可以开发出比通用工具更高效的 AI Agent。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;例如，当需要修复代码库中的多个警告或 Bug 时，通用工具可能只能一个一个地串行修复。而我们的 Agent 可以利用对 MoonBit 代码结构的深度理解，先将代码库智能地拆分成许多互不影响的小块，然后并发地让大模型去并行修复，最后再将结果安全地合并回来。这种利用语言设计来优化 AI 工作流的能力，是我们的核心优势之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：你们团队也使用 Cursor 等通用 AI 编程工具。作为资深开发者和语言设计者，如何评价这些当红产品？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我们团队确实都用，包括 Cursor、Copilot、Codex，以及我们自己的 moon-agent。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我个人感觉，还是小团队更有活力，比如 Cursor 的整体体验就要比 Copilot 强很多。可以说，如果 Copilot 做得足够好，根本不会留给 Cursor 这样的初创公司机会。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;但同时，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我也认为像 Cursor 这类产品的技术护城河并没有大家想象中那么高&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。它的核心功能可以分为两部分：一个是你打字时实时补全代码（tap-to-type），另一个是基于对话的 Agent。前者技术含量更高，可能需要训练专门的小模型，&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;但它提供的更多是一种让你感觉编码更快的「情绪价值」，对生产力的根本提升有限。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;真正能大幅提升生产力的是后者，即 Agent 帮你编写完整的代码块，而这部分的技术门槛并不算特别高，更多是依赖底层大模型（基模）的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;此外，&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;过度依赖通用 AI 编程工具还存在被「卡脖子」的风险&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;比如 Google 之前就限制过插件的安装。我们做 MoonBit，坚持自己写底层的语言服务，就是希望站在产业链更上游的位置，不把自己的命运交到别人手里。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;我们的策略是，不做通用的 AI 编程工具，而是专注于为 MoonBit 这一门语言提供最强大、最深度的 AI 增强功能，这才是我们自己宽广的护城河。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#fffed5"&gt;比现有主流语言都好一个数量级以上，才能抢夺市场，beta 版发布意味着进入稳定期&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：我注意到 MoonBit 初期非常强调在 WebAssembly 领域的优势，这是出于怎样的战略考量？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这是一个刻意的战略选择，很多人会误以为 MoonBit 只做 WebAssembly，其实我们支持所有主流后端，包括 JavaScript 和原生机器码。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;我们之所以首先聚焦 WebAssembly，是因为新语言的推广周期非常长，动辄需要数年才能获得第一个真正的商业用户。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;作为一个有资金支持的机构项目，我们不可能像个人爱好者那样「为爱发电」，等上十年再拿出成果。我们需要在一年、两年、三年，每年都交付出实实在在的东西，让大家看到进展。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;要在这么短的时间内让开发者愿意尝试一门全新的语言，唯一的办法，就是在某个特定的、有痛点的平台上，做到比所有现有主流语言都好一个数量级以上。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;我们审视了一圈，发现 WebAssembly 就是那个机会。它在 2017 年才发布 1.0 标准，而所有现在的主流语言，其核心设计都早已在那之前定型，它们在编译到 Wasm 时，或多或少都有历史包袱，导致性能和体积表现都不理想。最典型的例子就是 Go，一个「Hello World」程序编译成 Wasm 后体积竟高达 1.8 兆，这与 Wasm 轻量的初衷背道而驰。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;MoonBit 作为一门没有历史包袱的新语言，完全可以为 Wasm 进行深度优化。我们的判断是，我们有希望在这个单点上做到比所有对手都好一个数量级。事实也证明了这个策略的成功。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我们早期的商业客户，包括付费客户，几乎都是看中了我们在 Wasm 后端上的抢眼表现，这让我们获得了宝贵的初始动力&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。有了这个根据地，我们才不会焦虑，可以更有耐心地去做更宏大的事情，比如完善我们的原生和 JavaScript 后端。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：你们近期宣布项目进入了 Beta 里程碑，这对用户和社区意味着什么？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;Beta 版本的发布主要意味着三件事。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;第一，语言特性已经足够丰富，覆盖了工业级开发的核心需求&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;包括完善的异步支持、泛型和错误处理。坦白说，我们 Beta 版的特性比 Go 1.0 发布时还要全面。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;第二，也是更重要的，语法进入了稳定期。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;在此之前，为了追求最佳设计，我们迭代非常快，可能今天写的代码，两周后就因为语法变动而无法编译了。进入 Beta 阶段后，我们承诺不会再轻易进行破坏性的语法修改，这意味着用户可以放心地在生产项目中使用 MoonBit，不用再担心当「小白鼠」了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;第三，我们将建立更正规的社区沟通机制。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;过去很多决策是内部决定的，未来任何涉及语言语法的改动，我们都会通过公开的 RFC（Request for Comments）流程，与社区提前沟通，让大家更早地参与进来，培养一种共建的参与感。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：MoonBit 作为一门新语言，如何解决生态冷启动的问题？我注意到你们提到了「无缝融合 Python 生态」。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;生态确实是新语言最大的挑战。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;关于 Python 生态，我们的策略是「复用」而非「重造」。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;Python 的官方解释器 CPython 是用 C 语言写的。由于 MoonBit 现在支持直接编译到 C 代码，我们就能实现与 C 的良好互操作，从而直接调用 CPython 的运行时。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;这意味着，我们可以为成熟的 Python 库（如 Matplotlib、PyQt 等）编写绑定（binding），让开发者可以在 MoonBit 项目中直接使用它们，比如快速搭建一个 UI 原型。这提供了一条渐进式的迁移路径：你可以先用 Python 库快速出成果，然后逐步地、在性能瓶颈处用原生的 MoonBit 代码重写那部分功能，极大地降低了迁移成本和风险。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：MoonBit 的长期商业模式是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：我们长期的愿景，是成为一家软件服务公司，而非像 JetBrains 那样售卖开发工具。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;我们的商业化分两步走。短期内，通过为有深度定制需求（比如修改编译器）的大客户提供授权和服务，我们完全可以覆盖一个十几人团队的开销，保证生存。我们的早期付费客户，比如那家数据库公司，就是有这样的需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;但我们真正的目标在更远处。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;当 MoonBit 生态成熟，拥有百万级用户和我们完全掌控的工具链（从 IDE 到包管理）后，我们将有能力打造一个前所未有的、高效的代码交付云平台。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;在这个平台上，用户只需通过自然语言提出需求（Prompt），我们的 AI Agent 就能利用对 MoonBit 语言的深度理解，自动地为你生成、构建、测试甚至部署一整个软件服务。我们最终向用户交付的，是一个可以直接使用的软件服务，而不仅仅是代码。为了保护这个长远目标，避免未来被云厂商「摘桃子」，我们对编译器的核心部分保留了所有权，这也是我们开源策略中相对保守一面的原因。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一位编程语言「老兵」的二十年&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：在创立 MoonBit 之前，您已经在 ReScript 等多个编程语言项目上取得了卓越成就。能和我们分享一下您的这段技术历程吗？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我从 2009 年的本科毕设就开始做编程语言了。当时在清华大学和微软亚洲研究院（MSRA）的联合培养项目中，我开发了一款名叫「悟空」的动画编程语言，算是一个小型的领域特定语言（DSL）吧。从那时算起，到现在快 20 年了。我的硕士课题则是一门「元编程语言」，即一种可以用来创造新编程语言的语言 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;我本来是在宾夕法尼亚大学读编程语言的博士，但人生轨迹因为 OCaml 发生了变化。OCaml 是我深度参与维护的一门函数式编程语言。当时，纽约的彭博社（Bloomberg）收购了一家法国公司，其核心的金融衍生品定价软件就是用 OCaml 的一个内部方言（dialect）写的。市场上懂 OCaml 的人才非常稀缺，他们找不到人，于是就找到了我，并给了一份非常优厚的录用信。最终我决定中止学业，硕士毕业后就直接去了纽约，负责维护他们那个私有的 OCaml 编译器。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;在彭博工作期间，我又利用业余时间开启了一个新项目。当时（大约 2014 年），彭博已经拥有上千万行用 JavaScript 写的前端 UI 代码，而后端则在使用 OCaml。为了统一技术栈，我写了一个编译器，可以把 OCaml 编译成非常可读、高效的 JavaScript 代码。我的法国老板（OCaml 正是法国人开发的）看到后非常喜欢，就让我放下原来的业务，全职投入这个项目。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：这应该就是后来知名的 BuckleScript/ReScript 项目的前身了。听说后来 Facebook 也因为这个项目向您抛出了橄榄枝？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是的。这个项目后来以 BuckleScript 的名字开源了，成了当时公司最受欢迎的开源项目之一 。到 2017 年，我个人想回国发展，但就在这时，Facebook 联系到我，说他们内部的 Facebook Chats 和 Messenger 等产品深度使用了我的编译器，如果我走了，项目就没人维护了，而他们内部有几十人的团队依赖这个工具链。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;为了留住我，Facebook 做出了一个破例的决定：允许我一个人在中国远程办公，继续维护这个项目。要知道，Facebook 在中国是没有办公室的 。于是，我回国后，从 2017 年到 2022 年，一直在 Facebook 远程参与这个项目。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;它也逐渐从 BuckleScript 演进成了一门独立的、专门用于 Web 开发的编程语言——ReScript。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：是什么契机让您最终决定离开 Facebook，创立 MoonBit 呢？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;到了 2022 年，几个因素汇集到了一起。首先，我在 ReScript 这个项目上已经投入了五六年，而 Facebook 的待遇非常优厚，我一个人在国内，薪资是按照硅谷顶尖标准来支付的。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;对我个人而言，我开始想追求一些薪资之外的东西。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;我之前在微软亚洲研究院的导师 Harry，他从微软退休以后，也回到了深圳。我们见了一面，深聊了一次 。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;他建议我来 IDEA 研究院这边，灵活性会更大，可以组建自己的团队。和自己的导师合作，彼此知根知底，完全不用担心信任问题。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;于是，我便来到了 IDEA，从零开始，创立了 MoonBit。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;套壳与否取决于你的 added value&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：提到「国产编程语言」，很多人会联想到「套壳」的争议。您如何看待这个问题？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;「套壳」现象确实很多 。但我们不担心这个问题，因为 MoonBit 的代码是完全公开的，我们甚至几乎没有使用任何第三方依赖，一切都是从零构建。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;我认为，判断是否「套壳」的关键标准在于，你提供了多大的价值增量（added value）。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;比如，用 JavaScript 的 eval 函数，五行代码就能做出一个「新语言」，但这没有价值。相比之下，微软的 TypeScript，虽然它最终也编译成 JavaScript，但没人会说它是套壳，因为它提供了一套强大而完善的类型系统，解决了 JavaScript 的原生痛点，带来了巨大的价值增量 。反面例子是曾经的 CoffeeScript，它在很大程度上只是换了一套语法，提供的价值增量有限，那更像是一种套壳。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：作为国内为数不多投身基础软件核心领域的团队，您觉得目前中国的技术环境缺少什么？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：我个人觉得，我们最缺的可能不是技术，也不是人才，而是两样东西：信心和伯乐。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;首先是信心。我们需要有一种发自内心的信念，觉得我们自己能做出世界一流的东西，而不是总想着等国外做出来了我们再去模仿。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这种信仰必须是基于真实实力的，不是盲目自信。我之所以有信心做 MoonBit，也是因为我过去的经历，比如 ReScript，它的技术含量其实已经比谷歌的 Dart 语言高很多，但因为种种非技术因素，没有达到应有的高度，这是我一直的遗憾。这份遗憾，也成了我做 MoonBit 的动力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;&lt;span&gt;其次，我们缺少「伯乐」。中国的千里马非常多，尤其是 90 后、00 后这一代，既有天赋又极其勤奋，他们的综合能力，我个人觉得甚至比美国同龄人要强很多。但我们的文化环境，可能缺少那种由衷欣赏、不计回报去提携和传播好技术的「伯乐」氛围。很多时候，你得先「拜码头」，或者用商业合作的方式才能获得关注。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;这也是我们想把 MoonBit 做成的原因之一。我们不仅仅是想做出一门很多人用的语言，更希望把它成功地商业化。当我们成功之后，我们自己就能成为「伯乐」，因为我们真正懂技术，可以去识别和扶持下一代更聪明的年轻人，带动一个良性的产业链发展。所以，我深切地感受到，我们缺的是伯乐，而不是千里马。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;用 AI 吧，使劲用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：对于那些在 AI 时代希望提升自己竞争力的开发者，您有什么建议？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：我的建议是高强度地去使用它，并且去理解它的能力边界。AI 不是万能的，你要清楚地知道它擅长做什么，不擅长做什么。比如，让 AI 串行地去修改一百个编译警告，效率可能还不如有经验的开发者手动修改来得快。但如果你懂得利用工具，让 AI 去并发地处理这些任务，效率就会指数级提升。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;AI 无疑会加剧马太效应，拉大个体间的差距。厉害的人用上好的 AI 工具会变得更厉害。所以，年轻人应该更主动、更高强度地去拥抱它，了解它的脾性，而不是简单地把它当成一个黑盒。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：对于那些想要尝试 MoonBit 的开发者，您有什么想说的？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;首先，我们的工具链非常好用。我们提供了一流的在线 IDE，你不需要在本地安装任何东西，打开浏览器就能立即开始编写 MoonBit 代码。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;其次，现在加入是一个非常好的时机。MoonBit 刚刚进入 Beta 阶段，生态系统还是一片全新的大陆。更早地参与进来，你不仅可以见证一门编程语言从零到一的成长过程，更有机会成为早期生态的核心贡献者，留下自己的印记。MoonBit 本身在数据处理等方面有很多非常有意思的特性，我们把数据变换的体验做得非常好，相信会给你带来不一样的感受。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：最后，对于那些有志于投身基础技术领域的年轻人，您有什么经验可以分享？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;张宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：我的建议是，要做好打持久战的准备，并且先在产业界充分历练。基础软件是一个周期特别长的领域，它不可能让你一夜暴富，而是一个慢工出细活的过程。以我自己为例，我也是在个人职业生涯和财务上有了足够的积累，不再为生计担忧之后，才全身心投入到这件事情中来的。这个领域需要深厚的经验积累，所以，年轻人如果心怀此志，最好先在相关的岗位上磨砺数年，再来挑战。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357239</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357239</guid>
      <pubDate>Sat, 10 May 2025 09:26:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>德国汽车企业就开源软件开发达成非竞争性合作</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;德国汽车行业的 11 家公司已就开源软件开发达成非竞争性合作&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在德国汽车工业协会（VDA）的支持下，包括宝马集团、大陆集团、ETAS GmbH 等 11 家汽车企业于 2025 年 6 月 24 日在第 29 届国际汽车电子大会上签署了在开源软件开发方面进行前竞争性合作的&lt;strong&gt;谅解备忘录 (Memorandum of Understanding，MoU)&lt;/strong&gt;，旨在提升汽车软件开发的速度、效率和安全性，为建立开放协作的生态系统奠定基础。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0625/171504_8ecy_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;随着车辆软件重要性与复杂性的增加，行业急需加快开发速度、提升效率并确保高质量与安全性。&lt;strong&gt;因大量车辆软件用户无法直接接触且不具差异化，所以可在开放协作生态中联合开发相应软件模块&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;为使汽车系列软件满足功能安全需求，相关方开发了开创性的开源开发流程，为按相关标准认证做好准备，并通过 「代码优先」 方法实现标准化及加快开发速度，即提供可执行软件模块而非详细规格说明。&lt;/p&gt; 
&lt;p&gt;软件开发在 Eclipse 基金会透明且无供应商依赖的环境中进行，属于 S-CORE 项目一部分，该生态系统开放，既通过与行业标准软件互操作性体现，也对欧洲及国际其他公司贡献协作开放。&lt;/p&gt; 
&lt;p&gt;该倡议时间规划显示，2026 年将推出适用于自动驾驶平台系列开发的软件范围，其模块化软件范围可调整或扩展，作为定制发行版供行业用于系列开发，使制造商和供应商能专注于差异化特性，同时共同维护核心组件，为创新奠定坚实基础，也让企业能专注于为客户创造差异化的部分。&lt;/p&gt; 
&lt;p&gt;VDA 主任马库斯・博利希表示，各方正共同构建一个面向未来且强大的软件生态系统，该系统开放、透明且安全。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357237</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357237</guid>
      <pubDate>Sat, 10 May 2025 09:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
