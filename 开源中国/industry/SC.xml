<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Thu, 16 May 2024 13:45:50 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>What&#39;s new in PikiwiDB(Pika) v3.5.4</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;p&gt;PikiwiDB(Pika) 社区非常荣幸地宣布，我们的最新 v3.5.4 正式生产可用版本现已发布。&lt;/p&gt; 
&lt;p&gt;v3.5.4 解决了历史遗留的 bug，对 PikiwiDB(Pika) 的一些遗留 bug 进行修复和优化，旨在打造出一个高稳定性的版本。本次的重点优化主要包括，PikiwiDB(Pika) 支持动态调整限速参数、增强 PikiwiDB(Pika) 的客观测性指标、 磁盘 IO 限速支持读限速及写限速等。&lt;/p&gt; 
&lt;h1&gt;1 新特性&lt;/h1&gt; 
&lt;h2&gt;Pika 支持动态调整全量同步限速参数 rsync-timeout-ms 和 throttle-bytes-per-second&lt;/h2&gt; 
&lt;p&gt;自 v3.5.0 版本开始，PikiwiDB(Pika) 服务摒弃了通过子进程内使用原来 rsync 工具进行主从全量同步的逻辑，在 PikiwiDB(Pika) 内部以线程方式【称作 rsync 线程】自行实现了新的全量同步逻辑，避免因为外部进程不可控引起的主从同步问题，根据 360 内部 Pika 线上大规模集群运维的经验，在 PikiwiDB(Pika) 主从进行全量同步的过程中，如果遇到某些不利的外部因素，如网络波动，硬件故障（如网卡降速导致的主从网卡速率不匹配）等，可能引起 rsync 线程请求持续超时（PikiwiDB(Pika) 内置 rsync 模块用于全量同步阶段的文件传输），且超时重试所发出的包可能引发更大的网络信道负担。此时对于运维人员来说，如果能动态调整 rsync 请求的超时时间和 rsync 传输的速率上限，不仅意味着对全量同步阶段控制粒度的进一步细化，更大大降低了在该场景下的运维处置难度。&lt;/p&gt; 
&lt;p&gt;关键 PR：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2633&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2633&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;将 info key space 1 的结果输出至 info all 并展示到监控界面中&lt;/h2&gt; 
&lt;p&gt;PikiwiDB(Pika) 是通过 Info 命令采集数据至 Pika-Exporter，展示到 Grafana 界面上的，目前界面上部分数据是没有展示的，如 keys 的数量，本次将执行 info keyspace 的结果展示到监控界面，用户可以通过这个指标来查看存储的量级等。&lt;/p&gt; 
&lt;p&gt;关键 PR：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2603&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2603&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Pika 磁盘 IO 限速参数支持 OnlyRead、OnlyWrite、ReadAndWrite，默认支持 OnlyWrite&lt;/h2&gt; 
&lt;p&gt;自 3.5.0 版本开始，PikiwiDB(Pika) 服务可以通过调整 rate-limit 参数实现写限速，防止在网卡质量不高的情况下磁盘 IO 过重导致服务不可用，或者 binlog 阻塞的情况发生。360 内部 Pika 线上大规模集群运维的经验，在 PikiwiDB(Pika) 实例的网卡较差情况下，也需要对读实例进行限速，本次修改支持读、写限速，默认是写限速，调整 config 配置中的 rate-limiter-mode 可以设置为读限速，或者同时读写限速。&lt;/p&gt; 
&lt;p&gt;关键 PR：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2599&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2599&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;2 改进列表&lt;/h1&gt; 
&lt;p&gt;slotmigrate 添加 go test。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2576&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2576&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;INFO 命令耗时优化，降低查磁盘频率，避免因为数据采集调用 info 命令时查磁盘太过频繁导致服务性能下降。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2554&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2554&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;对五种基本数据类型命令增加 Redis tcl 测试。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2527&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2527&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;3 Bug 修复&lt;/h1&gt; 
&lt;p&gt;修复使用 Pika Exporter 时可能会出现 slots 分配不均衡的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2651&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2651&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 Codis dashboard 不能正确更新 master 实例状态的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2650&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2650&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 Redis 事务 binlog 解析失败导致的主从同步异常问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2642&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2642&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 Pika Expoter 启动时不带参数导致启动失败问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2640&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2640&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复使用 Pika Operater 拉起集群 Codis-proxy panic 的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2633&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2633&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 CI 编译出的二进制进行自动化测试时 cp 命令失败问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2614&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2614&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复变量未初始化导致 cache 启动失败的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2613&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2613&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 userpass 和 userblacklist 动态修改参数功能异常问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2600&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2600&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 scard sscan 结果不一致的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2596&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2596&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复当 max-rsync-parallel-num 大于 4，slave 会在主从复制时 coredump 的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2595&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2595&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;调整不常用的线程池线程数，避免因为空跑导致性能损耗。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2590&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2590&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 Pika 事务边缘测试 case 不通过的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2586&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2586&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;将 cache-model 修改成 cache-mode。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2585&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2585&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复使用 info keyspace 后，info all 死锁的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2584&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2584&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复因修改 zsetscorekey comparator impl 字典序比较熟顺序，导致 353 352 极端场景不兼容的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2583&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2583&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 compact 死锁的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2581&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2581&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Slotmigrate 添加 go test。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2576&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2576&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;更新 Pika Operater 使用的 pika 版本。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2572&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2572&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 config rewrite 后 blockcache 数值异常的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2561&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2561&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 slotmigrate 动态修复后值错误的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2548&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2548&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 spop 可能会出现主从数据不一致的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2541&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2541&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 CloseFd(it-&amp;gt;second[i]) 出现越界的问题。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2539&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2539&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;修复 Flushall 和 FlushDB 死锁的隐患，并删除 FlushSubDB 接口。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2533&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2533&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;增加参数控制是否清理 tcl 测试后产生的数据文件，防止废弃数据占据磁盘。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2507&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenAtomFoundation/pika/pull/2507&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;4 社区&lt;/h1&gt; 
&lt;p&gt;PikiwiDB (Pika) 开源社区热烈欢迎您的参与和支持。如果您有任何问题、意见或建议，可通过以下渠道联系我们： &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1d49f2fdafd65e89a4fabf7b3ead25bf807.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/dubbogo/blog/11142279</link>
            <guid isPermaLink="false">https://my.oschina.net/dubbogo/blog/11142279</guid>
            <pubDate>Thu, 16 May 2024 10:34:14 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>开源日报 | 树莓派冲刺 IPO；OSI 即将给出开源 AI 的定义；GPT-4o 让 OpenAI 掌门人爱不释手；腾讯 AI 靠开源追进度？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.5.16&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/292744/osi-open-source-ai-definition&quot; target=&quot;news&quot;&gt;OSI 即将给出开源 AI 的定义&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;OSI 小组自 2022 年以来就启动了一项深入的全球倡议，让主要参与者（包括企业、学术界、法律界以及代表更广泛民间社会的组织和非营利组织）参与进来，共同起草 Open Source AI Definition。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;经过了几个月的会议及&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.org%2Fdeepdive%2Fdrafts&quot; target=&quot;_blank&quot;&gt;草案版本&lt;/a&gt;和审查。 OSI 表示，他们已经接近 Open Source AI Definition 的稳定版本；在接下来的几个月里，他们计划在北美、欧洲、非洲、亚太地区和拉丁美洲举办研讨会路演，以征求对草案的进一步意见。目标是能够在 10 月于北卡罗来纳州罗利举行的 All Things Open 上提出该定义的稳定版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4ff0162e5ddf1ffb5c6816a92b9d86bac19.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/292675/java-se-spring-2024-roadmap-update&quot; target=&quot;_blank&quot;&gt;Java SE 2024 年春季路线图&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Oracle 发布了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fjava%2Fpost%2Fjava-se-spring-2024-roadmap-update&quot; target=&quot;_blank&quot;&gt;Java SE 2024 年春季路线图&lt;/a&gt;，再次确认将对 Java/JDK 11 的支持延长至 2032 年 1 月，并免除 Java 11 支持的延期支持费用。此延期为依赖 Oracle Java 11 的 Oracle 客户提供了至少八年的支持和更新。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;同时，在 Solaris 操作系统上的 Java SE 8 和 Java SE 11 支持分别延期至 2030 年 12 月和 2032 年 1 月。意味着 Solaris 上的 Java 支持相较 2019 年宣布的日期又延长了六年。此外，Oracle 计划将来在 Oracle Solaris / SPARC 服务器上支持 WebLogic 14.1.2。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;262&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6587880aae5ac66d5e3cd07c6f5927c490e.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3 style=&quot;margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/292682/flutter-3-22-dart-3-4&quot; target=&quot;_blank&quot;&gt;Flutter 3.22 和 Dart 3.4 发布&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Flutter 3.22 和 Dart 3.4 已正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2Fflutter%2Fio24-5e211f708a37&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，提供了一些性能改进和特定于平台的改进。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;包括改进的 Impeller 渲染引擎、更流畅的视觉效果和更低的 iOS CPU 占用率、通过 Android 的预测性 back 手势增强的平台导航功能、通过 Google Mobile Ads SDK 扩展的盈利能力，以及 DevTools 中新的强大的 deep link validator。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/292611/deepin-v23-rc&quot; target=&quot;_blank&quot;&gt;deepin V23 RC&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-dee9d756d8e736f15c24d395c23504060c6.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5493934570%2FOewnY0XOH&quot; target=&quot;_blank&quot;&gt;在北京微软工作的，应该是不想去美国的&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;1. 昨传言微软让北京 AI 团队的人选，是不是去美国，去可以带家属，帮搞定签证。后来微软又说传闻夸大了，是轮岗，不影响国内运营。&lt;br&gt; 2. 这事应该不是瞎传，很多人收到邮件了，不然也不会有新闻出来。细节有些模糊，所以微软说夸大。但可以肯定，一些核心的 AI 研究小组肯定要动了，去美国、去爱尔兰，不会留在中国了。美国那边大气氛就这样，核心的 AI 研发不会放在中国了，微软会有压力。&lt;br&gt; 3. 微软在中国公关搞得不错，主观上应该不想和中国脱购。但是美国现在气氛是，抓住人工智能当「救命稻草」，指望有大突破领先中国，甚至是唯一希望了。一头是自己研发，另外一头就要防范中国跟随性研发，想了很多坏主意，GPU 芯片不让卖。甚至都说不搞开源了，怕中国用开源的大模型搞研发。&lt;br&gt; 4. 在北京微软工作的中国员工，应该是不想去美国。在中国拿很好的工资，生活成本低得多，是不错的工作。跑美国去，即使收入上升，现在大家也知道了，很不方便，花费高得多，一堆生活要安排。跑爱尔兰之类的地方，生活成本都暴涨。可以肯定实际收入会大幅下降，能存的钱少多了。但是不去吧，又可能要找工作，一些人肯定在烦。&lt;br&gt; 5. 和以前显著的不同是，现在大家觉得在中国，要是有收入不错又稳定的工作，生活是非常好的。感觉糟糕的，主要是没找到好工作的、工作不稳定的。&lt;br&gt; 6. 微软要把一些好工作，从中国搬去美国、欧洲。这是大形势，美国政客闹腾的。中国的发展任务之一，就是要创造更多的研发好工作，让人才可以留下来，顺心地生活、研发。现在生活条件真的不错了，房价都降了好多。企业、政府、社会，增加研发投入，让搞研究的人安心生活、努力突破。趋势是不错的，美国人下狠手，中国不少行业明显增加了研发投入。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;风云学会陈经&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1708942053%2FOer2rwSRk&quot; target=&quot;_blank&quot;&gt;GPT-4o 让闭源往前冲了一截，但我依然对开源有信心&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;前一段有开源和闭源之争，GPT-4o 又让闭源系统的能力往前冲了一截，但是我依然对开源世界有信心。&lt;/p&gt; 
   &lt;p&gt;坦率的说，可能我们又落后了，但这个落后我觉得也就不到一年，我还是坚持我的观点，中国发展大模型应该坚持两条腿走路，一条路是跟着 OpenAI，但是用开源的思路，另一条路就是继续走应用之路，走企业场景化的专业大模型之路。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;周鸿祎&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5714719345%2FOewcdy7Li&quot; target=&quot;_blank&quot;&gt;不懂就问，你们觉得哪款 AI 大模型更好用？&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;但要我说，你降价还不如把大模型做得更好，消费者用 AI 大模型看重的是好用、响应速度快、分发渠道更广，价格其实是次要的。我个人觉得目前最好用的肯定是百度的文心一言，毕竟在应用和智能体的分发上确实做的要比豆包好 N 倍，而且本身也是最大的 AI 应用场景之一，B 端企业正向反馈更多，分发量已达日均数百万次。&lt;/p&gt; 
   &lt;p&gt;况且文心大模型日处理 Tokens 文本已经达到 2490 亿，两者相差 1290 亿，在一至四月里，百度大模型中标数量和金额也是高居首位，中标项目数量多、覆盖行业多、中标金额高，这足以看到 B 端用户确实更倾向前者；虽说豆包和文心都是用的公有云+闭源技术路线，但百度李彦宏之前也说过，在大模型场景下，开源反而是最贵的，所以开源模型也必定会越来越落后。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;Oneline 科技&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FOewNznNwZ&quot; target=&quot;_blank&quot;&gt;开源免费的网页资源嗅探插件 cat-catch(猫抓)&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;它能够帮你筛选列出当前页面的资源，同时提供嗅探、缓存捕捉、视频录制等各种工具帮助抓取资源。并且可以在设置内添加想要抓取的资源类型，包括视频、图片等资源。支持 Chrome、Edge 以及 Firefox 浏览器安装使用。&lt;/p&gt; 
  &lt;p&gt;GitHub：github.com/xifangczy/cat-catch&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;GitHubDaily&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pingwest.com%2Fa%2F294933&quot; target=&quot;_blank&quot;&gt;腾讯研发了快一年的混元文生图模型，说开源就开源了？&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;腾讯 AI 靠开源追进度？&lt;/p&gt; 
 &lt;p&gt;文生图模型成熟之后，有多少人苦练 Midjourney 咒语，还是调不出可用的图像？&lt;/p&gt; 
 &lt;p&gt;设计界的专业名词、不太准确的英文翻译、理解不了的中国古代建筑充斥在目前文生图工具中。&lt;/p&gt; 
 &lt;p&gt;本质上是源于国内很多团队基于翻译+英文开源 Stable Diffusion 模型，或者基于少量的中文数据在一些特殊的场景做了 finetune，而这两种方式都存在对中文理解不足和不通用的问题。&lt;/p&gt; 
 &lt;p&gt;针对这些痛点，腾讯带着中文原生的文生图大模型来了。5 月 14 日，腾讯宣布开源混元文生图大模型，是国内首个中文原生的 DiT 架构模型，具备中英文双语理解及生成能力，在古诗词、俚语、传统建筑、中华美食等中国元素的生成上表现出色。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;品玩&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2778108489745537&quot; target=&quot;_blank&quot;&gt;树莓派冲刺 IPO，估值 35 亿但年营收 19 亿，CEO：做一家有趣又赚钱的公司&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;消息人士透露，6 月初树莓派可能於伦敦完成上市，预计估值超过 5 亿美元（折合人民币约 36 亿）。&lt;/p&gt; 
  &lt;p&gt;目前树莓派官网已经公开一系列 IPO 相关文件。从去年年底开始，就有树莓派要 IPO 的消息传出，加之 Arm 牵头完成了对树莓派的最新一轮融资。其估值快速从 3.76 亿美元飙升至如今的 5.6 亿美元。&lt;/p&gt; 
  &lt;p&gt;《金融时报》最新分析认为，在 IPO 后其估值可能接近 6.3 亿英镑（折合美元 7.99 亿）。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- 量子位&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2778248283866249&quot; target=&quot;_blank&quot;&gt;OpenAI 掌门人最新专访：GPT-4o 让我爱不释手，下代大模型可能不叫 GPT-5&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;OpenAI 近日发布了其最新的大语言模型 GPT-4o，再次引领了人工智能领域的又一创新浪潮。在此重要时刻，该公司首席执行官山姆·奥特曼（Sam Altman）接受了知名播客节目主持人罗根·巴特莱（Logan Bartlett）的专访，向全球观众揭开了发布会背后的精彩故事，并提供了他对人工智能未来的预测。&lt;/p&gt; 
  &lt;p&gt;在这次专访中，奥特曼不仅详尽地阐述了 OpenAI 的宏大蓝图，还探讨了实现 AGI（通用人工智能）的时间表，以及人形机器人可能带来的深远社会影响。与此同时，奥特曼也对人工智能个人助理的前景表达了自己的兴奋与忧虑，并强调了当今人工智能领域最大的机遇和风险等。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- 腾讯科技&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1799125283789373832%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;国外资深科技记者：Google I/O 大会不接地气，根本听不懂&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;谷歌和所有科技公司一样，需要我们这些消费者来理解这些东西。如果他们希望我们对它们的产品感到兴奋，就需要让我们知道，这些 AI 工具是什么，它们具有多大的变革性。如果我们对它们感到兴奋，可能就会购买它们。例如，也许我们会购买下一代 Pixel 手机，就是因为 Gemini，及其引人注目的视频提问服务。&lt;/p&gt; 
  &lt;p&gt;但是，一场持续两个小时的演讲，让经验丰富的科技记者也摸不着头脑，难以理解，这不是解决问题的方法。谷歌花了很长时间谈论它的 AI 在总结事物方面有多么优秀，也许是时候让谷歌自己来使用这些工具了。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- 新浪科技&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1799161616824331971%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;美国立法者寻求 320 亿美元拨款：让美国人工智能领先于中国&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;据路透社报道，包括美国多数党领袖查克·舒默在内的两党参议员周三呼吁国会批准为人工智能研究提供 320 亿美元资金，以保持美国在这一强大技术方面领先于中国。&lt;/p&gt; 
  &lt;p&gt;包括共和党人迈克·朗兹（Mike Rounds）、托德·杨（Todd Young）和民主党人马丁·海因里希（Martin Heinrich）在内的参议员宣布了这一目标，作为解决人工智能的前景和危险的立法路线图的一部分。&lt;/p&gt; 
  &lt;p&gt;舒默周三表示，如果中国要投资 500 亿美元，而我们什么都不投资，他们将不可避免地领先于我们。这就是为什么这些投资如此重要。&lt;/p&gt; 
  &lt;p&gt;该路线图可以帮助美国解决对中国人工智能进步日益增长的担忧。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- &amp;nbsp;鞭牛士&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdwisiswant0%2Fapkleaks&quot; target=&quot;_blank&quot;&gt;dwisiswant0/apkleaks&lt;/a&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;250&quot; src=&quot;https://static.oschina.net/uploads/space/2022/0617/185025_YEN7_5430600.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdwisiswant0%2Fapkleaks&quot; target=&quot;_blank&quot;&gt;https://github.com/dwisiswant0/apkleaks&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;PKLeaks 是一个开源的 apk 文件敏感信息扫描工具，扫描 APK 文件来获取 URI、端点和 secret 信息。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/6852546/blog/11129786&quot; target=&quot;_blank&quot;&gt;大模型真要取代程序员了？最危险的岗位是......&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;如今，随着大模型在编程、代码生成、自动化测试等领域展现出越来越强大的能力，一个引人深思的问题浮现出来：大模型会不会最终取代程序员的工作？&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;有些人认为，世界上本就没有哪项工作是绝对安全的，机器取代人工本就是迟早的事。从 GitHub Copilot、ChatGPT 到国产的通义灵码，各类替代工具纷纷涌现。AI 会做得越来越多，人类做得越来越少。百度 CEO 李彦宏就曾说过，基本上以后不会存在 「程序员」 这种职业了，因为只要会说话，人人都会具备程序员的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;但另一些人，则持不同的观点。他们认为：「低端程序员会消失，有创造力的程序员会做大」，「编程仍是基础，是必须要学的，程序都看不懂，再有创造力也没用」。360 CEO 周鸿祎就觉得，程序员热十年内不会减弱。尽管未来人人都会用电脑，所谓人人都是程序员，但不同的人用电脑创造的产品完全不一样，AI 时代更需要计算机专家和程序员，他们可能是各行各业最有发言权的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;那么，真实的情况是怎样的？大模型技术到底能取代哪些工作，又会如何影响程序员的职业生涯？作为普通程序员，应该如何适应变化？&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;事件点评&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292589&quot; target=&quot;_blank&quot;&gt;诈骗分子利用 TeamViewer 转走 398 万！远程桌面厂商该如何作为？&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;反诈任重道远，远控只是他们利用的一个工具而已，即使没有远控，他们也会有其他的方式，然而远控却在某种程度上提高了他们诈骗的效率。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;我们不期望所有厂商像我们一样屏蔽手机被控，因为这种方式太极端，也损害了正常用户的利益，但我希望看到其他厂商能提出自己的解决方案，甚至组织安全联盟，制定出规范的反诈技术标准。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;370&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-56408f700fe25366ea1c1d6392f9eca854f.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一事件对远程桌面软件行业和网络安全产生了重要影响，突显了远程桌面软件可能被滥用的风险。同时，对远程桌面软件厂商提出了更高的安全要求。为了防止其产品被用于非法活动，厂商需要采取更加严格的安全措施，比如加强用户验证、增加安全警告提示等，以保护用户免受诈骗侵害。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这也提醒了用户在使用远程桌面软件时要提高警惕。用户需要了解如何安全使用这类软件，避免在不安全的网络环境下使用，不轻信远程请求，尤其是涉及财务操作的情况。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292744/osi-open-source-ai-definition&quot; target=&quot;_blank&quot;&gt;OSI 即将给出开源 AI 的定义&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;考虑到目前有许多组织都在声称他们的 AI 为 「开源的」，但事实上还没有公认的方法来验证 AI 的开放性。因此，Open Source Initiative (OSI) 正在着手推动全球多利益相关者一起来定义 「Open Source AI」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;「正如 Open Source Definition 是全球公认的开源软件标准一样，Open Source AI Definition 也将成为 AI 系统及其组件的开放性标准。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4ff0162e5ddf1ffb5c6816a92b9d86bac19.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;首先，这一定义的制定将有助于规范和促进开源 AI 的发展。开源社区在软件领域有着明确的过程和原则来处理错误，但在 AI 领域，类似的框架和指导原则尚不完善。通过制定开源 AI 的定义，OSI 可以为开发者提供指导和框架，帮助他们在开源 AI 的开发和使用中做出更好的决策。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其次，这一定义的制定也反映了 AI 技术的复杂性和多维性。AI 系统与传统的软件系统相比，具有更多的不透明性和复杂性。如何将开源原则应用于这些「黑箱」式的自动化决策系统，是一个挑战。定义开源 AI 将有助于解决这些问题，促进 AI 系统的透明度和可理解性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;最后，这一定义的制定还将影响 AI 的全球治理。目前，AI 的全球治理框架和标准尚不完善，开源 AI 的定义将为这一领域提供重要的参考和指导。这对于保护用户权益、促进 AI 技术的健康发展具有重要意义。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292724&quot; target=&quot;_blank&quot;&gt;周鸿祎：GPT-4o 让闭源往前冲了一截，但我依然对开源有信心&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;前一段有开源和闭源之争，GPT-4o 又让闭源系统的能力往前冲了一截，但是我依然对开源世界有信心。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;坦率的说，可能我们又落后了，但这个落后我觉得也就不到一年，我还是坚持我的观点，中国发展大模型应该坚持两条腿走路，一条路是跟着 OpenAI，但是用开源的思路，另一条路就是继续走应用之路，走企业场景化的专业大模型之路。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;409&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-10539c16981268081821185d2bf7ead03f6.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;周鸿祎这一观点反映了当前开源与闭源技术竞争的复杂性，以及中国在全球技术竞争中的战略思考。周鸿祎的观点表明，虽然闭源技术在某些方面取得了进展，但开源仍然具有其独特的价值和优势。同时，他也强调了在技术发展中保持开放和多元化的必要性，特别是在大型模型这一快速发展的领域。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一观点对开源社区、技术开发者以及政策制定者都具有启示意义。它提醒我们在追求技术进步的同时，不应忽视开源社区的价值和潜力，以及在技术发展和创新中保持开放和多元化的必要性。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_7096020371_1a6f4ad9301901e4pk.html&quot; target=&quot;_blank&quot;&gt;微信开始扛起腾讯跑了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;毫无疑问，游戏、社交是腾讯商业泵血的两棵大树；原本只有一棵（游戏）是「摇钱树」，如今另一棵（微信）也成了「摇钱树」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;AC 冲锋号&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_5617041192_14ecd3f2802001ftru.html&quot; target=&quot;_blank&quot;&gt;比行业价格便宜 99.3%，字节跳动打响 AI 大模型价格战最响一枪&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;根据火山引擎现场公布的价格计算和对比，一元钱就能买到豆包主力模型的 125 万 Tokens，大约是 200 万个汉字，相当于三本《三国演义》。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;这一极具竞争力的定价的公布意味着，国内其他大模型厂商现在或许需要重新制定自己产品的定价策略。但需要指出的是，豆包在强调极致低价的同时，没有在发布会现场给出测评和跑分方面的信息。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;蓝鲸财经&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8Zbsop5I7FL&quot; target=&quot;_blank&quot;&gt;大模型「聚会」：国内卷价格，国外卷能力&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;或许国内大模型厂商是想借助价格战，尽快让大模型帮助企业带动营收增长，进而对冲大模型前期高昂的研发成本投入，以及相关硬件方面的投入。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;但随着国内大模型厂商在价格上持续内卷，或将影响到不少技术能力优越但资金实力不足的初创企业，这又是否会让中美在大模型方面的技术能力差距被拉开得更高呢？&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;DoNews&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8ZbmD8X4KKQ&quot; target=&quot;_blank&quot;&gt;从技术走向落地，行业大模型正从「小」场景倒推&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;我们到底需要怎样的生成式 AI？一边是各大科技巨头纷纷推出自身的大模型产品，开启疯狂卷参数模式，另一边，随着对大模型能力认知逐渐深入，开始有越来越多的企业关注大模型相关应用在 B 端的落地。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年以来，垂直于细微场景的轻量化、小参数模型开始涌现，可以说，各大厂商纷纷推出大模型产品形成「百模大战」的局势仅是序章，现在才真正进入「战役」——如何更好地在行业侧落地大模型产品。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;钛媒体&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fk9GT1yeHhfX2viiLOBb7XA&quot; target=&quot;_blank&quot;&gt;华为现场演示 AI 文生图时出现 sleep 代码，请问 time.sleep(6) 起到了什么作用？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：扯淡的 6 秒，那是 6 毫秒才对，编程的 sleep 都是毫秒，6 秒是 6000&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：你说得对，但 python 是秒&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：每次高考后大家都讨论高考作文。因为这是大部分人唯一能看懂的了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：在如今多线程阻塞和通信机制这么成熟的环境下，没有使用 sleep 常量时间的任何理由。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：最搞笑的是，一群人看到 ret.write 说是读取图片，给我整无语了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：后续优化的伏笔&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：我认为没有什么不合理的，等待 6 秒是给 AI 生成图片留足够时间，以防展示图片的时候图片还没有渲染生成完成。为什么是 6 秒可能是测试后一个比较保险的等待时间。毕竟这只是一个发布会的展示 demo，这么处理很合情合理。个人感觉这个拿出来说事儿的要么是初学代码一知半解感觉自己很 nb，要么就是他是懂流量的&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：为什么要等 ai 6 秒。 这个调用不能用异步吗？调用 api 万一 7 秒呢，写程序怎么可能会写死 6 秒，这简直不可思议，别说等 ai 了，万一网断了怎么办，异常判断和延迟处理绝对不会用固定时间来这样糊弄吧&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：理性吃瓜，防止打脸&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：之前鸿蒙还没完善，代码放出来好多都没实现，直接返回的比比皆是&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：没那么复杂，回复说 graceful shutdown 的应该才是正经码农。。Ctrl+C 产生中断，一般都会设计一个优雅退出时间，比如 6 秒，6 秒还自己不能清场，就直接杀进程。这才是比较符合常识的可能性。其实说那么多都没用，真想较真的话，自己装一套 mindx，看看源代码里是啥就知道了。&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 12：但是从图中 Traceback 来看是先 sleep 之后才收到中断信号，并不是中断后才执行 sleep。 正经的 graceful shutdown 不会拦截中断信号进行 sleep，最后再给自己发中断信号吧？&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 13：确定性时延，哈哈哈哈哈哈哈哈哈&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 14：有时候会为了能看清某些流程会 sleep 一下，具体情况还是得看场景&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 15：善用 sleep 让你的身价翻倍&lt;img alt=&quot;[旺柴]&quot; src=&quot;https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;，只要 sleep 写的好你就可以摸鱼很久假装在优化，不开玩笑的话我个人认为跟文中说的一样是为了方便展示设置的临时 sleep，如果是等调用反馈的时间这个太死板太弱智了...&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 16：勇于现场演示代码已经不错了。不考虑上下文，空想 sleep 没用吧，拉下代码仔细看看再评论。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 17：可能是调用部分写得随意了点而已，就这点代码不能说明是假的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 18：我日常工作都是 python，不懂 sleep(6) 秒咋了，有啥问题！&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 19：避免答案过快输出，承让友商 6 秒钟。&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292589&quot; target=&quot;_blank&quot;&gt;诈骗分子利用 TeamViewer 转走 398 万！远程桌面厂商该如何作为？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：我给自己的账户转几万块钱都被风控了，这个 398 万是怎么办到的，银行应该对此负责😂&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：银行不做啥，怪到远程桌面上了，柿子还真就捡软的捏~？&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：国内的金融类 APP 都是禁止截屏的啊，远程操作都是黑屏的。他们怎么做到远程操作 APP 的？&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292691/vue3-cabloy-front&quot; target=&quot;_blank&quot;&gt;Vue3 开发新范式，不用 `ref/reactive`，不用 `ref.value`&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：直接用 react 挺好，何苦来糟践 vue。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：看起来更麻烦了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：还是 ref 直观&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：这是要把 script 给去掉么&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：搞个新语言吧，别搞 vue 了&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292774</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292774</guid>
            <pubDate>Thu, 16 May 2024 10:27:14 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>大模型真要取代程序员了？最危险的岗位是......</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;div&gt; 
 &lt;p&gt;如今，随着大模型在编程、代码生成、自动化测试等领域展现出越来越强大的能力，一个引人深思的问题浮现出来：大模型会不会最终取代程序员的工作？&lt;/p&gt; 
 &lt;p&gt;有些人认为，世界上本就没有哪项工作是绝对安全的，机器取代人工本就是迟早的事。从 GitHub Copilot、ChatGPT 到国产的通义灵码，各类替代工具纷纷涌现。AI 会做得越来越多，人类做得越来越少。百度 CEO 李彦宏就曾说过，基本上以后不会存在「程序员」这种职业了，因为只要会说话，人人都会具备程序员的能力。&lt;/p&gt; 
 &lt;p&gt;但另一些人，则持不同的观点。他们认为：「低端程序员会消失，有创造力的程序员会做大」，「编程仍是基础，是必须要学的，程序都看不懂，再有创造力也没用」。360 CEO 周鸿祎就觉得，程序员热十年内不会减弱。尽管未来人人都会用电脑，所谓人人都是程序员，但不同的人用电脑创造的产品完全不一样，AI 时代更需要计算机专家和程序员，他们可能是各行各业最有发言权的。&lt;/p&gt; 
 &lt;p&gt;那么，真实的情况是怎样的？大模型技术到底能取代哪些工作，又会如何影响程序员的职业生涯？作为普通程序员，应该如何适应变化？&lt;/p&gt; 
 &lt;p&gt;第 12 期【开源漫谈】，我们邀请到了科大讯飞 AI 工程院智能体研究负责人杨彦波、PingCAP AI Lab 团队数据科学家孙逸神、Infra 工程师马工，一起来探讨一下，大模型的发展，究竟会如何塑造未来的技术职场？&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;分享嘉宾：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;杨彦波&lt;/p&gt; 
  &lt;p&gt;科大讯飞 AI 工程院智能体研究负责人，高级研发工程师，热爱开源，负责大模型模型微调平台 (Maas) 以及智能体相关技术研究。&lt;/p&gt; 
  &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p&gt;孙逸神&lt;/p&gt; 
  &lt;p&gt;PingCAP AI Lab Data Scientist.自 ChatGPT 震撼发布至今，聚焦 LLM 应用开发及 Multi-Agents 等应用方向的探索，开发了 TiDB Bot、LinguFlow 等应用，并参与 AutoGen 社区开发。&lt;/p&gt; 
  &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;主持人：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;strong&gt;马工&lt;/strong&gt;&lt;/p&gt; 
  &lt;p&gt;北欧 Infra 工程师，公众号《瑞典马工》主理人。《开源漫谈》常驻嘉宾。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;01 &lt;strong&gt;现在的&lt;/strong&gt;&lt;strong&gt;大模型&lt;/strong&gt;&lt;strong&gt;发展到哪一步了？能替代哪些工作？&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;目前，大模型发展到什么程度了？对程序员的替代到了哪一步？有哪些产品是已经做得不错的了？各位能讲一讲吗？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;杨彦波：&lt;/strong&gt;今天我们讲的话题是大模型会不会取代程序员，那我们首先看下程序员的定义哦。维基百科上说，程序员一开始，指的就是单纯的软件开发者，但很显然，在今天，程序员已经不单单指软件开发者了，所做的工作也不再局限于写代码。像写脚本、软件测试这种工作，在今天就有可能会被逐步取代。现在的话，像翻译、文档整理、数据标注这些，在一些简单的场景，大模型配合一些 agent 的框架已经做得比较好了，这种场景下的职位，相对来说就比较容易被大模型替代掉。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;孙逸神：&lt;/strong&gt;ChatGPT 面世的时候，确实很惊艳，对以往的一些 AI 应用确实是降维打击。不过，经过大家的体验，大家会发现，它确实存在亮点，但也还有很多弊端。而对于一个程序员来说，真正需要用在生产上面的话，我肯定不是看它的天花板在哪里，而是要看它的平均水平，或者说它的底线在哪里，因为这才是保障你服务质量的重点。&lt;/p&gt; 
 &lt;p&gt;那现在看下来的话，它在文字领域也只能做一些比较初级的东西。比如说它比较擅长总结，比较擅长做阅读理解，但是要真的让它去做一个很高级的文本关系，它又没那么擅长，或者说它的准确率没那么高。&lt;/p&gt; 
 &lt;p&gt;放到程序员这个领域来看，其实也是类似的。一些基础的活，它是能做的。但是高级的活，理论上它是不具备所谓的逻辑推理能力的。为什么它看起来有逻辑推理能力，是因为我们大部分情况下逻辑是蕴含在语言之中的，那它在学习语言的过程当中，只要学习的文本足够好，它就自然会蕴含一些逻辑在里面，但是它本身其实并不理解这个东西。你要是真让它开发一个很复杂的东西，或者一个很新的东西，那它基本上是做不了的。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;是的，Copilot 给我提供了一些代码，很好用，很方便，但是你还是得自己看一遍，不然放进去就是个灾难。但是如果老板把我开掉，那他就得自己去看 Copilot 代码，我相信他不如请我来看。&lt;/p&gt; 
 &lt;p&gt;话又说回来，你说它不能做高级的东西，但是一个程序员的日常工作中，有多少是高级的东西？也许我们 99% 的工作都是不高级的东西。你怎么看？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;杨彦波：&lt;/strong&gt;大模型本身它是包含一些原子能力的，比如说基础的对话，还有它本身页面上的一些功能，等等。这些都是比较简单的使用方式，能让你体验大模型的效果。&lt;/p&gt; 
 &lt;p&gt;更多的复杂任务，我们一般是利用大模型的 API，在客户端或者以编程的方式去做一些更高级的应用。我们现在所说的大模型，不仅仅是它自己的那个原子能力的发展，更多的、也是今年最火热的是编程范式，就是 agent 的一个范式。这一块也属于大模型发展的一部分。以后复杂的任务，可能更多会靠智能体这一块的概念去解决，这是我的观点。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;这个范式转移究竟是怎么一个转移？是说以后不需要程序员去写代码、测试、应用、然后部署到生产环境，还是......？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;杨彦波：&lt;/strong&gt;我举个例子。现实世界里，开发一个项目，往往有一个项目负责人，有项目经理，有开发测试，有运维部署，还有其他的各种角色，共同把这个项目做起来。大模型出来之后，我们可以用大模型去扮演这些角色，去实现它们在这个项目中的不同目标，共同完成一个项目。这就是大家最近在搞的智能体平台。实际上，作为编程这样一个比较特殊的环境，利用多个角色协同去编码，其实是非常有希望的。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;02 未来还需要人类程序员吗？&lt;/h1&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;所以您的意思是，大模型不仅会取代程序员，还会把整个 IT 团队都给干掉，也就是说以后产品经理直接就跟 agent 打交道，不需要人了，不需要公司了，是这个意思吧？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;杨彦波：&lt;/strong&gt;我的观点可能比较激进，可能大概是这样，当然，取代了这些岗位以后，一定会诞生一些新的岗位。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;很恐怖的场景啊。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;孙逸神：&lt;/strong&gt;是这样子的，因为今天这个题目讨论的是最终会不会代替，做到最终这个事情上就很难说了，我们肯定得给它加个时间限制。&lt;/p&gt; 
 &lt;p&gt;以我的经验来说的话，我做了挺多实验了，像彦波说的那样，让 agent 组成一个团队，这对解决问题流程是一个比较好的抽象。甚至我在这个层面上再加了一层抽象——就是本身任务怎么去做？因为任务会有相应的 SOP 来支撑这个任务怎么做，而不同的 SOP 都会有一整套的工作流程，我可以用这个 group 去组合各个不同的角色去做这个事情。&lt;/p&gt; 
 &lt;p&gt;但这两层抽象我都做完了以后，它依然很难满足我实际生产上的工作需求。比如说我让它做一些数据分析类的工作，实际操作中因为你本身可能输入 token 数量就很多，然后在这个过程当中，它的上下文交流交互也很频繁，那这样的话，其实整个上下文可能超过 100K 以上。&lt;/p&gt; 
 &lt;p&gt;在这种情况下，它最终能完成任务的概率其实还是挺小的。因为你每一个环节都存在它出错的可能性，最后就是一个乘法原理乘起来！那乘完了以后，它总的来说，成功率还是相当低的。&lt;/p&gt; 
 &lt;p&gt;因为人家写论文的时候，他一定是会给你看它最棒的亮点！但是这个亮点如果重复 100 次，是不是里面有 90% 都是这个样子的，其实不好说。实际我最后用下来，如果上下文足够长，或者逻辑足够复杂的情况下，光靠一个 PM 去跟它沟通是挺难的。&lt;/p&gt; 
 &lt;p&gt;PM 要具备审核所有生成代码的能力，那他其实不就已经相当于一个程序员？一个很复杂的项目我认为 PM 基本上没什么能力去审核，甚至他光看输入输出都不一定能对得上号。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;你提到的这个现象，会不会只是一个临时的现象，过两三年情况就大不一样了？比如说你刚才说的 100K 上下文，也许以后只有十兆上下文？又或者，当它复杂度上升的时候，工作不太顺畅了我再加一个程序员，就能解决问题。但是，相比于以前可能需要 100 个程序员，现在加 1 个就行，是不是也就相当于取代了 99% 的程序员了？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;孙逸神：&lt;/strong&gt;根据奥特曼的说法，chatGPT5 之后又是一个飞跃性的进展，所以这个还是挺难预测的。但是基于现在的 Transformer 模型，说白了还是比较倾向于一个马尔可夫决策过程，还是以概率为基础，根据之前的状态去预测下一个状态。如果这一点没有什么本质的改变，或者说人类对自己的认知科学也没有一个很完善的理解的话，至少这几年，取代程序员的情况是不会出现的。&lt;/p&gt; 
 &lt;p&gt;现在，大家都在关注上下文增加之后，大模型的质量怎么样，关注如何拓展上下文的大小。但是到 100K200K 以上这个级别，它的准确率目前可能 50% 都不到。这种情况下，要突破，估计没有那么快。&lt;/p&gt; 
 &lt;p&gt;今年上半年，我试过让 AutoGen 组成一个 group，让它能够按顺序去和人聊天，它都做不到。现在你说不光要让整个 group 的工作流程能够符合需求，还要让整个业务的 SOP 符合你的操作需求，整个步骤综合下来，至少我认为是很差的。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;这会不会是因为你们做分布式数据库的要求太高了呢？假如我就写个什么医疗信息管理系统，对程序员的要求很低，再把你那一套放到我这个医疗应用上，会不会效果就是可以接受的了？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;孙逸神：&lt;/strong&gt;一样的，我觉得对于不同领域来说，存在的问题是比较类似的。LLM 作为辅助肯定是 ok 的，但你让它真的去自动驾驶，这个肯定是不 ok 的。在程序员以外，还有一个比较重要的点，就是这个商业道德的问题，或者说商业责任的问题到底由谁来承担？&lt;/p&gt; 
 &lt;p&gt;在医疗行业，大家都知道那个图像识别 CT 在这个领域用了很多，像看片子，其实 AI 都能给出一些结论，但是最终还是要医生来盖章签字。那落到程序员这边来说，也是一样的。PM 可以把这个任务交给一个 AI 去做，但最后还是要有一个人来签字画押。PM 来签这个字不太可能，最终还是要有一个程序员来签这个字，程序员还是要对这个结果做一个检查。不检查的话，那他签了字，老板就要背商业责任了。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;是个很有趣的点，大模型不能背锅。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;03 什么样的岗位最危险？&lt;/h1&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;杨彦波：&lt;/strong&gt;自动驾驶的例子我不太赞同。事实上，现在很多城市已经试点了一些公交线路，像我们合肥就有一些试点无人公交，还有无人送快递，现实的例子已经 OK 了，只不过可能取代真正的人类还需要一段时间。不过，程序员这行也一样，它取代也是逐步的取代，先从一些简单的场景再到更复杂的场景逐步地去取代。&lt;/p&gt; 
 &lt;p&gt;像我公司现在有一些工作，偏向简单重复的代码开发，我们之前都是招实习生来做，在大模型出来之后，我们已经探索出用一些依赖大模型的 agent 技术来取代这一类工作，极大降低了用人成本。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;你之前说的智能体是什么东西？跟 chatGPT 有什么区别？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;杨彦波：&lt;/strong&gt;智能体这个概念，在大模型没有出来之前就有了，它的英文名字叫 agent。Agent 中文叫代理人，意思就是你完成一件事情，可能不需要你亲自去干，但你需要一个工具，或者是要一个实体人去帮你干。现在，这个代理人就是 agent，它可能干的事情不仅仅是调大模型，它会有一些高阶的能力：它知道在这个事情的领域内，怎么跟大模型交互，怎么调用外部的一些工具。这就是智能体的概念。它本质上也是大模型，但它是在大模型之上，又封装了一些特定领域的任务规划，或者是一些知识，相当于它是更加贴近于我们的真实用户的。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;我这样理解：以前打电话给携程，需要告诉那个客服，让他帮我订票。现在这个客服可能改成了 LLM，对我来说，他就是智能体。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;孙逸神：&lt;/strong&gt;没错，你可以认为它就是一个控制器，或者说就是一个机器人。它主要做的事情，首先是接受一定的输入，能够去感知一个环境，然后通过这些输入的信息，自己做一定的决策，最后输出一些 action 去改变这个 environment。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h1_4&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;04 被取代了该怎么办？&lt;/h1&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;我问一个问题，如果我们程序员真的被取代了，能有什么出路？彦波刚刚说了会有新的岗位产生，但是新的岗位是什么？我们应该怎么准备应对这一切？&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;杨彦波：&lt;/strong&gt;我们最初发明 AI 是为了干啥？为了解放我们人类，提高我们的效率。那么，大模型一旦它的能力边界越来越大，能做的事情越来越多，那我们更需要关注的就是大模型给我们做的这些事情的质量，输出的东西是不是安全的，是不是符合伦理的，怎么控制大模型更好地输出？像大模型的内容安全这一块，一些新的岗位已经出来了。&lt;/p&gt; 
 &lt;p&gt;还有一种岗位就是，怎么更高级地去使用大模型？像开发 agent，就是一种新的岗位：怎么去开发 agent，让大模型可以为小白所用？我觉得这种岗位会越来越多，而且每个领域它的 agent 可能都不一样，大家的开发方式也逐渐变化了。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;第一，普通程序员哪有能力去开发智能体？那我只能做那种智能体的小助手，审核一下它写的东西。也就是说，现在它是我的助手，但是过了若干年之后，我会变成它的助手。听起来不是很让我兴奋的旅程。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;孙逸神：&lt;/strong&gt;彦波刚刚提到了，大模型替代一些基础能力，是 ok 的。它其实还是你的助手，它在帮你干一些杂活，或者说价值不高、附加值很差的活。作为一个程序员来说，你也不可能完全的就干「接收一个 stc 的输入，然后输出一个程序」这么简单的事情。很多工作越往后，越可能往业务方向去走。那你在不同的领域，你可能还是需要在这个领域的知识里面去做很多的事情。&lt;/p&gt; 
 &lt;p&gt;CS 这一块的话，系统架构也在不断的演进。只要是新的东西，都可以认为大模型是没有很强的能力的。因为它本质上来说，还是在总结既往已有的知识。在已有的知识前提下，它去创造，那它的创造力是很让人捉摸不定的。它也许偶尔灵光乍现能给你一些有用的信息，但是大部分情况下是没有的。&lt;/p&gt; 
 &lt;p&gt;另外，它对物理定律的理解其实就是没有。如果去做一个极其复杂的 BI 场景，或者说我是一个开发 CAE 软件的人，如果连微积分都搞不定，AI 它也一样算不出来。我觉得，每个领域其实都有很多专业知识可以挖的。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;马工：&lt;/strong&gt;明白，如果我是个程序员，我要保证我的职业安全，我就应该让领导尽量用新的语言。每个语言出来了，我就赶紧用。LLM 它还没有读到足够的文本，它就用不了。哈哈。&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更多直播内容，扫码看看回放吧↓↓↓&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;262&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6a8f8be6e4049dabfadcc8e0317e4d0530d.png&quot; width=&quot;264&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;【开源漫谈】&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OSCHINA 视频号畅聊栏目【开源漫谈】，每期一个技术话题，三五位专家围坐，各抒己见，畅聊开源。给大家带来最新的行业前沿、最热门的技术话题、最有趣的开源项目、最犀利的思想交锋。如果你手上也有新点子、好项目，想要跟同行交流分享，欢迎联系我们，讲坛随时开放～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;600&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6fa71678a67f21a639dbc6e841d445779be.png&quot; width=&quot;425&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/6852546/blog/11129786</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/11129786</guid>
            <pubDate>Thu, 16 May 2024 09:19:12 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>国内外大模型「人情味」PK，调教最暖大模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;人工智能领域迎来了期待已久的「智慧涌现」，受到了全社会的关注和热议，但有相当一部分社会群体，除了关注大模型能否提供实用信息， 也期待大模型的回答能温暖心灵、提供关怀，通俗来讲，他们期待大模型亦能有「人情味」的涌现。&lt;/p&gt; 
&lt;p&gt;近日，中国社科院社会学所、腾讯研究院、腾讯 SSV 银发科技实验室、腾讯 SSV 数字生态实验室和中国残联公益组织-腾讯无障碍创新实验室联合发布了调教最暖大模型——通过 prompt 调试并比较国内外大模型「人情味」的小实验。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;717&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0516/165030_UGZu_4700705.png&quot; width=&quot;521&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下是该文件的核心内容概要：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;研究背景与问题&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;社会群体不仅期待大模型提供实用信息，还希望 AI 的回答能够温暖人心、提供关怀。&lt;/li&gt; 
   &lt;li&gt;通过焦点小组讨论，收集了老年人、残疾人和心情低落者对大模型的提问和感受。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;人情味的定义与测量&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;人情味通常指人与人之间的温暖感情和兴味。&lt;/li&gt; 
   &lt;li&gt;提出了一个「人情味」的测量表，从拟人、共情和表达三个层面进行评估。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;实验设计与对象&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;选择了 2 款国外大模型（GPT-4 和 Vicuna）和 3 款国内大模型进行比较。&lt;/li&gt; 
   &lt;li&gt;实验时间为 2023 年 10 月，考虑到大模型更新迭代快，结论仅代表当时的水平。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;实验发现&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;在原始状态下，国内大模型在老年话题相关问答上更具人情味，而国外大模型在心情低落相关问答上表现更佳。&lt;/li&gt; 
   &lt;li&gt;经过 prompt 调试后，GPT-4 的人情味得分提升显著，排名快速上升。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;prompt 的撰写与效果&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;提出了两种类型的 prompt：原则型和答案对型，并通过实验发现它们都能显著提升大模型的人情味。&lt;/li&gt; 
   &lt;li&gt;分析了不同大模型对两种 prompt 的响应情况，发现各有适合的 prompt 类型。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;实验技巧与最佳组合&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;分享了如何有效使用 prompt 来提升大模型的人情味。&lt;/li&gt; 
   &lt;li&gt;展示了在不同话题下，哪些大模型与 prompt 的组合效果最佳。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;实战分析&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;探讨了大模型在学习「人情味」方面的难点，发现拟人和共情能力有所提升，但表达友善度的提升较为有限。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;人类与 AI 的比较&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;通过让 20 位大学生撰写答案并进行人情味测量，发现人类在拟人、共情和表达层面都遥遥领先于 AI 模型。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;结论与倡议&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;强调了「公众科技力」的重要性，鼓励普通人参与到科技创新中，包括弱势群体。&lt;/li&gt; 
   &lt;li&gt;通过实验流程的详细描述，展示了普通人如何通过简单的方法提升大模型的人情味。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;div style=&quot;text-align:left&quot;&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;hr&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;目前，该报告已上传至开源中国 APP，详情可至&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span style=&quot;background-color:#f39c12&quot;&gt;「开源中国 APP - 报告模块」&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;下载&lt;/span&gt;查看。&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;APP 下载地址：&lt;a href=&quot;https://www.oschina.net/app&quot;&gt;https://www.oschina.net/app&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292751</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292751</guid>
            <pubDate>Thu, 16 May 2024 08:56:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>揭露 FileSystem 引起的线上 JVM 内存溢出问题</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;blockquote&gt; 
 &lt;p&gt;作者：来自 vivo 互联网大数据团队-Ye Jidong&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;本文主要介绍了由 FileSystem 类引起的一次线上内存泄漏导致内存溢出的问题分析解决全过程。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;内存泄漏定义（memory leak）&lt;/strong&gt;：一个不再被程序使用的对象或变量还在内存中占有存储空间，JVM 不能正常回收改对象或者变量。一次内存泄漏似乎不会有大的影响，但内存泄漏堆积后的后果就是内存溢出。&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;内存溢出（out of memory）&lt;/strong&gt;：是指在程序运行过程中，由于分配的内存空间不足或使用不当等原因，导致程序无法继续执行的一种错误，此时就会报错 OOM,即所谓的内存溢出。&amp;nbsp;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;一、背景&lt;/h1&gt; 
&lt;p&gt;周末小叶正在王者峡谷乱杀，手机突然收到大量机器 CPU 告警，CPU 使用率超过 80% 就会告警，同时也收到该服务的 Full GC 告警。该服务是小叶项目组非常重要的服务，小叶赶紧放下手中的王者荣耀打开电脑查看问题。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/2b/2b0082e8a176fdedfec750256bac7832.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/e8/e895705bfcf524f6d15b44d6b04c0677.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 1.1 CPU 告警&amp;nbsp; &amp;nbsp;Full GC 告警&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;二、问题发现&lt;/h1&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;2.1 监控查看&lt;/h2&gt; 
&lt;p&gt;因为服务 CPU 和 Full GC 告警了，打开服务监控查看 CPU 监控和 Full GC 监控，可以看到两个监控在同一时间点都有一个异常凸起，可以看到在 CPU 告警的时候，&lt;strong&gt;Full GC&lt;/strong&gt;特别频繁，猜测可能是&lt;strong&gt;Full GC&lt;/strong&gt;导致的 CPU 使用率上升告警。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/25/2576e78250ab9588d8d0eefec3c583cc.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 2.1 CPU 使用率&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/78/78aa413265357b0d5c62a03971b80554.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 2.2 Full GC 次数&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;2.2 内存泄漏&lt;/h2&gt; 
&lt;p&gt;从 Full Gc 频繁可以知道服务的内存回收肯定存在问题，故查看服务的堆内存、老年代内存、年轻代内存的监控，从老年代的常驻内存图可以看到，老年代的常驻内存越来越多，老年代对象无法回收，最后常驻内存全部被占满，可以看出明显的内存泄漏。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/e0/e0d24eda06447077d3621a835f430451.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 2.3 老年代内存&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/bd/bd9bd91ff293f223ff2ee8b6e1c4938d.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 2.4 JVM 内存&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;2.3 内存溢出&lt;/h2&gt; 
&lt;p&gt;从线上的错误日志也可以明确知道服务最后是 OOM 了，所以问题的根本原因是&lt;strong&gt;内存泄漏&lt;/strong&gt;导致&lt;strong&gt;内存溢出 OOM，最后导致服务不可用&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/58/58843a29dd51777c0e80ea04477cf4f9.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 2.5 OOM 日志&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;三、问题排查&lt;/h1&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;3.1 堆内存分析&lt;/h2&gt; 
&lt;p&gt;在明确问题原因为内存泄漏之后，我们第一时间就是 dump 服务内存快照，将 dump 文件导入至 MAT(Eclipse Memory Analyzer) 进行分析。Leak Suspects 进入疑似泄露点视图。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/0f/0faab78d6e705e872c63bdc1e225f06c.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.1 内存对象分析&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/e8/e8bd55da23513e70bfb9aa7ea20df1b5.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.2 对象链路图&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;打开的 dump 文件如图 3.1 所示，2.3G 的堆内存&amp;nbsp; &amp;nbsp;其中&amp;nbsp;&lt;strong&gt;org.apache.hadoop.conf.Configuration 对象占了 1.8G，占了整个堆内存的 78.63%&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;展开该对象的关联对象和路径，可以看到主要占用的对象为&lt;strong&gt;HashMap&lt;/strong&gt;，该 HashMap 由&lt;strong&gt;FileSystem.Cache&lt;/strong&gt;对象持有，再上层就是&lt;strong&gt;FileSystem&lt;/strong&gt;。可以猜想内存泄漏大概率跟 FileSystem 有关。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_8&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;3.2 源码分析&lt;/h2&gt; 
&lt;p&gt;找到内存泄漏的对象，那么接下来一步就是找到内存泄漏的代码。&lt;/p&gt; 
&lt;p&gt;在图 3.3 我们的代码里面可以发现这么一段代码，在每次与 hdfs 交互时，都会与 hdfs 建立一次连接，并创建一个 FileSystem 对象。但在使用完 FileSystem 对象之后并未调用 close() 方法释放连接。&lt;/p&gt; 
&lt;p&gt;但是此处的&lt;strong&gt;Configuration&lt;/strong&gt;实例和&lt;strong&gt;FileSystem&lt;/strong&gt;实例都是局部变量，在该方法执行完成之后，这两个对象都应该是可以被 JVM 回收的，怎么会导致内存泄漏呢？&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/c2/c2d34ddc4d249b83dfbedf44b570aaf1.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.3&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;（1）猜想一：FileSystem 是不是有常量对象？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;接下里我们就查看 FileSystem 类的源码，&lt;strong&gt;FileSystem 的 init 和 get&lt;/strong&gt;方法如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/56/5654dc4846d42ec21d9e530c6d7c3edc.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/33/33edc6cf1257d4a4f4f6c24a34a32333.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/92/92934dff7381df101ce4addea3c700ce.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.4&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;从图 3.4 最后一行代码可以看到，FileSystem 类存在一个 CACHE，通过 disableCacheName 控制是否从该缓存拿对象&lt;/strong&gt;。该参数默认值为 false。也就是&lt;strong&gt;默认情况下会通过 CACHE&lt;/strong&gt;对象返回 FileSystem。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/7c/7cacaa5f175835f66299e35618497c2d.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.5&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;从图 3.5 可以看到 CACHE 为 FileSystem 类的静态对象，也就是说，该 CACHE 对象会一直存在不会被回收，确实存在常量对象 CACHE，猜想一得到验证。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;那接下来看一下 CACHE.get 方法：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/a5/a594834e640d4aa71332b620f27fc540.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;从这段代码中可以看出：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;在 Cache 类内部维护了一个 Map，该 Map 用于缓存已经连接好的 FileSystem 对象，Map 的 Key 为 Cache.Key 对象。每次都会通过 Cache.Key 获取 FileSystem，如果未获取到，才会继续创建的流程。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 Cache 类内部维护了一个 Set（toAutoClose），该 Set 用于存放需自动关闭的连接。在客户端关闭时会自动关闭该集合中的连接。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;每次创建的 FileSystem 都会以 Cache.Key 为 key，FileSystem 为 Value 存储在 Cache 类中的 Map 中。那至于在缓存时候是否对于相同 hdfs URI 是否会存在多次缓存，就需要查看一下 Cache.Key 的 hashCode 方法了。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Cache.Key 的 hashCode 方法如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/89/892a6ce020c303fc4ff3e99905f5adb6.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;schema 和 authority 变量为 String 类型，如果在相同的 URI 情况下，其 hashCode 是一致。而 unique 该参数的值每次都是 0。那么 Cache.Key 的 hashCode 就由&lt;strong&gt;ugi.hashCode()&lt;/strong&gt;决定。&lt;/p&gt; 
&lt;p&gt;由以上代码分析可以梳理得到：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;业务代码与 hdfs 交互过程中，每次交互都会新建一个&lt;strong&gt;FileSystem&lt;/strong&gt;连接，结束时并未关闭 FileSystem 连接。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;FileSystem 内置了一个 static 的&lt;strong&gt;Cache&lt;/strong&gt;，该 Cache 内部有一个 Map，用于缓存已经创建连接的 FileSystem。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;参数 fs.hdfs.impl.disable.cache，用于控制 FileSystem 是否需要缓存，默认情况下是 false，即缓存。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cache 中的 Map，Key 为 Cache.Key 类，该类通过&lt;strong&gt;schem，authority，ugi，unique&lt;/strong&gt;&amp;nbsp;4 个参数来确定一个 Key，如上 Cache.Key 的 hashCode 方法。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;（2）猜想二：FileSystem 同样 hdfs URI 是不是多次缓存？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;FileSystem.Cache.Key 构造函数如下所示：ugi 由 UserGroupInformation 的 getCurrentUser() 决定。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/bc/bc22a460aa0d0f5cb0454868c291b068.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;继续看 UserGroupInformation 的 getCurrentUser() 方法，如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/d5/d52f18b6f820f5e4822019c7de96a8da.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;其中比较关键的就是是否能通过 AccessControlContext 获取到 Subject 对象。在本例中通过 get(final URI uri, final Configuration conf,final String user) 获取时候，在 debug 调试时，发现此处每次都能获取到一个新的 Subject 对象。也就是说相同的 hdfs 路径每次都会缓存一个&lt;strong&gt;FileSystem 对象&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;猜想二得到验证：同一个 hdfs URI 会进行多次缓存，导致缓存快速膨胀，并且缓存没有设置过期时间和淘汰策略，最终导致内存溢出。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;（3）FileSystem 为什么会重复缓存？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;那为什么会每次都获取到一个新的 Subject 对象呢，我们接着往下看一下获取 AccessControlContext 的代码，如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/9b/9bc104e4e35c036bf4dd6a44f64765b9.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;其中比较关键的是 getStackAccessControlContext 方法，该方法调用了 Native 方法，如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/04/04f8c4c46a8a23cc221e97c97d12e3fe.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;该方法会返回当前堆栈的保护域权限的 AccessControlContext 对象。&lt;/p&gt; 
&lt;p&gt;我们通过图 3.6&amp;nbsp;&lt;strong&gt;get(final URI uri, final Configuration conf,final String user)&amp;nbsp;&lt;/strong&gt;方法可以看到，如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;先通过&lt;strong&gt;UserGroupInformation.getBestUGI&lt;/strong&gt;方法获取了一个&lt;strong&gt;UserGroupInformation&lt;/strong&gt;对象。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;然后在通过&lt;strong&gt;UserGroupInformation&lt;/strong&gt;的 doAs 方法去调用了 get(URI uri, Configuration conf) 方法&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;图 3.7&amp;nbsp;&lt;strong&gt;UserGroupInformation.getBestUGI&lt;/strong&gt;方法的实现，此处关注一下传入的两个参数&lt;strong&gt;ticketCachePath，user&lt;/strong&gt;。ticketCachePath 是获取配置 hadoop.security.kerberos.ticket.cache.path 的值，在本例中该参数未配置，因此 ticketCachePath 为空。user 参数是本例中传入的用户名。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ticketCachePath 为空，user 不为空，因此最终会执行图 3.7 的&lt;strong&gt;createRemoteUser&lt;/strong&gt;方法&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/6c/6c0cd3e52a1694215a8c436c107471cd.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.6&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/3e/3e7e619d5e349f6e094152c17bae18aa.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.7&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/6f/6f91e6a125ce4affaf5ec7f5cce99759.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.8&lt;/p&gt; 
&lt;p&gt;从图 3.8 标红的代码可以看到在 createRemoteUser 方法中，创建了一个新的&lt;strong&gt;Subject 对象&lt;/strong&gt;，并通过该对象创建了&lt;strong&gt;UserGroupInformation&lt;/strong&gt;对象。至此，UserGroupInformation.getBestUGI 方法执行完成。&lt;/p&gt; 
&lt;p&gt;接下来看一下&lt;strong&gt;UserGroupInformation.doAs&lt;/strong&gt;方法（FileSystem.get(final URI uri, final Configuration conf, final String user) 执行的最后一个方法），如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/bc/bc7595ef680cb0c21202c82d6c9b151e.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;然后在调用 Subject.doAs 方法，如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/67/670aebe286d14ca8a6c5c27343e109e8.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;最后在调用 AccessController.doPrivileged 方法，如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/6c/6c75f145afff387228ef3e11bb4f9c80.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;该方法为 Native 方法，该方法会使用指定的 AccessControlContext 来执行 PrivilegedExceptionAction，也就是调用该实现的 run 方法。即 FileSystem.get(uri, conf) 方法。&lt;/p&gt; 
&lt;p&gt;至此，就能够解释在本例中，通过 get(final URI uri, final Configuration conf,final String user) 方法创建 FileSystem 时，每次存入 FileSystem 的 Cache 中的 Cache.key 的 hashCode 都不一致的情况了。&lt;/p&gt; 
&lt;p&gt;小结一下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;在通过&lt;strong&gt;get(final URI uri, final Configuration conf,final String user)&lt;/strong&gt;方法创建&lt;strong&gt;FileSystem&lt;/strong&gt;时，由于每次都会创建新的&lt;strong&gt;UserGroupInformation&lt;/strong&gt;和&lt;strong&gt;Subject&lt;/strong&gt;对象。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&amp;nbsp;在 Cache.Key 对象计算&lt;strong&gt;hashCode&lt;/strong&gt;时，影响计算结果的是调用了&lt;strong&gt;UserGroupInformation.hashCode&lt;/strong&gt;方法。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;UserGroupInformation.hashCode 方法，计算为：&lt;strong&gt;System.identityHashCode(subject)&lt;/strong&gt;。即如果 Subject 是同一个对象则返回相同的 hashCode，由于在本例中每次都不一样，因此计算的 hashCode 不一致。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;综上，就导致每次计算 Cache.key 的 hashCode 不一致，便会重复写入 FileSystem 的 Cache。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;（4）FileSystem 的正确用法&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;从上述分析，既然 FileSystem.Cache 都没有起到应起的作用，那为什么要设计这个 Cache 呢。其实只是我们的用法没用对而已。&lt;/p&gt; 
&lt;p&gt;在 FileSystem 中，有两个重载的 get 方法：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public static FileSystem get(final URI uri, final Configuration conf, final String user)
public static FileSystem get(URI uri, Configuration conf)&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/74/744c7aec010d758472711dbfbe2b643b.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;我们可以看到 FileSystem get(final URI uri, final Configuration conf, final String user) 方法最后是调用 FileSystem get(URI uri, Configuration conf) 方法的，区别在于 FileSystem get(URI uri, Configuration conf) 方法于缺少也就是缺少每次新建 Subject 的的操作。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/3f/3ffe1d7d6e9f56c3a7f27fcdbb376ab3.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.9&lt;/p&gt; 
&lt;p&gt;没有新建 Subject 的的操作，那么图 3.9 中 Subject 为 null，会走最后的 getLoginUser 方法获取 loginUser。而 loginUser 是静态变量，所以一旦该 loginUser 对象初始化成功，那么后续会一直使用该对象。UserGroupInformation.hashCode 方法将会返回一样的 hashCode 值。也就是能成功的使用到缓存在 FileSystem 的 Cache。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/f2/f2c42b2b3a0df1dee4ae63076c855a5c.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/f8/f8e5476b1ce66635909c8db2b7724071.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;图 3.10&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_9&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;四、解决方案&lt;/h1&gt; 
&lt;p&gt;经过前面的介绍，如果要解决 FileSystem 存在的内存泄露问题，我们有以下两种方式：&lt;/p&gt; 
&lt;p&gt;（1）使用&lt;strong&gt;public static FileSystem get(URI uri, Configuration conf)：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;该方法是能够使用到 FileSystem 的 Cache 的，也就是说对于同一个 hdfs URI 是只会有一个 FileSystem 连接对象的。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 System.setProperty(&quot;HADOOP_USER_NAME&quot;, &quot;hive&quot;) 方式设置访问用户。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;默认情况下 fs.automatic.close=true，即所有的连接都会通过 ShutdownHook 关闭。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（2）使用&lt;strong&gt;public static FileSystem get(final URI uri, final Configuration conf, final String user)：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;该方法如上分析，会导致 FileSystem 的 Cache 失效，且每次都会添加至 Cache 的 Map 中，导致不能被回收。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在使用时，一种方案是：保证对于同一个 hdfs URI 只会存在一个 FileSystem 连接对象。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;另一种方案是：在每次使用完 FileSystem 之后，调用 close 方法，该方法会将 Cache 中的 FileSystem 删除。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/d8/d843efc1b8d7369879cbac9ec18e348f.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/0d/0d76058d36766b6b0f08d049294518fb.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/ac/ac3143a16ff1a4b1e175f2f269bf3f3f.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;基于我们已有的历史代码最小改动的前提下，我们选择了第二种修改方式。在我们每次使用完 FileSystem 之后都关闭 FileSystem 对象。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_10&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;五、优化结果&lt;/h1&gt; 
&lt;p&gt;对代码进行修复发布上线之后，如下图一所示，可以看到修复之后老年代的内存可以正常回收了，至此问题终于全部解决。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/61/61a0b7015517cb22651c1e1f241a3131.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;图片&quot; src=&quot;https://static001.geekbang.org/infoq/a5/a5d7620e065d0b41dde34e95cbfc2c41.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_11&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;六、总结&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;内存溢出&lt;/strong&gt;是 Java 开发中最常见的问题之一，其原因通常是由于&lt;strong&gt;内存泄漏&lt;/strong&gt;导致内存无法正常回收引起的。在我们这篇文章中，详细介绍一次完整的线上内存溢出的处理过程。&lt;/p&gt; 
&lt;p&gt;总结一下我们在碰到内存溢出时候的常用解决思路：&lt;/p&gt; 
&lt;p&gt;（1）&lt;strong&gt;生成堆内存文件&lt;/strong&gt;：&lt;/p&gt; 
&lt;p&gt;在服务启动命令添加&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt; -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/base&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;让服务在发生 oom 时自动 dump 内存文件，或者使用 jamp 命令 dump 内存文件。&lt;/p&gt; 
&lt;p&gt;（2）&lt;strong&gt;堆内存分析&lt;/strong&gt;：使用内存分析工具帮助我们更深入地分析内存溢出问题，并找到导致内存溢出的原因。以下是几个常用的内存分析工具：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Eclipse Memory Analyzer&lt;/strong&gt;：一款开源的 Java 内存分析工具，可以帮助我们快速定位内存泄漏问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;VisualVM Memory Analyzer&lt;/strong&gt;：一个基于图形化界面的工具，可以帮助我们分析 java 应用程序的内存使用情况。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（3）根据堆内存分析定位到具体的内存泄漏代码。&lt;/p&gt; 
&lt;p&gt;（4）修改内存泄漏代码，重新发布验证。&lt;/p&gt; 
&lt;p&gt;内存泄漏是内存溢出的常见原因，但不是唯一原因。常见导致内存溢出问题的原因还是有：&lt;strong&gt;超大对象、堆内存分配太小、死循环调用&lt;/strong&gt;等等都会导致内存溢出问题。&lt;/p&gt; 
&lt;p&gt;在遇到内存溢出问题时，我们需要多方面思考，从不同角度分析问题。通过我们上述提到的方法和工具以及各种监控帮助我们快速定位和解决问题，提高我们系统的稳定性和可用性。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/vivotech/blog/11102919</link>
            <guid isPermaLink="false">https://my.oschina.net/vivotech/blog/11102919</guid>
            <pubDate>Thu, 16 May 2024 08:48:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>OSI 即将给出开源 AI 的定义</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;考虑到目前有许多组织都在声称他们的 AI 为「开源的」，但事实上还没有公认的方法来验证 AI 的开放性。因此，Open Source Initiative (OSI) 正在着手推动全球多利益相关者一起来定义「Open Source AI」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OSI &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.org%2Fblog%2Fthe-open-source-ai-definition-gets-closer-to-reality-with-a-global-workshop-series&quot; target=&quot;_blank&quot;&gt;介绍称&lt;/a&gt;，该定义将提供一个框架，帮助 AI 开发人员和用户确定 AI 系统是否开源，这意味着它可以在允许不受限制的使用、研究、修改和共享权利的条款下使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「正如 Open Source Definition 是全球公认的开源软件标准一样，Open Source AI Definition 也将成为 AI 系统及其组件的开放性标准。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4ff0162e5ddf1ffb5c6816a92b9d86bac19.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OSI 小组自 2022 年以来就启动了一项深入的全球倡议，让主要参与者（包括企业、学术界、法律界以及代表更广泛民间社会的组织和非营利组织）参与进来，共同起草 Open Source AI Definition。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;经过了几个月的会议及&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.org%2Fdeepdive%2Fdrafts&quot; target=&quot;_blank&quot;&gt;草案版本&lt;/a&gt;和审查。 OSI 表示，他们已经接近 Open Source AI Definition 的稳定版本；在接下来的几个月里，他们计划在北美、欧洲、非洲、亚太地区和拉丁美洲举办研讨会路演，以征求对草案的进一步意见。目标是能够在 10 月于北卡罗来纳州罗利举行的 All Things Open 上提出该定义的稳定版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OSI 执行董事 Stefano Maffulli 表示：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「AI 不同于常规软件，它迫使所有利益相关者重新审视开源原则如何应用于该领域。OSI 相信每个人都应该保持对技术的代理和控制。我们还认识到，当明确的定义促进透明度、协作和无需许可的创新时，市场就会蓬勃发展。在花了近两年的时间收集来自世界各地的声音以确定适合 AI 系统的开源原则之后，我们正在着手进行全球路演，以完善和验证 Open Source AI Definition 的候选版本。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292744/osi-open-source-ai-definition</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292744/osi-open-source-ai-definition</guid>
            <pubDate>Thu, 16 May 2024 08:25:26 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>记 Codes 研发管理平台——瀑布与敏捷模式融合的创新实现</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;传统的项目管理理念中，瀑布和敏捷两种项目模式泾渭分明，市面上所有的研发管理软件，也是基于传统的理念，只能 2 选 1，非常死板。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;2 选 1 的模式一点都不与时俱进，为什么这样说呢？受敏捷思想的影响，在实际项目实践中，&lt;span&gt;不是完完全全按瀑布来，而&lt;/span&gt;是采用「小」瀑布模式，这里的「小」，就是在阶段内执行不同的计划（类似于一个阶段下有多次迭代），每个计划都有可验证的产出物，以防「大&quot;瀑布那种，最后才发现问题，修复的代价太大&amp;nbsp;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;Codes 产品团队基于以上众所周知的认知，不走寻常路，不死板的限定在理论中，从实际出发，采用了二者融合实现。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;1、需求分析过程如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 功能上体现为，项目支持在敏捷视图和瀑布视图中随意切换。底层的逻辑是，不管哪种模式 Codes 中底层数据是一套，只是敏捷&lt;span&gt;模&lt;/span&gt;和瀑布模式时，主要差别是「主线」不一样，敏捷以迭代为主线，&lt;span&gt;瀑布&lt;/span&gt;以阶段为主线。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; 2、功能实现，设置项目缺省项目模式视图：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;在建项目时，可设置缺省视图是敏捷还是瀑布，如果选择了&lt;span&gt;瀑&lt;/span&gt;&lt;span&gt;布且当前项目没有维护阶段，且需要选择一个阶段模板以自动创建阶段&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1005&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7f9aa5ece963e98fc4c9fc0bdfe40585faf.png&quot; width=&quot;1375&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;3、功能实现，在&lt;/strong&gt;&lt;strong&gt;项目中敏捷视图和瀑布视图可随意切换，&lt;/strong&gt;且看下面细细道来。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;3.1&amp;nbsp;各个&lt;/strong&gt;&lt;strong&gt;阶段概况了如指掌&lt;/strong&gt;&lt;strong&gt;，&lt;/strong&gt;如工时，进度，任务等&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1200&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8aea9d8f8cd00a005d22ba906be8f5f11a9.png&quot; width=&quot;2228&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;3.2 敏捷与瀑布融合 ，功能上就是阶段和计划（迭代）的融合&lt;/strong&gt;&lt;span&gt;&amp;nbsp;。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;左边展开阶段，显示其下计划，一对多的关系；右边显示计划中的工作事项&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1175&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2d929d9a4a977234ddf79002e290a9a33ac.png&quot; width=&quot;2225&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;3.3 敏捷与瀑布，左右开弓，想切就切&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;&amp;nbsp;前两节瀑布视图以阶段为主线的显示，下图切换为敏捷视图下以迭代为主线的显示&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1198&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2e8bddd07eb240eaf3e49ff1a93ff36b501.png&quot; width=&quot;2215&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.4 敏捷与瀑布融合 ，宏观微观兼顾&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;。&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;在仪表盘中有&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;PMO 关注的宏观层面的&lt;/span&gt;&lt;strong&gt;里程碑，&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;也有细粒度的&lt;/span&gt;&lt;strong&gt;迭代数据&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;还有更细粒度的&lt;/span&gt;&lt;strong&gt;各项事项的汇总。&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;且能通过阶段下的计划层层推算阶段的进度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1196&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bc42ead1b9ee4c49fd1288545c2700232ef.png&quot; width=&quot;2225&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;strong&gt;最后打个总结：&lt;/strong&gt;Codes 这敏捷和瀑布的融合模式，是不是很爽，解决了只能 2 选 1 的问题，关键确实实用，与时俱进；创新不是为了玩新奇，是为了解决问题，下一次我们来聊聊 Codes 生成式全局看板，一板走天下，也是很酷的功能。&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;strong&gt;匠心打磨，持续创新是 Codes 的产品基因&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292740</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292740</guid>
            <pubDate>Thu, 16 May 2024 08:11:26 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>周鸿祎：GPT-4o 让闭源往前冲了一截，但我依然对开源有信心</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;转自周鸿祎&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1708942053%2FOer2rwSRk&quot; target=&quot;_blank&quot;&gt;微博&lt;/a&gt;：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;前一段有开源和闭源之争，GPT-4o 又让闭源系统的能力往前冲了一截，但是我依然对开源世界有信心。&lt;/p&gt; 
 &lt;p&gt;坦率的说，可能我们又落后了，但这个落后我觉得也就不到一年，我还是坚持我的观点，中国发展大模型应该坚持两条腿走路，一条路是跟着 OpenAI，但是用开源的思路，另一条路就是继续走应用之路，走企业场景化的专业大模型之路。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-596afef2a56eb030e058318a809bccdd67f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;延伸阅读&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/288712&quot; target=&quot;news&quot;&gt;周鸿祎：闭源比开源好？Llama 3 已经给出最好答案&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/285345&quot; target=&quot;news&quot;&gt;周鸿祎自称「开源信徒」&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292724</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292724</guid>
            <pubDate>Thu, 16 May 2024 06:59:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>你的产品设置 14 天免费试用期，根本没意义！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;blockquote&gt; 
 &lt;p&gt;原文 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkeygen.sh%2Fblog%2Fyour-14-day-free-trial-aint-gonna-cut-it%2F&quot; target=&quot;_blank&quot;&gt;Your 14-Day Free Trial Ain&#39;t Gonna Cut It&lt;/a&gt;。作者 Zeke Gabrielse，Keygen 创始人。 Keygen 是一个开源的软件许可和分发 API。 &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a0be5e1673420cf80235a8ae9bae4ba6694.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;我已经开发 Keygen 快 8 年了（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeygen-sh%2Fkeygen-api%2Fcommit%2F84e8ccc35ea4accaf45d8bf529ba554650465644&quot; target=&quot;_blank&quot;&gt;准确点说&lt;/a&gt;，是 2016.5.22 开始的 ）。毫不夸张地说，这期间我学到了许多东西。其中一个很重要的是，很多创始人，包括我自己，都多少会忽略关键商业指标。今天我们就来讨论一下指标**「转化所需时间」（TTC, Time To Convert）**。&lt;/p&gt; 
&lt;p&gt;我刚创立 Keygen 时，就像大多数人一样，设定了 14 天的免费试用期。但很快发现，这么短的时间内，指望潜在客户完全整合软件许可 API 到他们的系统不太可能。&lt;/p&gt; 
&lt;p&gt;于是我开始提供试用期延长服务，这一点在定价页面、初始和后续邮件中都有提及。目的是让潜在客户明白，他们可以有更多时间来测试产品。&lt;/p&gt; 
&lt;p&gt;经验告诉我，绝大多数转化为付费客户的用户都曾请求过延长试用期。比起那些没有请求延长的人，请求延长的客户的转化率更高。&lt;/p&gt; 
&lt;p&gt;这是为什么呢？&lt;/p&gt; 
&lt;p&gt;每次延长试用期，我都会要求潜在客户在试用期延长前提供信用卡信息。这样就无缝从无需信用卡的免费试用转变为需要信用卡的免费试用，无疑提升了客户的转化意愿。&lt;/p&gt; 
&lt;p&gt;你大概会奇怪，这和「转化所需时间」有什么联系？&lt;/p&gt; 
&lt;p&gt;原因是：&lt;/p&gt; 
&lt;p&gt;意识到延长免费试用期能显著提升转化率之后，我会亲自给试用期即将结束的潜在客户发邮件，邀请他们延长试用期。这是个大大的成功。&lt;/p&gt; 
&lt;p&gt;以至于我甚至不再要求客户在延长试用期前提交信用卡信息 - 主要是因为我懒得处理这些繁琐事务。&lt;/p&gt; 
&lt;p&gt;出乎意料的是，这种做法并没有影响到转化率（这也推倒了之前对高转化率的假设）。&lt;/p&gt; 
&lt;p&gt;接下来的几年里，我就一直手动延长试用期。&lt;/p&gt; 
&lt;p&gt;后来，我对 Baremetrics 提供的有限度量&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkeygen.sh%2Fblog%2Fhow-i-replaced-baremetrics-and-chartmogul-with-rake%2F&quot; target=&quot;_blank&quot;&gt;感到不满&lt;/a&gt;，所以找了 Rake 当替代品。随着我们在 Stripe 上的客户数量增加，Rake 没能很好地扩展，最终还是停止使用了。但是，通过这一过程，我了解到了我的转化所需时间，这是许多创始人（包括当时的我）都未曾了解的关键商业指标。&lt;/p&gt; 
&lt;p&gt;那么，什么是转化所需时间？它指的是从客户注册到实际付费的时间。简单明了！&lt;/p&gt; 
&lt;p&gt;为什么这是一个重要的指标？&lt;/p&gt; 
&lt;p&gt;因为设置的 14 天免费试用期并不足以让客户真正体验到 Keygen 的价值，并决定「这是否值得我投资？」&lt;/p&gt; 
&lt;p&gt;他们只有 14 天来做这个决定。&lt;/p&gt; 
&lt;p&gt;但我 41 天的 TTC 是 50%。130 天，90%；198 天，95%；290 天，99%。 如果想用 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstripe.com%2Fen-hk%2Fsigma&quot; target=&quot;_blank&quot;&gt;Stripe Sigma&lt;/a&gt; 来计算你的，可以用这个查询：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;SELECT
  format(&#39;%d days&#39;, approx_percentile(time_to_convert, 0.5))  AS time_to_convert_p50,
  format(&#39;%d days&#39;, approx_percentile(time_to_convert, 0.9))  AS time_to_convert_p90,
  format(&#39;%d days&#39;, approx_percentile(time_to_convert, 0.95)) AS time_to_convert_p95,
  format(&#39;%d days&#39;, approx_percentile(time_to_convert, 0.99)) AS time_to_convert_p99
FROM (
  SELECT
    DATE_DIFF(&#39;day&#39;, MIN(customers.created), MIN(charges.created)) AS time_to_convert,
    customers.id
  FROM
    customers
    INNER JOIN charges ON charges.customer_id = customers.id
  WHERE
    customers.created BETWEEN DATE_ADD(&#39;year&#39;, -1, CURRENT_DATE) AND CURRENT_DATE
    AND charges.paid = TRUE
    AND charges.amount &amp;gt; 0
  GROUP BY
    customers.id
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如上所述，我其实是在要求用户在 14 天内完成一系列概念验证，包括阅读文档、完成上手、规划并执行&lt;strong&gt;概念验证（PoC, Proof of Concept）&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;然而，实际的中位转化时间却是 41 天！&lt;/p&gt; 
&lt;p&gt;显然，14 天远远不够。&lt;/p&gt; 
&lt;p&gt;在公司还有其他项目压力的同时，从发现到集成（或至少得到一个概念验证 PoC），要在 14 天内完全理解并集成一个新的 API 几乎是不可能的。&lt;/p&gt; 
&lt;p&gt;我实际上是在让潜在客户等待：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;等待他们准备好开始理解 API；&lt;/li&gt; 
 &lt;li&gt;等待他们准备好接受培训；&lt;/li&gt; 
 &lt;li&gt;等待他们规划好概念验证 PoC；&lt;/li&gt; 
 &lt;li&gt;等待开发人员有空闲时间；&lt;/li&gt; 
 &lt;li&gt;不停等待。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;实际上，人们会因为太忙而错过了 14 天的期限，发现自己还没准备好，那就先不搞了，等之后准备好了再说，却往往一去不复返了。&lt;/p&gt; 
&lt;p&gt;因此，我决定消除这个障碍。我的目标是，一旦潜在客户认为 Keygen 可以是他们的解决方案，就立刻抓住这些他们。这样，我就可以开始培养这些潜在的客户。&lt;/p&gt; 
&lt;p&gt;接下来，我做了每一个创业者都会告诉你不要做的事：&lt;/p&gt; 
&lt;p&gt;引入无限期的试用期，也就是可以免费使用。&lt;/p&gt; 
&lt;p&gt;结果如何呢？&lt;/p&gt; 
&lt;p&gt;正如预期的那样，总体注册数量增加了。而且，通过对只使用免费档的用户进行分析，我发现付费注册数量也有所增加，转化率保持稳定，而且不再需要进行手动操作。我认为这是一个双赢的结果。&lt;/p&gt; 
&lt;p&gt;所以，你的转化所需时间是多少？⏳&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;💡 更多资讯，请关注 Bytebase 公号：Bytebase&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/6148470/blog/11106178</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11106178</guid>
            <pubDate>Thu, 16 May 2024 06:31:49 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>源创会深圳站，526 聊聊大模型</title>
            <description></description>
            <link>https://www.oschina.net/event/2332004</link>
            <guid isPermaLink="false">https://www.oschina.net/event/2332004</guid>
            <pubDate>Thu, 16 May 2024 05:49:13 GMT</pubDate>
        </item>
        <item>
            <title>百度：闭源大模型+公有云已成为全球 AI 市场主流趋势</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;5 月 15 日，记者从百度获悉，文心大模型日均处理 Tokens 文本已达 2490 亿。&lt;/p&gt; 
&lt;p&gt;百度表示，这几天，国内外多家厂商相继发布大模型最新进展和相关应用，百度很高兴地看到，「闭源大模型+公有云」已经成为全球 AI 市场的主流趋势。&lt;/p&gt; 
&lt;p&gt;「闭源大模型+公有云」能实现比开源大模型性能更好、成本更低的综合效果，并以此促进 AI 应用生态繁荣。&lt;/p&gt; 
&lt;p&gt;当前，文心大模型日均处理 Tokens 文本已达 2490 亿。使用大模型不应该只看价格，更要看综合效果，只有让 AI 应用效果更好、响应速度更快、分发渠道更广，才能让人们切实感受 AI 为社会生产带来的便利。&lt;/p&gt; 
&lt;p&gt;业内分析人士表示，百度正在努力推动以智能体为代表的 AI 应用生态发展，智能体分发量已达到日均数百万次。随着更多开发者和伙伴的加入，「闭源大模型+公有云」的优势将一步凸显，「人人都是开发者」的时代已经到来。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292693</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292693</guid>
            <pubDate>Thu, 16 May 2024 04:16:48 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Vue3 开发新范式，不用`ref/reactive`，不用`ref.value`</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;什么是 Cabloy-Front？&lt;/h2&gt; 
&lt;p&gt;Cabloy-Front 是一款支持 IOC 容器的 Vue3 框架。不用&lt;code&gt;ref/reactive&lt;/code&gt;，不用&lt;code&gt;ref.value&lt;/code&gt;，不用&lt;code&gt;pinia&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;与 UI 库的配合&lt;/h2&gt; 
&lt;p&gt;Cabloy-Front 可以搭配任何 UI 库使用，并且内置了几款 UI 库的项目模版，便于开箱即用，包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;antdv&lt;/li&gt; 
 &lt;li&gt;element-plus&lt;/li&gt; 
 &lt;li&gt;quasar&lt;/li&gt; 
 &lt;li&gt;vuetify&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;p&gt;Cabloy-Front 为 Vue3 引入了以下鲜明特征：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;不用 ref/reactive&lt;/code&gt;：因为在大多数场景下，不需要使用 ref 和 reactive&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;不用 ref.value&lt;/code&gt;：因为在 Cabloy-Front 中定义响应式变量更加直观，不再需要 ref 语义&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;不用 pinia&lt;/code&gt;：因为 Cabloy-Front 提供了 IOC 容器，可以更加灵活的定义和使用全局对象&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;动图演示&lt;/h2&gt; 
&lt;p&gt;&lt;img alt=&quot;No ref/reactive&quot; src=&quot;https://cabloy-1258265067.cos.ap-shanghai.myqcloud.com/image/state-no-ref-reactive.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;演示：不用&lt;code&gt;ref/reactive&lt;/code&gt;，不用&lt;code&gt;ref.value&lt;/code&gt;&lt;/h2&gt; 
&lt;h3&gt;1. 定义响应式状态&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;@Local()
export class MotherPageCounter extends BeanMotherPageBase {
  counter: number = 0;

  inrement() {
    this.counter++;
  }

  decrement() {
    this.counter--;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. 使用响应式状态&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;@Local()
export class RenderPageCounter extends BeanRenderBase {
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;div&amp;gt;counter(ref): {this.counter}&amp;lt;/div&amp;gt;
        &amp;lt;button onClick={() =&amp;gt; this.inrement()}&amp;gt;Inrement&amp;lt;/button&amp;gt;
        &amp;lt;button onClick={() =&amp;gt; this.decrement()}&amp;gt;Decrement&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;演示：依赖注入&lt;/h2&gt; 
&lt;h3&gt;1. 逻辑抽离&lt;/h3&gt; 
&lt;p&gt;将&lt;code&gt;counter&lt;/code&gt;逻辑抽离出来，创建一个&lt;code&gt;Counter&lt;/code&gt; Bean&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;@Local()
export class LocalCounter extends BeanBase {
  counter: number = 0;

  inrement() {
    this.counter++;
  }

  decrement() {
    this.counter--;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. 在组件中注入并使用&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;@Local()
export class MotherPageCounter extends BeanMotherPageBase {
  @Use()
  $$counter: LocalCounter;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-typescript&quot;&gt;@Local()
export class RenderPageCounter extends BeanRenderBase {
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;div&amp;gt;counter(ref): {this.$$counter.counter}&amp;lt;/div&amp;gt;
        &amp;lt;button onClick={() =&amp;gt; this.$$counter.inrement()}&amp;gt;Inrement&amp;lt;/button&amp;gt;
        &amp;lt;button onClick={() =&amp;gt; this.$$counter.decrement()}&amp;gt;Decrement&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;框架已开源： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcabloy%2Fcabloy-front&quot; target=&quot;_blank&quot;&gt;https://github.com/cabloy/cabloy-front&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292691/vue3-cabloy-front</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292691/vue3-cabloy-front</guid>
            <pubDate>Thu, 16 May 2024 03:57:11 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Google I/O 2024：开启新一代的 I/O</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;img height=&quot;211&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b9f498afcecd023c726e721427f774e72b5.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;作者：Sundar Pichai&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Google 和 Alphabet CEO&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;编者按：以下是 Sundar Pichai 在 2024 年 I/O 大会上讲话编辑稿，经过调整以包含更多在舞台上宣布的内容。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Google 已全面进入 Gemini 时代。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在深入探讨之前，我想先回顾一下我们所处的时刻。十多年来，我们一直在 AI 领域进行投入，并在各个层面进行创新：研究、产品、基础设施，今天我们将对此进行全面讨论。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;尽管如此，我们仍处于 AI 平台转型的初期。我们看到了为创作者、开发者、初创公司以及每一个人所带来的巨大机遇。帮助推动这些机遇正是我们 Gemini 时代的意义所在。让我们开始吧。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img height=&quot;285&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0516/115742_dZzc_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;完整视频可查看原文链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FG9MAuRFppOowAyUeCu2_UQ&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/G9MAuRFppOowAyUeCu2_UQ&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;Gemini 时代&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;一年前，在 I/O 大会上，我们首次分享了 Gemini 的计划：一个从一开始就构建为原生多模态的前沿模型，能够跨文本、图像、视频、代码等多种数据类型进行推理。它标志着将任意输入转换成任意输出的重要一步——新一代的「I/O」。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;自那以来，我们推出了首批 Gemini 模型，这是我们迄今为止功能最强大的模型。它们在每个多模态基准测试中都拥有卓越的表现。两个月后，我们又推出了 Gemini 1.5 Pro，它在处理长上下文方面取得了重大突破，能够稳定地在生产环境中运行 100 万个令牌（Token），比目前任何其他大规模基础模型都要多。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们希望每个人都能从 Gemini 的功能中受益。因此，我们立即行动起来，与大家分享这些进展。目前，超过 150 万的开发者在使用我们各种工具中的 Gemini 模型。你们使用它来调试代码、获得新的见解并打造下一代的 AI 应用。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;产品进展&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;今天，我们所有拥有 20 亿用户的产品都在使用 Gemini。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们还推出了全新的体验，包括在移动设备上，人们现在可以通过 Android 和 iOS 上的应用程序直接与 Gemini 互动， Gemini Advanced 让用户还可以使用我们功能最强的模型。仅在三个月的时间里，已有超过一百万人注册试用，并且势头依然强劲。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;在搜索中扩展 AI Overviews&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Gemini 带来的最令人兴奋的变革之一是在 Google 搜索中。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在过去的一年中，作为我们生成式搜索体验（Search Generative Experience）的一部分，我们已经回答了数十亿个搜索查询。人们正在以全新的方式使用搜索，提出全新类型的问题，作出更长、更复杂的查询，甚至是通过照片进行搜索，并获得网络上的最佳信息。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们也在不断将 Gemini 的突破性功能以强大的方式整合到我们的产品中。今天，我们将展示搜索、Photos、Workspace 和 Android 等产品中的实例。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;516&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5e49e3a59494e9480dac30d058a026c61c9.gif&quot; width=&quot;248&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们一直在 Labs 之外对这种体验进行测试。我们倍受鼓舞地看到，不仅搜索的使用量有所增加，用户满意度也得到了提升。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我很高兴宣布，我们将于本周在美国向所有用户推出这一全新改版的 AI Overviews 体验。我们很快也将把这项体验推广到更多国家。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在搜索领域正发生着诸多创新。得益于 Gemini，我们能够打造更为强大的搜索体验，包括在我们的产品之中。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;介绍 Ask Photos&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Google Photos 就是一个例子，在大约九年前，我们发布了这款产品，自那以来，人们一直用它来整理最珍贵的回忆。如今，每天上传的照片和视频数量超过 60 亿。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;人们喜欢使用 Photos 来搜索他们生活中的点滴。借助 Gemini，我们让这一切变得更加简单。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;假设你在停车场缴费时，却想不起自己的车牌号。以往，你需要在 Photos 中搜索关键词，然后翻找多年积累的照片来寻找车牌。但现在，你只需直接询问 Photos 即可。它能够识别出经常出现的车辆，通过多方信息交叉验证判断出哪一辆是你的，并提供车牌号码。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Ask Photos 还能够帮助你以更深入的方式重温回忆。例如，你可能正在回味女儿 Lucia 成长的早期重要时刻。现在，你可以直接问 Photos：「Lucia 是什么时候学会游泳的？」&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;你甚至可以跟进提出更复杂的问题：「向我展示 Lucia 的游泳技能是怎么进步的。」&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在这里，Gemini 不再只是进行简单的搜索，它会识别不同的上下文——从在游泳池中扑腾，到在海洋中浮潜，再到她游泳证书上的文字和日期。Photos 会将所有这些信息整合在一起形成一个总结，让你能够全面了解，并再次重温那些美妙的回忆。我们将在今年夏天推出 Ask Photos，并将持续增加更多功能。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fbe4e715820b6a574ff1f5561680b6080a8.webp&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;通过多模态和长上下文解锁更多知识&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;为了理解跨越不同格式的各种知识，我们从一开始就将 Gemini 打造成多模态的。它是一个内置了所有模态的模型。因此，它可以理解不同类型的输入，并找到它们之间的联系。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;多模态从根本上扩展了我们可以提出的问题以及我们将得到的答案。而长文本能力则使其更进一步，让我们能够引入更多信息：数百页文本、数小时音频或一小时视频、整个代码存储库……或者，如果你愿意，大约 96 份芝士蛋糕工厂餐厅的菜单。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;处理这么大量的菜单，你可能需要 100 万令牌的上下文窗口，而现在通过 Gemini 1.5 Pro 就可以实现。开发者们就一直在以各种非常有趣的方式使用它。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img height=&quot;282&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0516/115408_ElVP_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;完整视频可查看原文链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FG9MAuRFppOowAyUeCu2_UQ&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/G9MAuRFppOowAyUeCu2_UQ&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在过去的几个月里，我们已经推出了具有长上下文能力的 Gemini 1.5 Pro 的预览版，我们还对翻译、编码和推理的质量进行了一系列改进。从今天开始，你也将在模型中看到这些更新。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;现在我很高兴地宣布，我们将向全球所有开发者推出改进版的 Gemini 1.5 Pro。此外，从今天开始，具有 100 万令牌上下文能力的 Gemini 1.5 Pro 也可供 Gemini Advanced 的消费者直接使用，包含 35 种语言。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;在非公开预览版中扩展到 200 万令牌&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;100 万令牌正在开辟全新的可能性。这已经很振奋人心，但我认为我们还可以更进一步。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;今天，我们将上下文窗口扩展到 200 万个令牌，并将其以非公开预览版的方式提供给开发者们。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;过去几个月来我们所取得的进展让我非常激动，这代表着我们朝无限上下文的最终目标又迈出了一步。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;将 Gemini 1.5 Pro 应用于 Workspace&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;到目前为止，我们已经分享了两项技术进步：多模态和长上下文。他们各自已经非常强大，但二者结合能够释放更深层次的能力和更多的智能。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这在 Google Workspace 中体现得更加淋漓尽致。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;长期以来，人们总在 Gmail 中搜索他们的电子邮件。而现在我们正通过 Gemini 使其变得更加强大。例如，作为家长，你希望随时了解孩子在学校发生的一切，Gemini 就可以帮助你！&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;现在，我们可以让 Gemini 总结学校最近发来的所有电子邮件。在后台，它可以识别相关电子邮件，甚至分析 PDF 等附件，你可以获得一份包含关键要点和待办事项的摘要。也许你本周正在旅途中，无法参加家长会议，而会议录音长达一个小时。如果这份录音来自于 Google Meet，你就可以让 Gemini 为你提供重点内容。倘若有个家长小组正在寻找志愿者，而你那天正好有空，那么当然，Gemini 还可以帮助你起草回复邮件。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;还有无数其他例子可以说明 Gemini 如何让生活更轻松。今天起 Gemini 1.5 Pro 已经应用在 Workspace Labs 中。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;NotebookLM 中的音频输出&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们刚刚看了一个文本输出的例子，但通过多模态模型，我们可以做得更多。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们在这方面已经取得了进展，未来还会有更多。NotebookLM 中的音频概述（Audio Overview）就显示了在这方面的进展：它通过 Gemini 1.5 Pro，可以基于你的源文件生成个性化和交互式音频对话。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这就是多模态带来的可能性，很快你就能够将输入和输出进行混合和匹配，这就是我们所说的新一代 I/O 的意思。但如果我们还能再进一步呢？&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;使用 AI 智能体更进一步&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在这一方面更进一步就是我们在 AI 智能体（AI Agents）上看到的机遇之一。我认为它们是可以推理、规划和记忆的智能系统。它们能够提前多步」思考」，跨软件和系统工作，所有这些都是为了帮助你完成任务，而最重要的是要在你的监督之下。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们仍处于早期阶段，但让我向你展示一些我们正在努力解决的应用案例的类型。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;让我们以购物为例。买鞋很有意思，但当鞋子不合适需要退货时就不那么有趣了。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;想象一下，如果 Gemini 可以为你完成所有步骤：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;在你的收件箱中搜索收据……&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;从你的电子邮件中找到订单号……&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;填写退货表格……&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;甚至安排 UPS 取件。&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;那是不是容易多了？&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;让我们再举一个更复杂一些的例子。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;假设你刚搬到芝加哥。想象一下 Gemini 和 Chrome 能够共同协作帮助你做很多准备工作——代替你组织、推理、综合分析等。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;比如，你想要探索这座城市并找到附近的服务——从干洗店到遛狗服务，你还必须在数十个网站上更新你的新地址。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;现在 Gemini 可以胜任这些工作，并在需要时提示你提供更多信息。这样事情始终在你的掌控之中。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这部分非常重要——当我们做这些体验的原型设计时，我们深思熟虑如何以一种私密、安全且对每个人都适用的方式来进行。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这些都是简单的应用案例，但它们可以让你很好地了解到，通过构建能够代表你去提前思考、推理和计划的智能系统，我们希望能够解决的问题类型。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;这对我们的使命意味着什么&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Gemini 凭借其多模态、长上下文和智能体，使我们更接近我们的最终目标：让 AI 助力每个人。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们认为，这是我们在达成使命方面取得最大进展的方式：整合以各种方式输入的全球信息，使其可以通过任何输出方式被获取，并将全球信息与你的世界中的信息结合起来，以一种真正对你有用的方式进行呈现。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;新的突破&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;为了充分发挥 AI 的潜力，我们需要开创新领域，谷歌 DeepMind 团队一直致力于此。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们已经收到了大家对 1.5 Pro 及其长上下文窗口的热情反馈，但我们也从开发人员那里了解到，他们想要更快、更具成本效益。因此，明天，我们将推出 Gemini 1.5 Flash，一个为规模化构建的更轻量级的模型，它针对以低延迟和成本为重的任务进行了优化。1.5 Flash 将于周二在 AI Studio 和 Vertex AI 中提供。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;展望未来，我们始终希望构建一个在日常生活中有用的通用智能体。Astra 项目展示了多模态理解和实时对话能力。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img height=&quot;285&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0516/115540_R5vq_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;完整视频可查看原文链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FG9MAuRFppOowAyUeCu2_UQ&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/G9MAuRFppOowAyUeCu2_UQ&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们还在视频和图像生成方面取得了进展，推出了 Veo 和 Imagen 3，并推出了 Gemma 2.0——我们为负责任的 AI 创新打造的下一代开放模型。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;AI 时代的基础设施：介绍 Trillium&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;训练最先进的模型需要大量的计算能力。过去六年中，行业对机器学习计算能力的需求增长了 100 万倍。而且，每年都会以十倍的速度增长。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Google 在这方面具有优势。25 年来，我们一直在投资世界一流的技术基础设施，从支持搜索的尖端硬件，到为我们的 AI 进步提供支持的定制张量处理单元（tensor processing units）。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Gemini 完全在我们的第四代和第五代 TPU 上进行训练和服务。包括 Anthropic 在内的其他领先的 AI 公司也已经在 TPU 上训练了他们的模型。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;今天，我们很高兴地宣布推出第六代 TPU—— Trillium。Trillium 是我们迄今为止性能最强、效率最高的 TPU，与上一代 TPU v5e 相比，每个芯片的计算性能提高了 4.7 倍。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们将在 2024 年底向 Cloud 客户提供 Trillium。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;除了我们的 TPU，我们还推出 CPU 和 GPU 来支持任何工作负载。这包括我们上个月宣布的新型 Axion 处理器，我们的首款基于 Arm 定制的 CPU，可提供业界领先的性能和能效。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们也很自豪成为首批提供 Nvidia 尖端 Blackwell GPU 的 Cloud 提供商之一，该 GPU 将于 2025 年初上市。我们很幸运能与 NVIDIA 建立长期合作伙伴关系，并很高兴能将 Blackwell 的突破性功能带给我们的客户。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;芯片是我们集成端到端系统的基础部分，从性能优化的硬件和开放软件到灵活的消费模式。所有这些都汇集在我们的 AI 超级计算机（ AI Hypercomputer）中，这是一种开创性的超级计算机架构。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;企业和开发者正在使用它来应对更复杂的挑战，其效率是仅购买原始硬件和芯片的两倍多。我们的 AI 超级计算机的进步之所以成为可能，是因为我们在数据中心采用了液体冷却的方法。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们已经这样做近 10 年了，远早于它成为行业的先进技术。如今，我们部署的液体冷却系统总容量已接近 1 吉瓦，并且还在不断增长——这几乎是任何其他团队的 70 倍。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这背后的基础是我们庞大的网络规模，它连接了我们全球的基础设施。我们的网络覆盖了超过 200 万英里的陆地和海底光纤：是紧随之后的云服务提供商的 10 倍（！）以上。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们将继续进行必要的投资，以推进 AI 创新并提供最先进的功能。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dc32e8de40af444fd7cfbd1c1f50960fc6e.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;搜索最激动人心的篇章&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;我们最大的投资和创新领域之一是我们的创始产品——搜索。25 年前，我们创建了搜索，以帮助人们理解互联网上汹涌的信息浪潮。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;随着每一次平台的转变，我们都在帮助更好地回答你的问题上取得了突破。在移动设备上，我们利用更好的上下文、位置感知和实时信息，解锁了新型的问题和答案。随着自然语言理解和计算机视觉技术的进步，我们实现了新的搜索方式，可以用语音或哼唱来找到你最喜欢的新歌；或者用你在散步时看到的那朵花的图像来进行搜索。现在，你甚至可以使用 Circle to Search 来搜索你可能想要购买的那些很酷的新鞋。去试试吧，反正你总能退货！&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;当然，Gemini 时代的搜索将把这一切提升到一个全新的水平，它将把我们的基础设施优势、最新的 AI 功能、对信息质量的高标准以及数十年来把你与丰富的网络连接起来的经验相结合。其结果将是一款为你工作的产品。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;Google 搜索是生成式 AI，其规模足以满足人类好奇心。这是我们迄今为止最激动人心的搜索篇章。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;更智能的 Gemini 体验&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;Gemini 不仅仅是一个聊天机器人；它旨在成为你得力的私人助手，可以帮助你处理复杂的任务并代表你采取行动。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;与 Gemini 的互动应该是对话式的、直观的。因此，我们宣布推出称为 Live 的全新 Gemini 体验，让你可以使用语音与 Gemini 进行深入对话。我们还会在今年晚些时候将 Gemini Advanced 提升为 200 万个令牌，以便能够上传和分析视频和长代码等超密集文件。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;Android 上，的 Gemini&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;全球有数十亿 Android 用户，因此我们很高兴能将 Gemini 更深入地融入用户体验。作为你的全新 AI 助手，Gemini 可随时随地为你提供帮助。我们已将 Gemini 模型整合到 Android 中，包括我们最新的设备端模型：Gemini Nano 多模态模型 (Gemini Nano with Multimodality)，它可以处理文本、图像、音频和语音，在保证存储在设备上的信息私密性的同时解锁新的体验。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;我们负责任的 AI 方法&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我们继续大胆而振奋地把握住 AI 所带来的机遇。同时，我们也在确保以负责任的方法行事。我们正在开发一种叫做 AI 辅助红队测试 (AI-assisted red teaming) 的尖端技术，该技术利用了 Google DeepMind 在 AlphaGo 等游戏方面的突破以改进我们的模型。此外，我们也已将 SynthID 水印工具扩展到文本和视频两种新的模态，因此更容易识别 AI 生成的内容。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;共同创造未来&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;所有这些都表明了我们在以大胆而负责任的方法，让 AI 助力每个人方面取得的重要进展。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;很长一段时间以来，我们一直采用 AI 为先的方法。我们数十年的研究领导者地位开创了许多现代突破，为我们和整个行业的 AI 进步提供了动力。最重要的是，我们拥有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#202124&quot;&gt;专为 AI 时代打造的世界领先基础设施&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#202124&quot;&gt;现在由 Gemini 提供支持的搜索领域的尖端创新&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#202124&quot;&gt;在极大规模上提供帮助的产品——包括 15 款拥有 5 亿用户的产品&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#202124&quot;&gt;让&lt;/span&gt;&lt;span style=&quot;color:#202124&quot;&gt;每个人——合作伙伴、客户、创作者以及所有人——都能创造未来的平台。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这一进步之所以能够实现，是因为我们卓越的开发者社区。通过每天创建的体验和应用程序，你们将这一切变为现实。在此，我要向在 Shoreline 现场的各位以及全球数百万在线观看的朋友们致意：让我们共同迎接未来的无限可能，携手共创美好未来。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292690/google-io-2024</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292690/google-io-2024</guid>
            <pubDate>Thu, 16 May 2024 03:50:11 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>请教各位，此处的 time.sleep(6) 起到了什么作用？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;网友发帖称，华为在发布会展示大模型文生图能力，在演示过程中，当第一次运行时按下 Ctrl-C 中断，显示对应的代码是 time.sleep(6)。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9111ef0f25f73ff03605be40cd333cca217.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;现场演示视频截图：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b85779e1593451476a784be38bc072aec1c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;请教各位，此处的 time.sleep(6) 起到了什么作用？&lt;/p&gt; 
&lt;p&gt;出处：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F655565411&quot; target=&quot;_blank&quot;&gt;https://www.zhihu.com/question/655565411&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292684</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292684</guid>
            <pubDate>Thu, 16 May 2024 03:31:11 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Oracle 发布 Java SE 2024 年春季路线图</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Oracle 发布了 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fjava%2Fpost%2Fjava-se-spring-2024-roadmap-update&quot; target=&quot;_blank&quot;&gt;Java SE 2024 年春季路线图&lt;/a&gt;，再次确认将对 Java/JDK 11 的支持延长至 2032 年 1 月，并免除 Java 11 支持的延期支持费用。此延期为依赖 Oracle Java 11 的 Oracle 客户提供了至少八年的支持和更新。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同时，在 Solaris 操作系统上的 Java SE 8 和 Java SE 11 支持分别延期至 2030 年 12 月和 2032 年 1 月。意味着 Solaris 上的 Java 支持相较 2019 年宣布的日期又延长了六年。此外，Oracle 计划将来在 Oracle Solaris / SPARC 服务器上支持 WebLogic 14.1.2。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;262&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6587880aae5ac66d5e3cd07c6f5927c490e.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;其他要点还包括：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;JavaFX：Oracle 继续重申其对 2020 年宣布的 Java client 路线图的支持和承诺。该公司将通过 OpenJDK 中的 OpenJFX 项目开发并发布 JavaFX 作为独立模块。 继续提供这些基于最新版本 Java 的免费开源 OpenJFX 构建，目前是 Oracle JDK 22 上的 JavaFX 22，然后是 2024 年 9 月为 Oracle JDK 23 提供的 JavaFX 23。此外，对 JDK 8 上 JavaFX 的商业支持计划于 2025 年 3 月结束，这是 Oracle 对 JavaFX 的最后一个商业支持版本。2025 年 3 月之后发布的 JDK 8 更新将不再包含 JavaFX。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;停用 Advanced Management Console (AMC)：Oracle 计划在 2024 年 10 月后停用 AMC，建议客户迁移到 Java Management Service (JMS)。随着 Oracle 将重点转向下一代解决方案，AMC 在 2024 年之后将不会再收到更新。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Oracle 最近还发布了一条提醒称，2021 年 9 月发布的 JDK 17 的许可即将到期。2024 年 9 月之后发布的 Oracle JDK 17 更新版本计划在 Java SE OTN 许可证下提供，该许可证与 Java 8 和 Java 11 使用的许可证相同。建议希望继续使用宽松的 NFTC 许可条款的用户迁移到 Oracle JDK 21。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fjava%2Fpost%2Fjava-se-spring-2024-roadmap-update&quot; target=&quot;_blank&quot;&gt;查看官方博客&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292675/java-se-spring-2024-roadmap-update</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292675/java-se-spring-2024-roadmap-update</guid>
            <pubDate>Thu, 16 May 2024 02:50:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>openKylin 社区单位会员沙龙（第九期）南京站成功举办</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;2024 年 5 月 15 日，由&lt;strong&gt;openKylin 社区主办、&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;南京赛宁信息技术有限公司（简称「赛宁网安」）承办&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;的&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;第九期社区单位会员沙龙&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在南京顺利举行。openKylin 社区共建系列沙龙活动，旨在邀请社区单位会员及致力于开源产业的各界伙伴相聚，共研数字化转型期开源产业优势及机遇，集聚开源力量、共促产业繁荣，推动 Linux 开源技术及其软硬件生态繁荣发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ed82fb39649a63f9b4cd43e1ac14a58b302.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此次会议邀请到南京及周边地区会员单位及致力于加入开源产业的软硬件企业代表相聚，共同探讨产业趋势、开源策略，并就如何更好的开放合作、生态构建展开深入交流。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;会议致辞&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;赛宁网安&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;董事会秘书、副总经理陈佳利&lt;/strong&gt;代表会议承办方为本次沙龙致辞。他表示，很荣幸社区给赛宁网安这次承办的机会，随着 openKylin 社区日益壮大，目前社区会员已超 460 家，后续赛宁网安将继续携手社区，和各广大伙伴一起在社区做贡献，最后预祝本次会议圆满成功!&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1067&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b4b96b70366505daa33d4cdf1d511240640.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;麒麟软件江苏业务部经理朱胜楠&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;代表社区理事单位&lt;span style=&quot;background-color:#ffffff&quot;&gt;为本次沙龙致辞。&lt;/span&gt;他表示，这是 openKylin 社区成立以来，首场在南京举办的会员活动，我代表 opeKylin 社区理事长单位麒麟软件欢迎各位参加这次沙龙，也感谢各位对社区的大力支持！最后预祝这次沙龙圆满成功！再次感谢各位伙伴的支持！&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1067&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-169ab1b5a5dac1f80adc178c55189c7dfcd.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;主题分享&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;openKylin 社区生态合作负责人马发俊&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;发表&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;《openKylin 社区建设进展介绍》&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;主题分享，向与会伙伴介绍了社区的基本情况、治理模式、开源趋势及社区取得的相关成果。目前，openKylin 区已有超 460 家单位会员，共同参与到打造下一代操作系统的创新生态中来。相信未来，openKylin 社区将在各位共建伙伴的协力支持下，逐步走向同国际顶尖开源社区比肩的星辰大海。openKylin 社区应开源之势成长，欢迎更多伙伴加入社区，共赢产业新未来。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1067&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-abd390e9bb9178217a8a9be7bb397d6a7f4.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;赛宁网安售前总监陈亮&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;发表&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;《赛宁网安携手 openKylin 社区共建安全生态》&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;主题分享，赛宁网安是国内数字孪生靶场行业领军者，是集产品研发、安全服务、联赛运营于一体的创新型网络安全公司。加入 openKylin 社区后，联合东南大学以产学研合作模式在社区创建了 CybersecTookits &amp;nbsp;SIG 组，测试基于 openKylin 操作系统的网络安全工具套件，覆盖渗透测试、网络扫描、漏洞利用、恶意软件分析、数据恢复、人工智能安全等领域的效能。后续，赛宁网安将与 openKylin 持续深化合作，推动社区网络安全发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-af1629f02ee7a0d55e4bfe0b9fce0898168.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;工信部电子五所软件供应链治理负责人柴思跃&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;发表&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;《开源软件供应链治理现状与问题》&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;主题分享，当前，99% 的软件产品使用了开源软件，这些软件产品都有着复杂的开源软件供应链。然而，开源软件供应链上的大部分开源软件都面临着安全漏洞和许可证等问题，增加了软件产品使用开源软件的安全风险、法律风险和维护风险。针对上述现象，柴思跃从软件供应链安全要求、开源软件概述、开源许可证及其法律性质和开源软件知识产权法律风险等方面为大家进行分享。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;3000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a72918f9b5032a9078e1e7aca69d8cff0d.jpg&quot; width=&quot;4500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;openKylin 社区 RV64G SIG Maintainer 范晓琪&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;发表&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;《RV64G SIG 阶段性工作总结》&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;主题分享，RV64G 作为 RISC-V 的一个子架构，支持 RISC-V imafd 指令集，RV64G SIG 负责 openKylin 社区 RV64G 开源软件包的维护，进行软件包构建、系统构建等工作。目前 RV64G SIG 已经与社区合作完成了 1476 个源码包在 RV64G 架构上的编译，其中包含 gcc、g++、rustc 等编译工具，ffmpeg、opencv 等图像视频处理工具，network-manager 等系统管理工具，后续将进一步移植常用开发工具，发布 openkylin-rv64g 的&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;系统镜像&lt;/span&gt;&lt;span&gt;等。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1067&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5537e6347d070d931695293592590aa24da.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;永中软件行业解决方案总监舒凌&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;发表&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;《携手共创：智领办公创新与生态共赢》&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;主题分享，永中软件是 openKylin 社区生态圈中的重要一员，加入社区后，基于 openKylin 内核进行生态适配，完成了永中 Office2024 专业版办公软件 V12 与 openKylin(开放麒麟) 社区 openKylin 2.0 的兼容适配，协同共筑操作系统链接下的繁荣生态，后续将持续推进永中软件产品基于 openKylin 社区的其他应用适配，让数字化实践成为操作系统产业链配套的推动剂。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;3000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6509e8e9f149d867bdf3a4655e5c4b92219.jpg&quot; width=&quot;4500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;交流研讨&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;交流讨论环节，&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;科大讯飞产品运营彭雯昕&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;带来了星火大模型生态建设分享；&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;南京智绘微电子软件部部长张之龙&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;分享了南京智绘微电子在社区 GPU SIG 组的开源计划；&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;进迭时空产品经理朱伟东&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;分享了进迭时空与 openKylin 社区的适配进展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-06b45fafa0cd3e3c1125871327d860bdb8e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;3000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e5697c095744a8cdcdb97833ea15e485aa7.jpg&quot; width=&quot;4500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0b6ffd5e241ea2d5f96fa9449031dba3107.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;同时，交流现场，&lt;span style=&quot;background-color:#ffffff&quot;&gt;参与此次沙龙的各企业代表基于社区平台及开源协作模式，围绕操作系统创新生态打造，探讨未来伙伴间更多维度、更深层次合作方向。&lt;span style=&quot;background-color:#ffffff&quot;&gt;相信未来，在大家的共同努力下，openKylin 社区将为打造创新的下一代操作系统奠定技术及生态基础。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1067&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c4f32013b50b4730894780bc6da461f39d3.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;openKylin 作为国内领先的开源操作系统根社区，以聚焦开源操作系统根技术为核心、以打造创新生态为途径、以孵化相关领域关键项目为目标、以布道开源文化为抓手、以聚合开源优秀人才为根基，愿携手更多伙伴共同推动，致力于推动 Linux 开源技术及其软硬件生态繁荣发展。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292667</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292667</guid>
            <pubDate>Thu, 16 May 2024 02:11:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Hugging Face 与 Wiz Research 合作提高人工智能安全性</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;section data-tool=&quot;mdnice 编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; style=&quot;margin-bottom: 0px;padding-left: 10px;padding-right: 10px;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;width: auto;font-family: &amp;quot;Source Sans Pro&amp;quot;, &amp;quot;PingFang SC&amp;quot;, ui-sans-serif, system-ui, -apple-system, Roboto, &amp;quot;Helvetica Neue&amp;quot;, Arial, sans-serif;font-size: 16px;color: rgb(0, 0, 0);line-height: 1.5em;word-spacing: 0em;letter-spacing: 0em;word-break: break-word;text-align: left;&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我们很高兴地宣布，我们正在与 Wiz 合作，目标是提高我们平台和整个 AI/ML 生态系统的安全性。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;Wiz 研究人员，与 Hugging Face 就我们平台的安全性进行合作并分享了他们的发现。Wiz 是一家云安全公司，帮助客户以安全的方式构建和维护软件。随着这项研究的发布，我们将借此机会重点介绍一些相关的 Hugging Face 安全改进。&lt;/p&gt; 
  &lt;ul data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: rgb(63, 63, 63);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      Wiz 与 Hugging Face 合作的更多信息 
     &lt;url style=&quot;font-size: 14px;color: rgb(136, 136, 136);visibility: visible;display: block;&quot;&gt;
       https://www.wiz.io/blog/wiz-and-hugging-face-address-risks-to-ai-infrastruct 
     &lt;/url&gt; 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;Hugging Face 最近集成了 Wiz 进行漏洞管理，这是一个持续主动的流程，可确保我们的平台免受安全漏洞的影响。此外，我们还使用 Wiz 进行云安全态势管理 (CSPM)，它使我们能够安全地配置云环境并进行监控以确保其安全。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我们最喜欢的 Wiz 功能之一是从存储到计算再到网络的漏洞的整体视图。我们运行多个 Kubernetes (k8s) 集群，并拥有跨多个区域和云提供商的资源，因此在单个位置拥有包含每个漏洞的完整上下文图的中央报告非常有帮助。我们还构建了他们的工具以自动修复我们产品中检测到的问题，特别是在 Spaces 中。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;在联合工作的过程中，Wiz 的安全研究团队通过使用 pickle 在系统内运行任意代码，识别出了我们沙箱计算环境的不足之处。在阅读此博客和 Wiz 的安全研究报告时，请记住，我们已经解决了与该漏洞相关的所有问题，并将继续在威胁检测和事件响应过程中保持警惕。&lt;/p&gt; 
  &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
  &lt;h2 data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 30px;margin-bottom: 15px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;border-style: none;border-width: 1px;border-color: rgb(0, 0, 0);border-radius: 0px;box-shadow: none;flex-direction: unset;float: unset;height: auto;justify-content: unset;line-height: 1.5em;overflow: unset;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 20px;color: rgb(255, 157, 0);line-height: 1.8em;letter-spacing: 0em;padding-left: 10px;border-style: none none none solid;border-width: 1px 1px 1px 5px;border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(0, 0, 0) rgba(255, 157, 0, 0.95);border-radius: 0px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;box-shadow: none;display: block;font-weight: bold;flex-direction: unset;float: unset;height: auto;justify-content: unset;overflow: unset;text-indent: 0em;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;Hugging Face 安全&lt;/span&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;在 Hugging Face，我们非常重视安全性。随着人工智能的快速发展，新的威胁向量似乎每天都会出现。即使 Hugging Face 宣布了与技术领域一些最大名字的多项合作伙伴关系和业务关系，我们仍然致力于让我们的用户和 AI 社区能够负责任地实验和操作 AI/ML 系统和技术。我们致力于保障我们的平台安全，并推动 AI/ML 的民主化，使社区能够贡献力量并成为这一将影响我们所有人的范式转变的一部分。我们撰写这篇博客，重申我们保护用户和客户免受安全威胁的承诺。下面我们还将讨论 Hugging Face 关于支持有争议的 pickle 文件的理念，并探讨远离 pickle 格式的共同责任。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;在不久的将来，还会有许多令人兴奋的安全改进和公告。这些出版物不仅会讨论 Hugging Face 平台社区面临的安全风险，还会涵盖 AI 的系统性安全风险以及最佳缓解实践。我们始终致力于保障我们的产品、基础设施和 AI 社区的安全，请关注后续的安全博客文章和白皮书。&lt;/p&gt; 
  &lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
  &lt;h2 data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 30px;margin-bottom: 15px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;border-style: none;border-width: 1px;border-color: rgb(0, 0, 0);border-radius: 0px;box-shadow: none;flex-direction: unset;float: unset;height: auto;justify-content: unset;line-height: 1.5em;overflow: unset;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 20px;color: rgb(255, 157, 0);line-height: 1.8em;letter-spacing: 0em;padding-left: 10px;border-style: none none none solid;border-width: 1px 1px 1px 5px;border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(0, 0, 0) rgba(255, 157, 0, 0.95);border-radius: 0px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;box-shadow: none;display: block;font-weight: bold;flex-direction: unset;float: unset;height: auto;justify-content: unset;overflow: unset;text-indent: 0em;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;面向社区的开源安全协作和工具&lt;/span&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我们高度重视与社区的透明度和合作，这包括参与漏洞的识别和披露、共同解决安全问题以及开发安全工具。以下是通过合作实现的安全成果示例，这些成果有助于整个 AI 社区降低安全风险:&lt;/p&gt; 
  &lt;ul data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: rgb(63, 63, 63);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;Picklescan 是与微软合作开发的; 该项目由 Matthieu Maitre 发起，由于我们内部也有一个相同工具的版本，因此我们联手并为 Picklescan 做出了贡献。如果您想了解更多关于其工作原理的信息，请参考以下文档页面: https://hf.co/docs/hub/en/security-pickle&lt;/p&gt; 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;Safetensors 是由 Nicolas Patry 开发的一种比 pickle 文件更安全的替代方案。Safetensors 在与 EuletherAI 和 Stability AI 的合作项目中，由 Trail of Bits 进行了审核。&lt;/p&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;https://hf.co/docs/safetensors/en/index&lt;/p&gt; 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我们有一个强大的漏洞赏金计划，吸引了来自世界各地的众多出色研究人员。识别出安全漏洞的研究人员可以通过 security@huggingface.co 咨询加入我们的计划。&lt;/p&gt; 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;恶意软件扫描: https://hf.co/docs/hub/en/security-malware&lt;/p&gt; 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;隐私扫描: 请访问以下链接了解更多信息: https://hf.co/docs/hub/security-secrets&lt;/p&gt; 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;如前所述，我们还与 Wiz 合作降低平台安全风险。&lt;/p&gt; 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt; 
     &lt;p style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我们正在启动一系列安全出版物，以解决 AI/ML 社区面临的安全问题。&lt;/p&gt; 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
  &lt;h2 data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 30px;margin-bottom: 15px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;border-style: none;border-width: 1px;border-color: rgb(0, 0, 0);border-radius: 0px;box-shadow: none;flex-direction: unset;float: unset;height: auto;justify-content: unset;line-height: 1.5em;overflow: unset;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 20px;color: rgb(255, 157, 0);line-height: 1.8em;letter-spacing: 0em;padding-left: 10px;border-style: none none none solid;border-width: 1px 1px 1px 5px;border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(0, 0, 0) rgba(255, 157, 0, 0.95);border-radius: 0px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;box-shadow: none;display: block;font-weight: bold;flex-direction: unset;float: unset;height: auto;justify-content: unset;overflow: unset;text-indent: 0em;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;开源 AI/ML 用户的安全最佳实践&lt;/span&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;ul data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: rgb(63, 63, 63);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      AI/ML 引入了新的攻击向量，但对于许多这些攻击，其缓解措施早已存在并为人所知。安全专业人员应确保对 AI 资源和模型应用相关的安全控制。此外，以下是一些在使用开源软件和模型时的资源和最佳实践: 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      了解贡献者: 仅使用来自可信来源的模型并注意提交签名。https://hf.co/docs/hub/en/security-gpg 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      不要在生产环境中使用 pickle 文件 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      使用 Safetensors: https://hf.co/docs/safetensors/en/index 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      回顾 OWASP 前 10 名: https://owasp.org/www-project-top-ten/ 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      在您的 Hugging Face 帐户上启用 MFA 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      建立一个安全开发生命周期，包括由具有适当安全培训的安全专业人员或工程师进行代码审查。 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      在非生产和虚拟化的测试/开发环境中测试模型。 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
  &lt;h2 data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 30px;margin-bottom: 15px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;border-style: none;border-width: 1px;border-color: rgb(0, 0, 0);border-radius: 0px;box-shadow: none;flex-direction: unset;float: unset;height: auto;justify-content: unset;line-height: 1.5em;overflow: unset;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 20px;color: rgb(255, 157, 0);line-height: 1.8em;letter-spacing: 0em;padding-left: 10px;border-style: none none none solid;border-width: 1px 1px 1px 5px;border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(0, 0, 0) rgba(255, 157, 0, 0.95);border-radius: 0px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;box-shadow: none;display: block;font-weight: bold;flex-direction: unset;float: unset;height: auto;justify-content: unset;overflow: unset;text-indent: 0em;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;Pickle 文件——不容忽视的安全隐患&lt;/span&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;Pickle 文件一直是 Wiz 的研究核心以及近期安全研究人员关于 Hugging Face 的其他出版物的关注点。Pickle 文件长期以来被认为存在安全风险，欲了解更多信息，请参阅我们的文档文件: https://hf.co/docs/hub/en/security-pickle&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;尽管这些已知的安全缺陷存在，AI/ML 社区仍然经常使用 pickle 文件 (或类似容易被利用的格式)。其中许多使用案例风险较低或仅用于测试目的，使得 pickle 文件的熟悉性和易用性比安全的替代方案更具吸引力。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;作为开源人工智能平台，我们有以下选择:&lt;/p&gt; 
  &lt;ul data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: rgb(63, 63, 63);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      完全禁止 pickle 文件 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      对 pickle 文件不执行任何操作 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      找到一个中间立场，既允许使用 pickle，又可以合理、切实地减轻与 pickle 文件相关的风险 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我们目前选择了第三个选项，即折中的方案。这一选择对我们的工程和安全团队来说是一种负担，但我们已投入大量努力来降低风险，同时允许 AI 社区使用他们选择的工具。我们针对 pickle 相关风险实施的一些关键缓解措施包括:&lt;/p&gt; 
  &lt;ul data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: rgb(63, 63, 63);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      创建概述风险的清晰文档 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      开发自动扫描工具 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      使用扫描工具和标记具有安全漏洞的模型并发出明确的警告 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      我们甚至提供了一个安全的解决方案来代替 pickle (Safetensors) 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      我们还将 Safetensors 设为我们平台上的一等公民，以保护可能不了解风险的社区成员 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      除了上述内容之外，我们还必须显着细分和增强使用模型的区域的安全性，以解决其中潜在的漏洞 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我们打算继续在保护和保障 AI 社区方面保持领先地位。我们的一部分工作将是监控和应对与 pickle 文件相关的风险。虽然逐步停止对 pickle 的支持也不排除在外，但我们会尽力平衡此类决定对社区的影响。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;需要注意的是，上游的开源社区以及大型科技和安全公司在贡献解决方案方面基本上保持沉默，留下 Hugging Face 独自定义理念，并大量投资于开发和实施缓解措施，以确保解决方案既可接受又可行。&lt;/p&gt; 
  &lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
  &lt;h2 data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 30px;margin-bottom: 15px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;border-style: none;border-width: 1px;border-color: rgb(0, 0, 0);border-radius: 0px;box-shadow: none;flex-direction: unset;float: unset;height: auto;justify-content: unset;line-height: 1.5em;overflow: unset;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 20px;color: rgb(255, 157, 0);line-height: 1.8em;letter-spacing: 0em;padding-left: 10px;border-style: none none none solid;border-width: 1px 1px 1px 5px;border-color: rgb(0, 0, 0) rgb(0, 0, 0) rgb(0, 0, 0) rgba(255, 157, 0, 0.95);border-radius: 0px;align-items: unset;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;box-shadow: none;display: block;font-weight: bold;flex-direction: unset;float: unset;height: auto;justify-content: unset;overflow: unset;text-indent: 0em;text-shadow: none;transform: none;width: auto;-webkit-box-reflect: unset;&quot;&gt;结束语&lt;/span&gt;&lt;span style=&quot;display: none;&quot;&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;我在撰写这篇博客文章时，与 Safetensors 的创建者 Nicolas Patry 进行了广泛交流，他要求我向 AI 开源社区和 AI 爱好者发出行动号召:&lt;/p&gt; 
  &lt;ul data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: rgb(63, 63, 63);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      主动开始用 Safetensors 替换您的 pickle 文件。如前所述，pickle 包含固有的安全缺陷，并且可能在不久的将来不再受支持。 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;color: rgb(1, 1, 1);line-height: 1.8em;letter-spacing: 0em;&quot;&gt;
      继续向您喜欢的库的上游提交关于安全性的议题/PR，以尽可能推动上游的安全默认设置。 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;AI 行业正在迅速变化，不断有新的攻击向量和漏洞被发现。Hugging Face 拥有独一无二的社区，我们与大家紧密合作，以帮助我们维护一个安全的平台。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;请记住，通过适当的渠道负责任地披露安全漏洞/错误，以避免潜在的法律责任和违法行为。&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;color: rgb(63, 63, 63);line-height: 1.8em;letter-spacing: 0em;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;&quot;&gt;想加入讨论吗？请通过 security@huggingface.co 联系我们，或者在 LinkedIn/Twitter 上关注我们。&lt;/p&gt; 
  &lt;hr data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 10px;margin-bottom: 10px;border-style: solid none none;border-bottom-width: 3px;border-left-width: 3px;border-right-width: 3px;border-color: rgb(0, 0, 0) rgba(0, 0, 0, 0.4) rgba(0, 0, 0, 0.4);border-radius: 0px;background-attachment: scroll;background-clip: border-box;background-image: none;background-origin: padding-box;background-position: 0% 0%;background-repeat: no-repeat;background-size: auto;width: auto;height: 1px;&quot;&gt; 
  &lt;blockquote data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-top: 3px none rgba(0, 0, 0, 0.4);border-bottom: 3px none rgba(0, 0, 0, 0.4);border-right: 3px none rgba(0, 0, 0, 0.4);border-left-color: rgba(255, 157, 0, 0.6);border-radius: 0px;background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(255, 157, 0, 0.15);width: auto;height: auto;box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px;overflow: auto;&quot;&gt; 
   &lt;span style=&quot;display: none;color: rgb(0, 0, 0);font-size: 16px;line-height: 1.5em;letter-spacing: 0em;&quot;&gt;&lt;/span&gt; 
   &lt;p style=&quot;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;color: rgba(0, 0, 0, 0.8);font-size: 14px;line-height: 1.5em;letter-spacing: 0em;&quot;&gt;英文原文:&amp;nbsp;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 0em;text-indent: 0em;word-spacing: 0em;&quot;&gt;https://hf.co/blog/hugging-face-wiz-security-blog&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;color: rgba(0, 0, 0, 0.8);font-size: 14px;line-height: 1.5em;letter-spacing: 0em;&quot;&gt;原文作者: Josef Fukano, Guillaume Salou, Michelle Habonneau, Adrien, Luc Georges, Nicolas Patry, Julien Chaumond&lt;/p&gt; 
   &lt;p style=&quot;text-indent: 0em;padding-top: 5px;padding-bottom: 5px;color: rgba(0, 0, 0, 0.8);font-size: 14px;line-height: 1.5em;letter-spacing: 0em;&quot;&gt;译者: xiaodouzi&lt;span style=&quot;color: rgba(0, 0, 0, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - Hugging Face（gh_504339124f0f）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/HuggingFace/blog/11126604</link>
            <guid isPermaLink="false">https://my.oschina.net/HuggingFace/blog/11126604</guid>
            <pubDate>Thu, 16 May 2024 01:51:11 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>微软回应中国区 AI 团队「打包赴美」传闻</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;围绕今日被曝微软人工智能团队集体赴美传闻，微软方面回应称，目前微软有一小部分员工得到可以选择国际轮岗的机会，员工可以选择接受轮岗，或者继续在现在的岗位工作，此前「打包赴美」传闻有夸张及不实之处。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/292516&quot;&gt;此前有报道称&lt;/a&gt;，微软总部下发邮件，通知中国区负责人工智能研究多个团队，如 C+AI 团队做 AI 平台的 Azure ML 团队等，整体搬迁至美国或澳大利亚，涉及员工或达数百人，收到邮件的员工需要在 6 月 7 日前做决定，也可选择拿离职补偿，微软美国还可帮助解决家属签证。（21 世纪经济报道）&lt;/p&gt; 
&lt;p&gt;来源：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FdEBe8FELW8XcMSqVFBjrKQ&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/dEBe8FELW8XcMSqVFBjrKQ&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292609</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292609</guid>
            <pubDate>Wed, 15 May 2024 11:03:05 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>开源日报 | Chrome 内置 Gemini 的意义不在于 Gemini；中国 AI 追随之路的五大误区；ECharts 创始人「下海」养鱼；谷歌 I/O 开发者大会什么都有，只是没有惊喜</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.5.15&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOeku1ADKB&quot; target=&quot;_blank&quot;&gt;谷歌推出开源大模型 Gemma2&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;谷歌将在今年 6 月发布开源大模型 Gemma 2，支持 270 亿参数。此前 Gemma 只有 20 亿参数和 70 亿参数两个版本。&lt;/p&gt; 
&lt;p&gt;根据谷歌实验室副总裁 Josh Woodward 的说法——谷歌优化了 270 亿参数的模型，使其可以在英伟达的下一代 GPU、单一的谷歌云 TPU 主机和托管的 Vertex AI 服务上运行。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/292589&quot; target=&quot;news&quot;&gt;诈骗分子利用 TeamViewer 转走 398 万！远程桌面厂商该如何作为？&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;诈骗分子利用 TeamViewer 远程操控受害者手机银行，转走受害者 398 万。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;联想到我们上周发表的文章，&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/291123&quot;&gt;RustDesk 由于诈骗猖獗，暂停国内服务&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，很多人对我们的行为非常不解，甚至怀疑故意炒作，甚至有人在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F7952&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;上说这是种族歧视，因为只是屏蔽中国。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;反诈任重道远，远控只是他们利用的一个工具而已，即使没有远控，他们也会有其他的方式，然而远控却在某种程度上提高了他们诈骗的效率。&lt;/p&gt; 
&lt;p&gt;我们不期望所有厂商像我们一样屏蔽手机被控，因为这种方式太极端，也损害了正常用户的利益，但我希望看到其他厂商能提出自己的解决方案，甚至组织安全联盟，制定出规范的反诈技术标准。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Ftv4H0LA-e0qzX33NIWCdAg&quot; target=&quot;_blank&quot;&gt;字节开源大模型量化新思路，2-bit 量化模型精度齐平 fp16&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;近日，字节跳动语音团队推出一个全新的量化思路，抛弃传统的量化范式，从数学优化的角度来对量化任务建模。文章放在了 arXiv，代码已经开源。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e0d6bb4b40241361b020bd3e92013a893a0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1650793492%2FOensSmXAM&quot; target=&quot;_blank&quot;&gt;Chrome 内置 Gemini 的意义不在于 Gemini，不在于 Chrome&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;Google 宣布在 Chrome 里集成 Gemini Nano，使用方法目前主要靠在 Web API 中新增的具体「Task API」（比如 translation API，似乎还会有摘要、问答、分类、AIGC）来调用结合专家模型（或经过微调）的 Gemini Nano，后续可能在 Web API 里增加更通用的 Prompt API 和 Fine-tuning (LoRA) API。这种模式不同于基于 WebGPU 在浏览器里运行 LLM，是直接在 Web 标准里增加 AI API。性能方面的区别主要是不用等待模型下载。&lt;/p&gt; 
   &lt;p&gt;不过 Chrome 内置 Gemini 的意义不在于 Gemini，不在于 Chrome，也不在于「内置」 — Chrome 在多数平台是第三方应用，推进这种 Web API 的初期不得不内置模型，实际上 AI Runtime 就像 XR/Web Runtime 一样应该内置在 OS 中&lt;/p&gt; 
   &lt;p&gt;意义在于：包含目前主流 LLM / GenAI 能力的 Edge AI 开始被跨平台标准化了，就像 WebXR 一样。&lt;/p&gt; 
   &lt;p&gt;区别不在于「Web 能不能调设备上的 LLM」，现在如果 OS 里有 Edge AI 的 API，包个 hybrid app 也能调，或者自己加载个模型用 WebGPU 运行，自己封装 API&lt;/p&gt; 
   &lt;p&gt;区别是进入 Web 标准的 Edge AI 能力会变成跨平台一致的基础能力，在上层衍生出更多跨平台的、建立在 EdgeAI 能力上的开源库和应用生态，进一步成为应用的「基础」。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;dexteryy&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1645215240%2FOemh1sr2r&quot; target=&quot;_blank&quot;&gt;Google IO 展现了一个类似微信视频通话的带有视觉的 AI 交互的手机和眼镜&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;今天 Google IO，发布了一个 Project Astra ，展现了一个类似微信视频通话的带有视觉的 AI 交互的手机和眼镜。&lt;/p&gt; 
   &lt;p&gt;对，就是昨天 GPT-4o 展示的东西。而且，Open AI 展示的能力更强大，要说亮点，就是 Google 还展示了一个带摄像头的眼镜。&lt;/p&gt; 
   &lt;p&gt;对，就是 Meta 已经卖了上百万条的 Glasses 那玩意。而且从技术上而言，Gemini 应该不是一个原生多模态的 LLM 。奥特曼提前一天发布 GPT-4o ，简直就是骑在 Google 头上抽他的脸。&lt;/p&gt; 
   &lt;p&gt;未来闭源 Open AI ，开源 Meta 。Google 可以去死了。[鼓掌]&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;李楠或 kkk&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1648195723%2FOen5h8FZ7&quot; target=&quot;_blank&quot;&gt;拼多多这是闷声发大财 &lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bda6f4175ed0aebed68abd2d8fee8dcfc6e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;电商报&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1644971875%2FOeotbok0h&quot; target=&quot;_blank&quot;&gt;阿里云与微软、Meta 等共同制定下一代 AI 网络架构标准&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;阿里云成功入选超以太网联盟（UEC）技术咨询委员会，成为唯一的中国公司成员，将与微软、Meta、AMD、博通等其他 12 名成员，共同推进开放网络系统及核心技术的研发及标准制定，打造下一代 AI 网络基础设施。&lt;/p&gt; 
  &lt;p&gt;在 AI 大模型时代，仅靠芯片性能提升已无法满足训练及推理的蓬勃算力需求，Linux 基金会发起成立开源组织——超以太网联盟 UEC (Ultra Ethernet Consortium) ，希望通过开源开放的技术合作促进创新，致力于打造面向 AI 时代的超大规模新型网络技术及系统。&lt;/p&gt; 
  &lt;p&gt;UEC 技术委员会是联盟中最核心的技术决策中心，只有技术实力过硬、对开源社区贡献大的会员机构才能入选。阿里云、Enfabrica、Marvell 等 3 名成员，共同组成了新一届 UEC 技术委员会。在 UEC 联盟中，阿里云正牵头推进面向 AI 需求的网络性能提升项目等技术草案，并持续向成员分享阿里云最新的技术积累和实践。同时，阿里云也是开放网络 SONiC 社区 7 个发起成员之一和技术委员会副主席单位。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;阿里云&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FPOhbLvFCqhBYZlMEj8p9HA&quot; target=&quot;_blank&quot;&gt;谷歌一夜亮出十几款产品对阵 OpenAI：什么都有，只是没有惊喜&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;皮查太需要一场惊艳的发布会，拿回属于谷歌的牌面了。&lt;/p&gt; 
 &lt;p&gt;所以与 OpenAI 的仅半个小时，集中在产品介绍的发布会完全不同。谷歌的 I/O 骨子里就透着一种武库尽出，拼死一战的意思。两个小时的发布会，它一口气拿出来十来款新品及升级，量大管饱，全面对标 OpenAI 在 AI 各领域上的发展。&lt;/p&gt; 
 &lt;p&gt;很多产品单看 Demo 还是有着不错的完成度，但整场发布会没有一点像 GPT-4o 带来那样的惊艳感。因为他们发布的大多数是追赶那些 OpenAI 已有的东西，没人会为一些别人已经做到的事情感到惊艳。&lt;/p&gt; 
 &lt;p&gt;最有可能带来惊艳感的新品——Gemini Astra 的戏份已经被昨天的 GPT-4o 演完了。&lt;/p&gt; 
 &lt;p&gt;到头来，想一秀肌肉的谷歌，还是被 OpenAI 四两拨千斤的卸了力。&lt;/p&gt; 
 &lt;p&gt;我们更多的从它的搜索产品，模型产品上看到了谷歌的疲态，创新的缺失。&lt;/p&gt; 
 &lt;p&gt;本想看巅峰对决，但实际上昨天这场对决就已经结束了。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;腾讯科技&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1798735151612126843%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;中国 AI 追随之路的五大误区&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;钛媒体集团创始人、董事长、CEO 长江商学院 EMBA 项目校友，赵何娟发表主题「中国 AI 追随之路的五大误区」的演讲。&lt;/p&gt; 
  &lt;p&gt;第一大误区：中美 AI 差距只有 1 到 2 年。&lt;br&gt; 第二个误区：中国是全球最大的 AI 专利和人才市场。&lt;br&gt; 第三个误区：中国 AI 的主要障碍是在算力上「卡了脖子」。&lt;br&gt; 第四大误区：闭源大模型 VS 开源大模型，谁更好？&lt;br&gt; 第五个误区：AI 在各大垂直产业的爆发，会很快发生。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- 钛媒体&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1799074102778061912%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;五大重磅更新速览！谷歌 I/O 开发者大会究竟公布了什么？&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;谷歌举办了年度 I/O 开发者大会，召开了长达两个小时的主题演讲。正如外界预期的那样，人工智能成为了这次活动的中心。在演讲中，这家科技巨头发布了众多有关人工智能的产品和服务：&lt;/p&gt; 
  &lt;p&gt;一、Gemini 的广泛升级&lt;br&gt; 二、Veo、Imagen 3、音频概述&lt;br&gt; 三、AI 赋能谷歌搜索&lt;br&gt; 四、Astra 项目&lt;br&gt; 五、AI 芯片等硬件&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- 财联社&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FHunyuanDiT&quot; target=&quot;_blank&quot;&gt;Tencent/HunyuanDiT&lt;/a&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5a1ff639675adb95c2687ae447992b3be80.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FHunyuanDiT&quot; target=&quot;_blank&quot;&gt;https://github.com/Tencent/HunyuanDiT&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;混元文生图大模型（下称：混元 DiT，Scalable Diffusion Models with Transformers）由腾讯开源，包含模型权重、推理代码、模型算法等完整模型，可供企业与个人开发者免费商用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;升级后的混元文生图大模型采用了与 Sora 一致的 DiT 架构，不仅可支持文生图，也可作为视频等多模态视觉生成的基础。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5783135/blog/11110885&quot; target=&quot;_blank&quot;&gt;程序员如何提升个人技术影响力&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;都说程序员的成长是码出来的，此话不假。但如果既会写代码，还会写文章，还能讲 PPT，那你离影响力还会远吗？&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;本文是针对每一个技术同学都适用。我将从行业技术大会主编的角色告诉你，如何打造自己的技术影响力，有哪些通用的手段，我自己又该如何做个性化叠加；我是技术小白，或者我有一定技术基础，我又该怎么打造自己的影响力？&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/30f6e2a86fff422a8951fc3423760429~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=20240513153634CD7C99652EB7A3979C1D&amp;amp;x-expires=2147483647&amp;amp;x-signature=psrVMSR6p1Zr8Q9E1Ojw1%2BB55M4%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;事件点评&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292516&quot; target=&quot;_blank&quot;&gt;微软中国 AI 团队集体打包去美国，涉及数百人&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;昨天许多网友在脉脉发布动态称，微软公司在邮件通知将中国区 Azure 人工智能团队的几个组集体打包去美国和澳大利亚。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;网传消息显示，C+AI 团队做 AI platform 的 Azure ML 团队将集体打包去美国，另外也有一些组去澳洲的。收到邮件的人在 6 月 7 日之前要下决定，不走就裁员。涉及大约数百人。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;325&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fb5757b74e24992121aee08828aa7a03b22.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一消息引发了关于微软公司全球战略调整和 AI 领域发展的讨论。首先，这一调动可能与微软的全球战略调整有关。随着技术的发展和市场的变化，公司可能需要在全球范围内重新分配其资源和技术人才。这次大规模的调动可能是为了更好地适应全球市场的需求，以及优化其在不同地区的业务结构。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其次，这一事件也反映了 AI 技术在全球范围内的竞争和合作。AI 技术的发展不仅需要强大的技术支持，还需要全球范围内的合作和人才流动。微软的这一调动可能是为了更好地整合全球范围内的技术资源和人才，以推动 AI 技术的发展和创新。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;最后，这一事件也引发了关于跨国公司内部文化和员工福利的讨论。大规模的调动可能会对员工的职业发展和生活造成影响，因此公司需要妥善处理员工的关切，确保员工的权益得到保障。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292514&quot; target=&quot;_blank&quot;&gt;中美举行人工智能政府间对话首次会议&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;双方均认识到人工智能技术发展既面临机遇也存在风险，重申继续致力于落实两国元首在旧金山达成的重要共识。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;240&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4ef8403d2fb4290f405a564ba7baa133650.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这次会议的举行标志着中美两国在人工智能领域的合作和对话的开始。在全球化背景下，中美作为两个最大的经济体和科技大国，在人工智能领域的合作至关重要。这次会议为两国在人工智能技术风险、全球治理等方面的交流提供了平台。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其次，会议中双方对人工智能技术风险的看法和治理举措的介绍显示了中美两国在人工智能治理方面的不同立场和策略。中方强调以人为本、智能向善的理念，确保人工智能技术有益、安全、公平，并支持加强全球治理。而美国则可能从安全和隐私的角度出发，关注人工智能技术可能带来的风险和挑战。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;最后，这次会议对于推动全球人工智能的健康发展具有重要意义。中美作为人工智能技术的重要推动者，两国的合作和对话将有助于形成广泛共识的全球人工智能治理框架和标准规范，从而促进人工智能技术的健康发展。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/292565&quot; target=&quot;_blank&quot;&gt;华为：鸿蒙生态设备数量超 8 亿台&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;华为终端官博发布消息称，鸿蒙生态设备数量已超 8 亿台，180 款设备可陆续升级 HarmonyOS 4.2，覆盖手机、平板、手表、智慧屏等。短短 1 个月，升级用户已超 2000 万。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;229&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e750d2ef2b32c75272a6ddc1aea1149a457.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一数字突显了华为在操作系统领域的显著成就。鸿蒙生态设备的快速增长对整个操作系统市场产生了影响。华为的这一成就可能会激励其他厂商加大在操作系统领域的投入，推动整个行业的创新和发展。同时，这也表明华为在构建一个多元化的生态系统方面取得了成功，这对于操作系统的发展至关重要。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;以及反映了华为在推动国产操作系统发展方面的努力。在当前全球技术竞争的背景下，发展国产操作系统对于保障国家信息安全和技术独立具有重要意义。华为的这一成就在这方面起到了积极的推动作用。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;净利润增长 54%，腾讯「印钞」&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯方面表示， AI 技术的驱动是推进「新芽」业务增长的重要因素。广告技术平台升级后，为所有广告主提供以腾讯混元大模型为基底的一站式人工智能广告创意平台，提升了腾讯广告业务的推荐精准度和投放效率。论营收同比增长，网络广告是腾讯三个主要业务中最高的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;北京商报&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Froll%2F2024-05-15%2Fdoc-inavhrkw2874715.shtml&quot; target=&quot;_blank&quot;&gt;两小时「吼出」121 次 AI，谷歌背后埋伏着 Open AI 的幽灵&lt;/a&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;「谷歌最坚固的护城河是分销，Gemini 不必成为最好的模型，也能成为世界上最常用的模型。」英伟达高级研究科学家范麟熙（Jim Fan）在 X 上评价。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;不再领先的谷歌，只好握紧生态的优势牌。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;雪豹财经社&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUxNTUyMjE4Mw%3D%3D%26mid%3D2247521325%26idx%3D1%26sn%3D028b08ae6dc5fa40aeb0a0323a0c9a5f%26scene%3D0&quot; target=&quot;_blank&quot;&gt;大模型一体机是在「卖盒子」吗？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#626262; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型不同于传统的软件技术，其训练和推理都会涉及大量重要隐私数据，又存在「幻觉」问题，对数据监管和内容安全的担忧并非杞人忧天。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#626262; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;而大模型一体机的本地私有化部署，可以帮助企业实现数据隔离与网络隔离，减少数据传输及存储的风险，确保数据资产的安全性。不打消客观存在的安全顾虑，大模型是很难落地到「最后一公里」的。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#626262; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;所以，大模型一体机并不等于传统的「卖盒子」，而是从复杂产业实际出发的一种选择。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;脑极体&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tmtpost.com%2F7086523.html&quot; target=&quot;_blank&quot;&gt;车载 GPT 爆红前夜：一场巨头竞逐的游戏&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;总体上，面对激烈的市场竞争，本土车企不能放过任何一个风口，大模型这种超级大的风口绝对不能错过，其他车企今年会陆续传来大模型上车的消息，这一点基本上毋庸置疑。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;接下来这一年，大家可能需要做好迎接各种车载大模型炫技的测评视频满天飞的准备，不过，也不用太理会他们说的怎么天花乱坠，大模型从「能用」到真正「好用」，再到产生破圈效应，诸位且耐心等一等吧。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;HiEV 大蒜粒车研所&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FulGK3JzKSGstGQ1OZGhUwQ&quot; target=&quot;_blank&quot;&gt;OpenAI 联合创始人兼首席科学家 Ilya Sutskever 宣布离职&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：人才注定是孤独的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：这一天终于还是来了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：董事会内讧，最后 Sam Altman 又回归，注定了当时被认为是领头的 Ilya 的结局是离开 openAI 不过是间隔多久而已&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：干得不开心了，委屈了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：Ilya Sutskever 是 AI 技术大拿是真正的 ChatGPT 之父, 奥特曼是做管理的是拉投资的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：快进到 OpenAI 失控，天网行动开始&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：agi 方向发生分歧&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FMijEhCxoQA7G_PSyKKX7Tw&quot; target=&quot;_blank&quot;&gt;微软将中国 AI 团队集体打包去美国，涉及数百人&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：劣币驱逐良币，遵守劳动法的外企都自愿或者被迫撤出了，剩下的都是擅长 996 和 PUA 的企业&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：首先强制调动就是违反劳动法&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：被动润，厉害啊&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：有能力才能润，不然就是裁员&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：那不爽死了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：微软的 AI 团队在中国大陆确实很尴尬，政策要求大模型要备案要在国内才能合规，美国又限制中国大陆访问美国训练 AI 的基础设施，不管怎么看把团队搬走是唯一的选择。&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：其实是一样的，如果是中国的大模型发展得比较厉害，要去美国落地的话同样会面临美国政府的各种审查，参考 TikTok 被要求数据管理隔离和数据存储本地化。&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：脱钩断链了&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：十年前的话，毫不犹豫就去了，现在的话真不好说。这些人工资这么高，肯定是在国内更舒服。去了工资不一定能涨多少。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：China AI out 策略的一部分&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：我觉得是变相裁员&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 12：台积电过去的完全可以跳槽去 INTER 啊，并且绝对工资翻几倍，你自己不跳怪谁，如果你选择跳 INTER 那边张开双手欢迎你&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FTio1I6ej_0EyKgJNclOnaA&quot; target=&quot;_blank&quot;&gt;前端第一可视化库、百度知名开源项目&lt;span&gt;——&lt;/span&gt;ECharts 创始人「下海」养鱼&lt;/a&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：技术下乡&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：牛逼的人做啥都牛逼&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：真诚羡慕，可以有多种谋生方法&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：羡慕啥？被毕业了没法再这个行业找到下家了，都是嫌弃年纪大了。唉........&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：不要以己度人，以我的观察。1. 他从百度离职早几年的事了，那会 Echarts 还是 3.x 吧，后来托管 Apache 到 5.0 重构又重新走回正轨，只要他愿意依然可以在开源社区中贡献和获得收入。2. 农业创投也是前几年风头了，现在已经进入落地产出的阶段，可能给他带来退出机会和长期主业收入。&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：创造虚拟世界，再生物理世界。从虚拟经济到实体经济的跨平台，跨领域，跨学科，跨行业的跨越式转型成功典范&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：就光养鱼吗？确定没有用大数据、AI 人工智能、元宇宙、中台、达摩院、云计算、区块链、物联网?&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：好像这个品牌背后是马云。这就不奇怪了啊，这就不奇怪了&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292607</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292607</guid>
            <pubDate>Wed, 15 May 2024 10:36:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>诈骗分子利用 TeamViewer 转走 398 万！远程桌面厂商该如何作为？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;刚刚看到新闻，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzj.ifeng.com%2Fc%2F8Za2PLTpOIh&quot; target=&quot;_blank&quot;&gt;398 万元被转走！杭州警方紧急提醒&lt;/a&gt;，诈骗分子利用 TeamViewer 远程操控受害者手机银行，转走受害者 398 万！&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;1538&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-56408f700fe25366ea1c1d6392f9eca854f.png&quot; width=&quot;1246&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;联想到我们上周发表的文章，&lt;a href=&quot;https://www.oschina.net/news/291123&quot;&gt;RustDesk 由于诈骗猖獗，暂停国内服务&lt;/a&gt;，很多人对我们的行为非常不解，甚至怀疑故意炒作，甚至有人在 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F7952&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt; 上说这是种族歧视，因为只是屏蔽中国。&lt;/p&gt; 
&lt;p&gt;迫于压力，我们于上周末，把屏蔽范围缩小，当前仅仅屏蔽国内的手机被控，桌面电脑被控不再受影响。&lt;/p&gt; 
&lt;p&gt;其中有一个最多的疑问，为什么别的远程桌面没有这个问题？事实是不光国人有这个问题，半年前我主动下架安卓应用的时候，外国人也都在问这个问题。&lt;/p&gt; 
&lt;p&gt;我们当时没有解释，因为大家已经习惯，不报道就是没有，没听到就是没有，甚至是自己没受害就是没有。可是大家应该想想，我们身边都有老人，他们是我们的至亲，他们都是当前科技浪潮下的弱势群体，随时都可能成为受害者，请你向他们解释一下当前面向手机银行远程操控的新型诈骗。更有效的做法是，请将他们的手机设置为老人模式，禁止安装新的软件。&lt;/p&gt; 
&lt;p&gt;俗话说，你看到一只蟑螂，就还有无数只你没有看到的。既然新闻已经爆出，就足以说明面向手机银行远程操控的诈骗已经流行。我们所有远程桌面厂商是不是应该做点什么呢？目前我们 RustDesk 能做的，也就是屏蔽国内的手机被控。&lt;/p&gt; 
&lt;p&gt;反诈任重道远，远控只是他们利用的一个工具而已，即使没有远控，他们也会有其他的方式，然而远控却在某种程度上提高了他们诈骗的效率。&lt;/p&gt; 
&lt;p&gt;我们不期望所有厂商像我们一样屏蔽手机被控，因为这种方式太极端，也损害了正常用户的利益，但我希望看到其他厂商能提出自己的解决方案，甚至组织安全联盟，制定出规范的反诈技术标准。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/292589</link>
            <guid isPermaLink="false">https://www.oschina.net/news/292589</guid>
            <pubDate>Wed, 15 May 2024 09:04:22 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>