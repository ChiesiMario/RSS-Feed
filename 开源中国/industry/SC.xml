<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 30 Jun 2025 16:45:26 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>豆包上线「深入研究」功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;豆包「深入研究」功能已经在豆包 App、网页版及电脑版正式开启测试，用户可免费体验。&lt;/p&gt; 
&lt;p&gt;基于模型的搜索、推理及 Agent 能力，「深入研究」可以帮助用户更快速、全面和结构化地处理高难度的复杂任务。针对长途旅行攻略、复杂购买决策、最新政策解读、商业科技趋势发展等需要获取大量资料、长时间研究的问题，借助「深入研究」能力，几分钟即可完成初步方案。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9f6c1c14ffd9352f40ee1c98040fd7cff53.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;同时，豆包还支持以可视化网页和报告文档两种方式呈现研究结果。&lt;/p&gt; 
&lt;p&gt;据介绍，将豆包更新至最新版后，打开 App 或电脑版，选择「深入研究」，输入详细指令或一句话 prompt，等待几分钟，即可生成一份报告。使用豆包 App 生成报告后，还可以打开报告内容，选择右上角「听」按钮，一键转成播客，随时听。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/358039</link>
      <guid isPermaLink="false">https://www.oschina.net/news/358039</guid>
      <pubDate>Sat, 10 May 2025 11:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>德国要求苹果和谷歌从应用商店下架 DeepSeek</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Fsustainability%2Fboards-policy-regulation%2Fdeepseek-faces-expulsion-app-stores-germany-2025-06-27%2F" target="_blank"&gt;据路透社报道&lt;/a&gt;，德国数据保护专员梅克·坎普发布声明，宣称已要求苹果和谷歌公司从其在德国的应用商店中下架中国初创公司自主研发的人工智能（AI）大语言模型「深度求索」（DeepSeek）的应用。他给出的理由是所谓的数据安全担忧。&lt;/p&gt; 
&lt;p&gt;坎普在声明中指控 DeepSeek「非法将用户个人数据传输至中国」，并要求苹果与谷歌尽快审查这一要求，以决定是否在德国封禁该应用，不过并未设定具体的处理时限。&lt;/p&gt; 
&lt;p&gt;媒体报道显示，谷歌公司证实已收到相关通知，目前正在进行评估；而苹果公司则暂未对此作出回应。&lt;/p&gt; 
&lt;p&gt;此前，DeepSeek 也因所谓数据安全问题，在欧美多地遭遇审查。另据媒体报道，意大利已于今年稍早以「个人数据使用不透明」为由，将 DeepSeek 应用从应用商店下架；荷兰则禁止政府设备使用该应用；比利时也建议政府官员避免使用 DeepSeek，并表示相关评估仍在进行中。与此同时，美国国会议员正计划提出法案，禁止联邦政府机构使用任何中国开发的 AI 模型。&lt;/p&gt; 
&lt;p&gt;针对部分国家传出禁止或限制使用 DeepSeek 的消息，中国外交部发言人此前已作出回应。在今年 2 月 6 日的例行记者会上，外交部发言人表示，中国政府始终高度重视数据隐私和安全保护，并依法开展相关工作，从未要求且将来也不会要求企业或个人以违法形式采集或存储数据。&lt;/p&gt; 
&lt;p&gt;此外，在今年 3 月 18 日的例行记者会上，另一位外交部发言人再次强调，中方一贯反对泛化国家安全概念、将经贸科技问题政治化的做法，并将坚定维护中国企业的合法权益。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/358029</link>
      <guid isPermaLink="false">https://www.oschina.net/news/358029</guid>
      <pubDate>Sat, 10 May 2025 10:36:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>RWKV-8 系列之 DeepEmbedAttention：精简 KV 缓存，尤其适合混合模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;5 月 27 日，我们公开了 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FYl79XfbMCO6ecAdKGzboRg" target="_blank"&gt;RWKV-8 首个新特性 DeepEmbed：对端侧友好的稀疏设计，解决 MoE 显存占用&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;今天，我们公开与其相关的另一个新特性：&lt;strong&gt;DeepEmbedAttention（DEA）&lt;/strong&gt; ，这是一种基于 RWKV-8 的 DeepEmbed 思路构建的注意力变体，拥有&lt;strong&gt;极小的 KV 缓存&lt;/strong&gt; ，尤其适合&lt;strong&gt;混合模型&lt;/strong&gt;（例如后续的 RWKV-7s 混合模型），可将它们的长上下文性能提升到 Transformer 水准。&lt;/p&gt; 
&lt;p&gt;DEA 的结构定义例子：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# q: D =&amp;gt; 256
# k: D =&amp;gt; 32, k_up: 32 =&amp;gt; 256, k_emb: V =&amp;gt; 256
# v: D =&amp;gt; 32, vup: 32 =&amp;gt; D, v_emb: V =&amp;gt; D
q = ln_q(q(x))
k = ln_k(k_up(k(x)) * k_emb(idx))
v = ln_v(tanh(v_up(v(x))) * v_emb(idx))   
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;然后将 QKV 的输出加到 RWKV-7 的输出上。这适合并行计算，例如可在不同设备（或异构计算）计算 QKV 和 RWKV-7 部分。&lt;/p&gt; 
&lt;p&gt;这个注意力头的维度是 256，但由于 DEA 的 &lt;code&gt;key&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 只需缓存 32 维，KV 总共只需缓存 64 个值（32+32）。&lt;/p&gt; 
&lt;p&gt;对于 RWKV-7，只需在每层加上一个 DEA head，就能显著增强长上下文能力。因此，对比现有的高效注意力机制（例如 MLA 使用 576 个值），&lt;strong&gt;DEA 的 KV 缓存进一步缩小到 64/576 = 1/9&lt;/strong&gt;，实现了极致效率。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c7be8702b07a9534c09539a5fa78e2cdc44.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;图中 loss delta 图的横轴是随着前文长度增加时 token 的位置（token_pos），纵轴表示两种架构在不同 token 位置的 loss 差值（token_loss delta）。&lt;/p&gt; 
&lt;p&gt;实验结果显示：随着前文长度增加，RWKV-7s（加入 DeepEmbed 和 DEA）在越来越长前文的 loss &lt;strong&gt;相较原版 RWKV-7 持续下降&lt;/strong&gt;，从 -0.13 降至 -0.17。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;这意味着 RWKV-7s 这类添加了 DEA 的混合模型，在处理长上下文时表现更好。因为 token 越靠后，所依赖的前文也越长，而 loss 差值持续扩大，代表 RWKV-7s 对比 RWKV-7 更有能力利用越来越长的前文所包含的越来越多的信息，语言建模能力越来越强。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;最后，尽管 DEA 的 KV 缓存非常小，但它仍会随上下文长度而缓慢增长。&lt;strong&gt;RWKV-8 的目标，是在完全无 KV 缓存的情况下也能实现强上下文能力&lt;/strong&gt;，且我们也有方法，后续逐步公布，欢迎大家关注。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/358026</link>
      <guid isPermaLink="false">https://www.oschina.net/news/358026</guid>
      <pubDate>Sat, 10 May 2025 10:11:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>欧洲首台百万兆次级超级计算机 JUPITER 启用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;位于德国的于利希超级计算中心（Jülich Supercomputing Center）近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspectrum.ieee.org%2Fjupiter-exascale-supercomputer-europe" target="_blank"&gt;推出&lt;/a&gt;了欧洲首台百万兆次级超级计算机 JUPITER (木星)。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="312" src="https://oscimg.oschina.net/oscnet/up-37c973b7767f9f8d83e4f3ade8a1fabef7f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;JUPITER 于 2025 年 6 月首次亮相于全球最强大计算机系统的 TOP500 排行榜上，位列第四。它拥有 5900 个加速计算节点，配备了约 24000 颗 Nvidia Grace-Hopper&amp;nbsp;超级芯片和 1300 个使用 Rhea1 处理器的节点。此外，JUPITER 还采用了 InfiniBand NDR 网络来确保高速数据传输。该计算机的设计旨在支持复杂的科学计算任务，推动气候模型和天气预报的研究。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;这个项目旨在创建一个地球系统的数字复制品，以更好地监测和预测自然现象与人类活动的相互作用。研究者们表示，需要这样一台大型机器来处理气候和大气数据，JUPITER 能以 700 米的分辨率展示这些物理现象，从而为气象学和气候科学提供更深入的洞察。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;此外，德国伊尔梅瑙工业大学的物理学家们也在利用 JUPITER 进行研究。他们专注于可视化热羽流，探讨流体和气体的对流与湍流现象。科学家们通过这台超级计算机的强大运算能力，能够呈现出以前无法获得的细节，进一步理解自然界中复杂的流动模式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;JUPITER 的建设始于 2018 年，经过多次升级和完善，在 2024 年计划推出的 JEDI 原型机和 JETI 过渡系统模块的支持下，最终在 2025 年全面投入使用。该计算机的能效设计也备受关注，其制冷系统利用附近的鲁尔河水，为校园建筑提供取暖，展现出对能源消耗的关注和可持续发展理念。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/358021/jupiter-exascale-supercomputer-europe</link>
      <guid isPermaLink="false">https://www.oschina.net/news/358021/jupiter-exascale-supercomputer-europe</guid>
      <pubDate>Sat, 10 May 2025 09:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>JSON Crack —— 将 JSON 可视化为交互式图表</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                            &lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;JSON Crack 是一款以结构化交互式图表形式可视化 JSON 数据的工具，方便用户探索、格式化和验证 JSON。它提供多种功能，例如将 JSON 转换为其他格式（CSV、YAML）、生成 JSON Schema、执行查询以及将可视化结果导出为图像。其设计兼顾了可读性和易用性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;可视化工具&lt;/strong&gt;：立即将 JSON、YAML、CSV、XML 和 TOML 转换为暗模式或亮模式下的交互式图形或树。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;转换&lt;/strong&gt;：无缝转换数据格式，如将 JSON 转换为 CSV 或将 XML 转换为 JSON，以便于共享。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式化和验证&lt;/strong&gt;：美化和验证 JSON、YAML 和 CSV 以获得清晰准确的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码生成&lt;/strong&gt;：生成 TypeScript 接口、Golang 结构和 JSON 模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JSON Schema&lt;/strong&gt;：创建 JSON Schema、模拟数据并验证各种数据格式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高级工具&lt;/strong&gt;：解码 JWT、随机化数据以及运行 jq 或 JSON 路径查询。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;导出图像&lt;/strong&gt;：将你的可视化效果下载为 PNG、JPEG 或 SVG。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隐私&lt;/strong&gt;：所有数据处理都是本地的；服务器上不会存储任何内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img height="438" src="https://static.oschina.net/uploads/space/2025/0630/164831_2A2G_4252687.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/jsoncrack</link>
      <guid isPermaLink="false">https://www.oschina.net/p/jsoncrack</guid>
      <pubDate>Sat, 10 May 2025 09:20:00 GMT</pubDate>
    </item>
    <item>
      <title>AI 造物社区项目发布指引</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;使用前请先注册 OSC 开源社区账号，按照以下说明操作，照片清晰，报告整洁，介绍全面，附件有代码， 基本会一次性审核通过。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#245bdb"&gt;&lt;strong&gt;1. 注册账号&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/172849_N1db_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;完成注册并登录后，进入造物社区&amp;nbsp;&lt;/strong&gt;&lt;em&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/ai-creation"&gt;&lt;strong&gt;https://www.oschina.net/ai-creation&lt;/strong&gt;&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;strong&gt;，点击「发布一个新项目/发布一个新的造物」，发布新项目。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/172907_YADg_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#245bdb"&gt;&lt;strong&gt;2. 项目基础信息&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;标「&lt;span style="color:#d83931"&gt;*&lt;/span&gt;」的为必填项目。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;封面图片上传格式为 4:3，分辨率 1080P，图片内存大小建议小于 1MB，过大容易上传失败。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;项目介绍部分简要填写项目简介即可。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/172927_GAOA_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#245bdb"&gt;&lt;strong&gt;3. 「项目详情」页&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;视频请先上传到 B 站/优酷/腾讯，然后在「视频代码」处粘贴视频分享的嵌入代码（iframe 格式），以下是 B 站复制嵌入代码的方式。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173137_W7Ba_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目内容填写可根据实际完成项目内容填写，格式可参考示例。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173149_4iMQ_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;代码的插入请使用「代码块」工具插入&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173201_y81p_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;注意格式整洁，正文字号建议用默认字号 14px，标题建议用三级标题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 AI 工具前，需先用鼠标选中需要 AI 介入的文段内容，再选择对应的 AI 工具对文段进行润色，AI 翻译当前仅支持「中=英互译」。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173212_caKR_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#245bdb"&gt;&lt;strong&gt;4. 「所需物料」页&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;在「硬件组件」一栏点击「添加」，可填写硬件名称、购买网址、购买数量及硬件描述。可添加多个硬件明细。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173223_TJzj_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在「软件应用和在线服务」一栏点击「添加」，可添加制作项目所用的软件平台及敏捷制造、供应链服务等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173234_DrKy_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在「手动工具和生产设备」一栏点击「添加」，可填写用于制作项目的设施设备。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&amp;nbsp;&lt;/h4&gt; 
&lt;h3&gt;&lt;span style="color:#245bdb"&gt;&lt;strong&gt;5. 「附件清单」页&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;在「外壳和定制部件」一栏点击「添加」，可上传 3D 模型、结构件设计图纸等内容。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在「代码」一栏点击「添加」，可项目代码及硬件「库」等内容。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在「原理图和电路图」一栏点击「添加」，可项目接线图、原理图等，建议上传 JPG/PNG 格式文件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;编辑完成后点击「下一步」。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#245bdb"&gt;&lt;strong&gt;6. 上传团队成员信息，并「发布」项目&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;完成项目内容的编辑之后，先点击「设置为发布」，之后点击「预览项目」可查看自己的项目。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;发布之后若查出存在问题，可在项目预览界面，点击「编辑/删除」再次修改。若在项目通过之后发现存在问题，依旧可再次修改项目，直到项目完善。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173246_6PYI_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;查询项目发布历史可以在「个人中心」——「我的造物」中进行查询或项目修改/删除。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0630/173255_JgBm_9214603.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#245bdb"&gt;&lt;strong&gt;参考示例&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/ai-creation/details/2006"&gt;https://www.oschina.net/ai-creation/details/2006&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/ai-creation/details/2005"&gt;https://www.oschina.net/ai-creation/details/2005&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/ai-creation/details/2063"&gt;https://www.oschina.net/ai-creation/details/2063&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/358019</link>
      <guid isPermaLink="false">https://www.oschina.net/news/358019</guid>
      <pubDate>Sat, 10 May 2025 09:19:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>悟了，多模态才是智能应用爆发的关键</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;此前，快手发布 2025 年一季度财报时，一个数字引发关注：成立仅两年的 AI 业务线「可灵 AI」单季度贡献营收 1.5 亿元，同比增长 320%。而可灵 AI 正是一个多模态应用的典型产品，涉及到语言、视频、音频等交互。&lt;/p&gt; 
&lt;p&gt;前不久，在 OSCHINA 和小度教育技术负责人丁小晶的&lt;a href="https://my.oschina.net/u/4489239/blog/18426743" rel="nofollow"&gt;对话&lt;/a&gt;中。丁小晶表示，多模态技术非常重要，甚至可以说，没有多模态技术效果的快速提升，教育行业不可能如此迅猛发展。比如 AI 作业批改和 AI 讲题答疑方向的应用，完全靠纯文本大模型是无法满足需求的，非常依赖对大模型的图片理解能力。还比如超拟人 AI 老师，语音情感大模型就起来非常关键的作用。&lt;/p&gt; 
&lt;p&gt;百度最新发布的发布文心快码 Comate AI IDE 产品，其中也提到了多模态能力的增强，比如支持 Figma 设计稿一键转换为高可用代码，能实现图层的精准还原。百度工程效能部前端研发经理杨经纬告诉开源中国，无论是从自然语言、图片还是设计稿生成代码，最终都是为了能更加接近人类工程的意图，因为人类去描述自己想要实现的想法的方式与形态是多种多样的，也就对应了研发过程中的多模态形式。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="210" src="https://oscimg.oschina.net/oscnet/up-db06f16dbd4e854566d762bff8c3dfe1e5f.png" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;人类从不会只用一种感官认知世界。人工智能也势必不能仅有一种交互途径。&lt;/p&gt; 
&lt;p&gt;我们闻到咖啡香气的瞬间，脑海里会立刻浮现深褐色液体与白瓷杯的画面；听到「猫」这个词时，脑海中自动补全毛茸茸的触感和呼噜声。这种多模态信息融合，正是人类智能的底层逻辑。而单一模态交换的 AI 模型的信息处理能力有限，例如文本生成模型难以理解图像语义，无法根据文字生成图像，视频生成工具则无法同步解析声音与画面逻辑。这种时候，就需要多模态模型或是能力的配合。&lt;/p&gt; 
&lt;span id="OSC_h2_1"&gt;&lt;/span&gt; 
&lt;h2&gt;多模态，比文本慢一步&lt;/h2&gt; 
&lt;p&gt;智源研究院院长王仲远不久前公开&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.msn.cn%2Fzh-cn%2F%25E6%258A%2580%25E6%259C%25AF%2F%25E6%258A%2580%25E6%259C%25AF%25E5%2585%25AC%25E5%258F%25B8%2F%25E8%2581%259A%25E7%2584%25A6%25E5%25A4%259A%25E6%25A8%25A1%25E6%2580%2581-chatgpt%25E6%2597%25B6%25E5%2588%25BB%25E6%259C%25AA%25E5%2588%25B0-2025%25E5%25A4%25A7%25E6%25A8%25A1%25E5%259E%258B-%25E5%258F%2598%25E6%2585%25A2-%25E4%25BA%2586%25E5%2590%2597%2Far-AA1GjaHk%3Focid%3DBingNewsSerp" rel="nofollow" target="_blank"&gt;指出&lt;/a&gt;，当前多模态大模型的学习路径，尤其是多模态理解模型，通常是先将语言模型训练到很强的程度，再学习其他模态信息。在这个过程中，模型的能力可能会出现下降。&lt;/p&gt; 
&lt;p&gt;比单一模态更难的是，多模态模型还需解决一个核心问题：如何将图像、文本、音频等异构数据在语义层面对齐并融合。&lt;/p&gt; 
&lt;p&gt;文本、图像、声音等模态的数据结构天然异构——文本是离散符号序列，图像是连续像素矩阵，音频是时间序列信号。比如要让模型理解「猫」的文本描述与猫的图片、叫声之间的关联，需构建跨模态的共享语义空间。&lt;/p&gt; 
&lt;p&gt;早期，有研究尝试通过数据级拼接，将图像像素和文本特征直接拼接，实现跨模态融合，但由于图像和文本的时空特性差异较大，导致特征对齐困难，最终效果不佳。直到对比学习和注意力机制的出现，才实现跨模态语义映射。比如 OpenAI 2021 年推出的一种基于对比学习只的多模态预训练模型 CLIP，它通过大规模的图像和文本数据进行训练，使得模型能够理解图像内容和相关文本之间的语义关系。CLIP 的核心贡献在于它打破了传统的固定类别标签范式，通过对比学习的方式，将图像和文本映射到同一个向量空间中，从而实现跨模态的检索和分类。但是 CLIP 模型的训练数据规模庞大，据 OpenAI 披露，其使用了约 4 亿图像-文本对进行训练，训练成本高达数千 GPU 日，远超 GPT-3 等纯文本模型。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="304" src="https://oscimg.oschina.net/oscnet/up-4ad6b286433edebde043654fd53af191e30.png" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;span style="color:#8f959e"&gt;&lt;em&gt;CLIP 模型方法概述 &lt;/em&gt;&lt;/span&gt;&lt;span style="color:#8f959e"&gt;&lt;u&gt;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2103.00020" rel="nofollow" target="_blank"&gt;Learning Transferable Visual Models From Natural Language Supervision&lt;/a&gt;&lt;/em&gt;&lt;/u&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;多模态融合需处理高维数据，如 4K 视频的像素量是文本的百万倍，传统 Transformer 的二次方计算复杂度成为致命短板。对此，业界也有一些解决方式，比如此前 Mamba 架构通过状态空间模型 SSM 将计算复杂度降至线性，2025 年扩展动态融合模块&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F2985554863" rel="nofollow" target="_blank"&gt; FusionMamba&lt;/a&gt;，在其中实现多模态特征高效交互，推理速度提升 3 倍。&lt;/p&gt; 
&lt;p&gt;不仅如此，相较于文本的资料库和数据集，高质量多模态数据集也更加稀缺，收集难度更大。比如医疗影像、工业质检的报告中的缺陷描述等，就需专家级别的标注人员。&lt;/p&gt; 
&lt;span id="OSC_h2_2"&gt;&lt;/span&gt; 
&lt;h2&gt;落地需求更多&lt;/h2&gt; 
&lt;p&gt;虽然技术上还有诸多难点，但是多模态能力正在逐步提升，并且带来非常可观的价值和效果。&lt;/p&gt; 
&lt;p&gt;比如，从图片或者是 Figma 设计稿直接生成代码可以帮助许多开发者或是产品经理完成一些开发工作。这项能力此前在一些低代码或是辅助编程工具中也存在，但往往是通过 Figma DSL 进行设计稿解析，通过节点虚拟化技术实现像素级还原，其不足在于不一定适配当前项目，比如转了一套 Vue 框架的代码，就无法在 React 框架项目中使用。&lt;/p&gt; 
&lt;p&gt;杨经纬介绍，此次文心快码 Comate AI IDE 的发布以及相关功能更新后，通过大模型能力增强了 Figma to Code 和当前项目的融合度。首先在 IDE 里进行操作，天然就可以理解用户当前环境和本地优势，而 IDE 内智能体 Zulu 的接入，会更深入到本地项目中了解当前的框架、能力、代码风格等，再结合 Image to Code 的能力，可以实现较高的还原度，并且适配当前的项目。&lt;/p&gt; 
&lt;p&gt;而根据一些公开信息显示，可灵 AI 的多模态技术，支持通过图片、文字、声音甚至手绘轨迹等输入生成视频。在上半年的 2.0 模型的迭代中，可灵 AI 也发布了 AI 视频生成的全新交互理念 Multi-modal Visual Language（MVL），让用户能够结合图像参考、视频片段等多模态信息，将脑海中包含身份、外观、风格、场景、动作、表情、运镜在内的多维度复杂创意，直接高效地传达给 AI。MVL 由 TXT（Pure Text，语义骨架）和 MMW（Multi-modal-document as a Word，多模态描述子）组成，能从视频生成设定的基础方向以及精细控制这两个层面。此外，其技术也结合了类 Sora 的 DiT 结构和 Flow 扩散模型，提升在物理模拟和细节上的表现。&lt;/p&gt; 
&lt;p&gt;基于这些技术特征。商业化层面，截至今年 6 月，可灵 AI 已为超过 1 万家企业客户提供 API 服务，覆盖广告营销、影视动画等领域，企业客户续费率较高。&lt;/p&gt; 
&lt;p&gt;此外，一些传统行业或场景也在结合多模态能力，实现与 AI 的加速融合。比如迪瑞医疗近期采用的多模态 AI 大模型算法技术为临床诊断带来了重要的技术革新，结合多种检测结果和患者的多维信息，如尿常规、血常规、生化和化学发光免疫，以及患者的个人背景、临床表现、现病史与既往病史等，进行全面分析。&lt;/p&gt; 
&lt;p&gt;这种跨学科的信息整合使得诊断提示更加精准，对于减少漏诊、误诊的概率具有显著的作用，并进一步提升了医疗诊疗的整体效率。大洋彼岸，斯坦福医学院的科研团队研发出了一种名为&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxMTM0OTQzNQ%3D%3D%26mid%3D2247486194%26idx%3D1%26sn%3D5ac605d67ca7019b3b2e524d65b0f88e%26chksm%3Dc0eed67e545679711993370e69032cc62e9d4fc0c6ff3e283c43854fd93355eae8a07b4fcb02%23rd" rel="nofollow" target="_blank"&gt; MUSK 的 AI 模型&lt;/a&gt;，将视觉数据，如病理图像和文本数据的病历和临床记录相结合，为癌症治疗带来了新的可能。MUSK 模型不仅提高了预测癌症患者预后和治疗反应的准确性，而且通过分析数千个数据点，更准确地确定了哪些疗法对个体患者最有效。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="285" src="https://oscimg.oschina.net/oscnet/up-196e0ee8b1058ba8ee70698e626a846fe72.png" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;span style="background-color:#f2f3f5"&gt;&lt;em&gt;视觉问答测试，图片来源于网络&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;在金融领域。江苏银行通过本地化部署微调 DeepSeek-VL2 多模态模型、轻量 DeepSeek-R1 推理模型，分别运用于智能合同质检和自动化估值对账场景中，通过对海量金融数据的挖掘与分析，重塑金融服务模式，实现金融语义理解准确率与业务效率双突破。具体而言，DeepSeek-VL2 多模态模型采用了最新的 Transformer 架构，结合多层次的特征融合机制，有效提升了金融合同、账单等复杂文本与图像信息的理解能力。模型在智能合同质检场景中表现出色，准确率较传统方法提升了 15% 以上，显著降低了人工审核成本。同时，轻量化的 DeepSeek-R1 推理模型则在自动化估值与对账场景中展现出极佳的实时响应能力，推理速度提升了 30%，为金融业务流程的自动化提供了坚实支撑。&lt;/p&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;新的基础设施&lt;/h2&gt; 
&lt;p&gt;应用边界在不断拓宽的同时，多模态模型的能力也在成长。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;而随着应用场景的深化，模型架构也在同步进化，从基础感知迈向复杂推理成为必然趋势。OpenAI 在 2025 年 4 月发布了多模态模型 O3 和 O4-mini，实现了「用图像思考」的突破性能力。这些模型不仅能够识别图像内容，还能将图像信息整合进推理思维链，支持多步推理和因果分析，比如够处理模糊、倒置或复杂的图像输入，并给出合理的推理结果。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;其背后的关键技术包括分层注意力机制，将图像分解为局部细节、全局关系和时序逻辑三层结构，从而提升对图像内容的理解能力；动态工具链调用，在推理过程中，模型可以自主选择 Python 分析、知识图谱检索、图像生成等工具辅助决策，以及安全约束模块，通过对抗训练减少模型的幻觉输出。&lt;/p&gt; 
&lt;p&gt;就在本月，中国科学院自动化研究所等单位的科研人员&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkw.beijing.gov.cn%2Fxwdt%2Fkcyx%2Fxwdtkjqy%2F202506%2Ft20250611_4111006.html" rel="nofollow" target="_blank"&gt;首次证实&lt;/a&gt;，多模态大语言模型在训练过程中自己学会了「理解」事物，而且这种理解方式和人类非常像。&lt;/p&gt; 
&lt;p&gt;科研人员借鉴人脑认知的原理，设计了一个巧妙的实验：让大模型和人类玩「找不同」游戏。实验人员会给出三个物品概念（选自 1854 种常见物品），要求选出最不搭的那个。通过分析高达 470 万次的判断数据，科研人员绘制出了大模型的「思维导图」——「概念地图」。通过实验证实多模态大模型具备类人「概念理解」能力。研究团队设计「找不同」游戏，基于 470 万次判断数据绘制大模型「概念地图」，提炼 66 个理解维度（如物体功能、文化意义），发现其与人脑神经活动高度一致，证明多模态模型比纯文本模型更接近人类思维模式。&lt;/p&gt; 
&lt;p&gt;据谷歌云在 2024 年年底发布的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.qq.com%2Frain%2Fa%2F20241219A07AW200" rel="nofollow" target="_blank"&gt;《2025 年人工智能商业趋势报告》&lt;/a&gt;，预测到 2025 年，多模态 AI 将成为企业采用 AI 的主要驱动力。这种技术通过整合图像、视频、音频和文本等多种数据源，使 AI 能够以前所未有的准确性从更广泛的上下文源中学习，提供更精确、定制化的输出，创造自然直观的体验。报告预计，全球多模态 AI 市场规模将在 2025 年达到 24 亿美元，到 2037 年底达到 989 亿美元。&lt;/p&gt; 
&lt;p&gt;2025 进度已经过半，我们也能看到市面上许多多模态技术和产品的进展，而这场变革的终极图景，或许正是让 AI 真正成为理解世界、服务人类的「多模态智能伙伴」。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4489239/blog/18679654</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4489239/blog/18679654</guid>
      <pubDate>Sat, 10 May 2025 09:07:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Mozilla 修复 Firefox 140 在 Windows 上出现的崩溃问题</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Mozilla 正在为 Firefox 浏览器推出又一次更新。140.0.2 版本是刚刚发布的 140.0.1 版本之后的又一次更新，旨在修复更多导致 Windows 在某些情况下崩溃的错误。&lt;/p&gt; 
&lt;p&gt;发行说明内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;修复了某些用户在 Windows 上遇到的启动崩溃问题。&lt;/strong&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1974259"&gt;1974259&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;根据 Mozilla 的 Firefox 漏洞追踪器&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1974259"&gt;Bugzilla 上的一篇文章&lt;/a&gt;，浏览器会因 ERROR_INVALID_HANDLE 或 ERROR_INVALID_PARAMETER 错误而崩溃。这种情况发生在 Windows 安全设置中启用了 「漏洞利用保护」 时。&lt;/p&gt; 
&lt;p&gt;虽然普通用户不太可能会碰这个功能，但微软商店中的应用程序已启用漏洞保护。因此，从 Microsoft Store 下载 Firefox 的用户最有可能发生崩溃不过，如果全局启用了漏洞保护，从官方网站下载的 「标准」 Firefox 也会失败。&lt;/p&gt; 
&lt;p&gt;请注意，该漏洞不会影响较新版本的 Firefox。现在，随着 Firefox 140.0.2 的发布，无论您的安全设置或浏览器来源如何，浏览器都不会再崩溃。作为参考，您可以&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F140.0.2%2Freleasenotes%2F"&gt;在此处&lt;/a&gt;找到最新更新的发行说明。&lt;/p&gt; 
&lt;p&gt;与往常一样，您可以通过前往菜单 &amp;gt; 帮助 &amp;gt; 关于 Firefox 来更新 Firefox。该浏览器可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2Fwindows%2F"&gt;在官方网站&lt;/a&gt;、 Windows 10 和 11 用户&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapps.microsoft.com%2Fdetail%2F9NZVDKPMR9RD"&gt;的 Microsoft Store&lt;/a&gt;下载。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/358008</link>
      <guid isPermaLink="false">https://www.oschina.net/news/358008</guid>
      <pubDate>Sat, 10 May 2025 08:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ECMAScript 2025 标准正式发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;ECMAScript 2025 现已获得 ECMA International 的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fecma-international.org%2Fnews%2Fecma-international-approves-new-standards-11%2F" target="_blank"&gt;批准&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1444" src="https://static.oschina.net/uploads/space/2025/0630/161138_aINy_2720166.png" width="2342" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;以下是主要新特性：&lt;/p&gt; 
&lt;h3&gt;异步处理改进&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 Promise.try() 方法&lt;/strong&gt; ：用于统一封装同步返回值或抛错的函数，相比以往的 Promise.resolve().then(fn) 或 new Promise(resolve =&amp;gt; resolve(fn()))，Promise.try(fn) 更简洁高效。例如，对于一个可能会抛出异常的函数，使用 Promise.try() 可以更方便地进行错误处理。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;可立即抛出同步异常&lt;/strong&gt; ：使用 Promise.try() 时，若函数同步抛出异常，能够立即捕获并处理，避免了使用 Promise.resolve().then(fn) 时引入的微任务延迟，提高了错误可见性与调试效率，适用于封装第三方同步 API，使其具备统一的异步处理能力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;集合操作增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 Set 实例方法&lt;/strong&gt; ：为 Set 实例新增了七个方法，包括集合运算方法 intersection()（交集）、union()（并集）、difference()（差集）、symmetricDifference()（对称差集），以及集合关系方法 isSubsetOf()（是否为子集）、isSupersetOf()（是否为超集）、isDisjointFrom()（是否无交集），使集合操作更加方便快捷，符合数学上的集合运算逻辑。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;迭代器功能扩展&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增同步迭代器辅助函数&lt;/strong&gt; ：为所有同步迭代器添加了一系列辅助方法，如 .map(fn)、.filter(fn)、.flatMap(fn)、.some(fn)、.every(fn)、.find(fn)、.reduce(fn, init)、.forEach(fn)、.drop(n)、.take(n)、.toArray() 等。这些方法支持链式调用，可用于链式处理可迭代对象的数据，实现惰性求值，避免创建多个中间数组，提升内存效率，特别适合处理大型或无限可迭代数据，如生成器、流数据等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;正则表达式增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 RegExp.escape() 方法&lt;/strong&gt; ：可将字符串中的正则元字符转义，使其能够安全地嵌入正则表达式中，避免动态生成正则表达式时出现语法错误，防止正则注入漏洞，替代手动维护的转义函数。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;正则表达式内联标志&lt;/strong&gt; ：允许在正则表达式内部使用内联语法 (?flags:...) 或 (?flags1-flags2:...) 以局部开启或关闭某些标志位，如 i、m、s 等。例如，在正则 /^x(?i:HELLO)x$/ 中，整个表达式外部没有 i 标志，而只对子串 HELLO 应用忽略大小写，避免了正则拆分与多轮匹配逻辑。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;重复命名捕获组&lt;/strong&gt; ：允许在正则表达式的不同分支中使用相同的命名捕获组名称，只要这些同名组不可能同时匹配。这便于对形式不同但结构类似的文本进行统一处理，如解析多种日期格式、键值对格式等，可简化后续处理逻辑，避免代码冗余。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;模块系统优化&lt;/h3&gt; 
&lt;p&gt;新增导入属性，允许在 import 语句中指定附加信息，以指定如何加载模块，主要用于引入非 JavaScript 资源，如 JSON 文件或 CSS 模块。静态导入时，可在路径后加上 with 选项；动态导入时，将其放在第二个参数的 with 字段中，使用起来更加方便简洁，可直接像引用 JS 模块一样使用 JSON 数据等。&lt;/p&gt; 
&lt;h3&gt;数值表示扩展&lt;/h3&gt; 
&lt;p&gt;提供对 16 位浮点数的原生支持，包括 Float16Array、DataView.prototype.getFloat16()/setFloat16() 以及 Math.f16round(number)。这在 WebGPU / WebGL 中可节省带宽与内存，在深度学习中便于传递模型参数，也可用于模拟硬件精度限制。&lt;/p&gt; 
&lt;h3&gt;其他特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;后置检查的声明式控制流&lt;/strong&gt; ：引入了 checked { }块和 assert 关键字，在 checked 块中的操作会在执行后立即检查是否出界等，assert 用于断言，若条件不成立会直接抛出异常，为开发者提供了更灵活的错误检查方式。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ArrayBuffer 的构造共享数组&lt;/strong&gt; ：新增了 ArrayBuffer 构造函数的 shared 构造标志，可创建一个共享的 ArrayBuffer，其视图成为共享数组，所有代理都具有相同的内存视图，允许多个 JavaScript 工作线程之间共享和传递 ArrayBuffer，提高了数据共享和传递的效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fecma-international.org%2Fpublications-and-standards%2Fstandards%2Fecma-262%2F" target="_blank"&gt;https://ecma-international.org/publications-and-standards/standards/ecma-262/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/358006/ecma-international-approves-ecma-262-standards</link>
      <guid isPermaLink="false">https://www.oschina.net/news/358006/ecma-international-approves-ecma-262-standards</guid>
      <pubDate>Sat, 10 May 2025 08:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI 造物社区作品分享——灵韵启航者 V1.0 模块化多主控嵌入式学习扩展平台</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2063</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2063</guid>
      <pubDate>Sat, 10 May 2025 07:33:00 GMT</pubDate>
    </item>
    <item>
      <title>Apache ECharts 6.0 震撼发布・前图无量</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;包含 12 项重大升级的新版本 Apache ECharts 6.0&amp;nbsp;beta&amp;nbsp;震撼发布！&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-527376c0462101df980d04693e86657155c.png" width="900" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;12 年前的今天，ECharts 在 GitHub 首次发布，一颗开源的种子从此萌发。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;从最初的图表工具，到如今成长为支撑百万级开发者的可视化巨擘；从单一的前端图表库，演进为支持移动端、大屏、服务端渲染等全场景的技术体系。这 12 年间，我们见证了 ECharts 在技术方面的持续突破，更欣喜地看到全球开发者用 ECharts 创造出无数惊艳的数据故事。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;今天，作为 ECharts 12 岁生日的献礼，我们呈上诚意满满的 12 项升级，只为百尺竿头，更进一步。&lt;/strong&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_2"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;6.0 功能概览&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;12 年的沉淀，只为更极致的可视化表达。Apache ECharts 的核心力量，始终源于对开发者真实挑战的深刻理解。当我们为 6.0 定义方向时，问题很清晰：&lt;strong&gt;如何让复杂数据的呈现既足够强大，又足够优雅&lt;/strong&gt;？&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;这驱使我们围绕三个核心维度进行深度进化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#3c3c41; margin-left:0; margin-right:0"&gt;&lt;strong&gt;更专业的可视化呈现&lt;/strong&gt;：从精心打磨的默认主题，到响应系统深色的智能切换，确保图表具备专业质感，无缝融入现代应用体验。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#3c3c41; margin-left:0; margin-right:0"&gt;&lt;strong&gt;拓展数据表达的边界&lt;/strong&gt;：新增更多图表类型与功能，构建完整复杂场景应对体系，实现深度数据的直觉化表达。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#3c3c41; margin-left:0; margin-right:0"&gt;&lt;strong&gt;释放组合编排的自由&lt;/strong&gt;：从革命性的矩阵座标系，到可复用的自定义系列生态，再到座标轴标签优化——赋予开发者更自由编排的能力，将创意映射为无拘束的可视化作品。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;我们在这三个核心维度上做了 12 项升级。这些升级并非简单的功能叠加，而是为构建下一代数据驱动应用，铺设的坚实能力基座。它们共同指向一个目标：&lt;strong&gt;让 ECharts 强大、可靠、稳定地服务于后台，把舞台和聚光灯留给你的创造性表达。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;下文将针对这十二项升级分别展开介绍：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;更专业的可视化呈现&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;1. 全新默认主题&lt;/strong&gt;：采用更符合现代审美的设计语言，以专业设计赋能数据表达&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;2. 动态主题切换&lt;/strong&gt;：支持运行时无缝切换主题，适配多主题场景&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;3. 深色模式响应&lt;/strong&gt;：自动适配系统深色/浅色模式，提升用户体验&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;拓展数据表达的边界&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;4. 新增和弦图&lt;/strong&gt;：拓展复杂关系与分布数据的呈现方式&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;5. 新增蜂群图&lt;/strong&gt;：通过动态分布算法，将重叠数据点智能展开为蜂窝状排列&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;6. 新增抖动散点图&lt;/strong&gt;：通过增加散点图分布范围，增强高密度数据的可读性&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;7. 新增断轴&lt;/strong&gt;：表达数据断层，轻松呈现量级悬殊的数据对比&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;8. 升级股市交易类图表&lt;/strong&gt;：增强标签能力，更多开箱即用的交易类图表&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;释放组合编排的自由&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;9. 新增矩阵座标系&lt;/strong&gt;：各种图表类型和组件像表格一样自由组合，灵活布局&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;10. 升级自定义系列&lt;/strong&gt;：支持 npm 发布与动态注册使用，实现自定义系列代码复用&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;11. 新增多款自定义图表&lt;/strong&gt;：小提琴图、轮廓图、阶段图、范围柱状图、范围折线图&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;12. 座标轴标签优化&lt;/strong&gt;：新版智能优化座标标签布局，默认防溢出防重叠&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;我们希望通过 Apache ECharts 6.0 的全新升级，帮助用户更灵活方便地创建更多图表，实现真正的「前图无量」！&lt;/p&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;6.0 功能介绍&lt;/span&gt;&lt;/h2&gt; 
&lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;1. 全新默认主题&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在 ECharts 6.0 的开发过程中，我们深入分析了用户的真实使用场景，发现超过七成的开发者直接采用默认主题。这让我们意识到：一个优秀的默认主题不仅要具备美学价值，更要符合各个业务场景的通用需求。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;新版主题系统内部使用了设计令牌（design token）对颜色、距离等设计元素进行重构，&lt;strong&gt;使得不同图表类型和组件之间更和谐一致&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1112" src="https://oscimg.oschina.net/oscnet/up-33db58f15c1920472cd553c403993475298.png" width="1374" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;虽然 6.0 的主题在 5.x 版本上有非常大的调整，但是我们提供了一个&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;v5.js&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;主题文件，对于希望使用新版本功能但保留原有样式的开发者，可以实现快速迁移。&lt;/p&gt; 
&lt;span id="OSC_h3_5"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;2. 动态主题切换&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在之前的版本中，如果想要改变一个图表的主题，就必须注销图表实例后重新初始化，二次的初始动画可能对用户体验带来负面影响。在新版本中，我们实现了&lt;strong&gt;主题的动态切换能力&lt;/strong&gt;，显著地提升用户体验。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="748" src="https://oscimg.oschina.net/oscnet/up-9947656bc5171c2a30c23c4b75934379b7e.gif" width="2310" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_6"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;3. 深色模式响应&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在实现主题的动态注册和切换之后，一个典型场景是&lt;strong&gt;监听系统是否使用深色模式，并动态调整图表的深色与浅色主题&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e59f2ed5763271ac6fa7916256647b08afb.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;这对于支持深色模式的业务场景至关重要，可以确保应用界面与系统主题风格一致，显著提升用户体验的流畅性和专业性。&lt;/p&gt; 
&lt;span id="OSC_h3_7"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;4. 新增和弦图&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;和弦图直观展现复杂关系网络中的流量与权重，特别适合金融交易、社交网络等场景的多维度关系分析。ECharts 创新性地支持&lt;strong&gt;使用出节点和入节点的渐变色作为边的颜色，呈现独特的视觉美感&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-22e400fefa94e415f8f8cd351b6b3defc6d.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_8"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;5. 新增蜂群图&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;传统的散点图在类目轴下如果数据过于密集，蜂群图（Beeswarm）通过将数据在非数值维度上的偏移，在保持数值轴准确性的前提下，实现&lt;strong&gt;散点图的无重叠分布&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="764" src="https://oscimg.oschina.net/oscnet/up-679aa129dbc4a50b4606b32808689fc2a6e.png" width="2696" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_9"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;6. 新增抖动散点图&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;抖动散点图（Scatter Jittering）采用随机扰动策略，&lt;strong&gt;在非数据维度上添加固定范围的随机偏移，解决数据过于密集的问题&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;从下图我们可以看到，在未使用抖动的情况下，如果数据过于密集，很难看清数据的分布情况。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="694" src="https://oscimg.oschina.net/oscnet/up-daefea73c75395417883abf6c7cbdf56969.png" width="1778" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;而在开启了数据抖动之后，可以更清楚地看到数据分布最密集的范围是 6-8 之间。并且，相比蜂群图，抖动散点图具有更高的处理性能。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="698" src="https://oscimg.oschina.net/oscnet/up-118da4edaaa2b612ceff48d29fb8d0594c3.png" width="1774" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_10"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;7. 新增断轴&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;断轴（Broken Axis）是一种通过座标轴断层展现悬殊量级数据的可视化手段。在 ECharts 6.0 中，我们创新性地实现了&lt;strong&gt;模拟撕纸效果的断轴，使得断轴的含义能被更直观地传递&lt;/strong&gt;，并且支持点击展开的效果，还原到真实数据比例。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b7f720940572be1c275278ec87d6171aba0.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_11"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;8. 升级股市交易类图表&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;ECharts 6.0 针对金融交易场景深度优化，增强了标签针对座标系的相对定位能力，助力开发者快速构建专业级行情分析工具。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;下图展示了一个使用 ECharts 实现的股市交易图的综合应用场景，结合了&lt;strong&gt;分时图、MACD、成交量、买卖盘口、深度图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="812" src="https://oscimg.oschina.net/oscnet/up-fb976684815eeff8befdf76d267d849e940.png" width="1830" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;这些实例可以帮助开发者快速实现金融交易场景的需求。&lt;/p&gt; 
&lt;span id="OSC_h3_12"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;9. 新增矩阵座标系&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;上述例子也用到了 ECharts 6.0 新增的矩阵座标系，它的功能十分强大。不仅可以用来做协方差矩阵图：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1030" src="https://oscimg.oschina.net/oscnet/up-950f22af70128f97374d97bfc07719c2750.png" width="1030" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;元素周期表：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="992" src="https://oscimg.oschina.net/oscnet/up-a4e935c7f85e0d17e1e8b856ceb6c2845e6.png" width="1962" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;作为一种布局，它还允许开发者将各种图表类型和组件结合，创造出灵活复杂的可视化作品：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="806" src="https://oscimg.oschina.net/oscnet/up-f81198d8f93b1bbfd2dcbdf89eaf32ef55c.png" width="1764" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_13"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;10. 升级自定义系列&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;过去，使用 ECharts 自定义系列意味着开发者必须从零手写&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;renderItem&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;复杂逻辑，即使是&lt;em&gt;复用&lt;/em&gt;，也只是复制粘贴代码。现在，ECharts 6.0 带来标准化可复用方案：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;自定义系列的注册机制&lt;/strong&gt;：和主题注册类似，自定义系列也可以动态注册和使用，使用方式和内置图表系列一样简单方便&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;官方自定义系列项目&lt;/strong&gt;：官方在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts-custom-series" target="_blank"&gt;https://github.com/apache/echarts-custom-series&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;发布了多个自定义系列，在正式版本发布后，开发者可以通过 npm 等方便地获取&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;发布自己的自定义系列&lt;/strong&gt;：可以向上述项目提 Pull Request 或发布到自己的仓库，实现自定义系列的复用&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_14"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;11. 新增多款自定义图表&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;本次发布，自定义系列项目提供了 6 款实用的图表。包括&lt;strong&gt;小提琴图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="658" src="https://oscimg.oschina.net/oscnet/up-2ec364a1cabff54c4ea91ace9c12f08c02b.png" width="1590" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;轮廓图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-fd67b02ec1848427fcd927da32dd2de9928.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;睡眠阶段图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-0c7eb75c90b32a67ff8ffbb72a520c2fdcf.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;分段环形图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-bb55929a897532184f86f8785e11bfba8d6.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;范围柱状图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-1e477671a337c71317d269cbca150897895.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;范围折线图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-9d8991600dc2aeeb40525a829289b95d886.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;发挥你的创意，快来和我们一起创造更多自定义图表吧！&lt;/p&gt; 
&lt;span id="OSC_h3_15"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;12. 座标轴标签优化&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在之前的版本中，直角座标系的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;axisLabel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;axisName&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在数据比较长时容易超出屏幕，以及重叠。数据变化时使用者并不总能准确预估空间来完全避免它们。在这个版本中我们优化了防止超出屏幕以及防止重叠的策略，并成为默认。&lt;/p&gt; 
&lt;span id="OSC_h2_16"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;升级指南&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;ECharts 6.0 目前已发布 beta 版本&lt;/strong&gt;，可以通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;npm install echarts@6.0.0-beta.1&lt;/code&gt;抢先体验并反馈问题。正式发布后，原有项目可以通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;npm install echarts&lt;a href="https://my.oschina.net/u/3005086" target="_blank"&gt;@6&lt;/a&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;升级。届时，官网将同步更新升级指南、文档及教程。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Freleases%2Ftag%2F6.0.0-beta.1" target="_blank"&gt;前往 GitHub Release&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#3c3c41"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;查看更多信息。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_17"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;前图无量 · 与君同行&lt;/span&gt;&lt;/h2&gt; 
&lt;span id="OSC_h3_18"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;ECharts MCP 开源在即&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在 AI 重塑数据洞察的今天，&lt;strong&gt;我们即将开源一个 ECharts Model Context Protocol (MCP)&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;项目，用大模型能力重新定义数据表达的终极形态，完成数据可视化的最后一公里，助你轻松实现&lt;em&gt;前图无量&lt;/em&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;我们将在未来几个月逐步揭晓更多技术细节，以及如何利用 MCP 构建企业级智能图表服务的完整指南。请持续关注我们，获取最新技术解析和最佳实践案例。&lt;/p&gt; 
&lt;span id="OSC_h3_19"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;更多详细教程&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;接下来的几个月，我们会&lt;strong&gt;持续输出更多教程，详细地介绍 ECharts 6.0 的各大新功能&lt;/strong&gt;，敬请关注！&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;十二年前的星星之火，借开源的力量，已成今日之炬。ECharts 6.0 的每一行代码、每一个新功能，都凝聚着社区开发者的智慧与付出。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;最后，让我们再次感谢所有为这个版本贡献过的开发者们！&lt;/strong&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_20"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;百度招聘 ECharts 实习生&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;百度招聘 ECharts 实习生 1-2 名，负责 ECharts 新功能开发、bug 修复，表现优异者有转正机会，优先考虑未来一年内毕业的在校大学生。社招无固定名额，特别优秀者（以下岗位要求高度符合）欢迎投递简历交流。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;岗位要求：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;对数据可视化和开源项目有热情、有想法、有能力&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;计算机或可视化等相关专业&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;熟练掌握 TypeScript&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;熟练掌握原生 Canvas、SVG 编程&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;apache/echarts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;项目提过至少 2 个 Pull Request（也欢迎现在开始尝试提，不要求已合入），投递简历时必须附上至少 2 个 PR 链接。这是我们主要评估你的技术能力的方式，请投递能体现你技术水平的 PR&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;加分项：熟悉计算机图形学、熟悉 WebGL 编程&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;岗位信息：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;工作地点：上海或北京&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;岗位有效期至 2025.9.30&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;简历投递至：zhangwenli01 at baidu.com&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_21"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;贡献者惊喜福利&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;2025.7.1 - 2025.9.30 期间，为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;apache/echarts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;项目提过至少 2 个 Pull Request（不要求已合入）的前 20 名开发者，可邮件至&lt;span&gt;&amp;nbsp;&lt;/span&gt;zhangwenli01 at baidu.com&lt;span&gt;&amp;nbsp;&lt;/span&gt;申请领取以下奖励：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ECharts 周边：T 恤、钥匙圈、别针式徽章、贴纸若干枚&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;文心快码&lt;/em&gt;（基于文心大模型、结合百度编程大数据的 AI 工具）企业级会员一年以上&lt;strong&gt;免费使用&lt;/strong&gt;权益。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_22"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;完整版本更新记录&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [theme] ECharts 6.0 新主题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20865" target="_blank"&gt;#20865&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [chord] 新增和弦图系列&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20522" target="_blank"&gt;#20522&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [matrix&amp;amp;calendar] 新增矩阵座标系，并且所有的系列和组件 (包括其他座标系组件，例如&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;grid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(直角座标系)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;polar&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等) 支持声明式地布局在矩阵座标系或日历座标系的格中&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F19807" target="_blank"&gt;#19807&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21005" target="_blank"&gt;#21005&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [custom] 支持可复用的自定义系列&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20226" target="_blank"&gt;#20226&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [cartesian] 引入新的布局方式避免直角座标系 (&lt;code&gt;grid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;组件) 的座标轴标签 (&lt;code&gt;axisLabel&lt;/code&gt;) 和座标轴名称 (&lt;code&gt;axisName&lt;/code&gt;) 超出可视范围，以及避免他们重叠，并且设为默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F21059" target="_blank"&gt;#21059&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;),&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19534" target="_blank"&gt;#19534&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frobin-gerling" target="_blank"&gt;robin-gerling&lt;/a&gt;),&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F16825" target="_blank"&gt;#16825&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkonrad-amtenbrink" target="_blank"&gt;konrad-amtenbrink&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [scatter] 支持散点图系列的抖动&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F19941" target="_blank"&gt;#19941&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [axis] 支持座标轴断轴&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F19459" target="_blank"&gt;#19459&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20857" target="_blank"&gt;#20857&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [theme] 支持动态注册和切换主题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20705" target="_blank"&gt;#20705&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [roam] 缩放平移的基础设施升级 - 支持用户指定 (&lt;code&gt;roamTigger&lt;/code&gt;) 可触发缩放平移的区域；支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;clip&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;series.map&lt;/code&gt;)；支持鼠标指针样式变化以提示缩放平移区域；支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;preserveAspect&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;，&lt;code&gt;series.map&lt;/code&gt;，&lt;code&gt;series.graph&lt;/code&gt;，&lt;code&gt;series.tree&lt;/code&gt;，&lt;code&gt;series.sankey&lt;/code&gt;)；修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;center&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的百分比基准 (于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;，&lt;code&gt;series.map&lt;/code&gt;，&lt;code&gt;series.graph&lt;/code&gt;，&lt;code&gt;series.tree&lt;/code&gt;)；优化缩放平移区域重叠时的表现&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19807%23issuecomment-2974437299" target="_blank"&gt;#19807#issuecomment-2974437299&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [thumbnail] 为关系图系列支持缩略图&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19807%23issuecomment-3013454598" target="_blank"&gt;#19807#issuecomment-3013454598&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F17471" target="_blank"&gt;#17471&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLruler" target="_blank"&gt;Lruler&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [marker] 标记点/标记线/标记区域 (&lt;code&gt;markPoint&lt;/code&gt;/&lt;code&gt;markLine&lt;/code&gt;/&lt;code&gt;markArea&lt;/code&gt;) 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;z2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20782" target="_blank"&gt;#20782&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsz-p" target="_blank"&gt;sz-p&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [stack] 支持反转堆叠顺序&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20998" target="_blank"&gt;#20998&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJustin-ZS" target="_blank"&gt;Justin-ZS&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [sankey] 支持桑基图系列的交互缩放 (&lt;code&gt;roaming&lt;/code&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20321" target="_blank"&gt;#20321&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [custom] 在自定义系列的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;renderItem&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;compoundPath&lt;/code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20402" target="_blank"&gt;#20402&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21040" target="_blank"&gt;#21040&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [marker] 标记支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;relativeTo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;相对座标系的位置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20166" target="_blank"&gt;#20166&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21042" target="_blank"&gt;#21042&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [axis] 支持角度轴 (&lt;code&gt;angleAxis&lt;/code&gt;) 标签的提示框 (&lt;code&gt;tooltip&lt;/code&gt;)&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20986" target="_blank"&gt;#20986&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [tooltip] 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;displayTransition&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项以控制是否启用提示框显示过渡动画&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20966" target="_blank"&gt;#20966&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjqqin" target="_blank"&gt;jqqin&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [legend] 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;triggerEvent&lt;/code&gt;选项&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20907" target="_blank"&gt;#20907&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsz-p" target="_blank"&gt;sz-p&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [custom] 自定义系列 (&lt;code&gt;custom series&lt;/code&gt;) 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;tooltipDisabled&lt;/code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20447" target="_blank"&gt;#20447&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [i18n] 新增挪威博克马尔语 (nb-NO) 翻译&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20792" target="_blank"&gt;#20792&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjoakimono" target="_blank"&gt;joakimono&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [label] 修复富文本样式不继承普通标签样式的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20977" target="_blank"&gt;#20977&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21016" target="_blank"&gt;#21016&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [dataZoom] 修复时间轴上数据形状分布的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F16978" target="_blank"&gt;#16978&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fandrearoota" target="_blank"&gt;andrearoota&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21043" target="_blank"&gt;#21043&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21039" target="_blank"&gt;#21039&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [tooltip] 修复类目轴上值为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;null&lt;/code&gt;的项应能显示提示框的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20777" target="_blank"&gt;#20777&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJustin-ZS" target="_blank"&gt;Justin-ZS&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [visualMap] 修复部分文本样式在视觉映射 (&lt;code&gt;visualMap&lt;/code&gt;) 上不起作用的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20961" target="_blank"&gt;#20961&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [dataZoom] 在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;brushEnd&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时限制范围&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20814" target="_blank"&gt;#20814&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FmortalYoung" target="_blank"&gt;mortalYoung&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [heatmap] 修复日历热力图范围外的标签被意外显示的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20699" target="_blank"&gt;#20699&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [series] 修复维度索引不匹配的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20682" target="_blank"&gt;#20682&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJustin-ZS" target="_blank"&gt;Justin-ZS&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [bar] 修复极座标系下的柱形图，在变化时应更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;roundCap&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20582" target="_blank"&gt;#20582&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [pie] 修复当单个标签位置不在外部时，&lt;code&gt;labelLine&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可能未被移除并导致错误的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20906" target="_blank"&gt;#20906&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [sankey] 修复当&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;emphasis.focus&lt;/code&gt;为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;'trajectory'&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时，处理大数据导致浏览器崩溃的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20959" target="_blank"&gt;#20959&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [custom] 修复应用离开过渡时可能出现的空指针异常 (NPE)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20920" target="_blank"&gt;#20920&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [dataZoom] 将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;moveHandler&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的光标改为默认 (&lt;code&gt;default&lt;/code&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20304" target="_blank"&gt;#20304&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fribeirompl" target="_blank"&gt;ribeirompl&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [tooltip] 修复提示框关闭后用于样式座标变换的标记点未被移除的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20987" target="_blank"&gt;#20987&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [bar] 从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;BarSeriesOption&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口中移除未使用的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;startValue&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20901" target="_blank"&gt;#20901&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [title] 修复标题文本样式的宽度类型不应包含字符串的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20800" target="_blank"&gt;#20800&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsz-p" target="_blank"&gt;sz-p&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [roam] 修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RoamControllerHost&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的导入路径&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20313" target="_blank"&gt;#20313&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [svg] 移除&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;getSvgDataURL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中的 SVG 支持检查&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20760" target="_blank"&gt;#20760&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;[Break] 相对于 v5.6.0 的 Breaking changes: 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;默认主题已发生变化，包括视觉样式以及组件 (component) 和系列 (series) 的默认位置设置，例如，默认图例 (legend) 的位置现在改为在画布底部，新的默认设置更加合理，但如果影响了现有用法，可以使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;echarts/theme/v5.js&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;恢复旧的视觉样式和位置设置，参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20865" target="_blank"&gt;#20865&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;v5 版本中的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;echarts/src/theme/light.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;已迁移至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;echarts/theme/rainbow.js&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在直角座标系中 (&lt;code&gt;grid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;组件)，如果之前座标轴名称 (&lt;code&gt;axisName&lt;/code&gt;) 或标签 (&lt;code&gt;axisLabel&lt;/code&gt;) 溢出画布或发生重叠，现在座标轴的位置可能会相对之前而言略微偏移，因为默认启用了防止溢出和防止，座标轴名称与标签重叠的机制，在大多数情况下，这些变化肉眼难以察觉，但如果出现不合理的变化，可以通过设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;grid.outerBoundsMode: 'none'&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项关闭防溢出机制，或设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;xAxis/yAxis.axisLabel.nameMoveOverlap: false&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项关闭防重叠机制，参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F21059" target="_blank"&gt;#21059&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;、&lt;code&gt;series.map&lt;/code&gt;、&lt;code&gt;series.graph&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;series.tree&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中，&lt;code&gt;center&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项中百分比 (如&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;'33%'&lt;/code&gt;) 的基准发生了变化，之前的百分比基准是错误的，如需恢复旧行为，可在 ECharts option 的根级别设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;legacyViewCoordSysCenterBase: true&lt;/code&gt;参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19807%23issuecomment-2974437299" target="_blank"&gt;#19807#issuecomment-2974437299&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;现在标签 (label) 的 rich 样式 (&lt;code&gt;fontStyle&lt;/code&gt;、&lt;code&gt;fontWeight&lt;/code&gt;、&lt;code&gt;fontSize&lt;/code&gt;、&lt;code&gt;fontFamily&lt;/code&gt;、&lt;code&gt;textShadowColor&lt;/code&gt;、&lt;code&gt;textShadowBlur&lt;/code&gt;、&lt;code&gt;textShadowOffsetX&lt;/code&gt;、&lt;code&gt;textShadowOffsetY&lt;/code&gt;) 会继承普通标签样式，如需恢复旧行为，可以在 ECharts 配置的根级别或标签样式选项同级处设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;richInheritPlainLabel: false&lt;/code&gt;参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20977" target="_blank"&gt;#20977&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/echarts/blog/18679315</link>
      <guid isPermaLink="false">https://my.oschina.net/echarts/blog/18679315</guid>
      <pubDate>Sat, 10 May 2025 06:29:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>京东：目前京东币链科技并没有开始发行稳定币</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;「京东发言人」官方微博今日发布《关于京东稳定币产品及业务合作不实信息的严正声明》指出：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;我们近期关注到某些企业发布有关和京东币链展开合作的信息，存在失实情况，误导了行业和公众舆论。请大家注意甄别，警惕「荐股」类骗局，避免财产损失。同时，我们再次提醒公众，目前京东币链科技并没有开始发行稳定币，也没有设立任何相关社区，目前所有获取京东稳定币的信息均涉嫌欺诈。&lt;/p&gt; 
 &lt;p&gt;有关产品和企业业务合作信息，请以京东币链在官网（&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjdcoinlink.com" target="_blank"&gt;jdcoinlink.com&lt;/a&gt;）发布的信息为准。对侵犯我公司利益的不实信息，我们保留追究其法律责任的权利。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height="301" src="https://oscimg.oschina.net/oscnet/up-d1063cf30cb370da57c1ede298b17a79d9f.png" width="300" referrerpolicy="no-referrer"&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357971</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357971</guid>
      <pubDate>Sat, 10 May 2025 06:10:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>CODING DevOps 即将下线！Zadig 推出开源替代公益迁移援助计划</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet//e0fdf0a12c54500241423b2609f30a24.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
 &lt;span id="OSC_h2_1"&gt;&lt;/span&gt; 
 &lt;h2&gt;Coding 业务调整，开发者何去何从？&lt;/h2&gt; 
 &lt;span id="OSC_h3_2"&gt;&lt;/span&gt; 
 &lt;h3&gt;Coding 业务调整详情&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet//f46cae80911d4097fca388ce8949cdf5.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   近日，腾讯云 CODING 平台发布了重大业务调整公告：2025 年 9 月 1 日起，CODING 将取消原标准版套餐，下线部分核心功能（制品安全扫描、测试管理、测试协同、仪表盘、研发度量）。新注册团队用户界面将不再有持续部署、应用管理功能。与此同时： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2025 年 9 月 1 日：标准版产品正式下线，原标准版用户无法登录，需付费升级到高级版或旗舰版 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2025 年 9 月 30 日：所有产品停止新购 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2026 年 3 月 30 日：所有产品停止续购 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2028 年 9 月 30 日：所有产品停止服务 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   对于依赖 CODING 标准版的中小团队和开发者而言，这一调整带来了不小的冲击。原本免费或低成本使用的基础功能将不复存在，面临 
  &lt;strong&gt;功能缺失&lt;/strong&gt;或 
  &lt;strong&gt;成本陡增&lt;/strong&gt;的两难选择。 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_3"&gt;&lt;/span&gt; 
 &lt;h3&gt;Zadig 公益援助：开源替代方案零门槛接入&lt;/h3&gt; 
 &lt;div&gt;
   作为开源云原生 DevOps 平台，Zadig 现面向 CODING 用户推出「开源平替公益迁移计划」，提供从功能适配到技术支持的全流程免费援助，核心优势如下： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     开源免费基础能力：基础版开源免费，覆盖持续集成、测试管理等核心场景，直接替代 CODING 标准版功能。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     1:1 功能替代：完整支持 CODING 核心能力，包括蓝绿部署、灰度发布、自动化测试等，同时新增 AI 环境巡检、多云管理等进阶功能。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     公益迁移支持：组建专项技术团队，提供免费迁移咨询、配置调试及操作培训，确保平滑过渡。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
 &lt;h3&gt;技术兼容性升级：全链路支持腾讯生态&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 深度兼容腾讯云及生态产品，消除迁移技术壁垒： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     腾讯云全家桶无缝集成：原生支持腾讯云 CVM（云主机）、TKE（K8s 集群）、TCR（容器镜像服务）、COS（对象存储）等产品，迁移无需重构架构。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     多云部署灵活性：除腾讯云外，还支持阿里云、华为云、AWS 等 6 大公有云及自建 K8s 集群，避免厂商锁定。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
 &lt;h2&gt;Zadig 与 Coding 功能对比：全方位分析&lt;/h2&gt; 
 &lt;span id="OSC_h3_6"&gt;&lt;/span&gt; 
 &lt;h3&gt;基础功能对比&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 和 Coding 作为两款主流的 DevOps 平台，在核心功能上存在明显差异。以下是两者的基础功能对比： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;table cellspacing="0" style="border-collapse:collapse; border:none; table-layout:fixed; width:500px"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        功能模块 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Coding 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Zadig 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        持续集成 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持，1500 核时 / 月 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持，无限制 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        测试管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        标准版取消，高级版支持 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        全功能支持，包含自动化测试 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        制品管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Docker 制品库镜像 5000 个 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持多种制品类型，对接多个制品仓库（涵盖阿里云 ACR、腾讯云 TCR、华为云 SWR、Amazon ECR、微软云 ACR、谷歌云 AR、DockerHub、Harbor 、JFrog、Nexus 等） 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        环境管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        应用级环境管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        产品级环境管理，支持多环境以及异构 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        部署策略 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持蓝绿和分批次灰度发布 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持蓝绿、金丝雀、分批次灰度等多种策略 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        效能洞察 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        基础分析功能 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持自定义指标和评分权重 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        访问控制 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持 RBAC 权限控制 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持 RBAC 和 ABAC 双重权限控制 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        企业个性化 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        不支持 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        允许配置企业 Logo 和自定义系统主题 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;关键差异点&lt;/strong&gt;：Zadig 提供了更全面的测试管理功能、更灵活的部署策略和更精细的权限控制，尤其适合中大型团队和对安全合规有较高要求的企业。 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_7"&gt;&lt;/span&gt; 
 &lt;h3&gt;云原生与扩展性对比&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;table cellspacing="0" style="border-collapse:collapse; border:none; table-layout:fixed; width:500px"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        特性 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Coding 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Zadig 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        云原生支持 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限，部分云原生功能 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        全面支持云原生架构，提供云原生开发环境 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        多云支持 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        腾讯云生态为主 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        广泛支持多云环境，包括阿里云、腾讯云、华为云、GCP、AWS、Azure 等 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        部署方式 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        主推公有云服务，提供私有化部署方案 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        私有化部署为主，支持 K8s 和主机部署 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        扩展性 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        受限于腾讯云生态 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        高度可扩展，支持自定义插件和扩展 API 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        自动化治理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持通过项目模板实现一键治理数千服务 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Zadig 的云原生优势&lt;/strong&gt;：Zadig 不仅支持云原生开发环境，还提供了完整的云原生应用管理能力，能够帮助企业快速构建现代化的软件交付体系。同时，其多云支持能力确保企业不会被单一云厂商锁定，提升了架构的灵活性和可移植性。 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_8"&gt;&lt;/span&gt; 
 &lt;h3&gt;AI 赋能与自动化对比&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;table cellspacing="0" style="border-collapse:collapse; border:none; table-layout:fixed; width:500px"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        功能 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Coding 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Zadig 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 功能 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 代码助手 CodeBuddy 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        内置 AI 环境巡检与效能诊断功能 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        自动化测试 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持自动化测试用例管理和执行 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        自动化部署 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        基础支持 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        全面支持自动化部署流水线，支持多种部署策略 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        效能分析 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        基础指标 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 效能诊断可智能分析效能数据，快速定位瓶颈 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        异常检测 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 环境巡检增强了对 Kubernetes 环境的自动异常检测能力 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Zadig 与 DeepSeek 等 AI 模型深度集成，提供了强大的 AI 环境巡检与效能诊断功能，能够帮助团队快速识别和解决开发过程中的问题，提升整体效率。 
 &lt;/div&gt; 
 &lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
 &lt;h2&gt;迁移价值：从「应急替代」到「效能升级」&lt;/h2&gt; 
 &lt;div&gt;
   迁移到 Zadig，研发团队能收获以下最佳实践以及收益 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_10"&gt;&lt;/span&gt; 
 &lt;h3&gt;云原生开发实践&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 充分发挥云原生优势，支持以下最佳实践： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;微服务架构支持&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Zadig 的多服务并行构建功能，提高微服务开发效率 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用模板库功能，快速创建标准化的微服务配置 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实现服务级别的独立部署和回滚，降低变更风险 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;环境隔离与管理&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     创建开发、测试、预发布和生产等多个隔离环境 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用环境变量和配置管理，确保不同环境的配置一致性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的环境模板功能，快速创建标准化环境 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;容器化最佳实践&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Dockerfile 模板创建标准化的容器镜像 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施容器镜像的安全扫描和漏洞检测 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的云原生构建功能，优化容器构建流程 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_11"&gt;&lt;/span&gt; 
 &lt;h3&gt;自动化测试与质量保障&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 支持全面的自动化测试策略： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;测试左移实践&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在代码提交阶段执行单元测试和静态代码分析 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Zadig 的前置验证功能，在合并请求前进行自动化测试 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施持续测试，确保代码质量持续提升 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;测试并行化&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     将测试用例分组并行执行，缩短测试周期 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的并行测试能力，支持千条测试用例并行执行 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施测试环境的快速创建和销毁以及睡眠，提高资源利用率 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;测试数据管理&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Zadig 的环境管理功能，为测试提供一致的数据集 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_12"&gt;&lt;/span&gt; 
 &lt;h3&gt;持续交付与发布管理&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 提供强大的持续交付和发布管理能力： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;蓝绿部署与灰度发布&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施蓝绿部署，确保服务连续性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用金丝雀发布和分批次灰度发布策略，降低发布风险 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的全链路灰度发布功能，实现精细化的发布控制 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;自动化发布流水线&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     创建端到端的自动化发布流水线 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施基于事件的触发机制，如代码提交、定时触发等 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的工作流功能，实现复杂的发布逻辑 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;回滚策略&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施一键回滚功能，确保配置快速恢复 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的版本管理功能，轻松管理应用版本 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施发布前的预检查，降低回滚需求 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_13"&gt;&lt;/span&gt; 
 &lt;h3&gt;效能分析与持续改进&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 提供全面的效能分析能力，支持持续改进： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;数据驱动的决策&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的效能洞察功能，收集和分析开发过程数据 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     自定义效能指标和评分权重，精准分析业务效能短板 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施定期的效能评估和改进计划 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;自动化监控与告警&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     配置关键指标的监控和告警 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的 AI 效能诊断功能，自动识别性能瓶颈 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施异常检测和自动恢复机制 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;span id="OSC_h2_14"&gt;&lt;/span&gt; 
 &lt;h2&gt;迁移行动指南：三步完成平滑过渡&lt;/h2&gt; 
 &lt;span id="OSC_h3_15"&gt;&lt;/span&gt; 
 &lt;h3&gt;迁移准备&lt;/h3&gt; 
 &lt;div&gt;
   在开始迁移前，需要完成以下准备工作： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;加入 Zadig 公益援助群：&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     加入 Zadig 迁移支持群，获得免费的技术咨询和迁移指导 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     探讨迁移方案以及迁移的最佳实践 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;评估现有系统&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     列出所有使用的 Coding 功能和服务 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     评估各功能的使用频率和重要性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     识别依赖 Coding 特定功能的工作流程 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;环境准备&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     安装并配置 Zadig 环境，可以选择本地部署或云服务器部署 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     集成必要的第三方服务，如代码仓库、镜像仓库等 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     准备迁移所需的账号和权限 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;数据备份&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     备份 Coding 中的重要数据，包括代码、配置文件、构建日志等 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     导出测试用例、缺陷报告和其他项目管理数据 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;团队培训&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     组织团队成员参加 Zadig 培训课程，了解 Zadig ，方便快速上手 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     建立内部支持渠道，解答迁移过程中的问题 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_16"&gt;&lt;/span&gt; 
 &lt;h3&gt;配置迁移&lt;/h3&gt; 
 &lt;div&gt;
   迁移工作流和以及环境配置是关键步骤： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;构建配置迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中为每个服务创建构建配置 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     复制 Coding 中的构建脚本，并进行必要的调整 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     配置代码源、构建环境和构建参数 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;工作流迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     分析 Coding 中的工作流逻辑和触发条件 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中创建对应的工作流 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     配置触发器，例如 Git 提交、Pull Request 等事件 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;环境配置迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     收集 Coding 中的环境配置信息 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中创建环境，并配置相关服务和变量 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;权限与角色迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     分析 Coding 中的权限设置和角色分配 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中创建对应的用户组和权限策略 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     批量导入用户并分配相应的权限 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_17"&gt;&lt;/span&gt; 
 &lt;h3&gt;测试与验证&lt;/h3&gt; 
 &lt;div&gt;
   迁移完成后，必须进行全面的测试和验证： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;功能测试&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     验证所有核心功能是否正常工作 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     测试不同环境下的部署和回滚流程 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     检查自动化测试用例的执行结果 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;性能测试&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     测试构建和部署的性能是否满足要求 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     验证大规模并发构建的稳定性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     监控 Zadig 的资源使用情况，确保系统稳定运行 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;集成测试&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     验证与第三方服务的集成是否正常 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     检查权限控制和安全策略是否正确实施 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h2_18"&gt;&lt;/span&gt; 
 &lt;h2&gt;行动建议&lt;/h2&gt; 
 &lt;span id="OSC_h3_19"&gt;&lt;/span&gt; 
 &lt;h3&gt;&lt;strong&gt;对于技术负责人&lt;/strong&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;strong&gt;尽快评估&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     评估 Coding 功能调整对现有系统的影响 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     制定详细的迁移计划和时间表 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     确定迁移的优先级和关键里程碑 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;分阶段迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     优先迁移核心服务和关键工作流 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     逐步迁移测试和质量保障体系 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     最后优化和全面切换 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;投资未来&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     将迁移视为提升 DevOps 能力的机会 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     采用云原生最佳实践，构建现代化软件交付体系 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     投资自动化和 AI 能力，提升团队效率 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_20"&gt;&lt;/span&gt; 
 &lt;h3&gt;&lt;strong&gt;对于企业决策者&lt;/strong&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;strong&gt;预算规划&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     评估迁移预算和长期成本 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     考虑 Zadig 专家版或企业版的授权成本 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     预留培训和咨询预算，确保顺利迁移 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;资源配置&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     分配足够的技术资源支持迁移 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     确保迁移期间业务连续性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     规划长期的技术架构和工具投资 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;价值实现&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     将迁移视为提升研发效能的投资 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     设定明确的 ROI 目标和评估指标 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     持续关注技术趋势，保持竞争力 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h2_21"&gt;&lt;/span&gt; 
 &lt;h2&gt;立即加入公益迁移计划&lt;/h2&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;span style="color:#245bdb"&gt;「我们不仅是提供替代方案，更是帮助团队在迁移中完成 DevOps 能力升级」—— Zadig &lt;/span&gt; 
   &lt;span style="color:#245bdb"&gt;客户成功团队&lt;/span&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;div&gt;
   面对 CODING 服务调整，Zadig 以开源生态的力量提供可持续解决方案。无论团队规模大小，均可通过以下方式获取支持： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     扫码加入公益支持群，获取专属迁移顾问服务 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     访问 Zadig 官网（https://koderover.com），点击页面底部的「企业咨询」，说明意图获得迁移支持 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet//09c60d2e780780114f4fed15d1d4e03d.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   此次公益迁移计划将持续至 2025 年 9 月 1 日，助力每一个受影响的开发者团队平稳过渡，拥抱更开放、更高效的 DevOps 未来。 
 &lt;/div&gt; 
 &lt;div&gt;
   立即行动，把握 DevOps 升级机遇，开启高效、灵活、智能的软件开发新旅程！ 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/koderover/blog/18679312</link>
      <guid isPermaLink="false">https://my.oschina.net/koderover/blog/18679312</guid>
      <pubDate>Sat, 10 May 2025 05:58:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>2025 全球独角兽榜单：SpaceX、字节跳动和 OpenAI 荣登前三甲</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;胡润研究院近日发布了《&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhurun.net%2Fzh-CN%2FInfo%2FDetail%3Fnum%3DUG5JN9T6LU24" target="_blank"&gt;2025 全球独角兽榜&lt;/a&gt;》（Global Unicorn Index 2025），列出了全球成立于 2000 年之后、价值 10 亿美元以上的非上市公司，本次榜单估值计算的截止日期为 2025 年 1 月 1 日。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="358" src="https://oscimg.oschina.net/oscnet/up-ad30bb7535a6470a1da68ea4637c18e7eb2.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;榜单统计数据显示，全球独角兽企业数量达到 1523 家，创世界新纪录，比去年增加 5%（70 家）。其中，美国以 758 家独角兽企业领先，增加了 55 家，占世界总数的 49.8%。中国以 343 家位居第二，增加了 3 家；印度以 64 家位居第三，减少了 3 家；英国以 61 家紧随其后，增加了 8 家；欧盟国家 112 家独角兽，增加 3 家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;SpaceX 首次成为全球价值最高的独角兽，价值增加了 1.2 万亿元，达到 2.6 万亿元人民币。ChatGPT 所有者 OpenAI 价值连续第二年增长最快，增加了 1.5 万亿元，以 2.2 万亿元人民币位居第二。两年前，OpenAI 的价值仅为 1380 亿元&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;抖音和豆包的所有者字节跳动失去了全球价值最高的独角兽的头衔，跌至第二位，尽管其价值增加了 5840 亿元，达到 2.2 万亿元人民币。埃隆·马斯克领导的 xAI 在收购了 X 后，以 8400 亿元人民币的价值新上榜便直接冲到了第四位。马斯克创立或联合创立了全球价值最高的四家独角兽企业中的三家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;曾经的全球第一独角兽、总部杭州的蚂蚁集团，排名下降一位至第五位，价值 6350 亿元，增长了 510 亿元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Claude 所有者——总部旧金山的 Anthropic 价值上涨了 10 倍多，排名第八，价值 4450 亿元人民币。排名前十的独角兽中有四家拥有领先的 AI 助手：ChatGPT、豆包、Grok 和 Claude。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;64 家去年的独角兽「升级」，其中 34 家成功上市（19 家来自中国，9 家来自美国，6 家来自「世界其他地区」），30 家被收购。这些升级的独角兽主要来自软件服务、AI、金融科技和生物科技领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;52 家「降级」，价值降至 10 亿美元以下，其中 19 家来自美国，11 家来自中国。最大的落榜者是瑞典电池制造商 Northvolt（去年价值 1430 亿元人民币）和中国新能源汽车制造商——哪吒汽车的母公司合众汽车（去年价值 300 亿元人民币）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;金融科技以 197 家独角兽企业领先，其次是软件服务（151 家）和 AI（128 家）。前三大行业占独角兽企业的 31%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;美国独角兽企业以软件服务、金融科技和健康科技为主；中国独角兽主要是半导体、AI 和新能源，而「世界其他地区」则是金融科技、电子商务、软件服务和区块链。波兰、孟加拉国和伊朗是没有独角兽的最大经济体。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;旧金山连续第五年成为「全球独角兽之都」，有 199 家独角兽企业，增加了 9 家，其次是纽约，有 142 家，增加了 9 家，北京有 75 家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在中国，深圳是独角兽企业增长最快的城市，其次是合肥和重庆。广州有 24 家独角兽，位列全球城市第 11 位，国内城市第 4 位。广州今年有 2 家新独角兽，还有 2 家企业成功「毕业」——小马智行和文远知行，目前价值分别为 340 亿元和 160 亿元。粤港澳大湾区有 72 家独角兽，增加了 2 家，占全国 21%&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357966</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357966</guid>
      <pubDate>Sat, 10 May 2025 05:51:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>技术合伙人招募：共创宠物数字生命艺术，用 3D 技术守护永恒的爱</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2062</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2062</guid>
      <pubDate>Sat, 10 May 2025 03:56:00 GMT</pubDate>
    </item>
    <item>
      <title>中国 AI GPU 芯片初创企业壁仞科技获 15 亿元融资</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;路透社引述知情人士&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Fworld%2Fchina%2Fchina-ai-chip-firm-biren-raises-new-funds-plans-hong-kong-ipo-say-sources-2025-06-26%2F" target="_blank"&gt;报道称&lt;/a&gt;，中国 AI GPU 芯片初创企业壁仞科技已筹集到约 15 亿元人民币，并正准备在今年第三季度赴港交所申请上市，最快可能在 8 月。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0630/114240_N92c_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;不过，对此消息，壁仞科技并未回应。&lt;/p&gt; 
&lt;p&gt;消息人士透露，壁仞科技此次 15 亿元的融资主要由两家国资背景的投资机构领投，包括一家来自广东的国资支持的基金和一家来自上海的国资基金。据悉，在最新一轮融资之前，壁仞科技的估值约为 140 亿元。&lt;/p&gt; 
&lt;p&gt;其实，早在今年 3 月 11 日晚间，「上海国投先导基金」微信公众号就曾宣布，上海国投先导人工智能产业母基金联合领投了壁仞科技，数家知名投资机构及产业资本跟投。不过，当时并未披露其他的具体投资方以及投资金额。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357952</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357952</guid>
      <pubDate>Sat, 10 May 2025 03:42:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>通义千问发布多模态统一理解与生成模型 Qwen VLo</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;通义千问&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FE655CRmdgd5bySyuHPDoEw" target="_blank"&gt;宣布&lt;/a&gt;正式推出 Qwen VLo——一个多模态统一理解与生成模型，目前 Qwen VLo 还属于预览阶段，可在 Qwen Chat（&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fchat.qwen.ai" target="_blank"&gt;&lt;span style="color:#000000"&gt;chat.qwen.ai&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt;）上直接体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「这一全新升级的模型不仅能够看懂世界，更能基于理解进行高质量的再创造，真正实现了从感知到生成的跨越。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="299" src="https://oscimg.oschina.net/oscnet/up-3e012ffa174785b10577c2a9093341ca732.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据介绍，Qwen VLo 以一种渐进式生成方式，从左到右、从上到下逐步清晰地构建整幅图片。在生成过程中，模型会对预测的内容不断调整和优化，从而确保最终结果更加和谐一致。这种生成机制不仅提升了视觉效果，还为用户带来了更灵活、更可控的创作体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Qwen VLo 在原始多模态理解与生成能力上进行了全面升级，显著增强了对图像内容的理解深度，并在此基础上实现了更加准确和一致的生成效果。核心亮点如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;更精准的内容理解与再创造&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;以往的多模态模型在生成过程中容易出现语义不一致的问题，例如将汽车误生成其他类型的物体，或者无法保留原图的关键结构特征。而 Qwen VLo 通过更强大的细节捕捉能力，能够在生成过程中保持高度的语义一致性。例如，当用户输入一张汽车的照片并要求「更换颜色」时，Qwen VLo 不仅能准确识别车型，还能保留其原有的结构特征，同时完成色彩风格的自然转换，让生成结果既符合预期又不失真实感。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;支持开放指令编辑修改生成&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;用户可以通过自然语言提出各种创意性指令，如「将这张画风改为梵高风格」、「让这张照片看起来像 19 世纪的老照片」或「给这张图片添加一个晴朗的天空」。Qwen VLo 能够灵活响应这些开放性指令，并生成符合用户预期的结果。无论是艺术风格迁移、场景重构还是细节修饰，模型都能轻松应对。甚至一些传统的视觉感知人物如预测深度图、分割图、检测图以及边缘信息等也可以通过编辑指令轻松完成。更进一步，像很多更复杂的指令，比如一条指令中同时包含修改物体、修改文字、更换背景，模型也能轻松完成。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;多语言指令支持&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Qwen VLo 支持包括中文、英文在内的多种语言指令，打破了语言壁垒，为全球用户提供了统一且便捷的交互体验。无论你使用哪种语言，只需简单描述你的需求，模型便能快速理解并输出理想结果。&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Qwen VLo 采用动态分辨率训练，支持动态分辨率生成。无论是输入端还是输出端，模型都支持任意分辨率和长宽比的图像生成。这意味着用户不再受限于固定的格式，可以根据实际需求生成适配不同场景的图像内容，无论是海报、插图、网页 Banner 还是社交媒体封面，都能轻松应对。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此外，Qwen VLo 还创新性地引入了一种全新的生成机制：从上到下、从左到右逐步清晰的生成过程。这一机制不仅提升了生成效率，还特别适用于需要精细控制的长段落文字生成任务。例如，在生成带有大量文本的广告设计或漫画分镜时，Qwen VLo 逐步生成慢慢修改。这种渐进式的生成方式让用户可以实时观察生成过程，并根据需要进行调整，从而获得最佳的创作效果。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357951</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357951</guid>
      <pubDate>Sat, 10 May 2025 03:33:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>第二届「百模论剑·全国‘人工智能+’行业应用创新大赛」在京启动</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="text-align:left"&gt;晓蝉初唱催炎夏,智聚群贤启新章。2025 年 6 月 28 日,由中国电子信息行业联合会数字经济专委会举办的第二届「百模论剑·全国‘人工智能+’行业应用创新大赛」启动大会在北京裕龙御柏国际酒店隆重举行,正式宣布影响全国各行各业的人工智能创新应用大赛拉开帷幕。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;工业和信息化部原党组成员、总工程师张峰,中国国家创新与发展战略研究会副会长兼数字经济研究院院长、中国科学院大学教授吕本富,中国电子信息行业联合会数字经济专委会理事长刘九如,工业和信息化部信息技术发展司信息服务业处干部张振干,成都市经济和信息化局人工智能产业处副处长任彦微,中国电子信息行业联合会数字经济专委会常务副理事长、北京思特奇信息技术股份有限公司董事长吴飞舟,国创会数字经济研究院执行院长、北京国创新智科技产业发展有限公司董事长程月辉,成都市驻京办秘书处处长扈晓玲,科大讯飞智慧城市市场部总工程师段佳奇,国家信息中心国信碳中和研究院副院长傅盛,北京航空航天大学人工智能学院教授庄福振,湖北省数字技术研究与试验发展协会秘书长杨德亮,河南省数字经济产业协会秘书长李蕊等专家、学者、企业家、投资家,以及来自字节跳动、阿里、腾讯、中科汇联、中科闻歌、昆仑数智、思特奇、考神通等 20 家大模型厂商的技术负责人,近 200 位代表齐聚一堂,共同见证这一盛事。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 1.jpg" height="381" src="https://oscimg.oschina.net/oscnet//0a5e141b2d569324ae24a7b696f5f03b.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;strong&gt;主题演讲，金彩纷呈&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;中国电子信息行业联合会数字经济专委会理事长刘九如首先代表主办方致辞,他强调,发起举办「百模论剑·全国‘人工智能+’行业应用创新大赛」,旨在促进各行各业抓住美好机遇,加快新技术应用,推动人工智能技术与各行业深度融合,发挥我国超大规模市场、应用场景丰富的独特优势,推动国产大模型技术尽快应用落地,以人工智能产业高质量发展和各行业高水平的创新应用,培育我国经济发展的新动能。去年举办的第一届大赛,来自 25 个省、自治区、直辖市、特别行政区的 319 支团队报名参赛,产生了广泛而深远的影响。今年,在大模型技术发生深刻变化,各行各业更加广泛应用人工智能技术的背景下,创新应用成果必将更多涌现,投资家、企业家对大赛获奖成果必将更加深度关注,这就为第二届大赛的举办打下坚实基础。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 2.jpg" height="400" src="https://oscimg.oschina.net/oscnet//aac35207a93ae3953d0dd05e381d9b1e.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;刘九如做开场致辞&lt;/p&gt; 
&lt;p style="text-align:left"&gt;工业和信息化部原党组成员、总工程师张峰在启动大会上做主旨讲话。他强调指出,人工智能是引领新一轮科技革命的关键技术,正以前所未有的速度重塑全球产业经济格局、深刻改变人类的生产生活方式。DeepSeek 大模型的发布并宣布开源,大大降低了企业使用大模型技术的门槛,让更多人有机会分享 AI 技术进步的红利。在这样的背景下,中国电子信息行业联合会数字经济专委会联合相关机构,发起举办第二届「百模论剑・全国‘人工智能+’行业应用创新大赛」,具有更加深远的意义。它不仅将成为技术创新的竞技场,更是产业发展的助推器;基于大模型技术的广泛推广应用,一定会有更多创新成果展现出来。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 3.jpg" height="400" src="https://oscimg.oschina.net/oscnet//1d10b507b0fe898de17304ad6f58cd67.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;张峰做主题报告&lt;/p&gt; 
&lt;p style="text-align:left"&gt;中国国家创新与发展战略研究会副会长兼数字经济研究院院长吕本富在大会上作了题为《智能体的文明通向何方?》的主题演讲,他认为,大模型在记忆能力上已超越人类,推理规划能力呈指数增长,20 年后有望达到或超越人类智力水平。大模型的发展及在各行业的创新应用具有深远意义,对于推动产业转型升级和生产生活方式的改变影响深远。但也必须认真关注&amp;nbsp;AI 及大模型带来的隐私泄露、算法歧视、就业冲击等挑战,如 GPT-4 对使用黑人英语的求职者推荐薪资低 12%,死刑建议率高出 37%。他强烈呼吁中美等 AI 领先国家应尽快建立竞争底线、企业发布底线和代码伦理底线,共同应对硅基智能挑战。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 4.jpg" height="400" src="https://oscimg.oschina.net/oscnet//a4c367bcf8f73aa53f5c9b41b425e3c4.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;吕本富教授演讲&lt;/p&gt; 
&lt;p style="text-align:left"&gt;大模型企业代表——北京思特奇信息技术股份有限公司人工智能产品总监陈磊和科大讯飞智慧城市业务部总工程师段佳奇也在启动大会上做了主题分享。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;陈磊以《思特奇人工智能:创新、体系、实践、生态》,介绍了该思特奇构建的 「算力 - 数据 - 模型 - 智能体」 AI 原生体系,该体系包括 AI 业务架构和 AI 技术架构,在人工智能时代,将全面为企业数字化转型注智赋能,通过不断的实践和应用,已在电信运营商、城市全域数字化转型、智能制造、金融、教育等领域落地,通过大模型+场景化智能体服务客户。其九思大模型完成与华为升腾、鲲鹏等国产算力平台的兼容适配,AI 能力开放平台支撑超 10 亿用户规模的智能服务。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;段佳奇则以《大模型技术发展及星火大模型应用》为题进行分享,他认为,全球已进入通用人工智能 (AGI) 竞争的关键期,美国通过 「曼哈顿计划」式投入和出口管制强化技术垄断,而中国正通过 「飞星二号」等国产智算平台突破算力瓶颈。讯飞星火大模型已实现全栈自主可控,2025 年 4 月发布的 X1 推理模型基于国产算力训练,性能对标 GPT-O1,在多模态交互、深度推理等领域持续突破。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 5.jpg" height="361" src="https://oscimg.oschina.net/oscnet//f0042d2cdc847ed43b97eddf2bb1fc1e.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;陈磊 (左) 与段佳奇 (右) 做主题分享&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;strong&gt;大赛升级&lt;/strong&gt;&lt;strong&gt;,生态逐渐完善&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;中国电子信息行业联合会数字经济专委会副秘书长、大赛组委会秘书长王二华介绍了第二届「百模论剑·全国‘人工智能+’行业应用创新大赛的筹备情况和总体安排。他介绍,此次大赛在首届大赛基础上实现三大升级:一是参赛规模扩大,设置产业组、高校组两大主赛道,新增 「AI+金融」「AI+青少年教育」「AIGC」「AI+建造」四大分赛道,覆盖智能制造、医疗健康等 12 大行业;二是赛事机制优化,引入「线上运营平台」实现项目征集、筛选、培训全流程数字化,总决赛将在成都举办并出版案例集;三是生态协同深化,联合国家信息中心国信中数投资、中国风险投资、川商基金、丝路基金等 30 余家机构形成「投资-人才-产业」服务链,获奖项目可优先获得政府项目申报、投融资等资源对接。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;大赛组委会技术人员田广昕详细演示了官方线上运营平台 (http://www.znds.org.cn),该平台具备参赛报名、大模型工具共享、算力提供、信息发布、赛程跟踪、项目管理、资源对接等功能,支持参赛者在线完成项目制作、提交方案、参与培训、项目路演。该平台由北京思原帕斯信息技术有限公司开发并提供技术支持。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;接着,中国电子信息行业联合会数字经济专委会副秘书长熊伟代表组委会发布了大赛评委、支持单位、合作伙伴名单并颁发了证书。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="wechat_2025-06-30_105332_422.jpg" height="272" src="https://oscimg.oschina.net/oscnet//c3b4b94852981bcaf1c50f7b7d4be721.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;王二华 (左)、田广昕 (中)、熊伟 (右) 介绍大赛相关情况&lt;/p&gt; 
&lt;p style="text-align:left"&gt;庄福振、邢保振、陈志轩、贺凡、尤程翔、欧日乐克、李果、代颖杰、邹霞、梁丰、陈飞、万欣、徐栋、郭颖等 14 位专家成为本届大赛第一批评委。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 7.jpg" height="382" src="https://oscimg.oschina.net/oscnet//8e1b3c3c76e74cf227a0f5aa27379ff2.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;为评委代表颁发证书&lt;/p&gt; 
&lt;p style="text-align:left"&gt;中国国家创新与发展战略研究会数字经济研究院、中国高技术产业发展促进会新质生产力工委会、中国科技产业化促进会金融科技专委会、中国建设教育协会教育技术专委会、亚太数字经济学会、北京襄阳企业商会、北京湖南企业商会、湖北省数字技术研究和试验发展协会、河南省数字经济产业协会、山东省大数据应用与安全协会、聊城市数字经济协会等 20 多家商协学会成为大赛第一批支持单位,共同助力大赛生态建设。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 8.jpg" height="362" src="https://oscimg.oschina.net/oscnet//1257fba827e107763d9cd552aa3956f5.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;为支持单位代表颁发证书&lt;/p&gt; 
&lt;p style="text-align:left"&gt;国家信息中心国信中数投资公司、中国风险投资有限公司、北京思特奇信息技术股份有限公司、北京明智大方投资管理有限公司、北京中科汇联科技股份有限公司、先进技术成果西部转化中心、成都正福研究院火眼金融工程实验室、郑州数智科技集团有限公司、黄河天能投资管理 (北京) 有限公司、兰剑智能科技股份有限公司、通师前沿 (吉林省) 教育科技有限公司、成都文化产权交易所有限公司、成都大学中国-东盟艺术学院影视与动画学院、成都川商兴业股权投资基金管理有限公司、成都丝路重组股权投资基金管理有限公司、英诺天使基金、北极光创投基金、达晨创投基金、沐曦集成电路 (上海) 有限公司、北京百川智能科技有限公司等 20 家企业成为生态合作伙伴,共同为大赛提供技术支持与资源对接。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="图片 9.jpg" height="343" src="https://oscimg.oschina.net/oscnet//158d788f6a6886eb6741428323f7630c.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;为合作伙伴代表颁发证书&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;strong&gt;分赛道聚焦专业领域&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;在分赛道介绍环节,正福金融研究院火眼金融工程实验室主任汤中建,成都市树德中学信息学教研组长、竞赛中心主任刘强,成都瑞集科技有限公司董事长刘其洋,中国建筑科学研究院认证中心培训测评部主任张建奇分别解读了各赛道特色。「AI+金融」赛道聚焦智能投研、风险管控等应用;「AI+青少年教育」赛道鼓励青少年编程与 AI 创意项目;「AIGC」赛道侧重多模态内容生成技术;「AI +建造」 赛道关注建筑智能化与数字孪生技术。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="wechat_2025-06-30_104835_445.jpg" height="262" src="https://oscimg.oschina.net/oscnet//e64fe424f9f1d86cf671eae367576bd8.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;(从左至右) 汤中建、刘强、刘其洋、张建奇分别介绍分赛道&lt;/p&gt; 
&lt;p style="text-align:left"&gt;启动大会最后,杭州「销邦」、广州「榴灵」、北京「铭芯」和「星谛」等参赛团队进行了项目路演,展示了「售庆 AI:出海获客 AI SaaS」「&amp;nbsp;AI 赋能药食同源:健康食品的智能创制与循证大模型」「中华之演化虚拟体验馆」「星宿浮光」&amp;nbsp;等创新项目,凸显了 AI 技术在跨境贸易、大健康、文旅、游戏等领域的商业价值。&lt;/p&gt; 
&lt;p style="text-align:left"&gt;据了解,本届大赛即日起开启项目征集 (详情见大赛官网),将于 2025 年 10 月举办总决赛,预计吸引超过 500 支团队参赛。随着大赛的启动,我国「人工智能 +」行业应用将迎来新一轮创新热潮,众多创新项目将形成典型应用场景,成为行业标杆,引发投资和创业热潮,为数字经济与实体经济融合发展注入强劲动力。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357949</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357949</guid>
      <pubDate>Sat, 10 May 2025 03:27:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>得物社区活动：组件化的演进与实践</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;一、前言：社区与活动&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;「得物平台上的大量商品都具有文化与精神属性，用户往往通过社区来进行了解和分享。」&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;得物平台作为潮流文化与电商融合的前沿阵地，其社区活动业务的演进备受瞩目。得物平台的很多商品蕴含深厚的文化与精神内涵，这吸引用户在社区进行深度的了解与分享。潮流以品牌和带有潮流元素的产品为载体，以社区和内容作为传播媒介。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从业务视角审视，种草激励、MCN 入驻、达人签约以及各类活动玩法，本质上皆是内容与品牌之间的博弈。通过活动业务，能够获取更为丰富、优质的内容，而这些内容又能进一步强化品牌文化与形象，进而筑牢得物社区的潮流心智根基。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/4e/4e34e75e3f7a8ea4913e7712186ce5c2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;依据以往大盘数据分析，活动所带来的发布在 UGC 大盘中占比及推荐流阅读时长上均有显著作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;由此可见，活动业务在得物社区的 UGC 发布等相关指标中，占据着举足轻重的地位。回顾得物社区的发展历程，品牌文化的深耕与品类挖掘的潮流大势清晰可辨。得益于这一趋势，社区活动业务近年来备受关注，各类玩法如雨后春笋般层出不穷。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;二、业务催化剂&lt;/h1&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;效果与效率的辩证探索&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为了探寻活动效果的极致境界，我们始终在活动玩法的搭配上不断推陈出新、勇于尝试。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;话题类玩法致力于用户心智的精耕细作、激励类玩法侧重于内容质量的提升拔高、互动类玩法着重于用户粘性的稳固增强。活动效果大多取决于玩法本身，这也正是活动玩法日新月异的根源所在。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/85/8515f26b592582dfa3cbe672e2b8d0a1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;然而，效率与效果有着不同的侧重点。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;效率并不追求差异化的活动玩法，而是在既定框架内，以最优的流程达成目标。&lt;strong&gt;它着眼于资源的高效利用，强调标准化与模板化，让活动能够按部就班、有条不紊地推进&lt;/strong&gt;。但这并不意味着效果与效率相互对立，相反，我们需要在两者之间找到一个恰到好处的平衡点，使其共同为活动业务的破圈发展添砖加瓦。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_4"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;现存问题剖析&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其一&lt;/strong&gt;，每当推出新活动，不同玩法和激励功能的显著差异，要求我们必须从零开始进行开发与测试。这一过程不仅耗费大量的人力、物力和时间资源，还极大地拖慢了市场响应速度，导致迭代成本居高不下，且难以有效控制。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以常见的活动玩法为例：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/58/58dd31ac16ea398d78a49af4fb392a73.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其二&lt;/strong&gt;，新功能的引入对线上服务的稳定性构成潜在威胁，尤其是涉及资产/交易的业务，其潜在风险不容忽视。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;最后&lt;/strong&gt;，由于不同产品团队对同一玩法的理解和实现方式存在差异，使得功能在迭代过程中难以保持持续性和一致性。这种情况不仅造成同质化功能重复开发，还使得宝贵的开发经验无法有效沉淀和传承，严重制约了业务的长期发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动玩法体系中，任务判定作为核心环节，其复杂性尤为突出。任务条件具有种类繁多，配置灵活的特点，这不仅增加了业务逻辑的复杂度，还大幅提升了线上问题排查和修复的难度与成本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/ce/cefcdec0b613710e2f46ae01eda7cfb5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;破局与机遇&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;面对上述种种挑战，我们将其组件化，使其成为行之有效的解决思路。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;解决思路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;高频业务迭代的适配&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;活动业务的频繁更迭为组件化提供了得天独厚的条件。通过将复杂功能拆解为独立、可复用的组件，能够迅速顺应变化，敏捷响应市场需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;业务特性的契合&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;大部分活动功能具有可拆分和可抽象的特性，这为组件化的实施奠定了坚实的基础，使其得以顺利开展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;降本提效的需求驱动&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;随着业务的持续增长和市场要求的稳步提升，采用组件化方式能够切实有效地降低成本，提升运营效率，为业务的稳健增长提供强大助力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;组件化的核心在于从价值向设计的转变。每一个组件都应具备高内聚、低耦合的特性，确保能够在不同场景下灵活复用，而不受具体业务逻辑的束缚。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;模块化设计：&lt;/strong&gt;需将复杂系统拆解为多个模块，每个模块负责一项独立的功能，便于开发和维护。&lt;strong&gt;大系统小做&lt;/strong&gt;，做从根本上化解业务复杂度问题，拆分大的功能到最小组件上，注重组件之间的接口与衔接。&lt;strong&gt;小功能大做&lt;/strong&gt;，从单纯的任务条件判定到规则引擎，小的功能往往多且差异性大，通过系统化的设计将他们的能力聚合并出口，保持对后续业务的灵活适配能力，并将影响最小化。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;接口抽象：&lt;/strong&gt;定义清晰明确的接口，使各组件之间的交互简洁明了，通过实现接口来替代业务的直接依赖，提升系统的灵活性与可扩展性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;标准化配置：&lt;/strong&gt;制定统一的配置标准，简化配置过程，减少迭代调整的频率与复杂性，提高工作效率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h1_6"&gt;&lt;/span&gt; 
&lt;h1&gt;三、组件化：从想法到实践&lt;/h1&gt; 
&lt;span id="OSC_h2_7"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;OOP&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;现实世界事物纷繁复杂、千头万绪，难以全面认识和深入理解。人类通过分类归纳的方法，将复杂事物系统化、条理化，从而使其变得井然有序。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在业务设计中亦是如此，需求千差万别、形形色色，每个人都可能参与其中，即便在基础编码规范的约束下，仍可能出现风格各异的设计，进而导致维护成本攀升、重复能力难以有效复用等问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;这便催生了我们所熟知的设计范式。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;There are four major benefits to object-oriented programming:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Encapsulation&lt;/strong&gt;: in OOP, you bundle code into a single unit where you can determine the scope of each piece of data.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Abstraction:&amp;nbsp;&lt;/strong&gt;by using classes, you are able to generalize your object types, simplifying your program.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Inheritance:&amp;nbsp;&lt;/strong&gt;because a class can inherit attributes and behaviors from another class, you are able to reuse more code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Polymorphism:&amp;nbsp;&lt;/strong&gt;one class can be used to create many objects, all from the same flexible piece of code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_8"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;系统和业务&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;系统，&lt;/strong&gt;作为整个活动与任务体系的架构基础，必须具备高度的健壮性和灵活的扩展能力。它主要承担数据聚合、规则判定和状态流转三大核心功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以抽奖活动玩法为例，系统负责收集整合各个渠道的用户数据，判断用户是否符合参与活动的资格、是否为风险用户、是否符合发布要求，并依据用户行为和活动规则进行状态流转。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;业务&lt;/strong&gt;，则是体系的核心价值体现，具有动态性和多样性的特点。它主要涵盖实时行为、滞后行为和被动行为三种类型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在抽奖玩法活动中，实时行为包括用户在活动页面的即时交互操作，如分享活动链接、浏览活动页面、订阅直播等；滞后行为涉及用户发布内容后的质量评估和审核流程；被动行为则包含数据清洗、数据回扫等后台处理任务。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;事件驱动&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;系统和业务之间的关系基于事件驱动来实现。在活动业务中，事件驱动宛如一条无形却坚韧的纽带，将系统和业务紧密相连，同时又保持各自的独立性。通过事件驱动，系统能够敏锐感知业务的变化与需求，业务也能借助系统的强大能力实现自身目标。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/f9/f9ed313ae82e3e11bd3a631f0b1c6e47.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;基于事件驱动机制，我们定义了核心的任务模版方法和激励模版方法。不同的任务和激励形式可以根据具体业务需求进行个性化定制，从而实现系统与业务的有效分离。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_10"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;模块与模块&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;除了系统与业务的解耦，系统内部模块之间也需要进行有效的隔离。我们引入事件总线架构的思想，将其作为事件发布者和订阅者之间的通信中介。在标准化各模块输入输出接口的基础上，结合哪吒搭建平台，通过配置关联的方式对各个模块进行编排，实现模块之间的通信与协作，同时避免模块间的直接依赖，达到模块解耦的目的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/72/72fc928560cbcc84977edcac704dd2d7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_11"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;核心概念&amp;amp;设计&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;活动系统整体将业务层和系统层拆分为两大板块，通过事件驱动媒介实现二者的隔离与闭环，确保系统层和业务职能清晰明确，为活动业务的可持续迭代发展保驾护航。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/5b/5bf6af06882bcdb96ff447b7c31f7662.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;活动和任务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;随着近期社区活动业务的蓬勃发展与活跃迭代，当前版本的活动体系在应对诸多玩法时愈发显得力不从心、捉襟见肘，主要体现在以下两个方面：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;活动层以及奖励粒度的搭配难以满足多元化玩法的需求，存在明显的适配不足。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;活动、任务、奖励等层面的个性化要求配置无法充分满足，限制了业务的创新发展。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为此，我们从&amp;nbsp;&lt;strong&gt;「活动与玩法的适配、任务粒度及激励个性化」&lt;/strong&gt;几个关键方向发力，进行体系重构。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;首先&lt;/strong&gt;，将激励完全抽象为 「激励值」，无论是抽奖次数、瓜分机会、兑换积分、优惠券金额，都以 「值的形式」 进行抽象化处理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/39/39199868c46ba51b127e7f242e4aa4d7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;这一抽象设计极大提高了活动、任务和激励之间关系的灵活性，能够满足当前绝大多数活动业务的设计需求。然而，抽象处理也带来了一些问题，例如在用户界面展示方面，难以直观呈现用户在某活动中是否获得过特定奖励。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其次&lt;/strong&gt;，构建了新的关联框架。单个页面可以关联多个活动，单个活动可以关联多个任务，单个任务可以进一步关联多个任务明细，抽象化的激励值直接与具体任务相关联。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/da/da9e83f16a6164e39d3f7e2dcbad995c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;最后&lt;/strong&gt;，完成三层概念设计。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动层，通过设置严格的报名策略和人群筛选条件，确保活动参与的精准性；在任务层，明确任务下发策略、达成条件和执行频率控制，使任务执行更加规范可控；在激励层，设定激励获取上限并制定智能分配策略，实现激励资源的合理分配。通过这种方式，实现了活动、任务、激励之间的自由组合和灵活配置，有效提升了整体运营效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;任务判定抽离：规则引擎&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在传统任务模块代码中，大量的 case 语句导致条件判定逻辑分散在各处。随着业务的不断迭代，业务逻辑变得愈发复杂，逐渐暴露出以下问题：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;每次条件改动，甚至是数值调整，都需要开发人员介入，耗费大量人力和时间。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;各种条件判断与业务紧密耦合，开发效率低下且难度极大，增加了开发成本和风险。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任务体系的可扩展性和稳定性差强人意，难以适应快速变化的业务需求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;业务透明度极低，团队协作推进困难，新人难以快速上手。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为解决这些问题，我们引入规则引擎，将业务决策逻辑从任务模块中抽离出来。规则引擎通过接收动态数据输入，依据内部预设规则进行计算和判断，输出决策结果，从而实现业务逻辑的独立维护和动态更新。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/74/740e7259afc695d67ead8f787736ff72.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;任务模型&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动系统中，任务模块扮演着至关重要的角色，主要体现在以下两个方面：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;核心驱动力：&lt;/strong&gt;任务模块是推动活动进展的核心动力源泉。它通过设置一系列明确的任务，引导用户按照活动预期方向进行操作，从而确保活动目标的顺利实现。例如在电商促销活动中，设置 「分享活动页面至社交平台，邀请 5 位好友助力」 的任务，以此扩大活动影响力，吸引更多潜在用户参与。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;数据洞察源：&lt;/strong&gt;任务模块所产生的数据是了解用户行为和活动效果的关键依据。通过分析用户完成任务的情况，如完成率、完成时间等，可以精准洞察用户的兴趣点和参与度，为优化活动策略提供有力支撑。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为应对任务多元化这一挑战，任务模块化成为必然选择。模块化设计将任务拆解为独立的组件，显著提高了开发效率和灵活性。同时，模块化架构便于维护和更新，当某个模块出现问题或需要升级时，只需单独处理该模块，不会影响其他部分，有效降低了业务定制的成本和风险，使任务模块能够更好地适应复杂多变的业务环境。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;根据业务特性，我们首先定义了任务接口，并严格划分接口内外的职责边界，确保接口内部专注于业务逻辑实现，接口外部实现系统功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;任务模型定义如下：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// TaskMode 任务模型
type&amp;nbsp;TaskMode&amp;nbsp;interface&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;// TaskType 任务类型
&amp;nbsp; &amp;nbsp; TaskType() consts.ActTaskType
&amp;nbsp; &amp;nbsp;&amp;nbsp;// TaskUniqueFlag 事件唯一标识
&amp;nbsp; &amp;nbsp; TaskUniqueFlag()&amp;nbsp;string
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ExpressFunctions 自定义函数集
&amp;nbsp; &amp;nbsp; ExpressFunctions(ctx context.Context)&amp;nbsp;map[string]govaluate.ExpressionFunction
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ExpressArguments 任务条件参数搜集器
&amp;nbsp; &amp;nbsp; ExpressArguments(ctx context.Context, pending []db.PendingTasks) (dto.ExpressArguments,&amp;nbsp;error)
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;具体实现何种任务模型，则参考业务方的实际诉求，只要按照&lt;strong&gt;「TaskMode」&lt;/strong&gt;接口规范进行实现即可。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;这里以&amp;nbsp;&lt;strong&gt;「发布篇数任务-TaskPublishTimes」&lt;/strong&gt;&amp;nbsp;的实现为例进行说明：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;type&amp;nbsp;TaskPublishTimes&amp;nbsp;struct&amp;nbsp;{
&amp;nbsp; &amp;nbsp; event *dto.TaskPublishEvent
}


func&amp;nbsp;NewTaskPublishTimes(event *dto.TaskPublishEvent)&amp;nbsp;(taskMode TaskMode, err&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;event.ContentId ==&amp;nbsp;0&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return&amp;nbsp;nil, errors.New("missing necessary parameters")
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; taskMode = &amp;amp;TaskPublishTimes{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;event: event,
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;return
}


// TaskType 任务类型
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;TaskType() consts.ActTaskType {
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;consts.ActTaskTypePublishTimes
}


// TaskUniqueFlag 任务唯一标识
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;TaskUniqueFlag()&amp;nbsp;string&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;fmt.Sprintf("CNT_ID_%d", t.event.ContentId)
}


// ExpressFunctions 自定义函数集
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;ExpressFunctions(ctx context.Context)&amp;nbsp;map[string]govaluate.ExpressionFunction {
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;map[string]govaluate.ExpressionFunction{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// "WITH_ANY_TOPIC(tag_ids, (1001,1002)) == TRUE"
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"WITH_ANY_TOPIC":&amp;nbsp;func(args ...interface{})&amp;nbsp;(interface{},&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;intersect, _ = arrayx.Intersect(carryIds, condIds)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;float64(len(intersect.Interface().([]uint64))) &amp;gt;&amp;nbsp;0,&amp;nbsp;nil
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;},
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 省略部分...
&amp;nbsp; &amp;nbsp; }
}


// ExpressArguments 条件参数搜集器
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;ExpressArguments(ctx context.Context, pending []db.PendingTasks) (dto.ExpressArguments,&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;eg = gox.NewErrGroup(ctx)
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;args = dto.ExpressArguments{}
&amp;nbsp; &amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 基础信息
&amp;nbsp; &amp;nbsp; eg.Go(func()&amp;nbsp;error&amp;nbsp;{&amp;nbsp;/**/&amp;nbsp;})
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 互动信息
&amp;nbsp; &amp;nbsp; eg.Go(func()&amp;nbsp;error&amp;nbsp;{&amp;nbsp;/**/&amp;nbsp;})
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 审核信息
&amp;nbsp; &amp;nbsp; eg.Go(func()&amp;nbsp;error&amp;nbsp;{&amp;nbsp;/**/&amp;nbsp;})
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ...


&amp;nbsp; &amp;nbsp; err = eg.Wait()
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;args, err
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;与传统面向对象编程实现方式相比，Golang 的接口实现更加灵活。只要 Struct 实现了接口定义的所有方法，即可隐式实现该接口，无需显式声明，这种特性为任务模型的开发提供了更高的灵活性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;任务触发器&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;任务触发器与任务模型相互独立，不存在直接依赖关系。当系统接收到行为事件时，会实例化具体的任务模型，并将其作为参数注入任务触发器，从而驱动系统与任务的协同运行。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;任务触发器应与业务逻辑完全分离，所有与业务相关的改动集中在任务模型中，修改后只需针对相应改动点进行回归测试。而与系统相关的改动则集中在任务触发器中，由于这部分改动可能影响所有任务模型的执行结果，因此需要谨慎处理，并确保进行全面的回归测试。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// TaskTrigger 任务触发器
func&amp;nbsp;(s *ActSysTaskService)&amp;nbsp;TaskTrigger(ctx context.Context, taskMode act_sys.TaskMode) (err&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 用户粒度任务锁
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 列表用户任务
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;pending, err = dao.ListUserTasks(ctx, event.UserId)
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 二次过滤（任务状态、活动时间）
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 自定义函数集 &amp;amp; 条件参数搜集
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;condFunc = taskMode.ExpressFunctions(ctx)
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;condArgs, err = taskMode.ExpressArguments(ctx, pending)
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return
&amp;nbsp; &amp;nbsp; }


&amp;nbsp; &amp;nbsp;&amp;nbsp;// 任务达成判定
&amp;nbsp; &amp;nbsp;&amp;nbsp;for&amp;nbsp;_, v :=&amp;nbsp;range&amp;nbsp;pending {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;var&amp;nbsp;reach&amp;nbsp;bool
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;reach, err = act_sys.RunTaskExpress(ctx, v.TaskCondExpr, condFunc, condArgs)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if&amp;nbsp;err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;continue
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}


&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if&amp;nbsp;reach {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 更新 or 写入任务明细记录 &amp;amp; 任务进展 &amp;amp; 发放/回退奖励值
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// ...


&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 执行 HOOKS（这里是不同业务的个性化订阅者）
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;return
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在任务触发器的设计中，重点涉及任务初始化与下发流程。由于行为事件入口众多，难以采用传统方式进行显性任务下发，因此我们将任务下发逻辑嵌入任务触发器中，使每次事件注入触发器时都成为一次任务下发的机会。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;当然，这种设计也存在一定风险，在触发器中添加代码可能会对整个任务体系的运行产生影响，甚至可能增加任务推进逻辑的响应时间（RT）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/db/db37b64c6a94b08142e342b1d997d33c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_12"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;业务协同&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在实现业务功能的同时，系统的稳定性和健壮性至关重要。模块化架构不应成为阻碍业务定制化发展的因素，而应更好地服务于业务创新。在实际业务场景中，如输出当日各核心节点的数据画像、任务完成后对用户进行消息触达等需求，我们通常采用钩子（HOOK）机制，在各个核心节点完成后执行一系列自定义处理逻辑，实现系统与业务的闭环交互。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/e2/e21031ea6cd9ec3299d8d53fbeb63240.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以高价值奖品兑换活动为例，当用户完成一系列任务后，系统会触发多个钩子，通知业务模块进行风险评估、收益预判、状态更新等操作。同时，业务模块可以通过注册观察者模式，实时监控系统运行状态，如兑换流程是否正常、服务器是否稳定等，一旦发现异常情况，立即进行处理，确保系统和业务的协同稳定运行。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;钩子机制&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在任务模块化进程中，HOOK 机制发挥了至关重要的作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;HOOK 机制本质上是一种程序控制技术，它允许开发者在系统运行的特定阶段插入自定义代码。借助这一特性，我们能够在任务触发时、执行过程中、执行完成后等关键节点灵活添加额外逻辑，最终实现业务差异化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;首先，我们需要定义观察者接口、事件主体及其实现，这里以任务明细达成节点为例进行说明：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// ActSysObserver4TaskDetail 任务明细进展转发
type&amp;nbsp;ActSysObserver4TaskDetail&amp;nbsp;interface&amp;nbsp;{
&amp;nbsp; &amp;nbsp; Unique()&amp;nbsp;string
&amp;nbsp; &amp;nbsp; Forward(ctx context.Context, detail *db.ActUserTaskDetail)&amp;nbsp;error
}


type&amp;nbsp;ActSysSubject4TaskDetail&amp;nbsp;struct&amp;nbsp;{
&amp;nbsp; &amp;nbsp; mutex &amp;nbsp; &amp;nbsp; sync.Mutex
&amp;nbsp; &amp;nbsp; observers []ActSysObserver4TaskDetail
}


func&amp;nbsp;(sj *ActSysSubject4TaskDetail)&amp;nbsp;Attach(observer ActSysObserver4TaskDetail) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;uk := observer.Unique();&amp;nbsp;len(uk) &amp;gt;&amp;nbsp;0&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sj.mutex.Lock()
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sj.observers =&amp;nbsp;append(sj.observers, observer)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sj.mutex.Unlock()
&amp;nbsp; &amp;nbsp; }
}


func&amp;nbsp;(sj *ActSysSubject4TaskDetail)&amp;nbsp;Notify(ctx context.Context, detail *db.ActUserTaskDetail)&amp;nbsp;error&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;for&amp;nbsp;_, observer :=&amp;nbsp;range&amp;nbsp;sj.observers {
&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;err := observer.Forward(ctx, detail); err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return&amp;nbsp;err
&amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;nil
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;示例仅伪代码，实际业务上应当考虑重复注册、同步执行 or 异步执行、是否强事务等问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;然后，对于个性化的业务场景，只需实现业务自己的观察者，以打卡玩法触达提醒为例：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// ActTaskDetailObserver2CheckinReach 任务明细进展·打卡玩法的私信 HOOK
type&amp;nbsp;ActTaskDetailObserver2CheckinReach&amp;nbsp;struct&amp;nbsp;{
}


func&amp;nbsp;(ob *ActTaskDetailObserver2CheckinReach)&amp;nbsp;Forward(ctx context.Context, detail *db.ActUserTaskDetail)&amp;nbsp;error&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 兜底判断任务明细未完成
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;detail.Status != consts.ActTaskDetailStatusDone {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;nil
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 触达用户（动态达标提醒）
&amp;nbsp; &amp;nbsp;return&amp;nbsp;NewReachClient().Send(ctx,&amp;nbsp;"act_checkin_task_detail_done", detail.userId)
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;最后，在初始化时，将观察者注册到主体中即可。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;不同的活动玩法最终都是通过观察者模式的设计来实现差异化，甚至任务模块本身也可以通过该方式来实现更上层的任务架构。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_13"&gt;&lt;/span&gt; 
&lt;h1&gt;四、新陈更迭与系统化&lt;/h1&gt; 
&lt;span id="OSC_h2_14"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;新陈更迭&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;优秀的系统并非一蹴而就的，而是要历经无数次的业务迭代和市场检验，也就必然存在新陈更迭的过程。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从业务层面来看，我们需要清楚当前业务的真实诉求，明确业务功能的拆分方式（从难易程度、风险系数、影响面等多维度考量）。其次，要了解该业务的历史演进及产品习惯，识别新老业务之间可能存在的关联风险。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从技术层面而言，首先要划分清楚能力和业务的界限，其次通过巧妙的设计思路进行分化与衔接。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;综合来讲，业务的高质量交付应始终摆在首位，结合业务的粒度去适配新方案的能力，在测试阶段需要明确对齐并进行全面性回归，老方案的业务和新方案的技术应该具备兜底和互动能力，以确保系统的稳定过渡和持续扩展。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_15"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;走进系统化&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动系统组件化的基础上，我们以&lt;strong&gt;运营标准化提效、数据可视化赋能、协作体系化破局&lt;/strong&gt;为核心目标，构建全链路协同能力，推动活动业务从 「模块化」 向 「系统化」 跃迁。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们以三大核心体系为抓手，全面提升活动业务效能：构建可复用的生产体系，依托标准化活动要素库与低代码平台，实现组件化拼装与流程标准化，大幅降低开发成本、提升上线效率；打造智能决策中枢，整合多维度数据，通过实时监控与智能分析驱动策略优化，助力运营从经验驱动迈向数据决策；打通跨团队协同链路，统一协作标准、集成开发工具链，并成立中台委员会推动能力沉淀，有效减少重复工作、缩短迭代周期，破除部门协作壁垒 ，最终推动活动业务从 「模块化」 向 「系统化」 全面跃迁。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/ed/ed416e88254d6a096e8993be4da05922.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_16"&gt;&lt;/span&gt; 
&lt;h1&gt;五、展望潮流生态&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;得物社区活动业务将以组件化、系统化成果作为基石，持续深化创新。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;随着 AIGC、边缘计算等前沿技术的融合应用，活动系统将朝着 「智能自优化」 加速迈进。一方面，通过 AI 算法精准预测用户兴趣与行为趋势，自动优化活动策略与任务设计，让潮流内容与用户需求实现更高效匹配。另一方面，借助边缘计算降低数据处理时延，为用户带来更流畅、即时的活动交互体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在商业价值与文化影响力层面，得物将进一步打破潮流文化与电商消费的壁垒，通过活动业务构建更紧密的用户、品牌、文化生态闭环。未来，无论是小众潮流文化的破圈传播，还是品牌与用户间的深度情感联结，得物都将凭借不断进化的技术与创新模式，持续引领潮流社区电商的发展风向，书写行业新篇章。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;往期回顾&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;1.&lt;/span&gt;得物研发自测 &amp;amp; 前端自动化测试体系建设&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;2.&lt;/span&gt;从 CPU 冒烟到丝滑体验：算法 SRE 性能优化实战全揭秘｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;3.&lt;/span&gt;得物自研 DScript2.0 脚本能力从 0 到 1 演进&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;4.&lt;/span&gt;社区造数服务接入 MCP｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;5.&lt;/span&gt;CSS 闯关指南：从手写地狱到「类」积木之旅｜得物技术&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;文 / 小龙&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;关注得物技术，每周更新技术干货&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18626983</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18626983</guid>
      <pubDate>Sat, 10 May 2025 03:18:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>OpenAI 被曝将重新调整薪酬以应对 Meta 挖人</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;近日有消息称，Meta 成功挖走了多名 OpenAI 的高级研究人员。对此，OpenAI 的首席研究官马克・陈在一份 Slack 备忘录中向团队成员表达了他的担忧。他提到，OpenAI 的领导层并没有对此视而不见，而是积极采取措施应对这一情况。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="352" src="https://oscimg.oschina.net/oscnet/up-1b5f2ba1a20acea93257fcc4a8c9147df4c.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在备忘录中，马克・陈形象地描述了他当前的心情，称 「就像有人闯入我们的家并偷走了东西」。为了应对 Meta 的大规模招聘，OpenAI 的领导团队，包括首席执行官 Sam Altman，都在 「夜以继日地与那些有录用条件的人交谈」。陈强调，OpenAI 正在比以往更加积极主动，努力留住顶尖人才。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;据报道，OpenAI 正在重新调整薪酬结构，探索更加创造性的方式来表彰和奖励员工。这一系列举措的目的在于确保 OpenAI 能够在竞争激烈的市场中继续吸引并留住优秀的研究人员。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;过去一周共有八名研究人员离开 OpenAI 加盟 Meta。此前，OpenAI 首席执行官 Altman 曾在播客中透露，扎克伯格一直在提供超过 1 亿美元的薪酬方案，以吸引 OpenAI 的顶尖人才。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers" target="_blank"&gt;Meta 成功挖角三名 OpenAI 研究人员&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/news/355944/sam-altman-meta-tried-100m-offers" target="_blank"&gt;Sam Altman：Meta 曾试图以 1 亿美元挖走 OpenAI 人才，但未能成功&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357940</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357940</guid>
      <pubDate>Sat, 10 May 2025 03:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
