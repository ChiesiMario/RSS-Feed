<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 26 Jul 2024 13:57:13 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>极客与技术，产业与生态，100+ 重磅嘉宾，2024 全球开源技术峰会 GOTC 即将开幕</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;全球开源技术峰会（Global Open-source Technology Conference，简称 GOTC）&lt;/strong&gt;始于 2021 年，是面向全球开发者的开源技术盛会。&lt;/p&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1945ca12120599263ed99a7093e76de7e1e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;GOTC 2024 与上海浦东软件园联合举办，并结合 &lt;span style=&quot;color:#2ea121&quot;&gt;「&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;GOTC（全球开源技术峰会）&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;」 &lt;/span&gt;与&lt;span style=&quot;color:#2ea121&quot;&gt; 「&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;GOGC（全球开源极客嘉年华）&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;」&lt;/span&gt;，旨在打造一场全新开源盛会。2024 全球开源极客嘉年华（GOGC 2024）由浦东软件园携手 S 创共建，与开源中国、Linux 基金会等品牌联合呈现。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;此次大会将集结全球范围内对开源技术充满热情的开发者、社区成员、创业者、企业领袖、媒体人，以及各开源项目应用场景的产业精英、跨界才俊与年轻力量。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;通过主题演讲、圆桌讨论、创新集市、人才集市、黑客松、技术展示和互动工作坊等形式，与会者将有机会交流实践经验、探索前沿技术，让我们一起激发创新活力、展示开源魅力、促进跨领域合作。&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-2ed942a875bfbf807d22ae67fea041a2b93.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;当前会议报名通道已开启：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.huodongxing.com%2Fevent%2F8762568606000%3Ftd%3D6895280870225&quot; target=&quot;_blank&quot;&gt;https://www.huodongxing.com/event/8762568606000?td=6895280870225&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h1&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;大会论坛&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;8 月 15-16 日，上海・张江科学会堂，100+ 来自不同公司、不同社区、不同领域的重磅嘉宾将为您呈现一系列精彩内容：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;主论坛。&lt;/strong&gt;主题：极客与技术，产业与生态，源见未来。来自&lt;strong&gt;上海市政府的领导、中国电子的领导、国家级院士，以及来自百度、华为、世纪互联、&lt;span&gt;&lt;span&gt;复旦微电子&lt;/span&gt;&lt;/span&gt;、&lt;span&gt;&lt;span&gt;蓝芯算力、华大九天、&lt;/span&gt;&lt;/span&gt;开源中国、LF&lt;strong&gt; &lt;/strong&gt;AI &amp;amp; Data 基金会、PyTorch 基金会的高管&lt;/strong&gt;将带来分享与洞见。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;高峰论坛（上）：&lt;/strong&gt;开源生态与商业化&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;高峰论坛（下）：&lt;/strong&gt;AIGC 产业前沿&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;专题论坛：&lt;/strong&gt;全球开源人才及教育论坛&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;专题论坛：&lt;/strong&gt;LLMOps 最佳实践&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;专题论坛：&lt;/strong&gt;硬核 AI 技术创新与实践&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;专题论坛：&lt;/strong&gt;开源数据库与 AI 协同创新&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;专题论坛：&lt;/strong&gt;云原生与微服务架构&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;专题论坛：&lt;/strong&gt;数据基础与 GenAI 开发范式 - 开源生态的机遇与探索&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;2131&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/202754_lWaq_3820517.png&quot; width=&quot;1000&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;高峰论坛（上）：开源生态与商业化&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p&gt;开源生态是发展开源与技术的沃土，商业化是开源走向可持续发展与未来的必然选择。开源生态与商业化高峰论坛聚焦开源生态的建设与发展，论坛上不仅有开源生态伙伴强强联合，也将带来开源可持续发展的商业洞见。&lt;/p&gt; 
 &lt;p&gt;此高峰论坛上：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;openKylin 园区运营战略将会发布，并且举办全球首个园区站-浦软站成立仪式；&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;麒麟软件高级副总裁朱晨也将带来 openKylin 2.0 的最新进展；&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;国家地方共建人形机器人创新中心首席科学家江磊将分享「开源创新助力人形机器人未来产业」&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;上海市多媒体行业协会 &lt;/strong&gt;&lt;strong&gt;AIGC&lt;/strong&gt;&lt;strong&gt; 专委会秘书长董道国将介绍&lt;/strong&gt;&lt;strong&gt;大模型&lt;/strong&gt;&lt;strong&gt;在媒体行业的应用实践&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;华为编译器技术专家，openEuler 社区 &lt;/strong&gt;&lt;strong&gt;TC&lt;/strong&gt;&lt;strong&gt; 委员赵川峰将分享「&lt;/strong&gt;&lt;strong&gt;LLVM&lt;/strong&gt;&lt;strong&gt; 平行宇宙计划：LLVM 与 openEuler 协同进展与展望」&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;百度区块链部副总监荆博将带来百度区块链的开源进展与项目实践&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;芯璐科技 CEO 任璐佳将分享「自适应引擎的开源设计」&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;绘话智能创始人 &amp;amp; CEO 贾学锋将介绍企业级 &lt;/strong&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;strong&gt; 落地的新模式&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;高峰论坛（下）：&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;AIGC&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt; 产业前沿&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p&gt;AIGC 产业前沿高峰论坛是一个专注于人工智能生成内容（AIGC）技术及其在各行各业应用的高端交流平台。此论坛邀请来自 AIGC 各领域公司的高级别专家，旨在探讨 AIGC 技术的创新趋势、商业潜力以及对社会的深远影响，话题内容涉及 AIGC 的技术创新与融合、AIGC 在各行业的落地实践、以及 AIGC 内容创造与分发等方面。&lt;/p&gt; 
 &lt;p&gt;此高峰论坛上，&lt;strong&gt;商汤科技研发副总监王志宏、硅基流动创始人 &amp;amp; CEO 袁进辉、Unity 中国 &lt;/strong&gt;&lt;strong&gt;CTO&lt;/strong&gt;&lt;strong&gt; 左瑞文、视辰信息科技副总裁涂意、InfiniFlow 联合创始人张颖峰、派欧云计算产品总监刘峰、百度资深&lt;/strong&gt;&lt;strong&gt;研发工程师&lt;/strong&gt;&lt;strong&gt;陈秋良&lt;/strong&gt;等嘉宾将带来他们对 AIGC 产业前沿趋势的独到见解。同时，论坛上还将进行&lt;strong&gt;「GOGC 全球开源极客嘉年华」的黑客松颁奖仪式&lt;/strong&gt;。&lt;/p&gt; 
 &lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;专题论坛：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;全球开源人才及教育论坛&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;开源技术以其卓越的创新能力和协作精神在全球范围内迅速发展。开源人才是一个组织在全球化竞争中脱颖而出的关键。在 Linux 基金会发布的《2024 年度技术人才报告》指出，虽然我们从新闻中看到很多裁员的信息，但事实上，只有不到三分之一的组织正在减少技术人员数量，因此，投资现有员工是各个组织非常重要的任务，其中差不多 50% 的组织在 2024 年优先考虑提高现有员工的技能和交叉技能。云（ 55%）、DevOps（51%）、网络安全（49%）和 AI/ML（43%）等四个领域脱颖而出，成为人员配置优先考虑的关键技术领域。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;GOTC 大会的全球开源人才及教育论坛，将由 LF 开源软件学园全力支持。本次峰会中，来自不同领域的开源专家将讨论和分享现时最关键开源技术的发展趋势，开源教育及人才发展面临的挑战、开源用例和最佳实践，帮助行业培养更多的开源人才，帮助开发者了解参与开源的方式，开启开源职业生涯。&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;1140&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/202907_yhYI_3820517.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;专题论坛：LLMOps &lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;最佳实践&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;LLMOps 专门用于使用工具和方法来管理和自动化 LLM 的生命周期，从微调到维护。通过特定于模型的操作，数据科学家、工程师和 IT 团队可以高效地部署、监控和维护大型语言模型。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;此论坛带领开发者探索和分享 LLMOps 的最新实践、技术和工具。在这个论坛中，我们将深入讨论如何高效、可靠地管理和运维大规模语言模型，确保它们在生产环境中的最佳性能。议题内容涵盖：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;LLMOps 概览：对 LLMOps 的介绍，以及它在当前 LLM 技术与应用中的位置与优势，以及挑战。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;效率提升：如何通过 LLMOps 实现更快的模型开发、更高质量的模型交付以及更迅速的生产部署。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;可扩展性与自动化：LLMOps 如何支持大规模模型的监督、控制、管理和监控，以及如何实现持续集成、持续交付和持续部署。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;风险管理：LLMOps 如何提高透明度，快速响应监管审查请求，并确保更好地遵守组织或行业的政策。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;最佳实践案例：通过实际案例分析，学习如何应用 LLMOps 的最佳实践，包括探索性数据分析（EDA）、数据准备、提示工程、模型微调和模型审查。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;技术工具与平台：当前流行的 LLMOps 开源项目与平台，如 Hugging Face Transformers、LangChain、Dify 等。&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;828&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/203002_qrEX_3820517.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;专题论坛：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;硬核 &lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt; 技术创新与实践&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;这是极客开发者的盛会，我们相信，真正的技术创新不仅需要理论的深度，更需要实践的广度，以及极客式的探索。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;本论坛汇聚开发者圈中的技术极客，分享他们在大 AI 浪潮中的创新实践与经验。让你体会在老旧手机上搭建个人 AI 知识库、利用开源工具和库，架构自己的大模型搜索引擎、为嵌入式设备定制轻量级的神经网络、手写一个 RAG 系统等的挑战与乐趣，并从中学到硬核技能。&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;854&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/203044_02W9_3820517.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;专题论坛：开源数据库与 &lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt; 协同创新&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;在当今数字化时代，AI 正以前所未有的速度重塑各行各业。而数据库，作为信息管理的核心，其与 AI 的结合不仅为数据库领域带来革命性的变革，同时也为 AI 自身的创新和发展提供了强大的数据支撑和应用场景。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;当数据库遇上 AI，两者的结合能否激发出新的创新火花？数据库的高效索引技术，能否为 AI 提供更精准的数据检索，从而提升其学习和决策能力？数据库的优化存储解决方案，是否能够支持 AI 处理更大规模的数据集，推动其算法的进一步发展？数据库的自动化运维技术，又能否为 AI 的持续学习和自我优化提供稳定可靠的运行环境？&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;此论坛将探讨智能索引优化、数据压缩革新、自动化运维进阶、业务决策智能化、AI 与数据库的融合未来、实战案例剖析等方面，探索 AI 与数据库领域的结合能够为行业带来怎样革命性的变革。&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;629&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/203126_sxmb_3820517.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;专题论坛：云原生与&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;微服务架构&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;此论坛专注于云原生技术与微服务架构深度融合，我们精心策划了一系列技术深度分享，涵盖从容器化、服务网格到持续集成与持续部署（CI/CD）的全方位技术细节。参与者将有机会深入了解 Kubernetes 在云原生环境中的最佳实践，以及如何利用微服务架构来提高系统的可扩展性和弹性。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;此外，我们将深入探讨微服务架构中的服务发现、配置管理、分布式追踪等关键技术问题，并分享如何通过云原生技术实现微服务的自动化部署和管理，以及就微服务架构下的安全性、监控和日志管理等议题进行深入解析。&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;657&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/203159_xurs_3820517.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;专题论坛：数据基础与 GenAI 开发&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;范式&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt; - 开源生态的机遇与探索&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p&gt;在大模型时代，开源依旧是不可或缺的技术路径之一。目前很多的讨论聚焦于开源 vs 闭源模型之争，但如果将眼光放到整个生态发展，我们想将观察集中于两个方向：数据基础与开发体验，这是我们感知到目前 GenAI 核心技术的两个方向。&lt;/p&gt; 
 &lt;p&gt;Data + AI + Agent = ？数据+开发范式，会给「硅基生物」的发展带来怎样的变化？&lt;/p&gt; 
 &lt;p&gt;数据是 GenAI 时代技术演进的核心，也是模型能力的关键卡点。由于模型需求的发展，数据抽象，数据清洗和处理，以及数据编织等领域，产生了大量的新机遇，在开源社区也不停的有新的优秀开源项目出现。而 GenAI 所驱动的新开发范式，传统的 DevOps 体验如何应对 GenAI 的需求变迁，Agent 框架这个多变的领域又有什么机遇，这是我们想探索的第二个领域机会。LFAI &amp;amp; Data 基金会希望在这新技术浪潮中，关注那些不变的技术核心，寻求新的技术发展机遇，坚持三方中立治理模式，为开源生态带来持续不断的新血液，新活力。&lt;/p&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;954&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/203227_lV6i_3820517.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h1&gt;&lt;span style=&quot;color:#2ea121&quot;&gt;&lt;strong&gt;GOGC 全球开源极客嘉年华活动系列&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;8 月 12-14 日，在上海浦东软件园 —— 祖冲之园、郭守敬园、三林园，将邀请国内外知名开源社区共聚盛典，举办社区系列活动，丰富开源生态。&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;社区自组织活动&lt;/strong&gt;：由开发者和各社区自组织的社群聚会、交流活动&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;工作坊&lt;/strong&gt;：面向开源领域垂直议题组织的，以解决技术问题与教学等目的组织的小范围活动&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;开源寻宝&lt;/strong&gt;：基于两天峰会场地与周边活动会场的环境条件，因地制宜的，基于开源技术问题解谜的趣味活动&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;strong&gt; 前夜嘉宾交流会&lt;/strong&gt;：以全球开源周中开源峰会重磅嘉宾为核心的交流活动，推动嘉宾间合作与交流&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;strong&gt; 招聘会&lt;/strong&gt;：分不同主题与企业方向连日举办的招聘会活动，面向企业或机构需求青年人才与技术专家进行招募&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;开发者早餐会&lt;/strong&gt;：拟在 GOGC 的峰会预热时间中，以及 DAY2（ GOGC 2024 闭幕日）的早上，利用活动聚集了大量开发者及相关专家、企业家的资源优势，以社区组织作为基础，通过早餐会的形式促进开发者间交流&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;开发者之夜&lt;/strong&gt;：在活动前夜可组织社群派对 - 开发者之夜，将已经抵达上海的开发者们聚集起来，通过轻松的开源开发者生活、行业前沿观察分享等话题，营造次日参会的仪式感，活动本身可包含餐食、开发者高光时刻（快闪介绍）、电子游戏（竞技）等部分&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;创新集市&lt;/strong&gt;：在 GOGC 2024 主日程的两天时间内，拟在场地中利用各空间穿插由开源主题贯穿始末的各式创新展区 - 主题上，包含人工智能、开源项目、元宇宙、实时互动、智能硬件等方向，以开源项目应用的高互动性产品（AI、XR、硬件、游戏等）为主轴，有趣有料，使开发者们近距离接触和探索开源应用的无限可能；&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-af714530f874e8fc5dd80d941aab6d9a092.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;极客与技术，产业与生态，源见未来。2024 全球开源技术峰会 GOTC 即将开幕，敬请关注！&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;当前会议报名通道已开启：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.huodongxing.com%2Fevent%2F8762568606000%3Ftd%3D6895280870225&quot; target=&quot;_blank&quot;&gt;https://www.huodongxing.com/event/8762568606000?td=689528087022&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;更多信息，访问官网查看：&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://gotc.oschina.net/&quot;&gt;https://gotc.oschina.net&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304086/gotc-gogc-2024-is-coming</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304086/gotc-gogc-2024-is-coming</guid>
            <pubDate>Fri, 26 Jul 2024 12:35:36 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>开源日报 | OpenAI 内测 SearchGPT；用 MacBook 部署 Llama 3.1；3D 视频版 Sora；开源模型走向中美分水岭</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.7.26&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/304009/rust-1-80-0-released&quot;&gt;Rust 1.80.0 发布&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 1.80.0 稳定版现已发布。主要变化：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li style=&quot;text-align:left&quot;&gt;&lt;strong&gt;&lt;code&gt;LazyCell&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;LazyLock&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;新的 「lazy」 类型将值的初始化延迟到首次访问，它们类似于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F06%2F01%2FRust-1.70.0.html%23oncecell-and-oncelock&quot; target=&quot;_blank&quot;&gt;1.70 中稳定的&lt;/a&gt;&lt;code&gt;OnceCell&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;OnceLock&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型，但单元格中包含了初始化函数。这完成了从流行的和板条箱中采用到标准库中的功能的稳定化。完成了从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrates.io%2Fcrates%2Flazy-static&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;lazy_static&lt;/code&gt;&lt;/a&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrates.io%2Fcrates%2Fonce_cell&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;once_cell&lt;/code&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;crates&amp;nbsp;&lt;/span&gt;到标准库中所采用功能的稳定化。&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/303988/openai=searchgpt-prototype&quot;&gt;OpenAI 进军 AI 搜索大战 —— 开始小范围内测 SearchGPT&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;7 月 25 日，OpenAI 突然在 X&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FOpenAI%2Fstatus%2F1816536290822881780&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;，正在测试其备受期待的 AI 搜索市场入驻产品「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fsearchgpt-prototype%2F&quot; target=&quot;_blank&quot;&gt;SearchGPT&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;」—— 一款由 GPT-4 系列模型驱动、能实时访问全网信息，附带清晰来源链接的搜索引擎。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;官方介绍称， SearchGPT 只是其新开发 AI 搜索功能的 「临时原型」。初期仅对小部分用户和出版商开放，其他有人若有兴趣尝试可以加入等候名单。未来这些功能的最佳部分将被直接集成到 ChatGPT 中。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;1604&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/104932_dtVN_2720166.png&quot; width=&quot;1284&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/303986/linux-mint-22-released&quot;&gt;Linux Mint 22 「Wilma」 正式发布&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Linux Mint 22 「Wilma」 已正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.linuxmint.com%2F%3Fp%3D4731&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，这是一个长期支持版本 (LTS)，将支持到 2029 年。新版本提供了更好的语言支持。现在，当你安装 Linux Mint 22 时，只有你选择的语言和英语会在安装结束时保留下来，这为你节省了大量空间。大多数人可能没有意识到，旧版本并没有对这一点进行优化。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6d2478fbf48b3639d6a9af9f5a55a4b7e43.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1900197770%2FOpeHN6ueq&quot; target=&quot;_blank&quot;&gt;关于 AIGC，朱啸虎：回归商业逻辑&lt;/a&gt;&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;通过精确定位和深耕细分市场，可以有效地构建自己的核心竞争力，从而在激烈的市场竞争中占据有利位置。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;引入 AIGC 后，一旦 AIGC 技术能为客户创造十倍以上的价值时，这些软件公司的发展速度将迅速提升。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;生成式 AI 能够在客户服务、营销和销售、软件工程及产品研发等领域实现迅速突破。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    - 微博&amp;nbsp;
    &lt;strong&gt;程贵锋 gui&lt;/strong&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1704750133%2FOpcxtlRXQ&quot; target=&quot;_blank&quot;&gt;带命令行的 Docker 管理用户界面&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;lazydocker，github.com/jesseduffield/lazydocker&lt;/p&gt; 
  &lt;p&gt;带命令行的 docker 管理用户界面。可以很方便地管理 docker。 &lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;你的档案&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1219795431%2FOpjTnzOaX&quot; target=&quot;_blank&quot;&gt;以小扎 Llama3.1 留一手为标志，开源模型也开始走向中美分水岭&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt;
   昨夜刚发布的 Mistral-Large-2 正在下载中，1230 亿参数跃上 DIY 个人 AI PC 可用大模型的体量新高度。千亿是个新门槛。从 Llama-3-70B、Qwen-2-72B、Gemma-2-27B 到现在反复折腾，就是想看看以消费级、个人生产力的顶配设备结合最大模型，到底能达到什么样的应用水准。研究不如实操，观感不如实感。
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt;
   作为一个用户的观感：以小扎 Llama3.1 留一手为标志，开源模型也开始走向中美分水岭，后续切分动作必然不少。以后的强智能世界将越来越是两个谱系、两道水系、两种生态......
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;胡延平 EarthRambler&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2192828333%2FOpkfIvUBT%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;使用两台 MacBook 部署了目前最强大的开源大模型 Llama 3.1&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;科技达人 Alex Cheema 在家中使用两台 MacBook 部署了目前最强大的开源大模型 Llama 3.1，拥有惊人的 4050 亿参数。他通过四位量化技术将模型压缩到了约 200GB（相当于 3 个《赛博朋克 2077》游戏的大小）。Alex 表示，实际体验丝毫不逊色于目前最优秀的闭源大模型。&lt;/p&gt; 
   &lt;p&gt;模型源码下载地址：https://github.com/exo-explore/exo&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;零重力瓦力&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F3626485974%2FOpk8J2UgC%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;龙芯服务器 CPU 龙芯 3C6000 流片成功，达英特尔 3 年前水平！&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;媒体报道：在 24 日举行的 2024 全球数字经济大会拉萨高层论坛上，龙芯中科技术股份有限公司董事长胡伟武介绍，该公司在研的服务器 CPU 龙芯 3C6000 近日已经完成流片。实测结果表明，相比上一代服务器 CPU 龙芯 3C5000，其通用处理性能成倍提升，已达到英特尔公司推出的中高端产品至强（Xeon）Silver 4314 处理器水平。&lt;/p&gt; 
  &lt;p&gt;龙芯这个突破很不错，最好能和华为推出的、中国现在最大服务器操作系统开源欧拉兼容，否则生态太小，难以做大。&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    - 微博 
    &lt;strong&gt; 前 HR 本人&lt;/strong&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8bVm5TncOvo&quot; target=&quot;_blank&quot;&gt;62% 的游戏从业者已在使用 AI！网易副总裁庞大智：应该把 AI 开源给玩家&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;过去一年，以大模型为代表的人工智能技术不断取得革命性突破，这种跃迁式的发展，已经无缝地融入日常生活，对各行各业产生影响。而一直被公认为 AI 技术最好试验田的游戏行业，自然成为了最早感知、适应 AI 冲击的前哨。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;时代财经&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cls.cn%2Fdetail%2F1745085&quot; target=&quot;_blank&quot;&gt;美国 FTC 主席重磅表态：支持开放 AI 模型，以避免技术垄断&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#262626&quot;&gt;美国联邦贸易委员会（FTC）主席莉娜·汗（Lina Khan）在业界的一场关键演讲中表示，通过开放人工智能模型，能允许开发者在几乎没有限制的情况下进行定制，这更有可能促进行业竞争。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#262626&quot;&gt;但批评人士警告称，开放式模型也可能放大模型被滥用的风险，可能会让美国对手的公司利用这项技术。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;财联社&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_5182171545_134e1a99902001u2ha.html&quot; target=&quot;_blank&quot;&gt;上海发布未来三年行动方案，重点聚焦大模型、人形机器人和低空飞行器&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《行动方案》明确，上海要聚焦人工智能在生产制造、研发设计中的落地应用，开发故障分析、流程工艺等工业语料产品，推动工业大模型发展，促进制造业全流程智能化。强化大模型在药物筛选、分子结构预测、药品检验检测等方面的应用。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;界面新闻&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn808790333&quot; target=&quot;_blank&quot;&gt;专家访谈丨林洲汉：模型幻觉模型偏见已成落地「共性问题」，技术突破仍紧迫&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;来自上海交通大学约翰·霍普克罗夫特计算机科学中心的林洲汉教授在接受红星资本局专访时表示，现在大模型在不同场景落地时遇到了模型幻觉、模型偏见等共性问题，他认为当下大模型发展，技术突破仍是紧迫问题。同时国产芯片的开发和应用生态系统尚未完全成熟，亟需更多的软件支持和开发工具。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;红星新闻&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8bViFVRXwDT&quot; target=&quot;_blank&quot;&gt;「3D 视频版 Sora」来了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;AI 独角兽 Stability AI 推出其首个视频生视频（video-to-video）模型 Stable Video 4D（SV4D），该模型能够将单个物体的视频输入，转换为 8 个不同视角的多个新视频，用户可任意指定摄像机角度。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span&gt;智东西&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8bWrIUzYzT8&quot; target=&quot;_blank&quot;&gt;「在中国 AI 开源技术上开发若成新常态，美国将面临巨大挑战&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;《纽约时报》援引十几名中国科技公司的技术专家和研究人员的话报道称，他们认为，开源技术是中国人工智能发展如此迅速的关键原因，开源人工智能将会是中国在全球竞争中后来居上的机遇。此外，探索开源技术也能使他们在遭到美国加强限制的情况下继续成长。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;观察者网&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lanjinger.com%2Ft%2F854110&quot; target=&quot;_blank&quot;&gt;国内首创 RDI 模式，武汉 RISC-V 生态创新中心启动揭牌&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在「RDI 生态·武汉创新论坛·2024」上，由武汉数据集团、武汉光谷金控集团、聚力开源公司成立的「武汉 RISC-V 生态创新中心」揭牌。该中心在国内首创 RDI 模式。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;蓝鲸财经&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bjnews.com.cn%2Fdetail%2F1721980536129156.html&quot; target=&quot;_blank&quot;&gt;Unity 中国 CEO：专注小游戏、开源鸿蒙、智能座舱领域&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#191919&quot;&gt;Unity 中国 CEO 张俊波接受新京报贝壳财经等媒体采访时表示，Unity 中国现在专注解决中国开发者的痛点解决，包括微信小游戏、开源鸿蒙、智能座舱。Unity 独立推出 AI 大模型的可能性不大。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;新京报&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmem0ai%2Fmem0&quot; target=&quot;_blank&quot;&gt;mem0ai/mem0&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;255&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0724/135744_pjmC_3820517.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmem0ai%2Fmem0&quot; target=&quot;_blank&quot;&gt;https://github.com/mem0ai/mem0&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;Mem0 为大型语言模型提供了一个智能、自我改进的内存层，从而实现跨应用程序的个性化 AI 体验。&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;包含对各种流行的大模型的内置支持，内存可以利用用户提供的 LLM，确保特定需求的高效使用。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/morflameblog/blog/11572634&quot; target=&quot;_blank&quot;&gt;10 张图，说透 Kubernetes 架构原理，这会算是真懂了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这本关于 Kubernetes 架构的综合指南旨在通过插图详细解释每个 Kubernetes 组件。因此，如果你希望：&lt;/span&gt;&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;了解 Kubernetes 的架构&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;掌握 Kubernetes 的基本概念&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;了解 Kubernetes 架构组件&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;探索连接这些组件的工作流&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;然后，你会发现此 Kubernetes 架构指南非常有价值。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;Kubernetes High level architecture&quot; height=&quot;282&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240717150441.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FvNCBiJ5lzBfZlJpGXT-Liw&quot; target=&quot;_blank&quot;&gt;Node.js 支持原生运行 TypeScript&lt;span&gt;——&lt;/span&gt;自动将 TS 代码转译为 JS 代码&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：deno？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：那是啥，小丑？&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：他这个是不检查，deno 是检查编译&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：bun?&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：我现已经全换成 bun 了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：ts 在国内开发环境，已经全面过气了吧。es6+已经足够用了，而且将来的标准还可能和 ts 冲突，不如直接就上手原生 js+es2023&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：js：坏了！我成替身了！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：Ts-node&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：node index.ts&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：Deno 正在使用优美的语言赞美 Node.js 这次更新&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：如果用 type 就失去了 js 的初心了。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 12：直接原生支持不就行了，为什么要转译？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 13：现在都是转义，没有原生的 ts 运行时，有也是阉割得不成样的，好多特性都不支持&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 14：干得漂亮，哈哈，就像直接允许，不想预先编译。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 15：只是简单的字符串处理吗，想起我在 coldemo.js.org 中也是这样支持 ts 的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 16：流水线内嵌 ts 编译器都比这玩意用处大&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 17：这种简单粗暴的去除类型，很多 ts 特有的代码，比如装饰器，interface。是不是还是不能运行？不如学 deno，直接内嵌 ts 执行环境得了，nodejs 也要改名了 nodets。哈哈&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/303827/so-developer-survey-2024&quot; target=&quot;_blank&quot;&gt;Stack Overflow 2024 年度开发者调查报告&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：外国的前端这么热门吗，前二是 JS 和 html/css?&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：从使用量来讲中国也是&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：理论来说 web 这块还是 Java 天下&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：你想想，不论什么只要用 web 的，必然有 js，html/css,，后端语言 Java 再厉害，也不可能全部占了，何况还有很有实力的 go,，c#， php 这些东西&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/303884/musk-zuck-cage-fight-mma&quot; target=&quot;_blank&quot;&gt;马斯克再次约架扎克伯格：任何地点、任何时间、任何规则都可以&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：任何时候，任何地点，超级侦探，认真办案！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：扎克伯格那小身板哪里够马斯克打&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304080</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304080</guid>
            <pubDate>Fri, 26 Jul 2024 11:05:06 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Bytebase 2.22.0 - 支持在 PostgreSQL 任务执行期间监控阻塞会话</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;h2&gt;🚀 新功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持在 PostgreSQL 任务执行期间监控阻塞会话。&lt;/li&gt; 
 &lt;li&gt;支持 Oracle 自动补全。&lt;/li&gt; 
 &lt;li&gt;支持 Hive 的 Kerberos 身份验证。&lt;/li&gt; 
 &lt;li&gt;可同步表 / 列上的扩展属性 MS_Description 作为 SQL Server 的注释。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎄 改进&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进在线迁移功能，以便在启用该功能时识别不支持的语句并通知用户。&lt;/li&gt; 
 &lt;li&gt;支持在问题中取消任务检查。&lt;/li&gt; 
 &lt;li&gt;在审计日志中显示用户登录、管理模式执行和设置更改。&lt;/li&gt; 
 &lt;li&gt;在 SQL 编辑器中正确显示 SQL Server 位键入数据。&lt;/li&gt; 
 &lt;li&gt;改进对 Oracle dblink 的支持。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📕 安装及升级&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;全新安装： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget-started%2Fself-host&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get-started/self-host&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;升级： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget-started%2Fupgrade&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get-started/upgrade&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;警告： Bytebase 不支持降级。请确保升级前备份原数据。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;💡 更多资讯，请关注 Bytebase 公号：Bytebase&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/6148470/blog/14307289</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/14307289</guid>
            <pubDate>Fri, 26 Jul 2024 08:34:17 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>议程出炉！GOTC 2024 深度解码云原生与微服务架构未来趋势</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;2024 年 8 月 15 日至 16 日，全球开源技术峰会 GOTC 2024 将于上海张江科学会堂盛大开启。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;GOTC 2024 与上海浦东软件园联合举办，结合了 「GOTC（全球开源技术峰会）」 与 「GOGC（全球开源极客嘉年华）」 两大活动品牌。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;大会由一个主论坛领航，两大高峰论坛以及六大专题论坛并行，全面深入探讨 AI、数据库、云原生等前沿技术领域，届时将集结全球范围内对开源技术充满热情的开发者、社区成员、创业者、企业领袖、媒体人，以及各开源项目应用场景的产业精英、跨界才俊与年轻力量。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;720&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-867379bfffe33ab24c5d4c8442868249c67.jpg&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通过主题演讲、圆桌讨论、创新集市、人才集市、黑客松、技术展示和互动工作坊等形式，与会者将有机会交流实践经验、探索前沿技术，一起激发创新活力、展示开源魅力、促进跨领域合作。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;其中，&lt;strong&gt;云原生与&lt;/strong&gt;&lt;strong&gt;微服务架构&lt;/strong&gt;&lt;strong&gt;论坛&lt;/strong&gt;由 Kong Senior Software Engineer、Kubernetes ingress-nginx maintainer 张晋涛担任出品人，将于 8 月 16 日上午举行。论坛专注于云原生技术与微服务架构深度融合，我们精心策划了一系列技术深度分享，涵盖从容器化、服务网格到持续集成与持续部署（CI/CD）的全方位技术细节。参与者将有机会深入了解 Kubernetes 在云原生环境中的最佳实践，以及如何利用微服务架构来提高系统的可扩展性和弹性。&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;GOTC 2024 报名通道现已开启，诚邀全球开源技术爱好者齐聚上海，共襄盛举。报名参会请点击：&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.huodongxing.com%2Fevent%2F8762568606000%3Ftd%3D6895280870225&quot;&gt;https://www.huodongxing.com/event/8762568606000?td=6895280870225&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;论坛亮点：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;云原生和微服务架构下的企业流量治理&lt;/p&gt; 
&lt;p&gt;腾讯微服务架构建设之路&lt;/p&gt; 
&lt;p&gt;Kafka 架构局限性与 AutoMQ 的创新性&lt;/p&gt; 
&lt;p&gt;eBPF 在可观测性、服务网格数据面的探索与实践&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;4971&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a0e705008f8d0a9c0dc339bde1071c747b2.png&quot; width=&quot;1800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;论坛出品人：张晋涛&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;张晋涛是云原生技术专家，Kubernetes ingress-nginx maintainer，Containerd/Docker/Helm/Kubernetes/KIND 等众多开源项目 contributor，微软 MVP。他对 Docker 和 Kubernetes 等容器化技术有大量实践和深入源码的研究，是业内多个知名大会讲师，PyCon China 核心组织者，写有 《Kubernetes 上手实践》、《Docker 核心知识必知必会》和《Kubernetes 安全原理与实践》等专栏。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;议题：云原生时代下企业流量治理的机遇和挑战&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;演讲嘉宾：&lt;/strong&gt;张晋涛 | Kong Senior Software Engineer，Kubernetes ingress-nginx maintainer&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;议题简介：&lt;/strong&gt;Kubernetes 诞生至今已经 10 年，云原生生态已经得到了广泛的发展。各个企业在进行数字化转型和云原生落地的过程中已经做了很多探索。无论是何种架构的服务都离不开流量治理，本次分享将主要聚焦在云原生和微服务架构下，企业流量如何治理，以及伴随着 AI 发展，在此方面的探索。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;议题：腾讯海量云原生&lt;/strong&gt;&lt;strong&gt;微服务架构&lt;/strong&gt;&lt;strong&gt;建设之路&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;演讲嘉宾：&lt;/strong&gt;侯诗军 | 腾讯中间件产品资深架构师&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;议题简介：&lt;/strong&gt;云原生时代，越来越多的企业借助于微服务与容器化，来提升业务弹性与研发协作效率。Dubbo、Consul、SpringCloud、Istio、Dapr 各类微服务生态组件百家争鸣。从腾讯内部的 ONS、Taf 到 L5，我们也在服务治理的道路上不断的研究探索，最终吸取各家之所长打磨 PolarisMesh，2021 年正式对外开源。PolarisMesh 目前已在腾讯内部的社交、支付、游戏、视频等 90% 以上业务深度使用，日均服务调用量超过 65 万亿。本次分享以腾讯微服务架构建设为主，分享 TSF、PolarisMesh 和服务治理方面的实践经验。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;议题：流式数据入湖：基于&lt;/strong&gt;&lt;strong&gt;对象存储&lt;/strong&gt;&lt;strong&gt;构建云原生 &lt;/strong&gt;&lt;strong&gt;Kafka&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;演讲嘉宾：&lt;/strong&gt;周新宇 | AutoMQ 联合创始人 &amp;amp; CTO&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;议题简介：&lt;/strong&gt;现代数据技术栈完全基于对象存储构建，以 Kafka 为代表的流式数据入湖，完成了最后一块拼图。AutoMQ 深度利用云原生的技术，以存算分离的架构重新设计 Kafka，将其从 Shared-Nothing 架构升级为 Shared-Storage 架构，获得了十倍的成本优势和百倍的运维效率提升。此次演讲将分享云和云原生在基础软件领域带来的趋势性变化、Apache Kafka 架构局限性和实践痛点、AutoMQ 创新性的云原生架构，以及展望对象存储在技术架构、多云容灾和数据湖生态等方面带来的可能性。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;议题：零侵扰可观测性让云原生基础设施持续创新&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;演讲嘉宾：&lt;/strong&gt;向阳 | 清华大学博士，云杉网络研发 VP&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;议题简介：&lt;/strong&gt;云原生基础设施正在快速演进，良好的可观测性是保障快速迭代的基础设施软件能够放心交付到生产环境的前提。使用侵入式的可观测性数据采集方式对基础设施服务而言通常意味着挑战，例如：分布式追踪能力欠缺导致观测盲点，或者和业务侧的选型不兼容导致数据割裂；性能剖析依赖繁杂的外部工具导致生产环境不具备使用条件，或者难以持续启用导致无法捕获到异常发生时刻的数据。使用 eBPF 实现的零侵扰可观测性能够很好地解决这些痛点，本次分享将会介绍 DeepFlow 如何使用 eBPF 技术为 APISIX、Kong、Envoy、TiDB、Redis、Kafka 等基础设施服务赋能深度可观测性，并介绍在故障排查和性能瓶颈定位方面的效能提升案例。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;议题：软件架构背后的智慧&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;演讲嘉宾：&lt;/strong&gt;费良宏 | Amazon Web Services 首席架构师&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;议题简介：&lt;/strong&gt;软件系统或者说软件件架构充满着不确定性，而一个优秀的架构需要技术、领导力和产品管理（包括用户体验）的结合。本场演讲将帮助您化解迷局，掌握如何结合技术、领导力和产品管理知识，并做出更优的决策。我们将探讨软件架构的核心原则和概念，以及如何运用这些原则来管理不确定性。向行业顶尖专家学习，坚持「第一性原则」的方法，打造更强大、更具弹性的软件系统！&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;议题：用 &lt;/strong&gt;&lt;strong&gt;eBPF&lt;/strong&gt;&lt;strong&gt; 挑战服务网格模型，探索 Sidecarless 解决方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;演讲嘉宾：&lt;/strong&gt;李振诚 | 华为云研发工程师&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;议题简介：&lt;/strong&gt;过去几年服务网格作为服务治理发展的第三代模型，吸引了大批用户的关注。但随着网络中应用和数据指数级别的爆炸式增长，用户开始评估原先 sidecar 形式服务网格对内存、CPU 等资源的消耗。可以说，sidecar 模型的服务网格已经无法支撑大规模的业务。此论坛将分享 Kmesh 这一 Sidecarless 形态的服务网格数据面，分析它在着重提升性能和降低开发，利用 eBPF 和可编程内核方面的探索，并最终向着零底噪服务网格模型迈进，重塑服务网格新形态。&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;GOTC 2024 报名通道现已开启，诚邀全球开源技术爱好者齐聚上海共襄盛举。&lt;/strong&gt;报名参会请点击：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.huodongxing.com%2Fevent%2F8762568606000%3Ftd%3D6895280870225&quot; target=&quot;_blank&quot;&gt;https://www.huodongxing.com/event/8762568606000?td=6895280870225&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;400&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b56d344a540454c4af01d7473fe0d3b6311.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3859945/blog/13893995</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/13893995</guid>
            <pubDate>Fri, 26 Jul 2024 08:16:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>mybatis-mp 之简单省力方法，超实用！！！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;省力写法-必看&lt;/h1&gt; 
&lt;p&gt;这些都是作者推荐的省心、省力、省事写法&lt;/p&gt; 
&lt;h2&gt;指定数据库类型&lt;/h2&gt; 
&lt;p&gt;虽然 mybatis-mp 支持自动识别，但是具有一定损耗，能加尽量加上&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;mybatis:
  configuration:
    databaseId: MYSQL
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;select 、from、returnType 都可以省略&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;假如，只 select 当前 Mapper 的实体类：可不写 select&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;假如 from 的是当前 Mapper 的实体类：可不写 from&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;假如，返回的是当前 Mapper 的实体类：可不写 returnType&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUser sysUser = QueryChain.of(sysUserMapper)
    .eq(SysUser::getId,1)
    .get();
    
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;一键忽略 null，忽略空字符串，自动对字符串进行去空格&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUser sysUser = QueryChain.of(sysUserMapper)
     // 忽略 null 条件参数    
     // 忽略，空字符串，条件参数 
     //  对字符串进行 trim 去空格操作    
    .forSearch(true)
    .eq(SysUser::getUserName, null )
    .eq(SysUser::getUserName, &quot;&quot; )
    .eq(SysUser::getUserName,&quot; admin &quot;)
    .get();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;更多说明：前往 &lt;a href=&quot;https://www.oschina.net/zh-CN/function/core/QueryChain#forsearch-%E6%8B%BC%E6%8E%A5where%E6%97%B6-%E5%BF%BD%E7%95%A5null-%E3%80%81%E7%A9%BA%E5%AD%97%E7%AC%A6%E3%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2trim-%E7%AD%89&quot;&gt;这里&lt;/a&gt; 查看&lt;/p&gt; 
&lt;h2&gt;手动优雅忽略条件&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;Integer id= XXX;
String userName= YYY;
SysUser sysUser = QueryChain.of(sysUserMapper)
    .select(SysUser.class,SysRole.class)
    .from(SysUser.class)
    .eq(SysUser::getId,id,Objects::nonNull)
    .like(SysUser::getUserName,userName,StringUtils::isNotBlank)
    .get();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;join 可不用再写 on 条件&lt;/h2&gt; 
&lt;p&gt;配合 &lt;a href=&quot;https://www.oschina.net/zh-CN/function/annotation/foreignKey&quot;&gt;@ForeignKey 注解&lt;/a&gt; 可以不用再写 on 条件&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Data
@Table 
public class SysUser {

    @TableId
    private Integer id;

    private String userName;

    private String password;

    @ForeignKey(SysRole.class)
    private Integer roleId;

    private LocalDateTime createTime;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public class Demo {
    @Autowired
    private SysUserMapper sysUserMapper;

    public void page() {
        Pager pager= QueryChain.of(sysUserMapper)
                .select(SysUser.class)
                .from(SysUser.class)
                .join(SysUser.class,SysRole.class)
                .like(SysUser::getUserName,&quot;abc&quot;)
                .returnType(SysUser.class)
                .paging(Pager.of(1));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;简单自动 select 列&lt;/h2&gt; 
&lt;p&gt;select(实体类.class) 或 select(VO.class) 都可以自定帮你 select 所需要的列&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public class Demo {
    @Autowired
    private SysUserMapper sysUserMapper;

    public void page() {
        Pager pager= QueryChain.of(sysUserMapper)
                .select(SysUser.class) // or select(SysUserVO.class)
                .from(SysUser.class)
                .like(SysUser::getUserName,&quot;abc&quot;)
                .returnType(SysUser.class)
                .paging(Pager.of(1));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;结果映射 - VO 自动映射 - 如何得到不同的类型的结果？&lt;/h2&gt; 
&lt;p&gt;使用 returnType(XX.class) 方法，设置你想要的结果的类型&lt;/p&gt; 
&lt;p&gt;XX 类型，可以是，简单的基本类型包装类，实体类，VO 类&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;实体类：依赖实体类注解，前往 &lt;a href=&quot;https://www.oschina.net/zh-CN/function/annotation/table&quot;&gt;@Table&lt;/a&gt; 查看&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;VO: 依赖 VO 注解，前往 &lt;a href=&quot;https://www.oschina.net/zh-CN/function/annotation/resultEntity&quot;&gt;@ResultEntity&lt;/a&gt; 查看&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;VO 映射 - 构建复杂的结构类&lt;/h2&gt; 
&lt;p&gt;mybatis-mp 实现&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;结果自动映射 (多复杂的都可以映射)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;重复列名，根本无需担心&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以构建，多重内嵌结构，例如:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;@ResultEntity(A 对应实体类.class)
class A {
    @NestedResultEntity(target=(B 对应实体类.class)
    B b;
}

class B {
    @NestedResultEntity(target=(C 对应实体类.class)
    List cs;
}

class C {
    Integer id;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;更多更复杂的映射，前往 &lt;a href=&quot;https://www.oschina.net/zh-CN/function/annotation/resultEntity&quot;&gt;VO 映射注解&lt;/a&gt; 查看&lt;/p&gt; 
&lt;h2&gt;链路操作 - connect 方法 - 拿到自己的句柄&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;List list=QueryChain.of(sysUserMapper)
        .select(SysUser::getId,SysUser::getUserName,SysUser::getRole_id)
        .from(SysUser.class)
        .connect(query-&amp;gt;{
            query.exists(SubQuery.create()
                    .select1()
                    .from(SysUser.class)
                    .eq(SysUser::getId,query.$(SysUser::getId))
                    .isNotNull(SysUser::getPassword)
                    .limit(1)
            );
        })
        .list();
&lt;/code&gt;&lt;/pre&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304048</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304048</guid>
            <pubDate>Fri, 26 Jul 2024 08:14:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>10 张图，说透 Kubernetes 架构原理，这会算是真懂了</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style=&quot;color:#333333; text-align:left&quot;&gt;这本关于 Kubernetes 架构的综合指南旨在通过插图详细解释每个 Kubernetes 组件。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;因此，如果您希望：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;了解 Kubernetes 的架构&lt;/li&gt; 
 &lt;li&gt;掌握 Kubernetes 的基本概念&lt;/li&gt; 
 &lt;li&gt;了解 Kubernetes 架构组件&lt;/li&gt; 
 &lt;li&gt;探索连接这些组件的工作流&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;然后，您会发现此 Kubernetes 架构指南非常有价值。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;注意：为了更好地理解 Kubernetes 架构，有一些先决条件请查看 kubernetes 学习指南中的先决条件以了解更多信息。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;什么是 Kubernetes 架构？&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以下 Kubernetes 架构图显示了 Kubernetes 集群的所有组件以及外部系统如何连接到 Kubernetes 集群。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kubernetes High level architecture&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240717150441.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;关于 Kubernetes，您应该了解的第一件事是，它是一个分布式系统。这意味着，它有多个组件分布在网络上的不同服务器上。这些服务器可以是虚拟机或裸机服务器。我们称之为 Kubernetes 集群。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubernetes 集群由控制平面节点和工作节点组成。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_2&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;控制平面&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;控制平面负责容器编排和维护集群的所需状态。它具有以下组件。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;kube-apiserver&lt;/li&gt; 
 &lt;li&gt;etcd&lt;/li&gt; 
 &lt;li&gt;kube-scheduler&lt;/li&gt; 
 &lt;li&gt;kube-controller-manager&lt;/li&gt; 
 &lt;li&gt;cloud-controller-manager&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;一个集群可以有一个或多个控制平面节点。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;工作节点&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Worker 节点负责运行容器化应用程序。worker 节点具有以下组件。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;kubelet&lt;/li&gt; 
 &lt;li&gt;kube-proxy&lt;/li&gt; 
 &lt;li&gt;Container runtime&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;Kubernetes 控制平面组件&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;首先，让我们看一下每个控制平面组件以及每个组件背后的重要概念。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;1. kube-apiserver&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;kube-apiserver 是公开 Kubernetes API 的 Kubernetes 集群的中心枢纽。它具有高度可扩展性，可以处理大量并发请求。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;最终用户和其他集群组件通过 API 服务器（kube-apiserver）与集群通信。在极少数情况下，监控系统和第三方服务可能会与 apiserver 通信以与集群进行交互。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;因此，当您使用 kubectl 管理集群时，在后端，您实际上是通过 HTTP REST API 与 API 服务器进行通信。但是，内部集群组件（如 scheduler、controller 等）使用 gRPC 与 API 服务器通信。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;API 服务器与集群中的其他组件之间的通信通过 TLS 进行，以防止对集群进行未经授权的访问。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kube-apiserver&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240717151952.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubernetes api-server 负责以下工作。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;API 管理：公开集群 API endpoint 并处理所有 API 请求。API 是版本化的，它同时支持多个 API 版本。&lt;/li&gt; 
 &lt;li&gt;身份验证（使用客户端证书、持有者令牌和 HTTP 基本身份验证）和授权（ABAC 和 RBAC）&lt;/li&gt; 
 &lt;li&gt;处理 API 请求并验证 API 对象（如 Pod、服务等）的数据（验证和变更准入控制器）&lt;/li&gt; 
 &lt;li&gt;它是唯一与 etcd 通信的组件&lt;/li&gt; 
 &lt;li&gt;api-server 协调控制平面和工作节点组件之间的所有进程&lt;/li&gt; 
 &lt;li&gt;api-server 有一个内置的 apiserver 代理。它是 API 服务器进程的一部分。它主要用于启用从群集外部访问 ClusterIP 服务，即使这些服务通常只能在群集本身内访问&lt;/li&gt; 
 &lt;li&gt;API 服务器还包含一个聚合层，允许您扩展 Kubernetes API 以创建自定义 API、资源和控制器&lt;/li&gt; 
 &lt;li&gt;API 服务器还支持监视资源的更改。例如，客户端可以对特定资源建立监视，并在创建、修改或删除这些资源时接收实时通知&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;安全说明：为了减少群集攻击面，保护 API 服务器至关重要。Shadowserver 基金会进行了一项实验，发现了 380,000 个可公开访问的 Kubernetes API 服务器。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h3_6&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;2. etcd&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubernetes 是一个分布式系统，它需要一个高效的分布式数据库，如 etcd 来支持其分布式性质。它既充当后端服务发现，又充当数据库。你可以称它为 Kubernetes 集群的大脑。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;etcd 是一个开源的强一致性分布式键值存储。那么这意味着什么呢？&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;强一致性：如果对某个节点进行了更新，则强一致性将确保它立即更新到群集中的所有其他节点。此外，如果你看一下 CAP 定理，就不可能实现 100% 的可用性，并具有很强的一致性和分区容错&lt;/li&gt; 
 &lt;li&gt;分布式：etcd 被设计为在不牺牲一致性的情况下作为集群在多个节点上运行&lt;/li&gt; 
 &lt;li&gt;键值存储：将数据存储为键和值的非关系数据库。它还公开键值 API。数据存储建立在 BboltDB 之上，BboltDB 是 BoltDB 的一个分支&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;etcd 使用 raft 共识算法，具有很强的一致性和可用性。它以领导者成员的方式工作，以实现高可用性并承受节点故障。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;那么 etcd 是如何与 Kubernetes 一起工作的呢？&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;简单地说，当你使用 kubectl 获取 kubernetes 对象详细信息时，你是从 etcd 获取的。此外，当您部署像 pod 这样的对象时，会在 etcd 中创建一个条目。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;简而言之，这是您需要了解的有关 etcd 的信息。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;etcd 存储 Kubernetes 对象的所有配置、状态和元数据（pod、secret、daemonsets、deployments、configmaps、statefulsets 等）。&lt;/li&gt; 
 &lt;li&gt;etcd 允许客户端使用 Watch() API 订阅事件。Kubernetes api-server 使用 etcd 的监视功能来跟踪对象状态的变化。&lt;/li&gt; 
 &lt;li&gt;etcd 使用 gRPC 公开键值 API。此外，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fetcd.io%2Fdocs%2Fv3.3%2Fdev-guide%2Fapi_grpc_gateway%2F&quot; target=&quot;_blank&quot;&gt;gRPC 网关&lt;/a&gt;是一个 RESTful 代理，可将所有 HTTP API 调用转换为 gRPC 消息。这使它成为 Kubernetes 的理想数据库。&lt;/li&gt; 
 &lt;li&gt;etcd 以键值格式存储所有对象，在 /registry 目录项下。例如，可以在 /registry/pods/default/nginx 下找到默认命名空间中名为 Nginx 的 Pod 的信息&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kubernetes ETCD registry directories&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240717155017.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;此外，etcd 是控制平面中唯一的 Statefulset 组件。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;3. kube-scheduler&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;kube-scheduler 负责在工作节点上调度 Kubernetes Pod。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;部署容器时，您可以指定容器要求，例如 CPU、内存、关联性、污点或容错、优先级、持久卷 （PV） 等。调度程序的主要任务是识别创建请求，并为满足要求的 Pod 选择最佳节点。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;下图显示了调度程序工作原理的概述。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;How the Kubernetes Scheduelr works&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240717192241.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在 Kubernetes 集群中，将有多个工作节点。那么调度程序是如何从所有工作节点中选择节点的呢？以下是调度程序的工作原理。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;为了选择最佳节点，Kube-scheduler 使用过滤和评分操作。&lt;/li&gt; 
 &lt;li&gt;在筛选中，调度程序会找到最适合调度 Pod 的节点。例如，如果有 5 个节点有充足资源来运行 Pod，则它会选择所有 5 个节点。如果没有节点，则 Pod 不可调度并移动到调度队列。如果它是一个大型集群，假设有 100 个工作节点，并且调度程序不会遍历所有节点。有一个名为 percentageOfNodesToScore 的调度器配置参数。默认值通常为 50%。因此，它试图以循环方式迭代超过 50% 的节点。如果工作器节点分布在多个区域中，则调度程序将遍历不同区域中的节点。对于非常大的集群，默认 percentageOfNodesToScore 值为 5%。&lt;/li&gt; 
 &lt;li&gt;在评分阶段，调度程序通过向筛选的工作器节点分配分数来对节点进行排名。调度程序通过调用多个调度插件进行评分。最后，将选择排名最高的 worker 节点来调度 pod。如果所有节点的排名相同，则将随机选择一个节点。&lt;/li&gt; 
 &lt;li&gt;选择节点后，调度程序将在 API 服务器中创建绑定事件。表示绑定 Pod 和节点的事件。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;有关调度程序，你需要了解：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;它是一个控制器，用于侦听 API 服务器中的 Pod 创建事件。&lt;/li&gt; 
 &lt;li&gt;调度程序有两个阶段。调度周期和绑定周期。统称为调度上下文。调度周期选择工作器节点，绑定周期将该更改应用于集群。&lt;/li&gt; 
 &lt;li&gt;调度程序始终将高优先级的 Pod 放在低优先级的 Pod 之前进行调度。此外，在某些情况下，在 Pod 开始在所选节点中运行后，Pod 可能会被逐出或移动到其他节点。如果您想了解更多信息，请阅读&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevopscube.com%2Fpod-priorityclass-preemption%2F&quot; target=&quot;_blank&quot;&gt;Kubernetes Pod 优先级指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;您可以创建自定义调度程序，并在集群中运行多个调度程序以及原生调度程序。部署 Pod 时，您可以在 Pod 清单中指定自定义调度程序。因此，调度决策将基于自定义调度程序逻辑进行。&lt;/li&gt; 
 &lt;li&gt;调度程序具有可插拔的调度框架。这意味着，您可以将自定义插件添加到调度工作流程中。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;4. Kube Controller Manager&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;什么是控制器？控制器是运行无限控制循环的程序。这意味着它连续运行并监视对象的实际和所需状态。如果实际状态和期望状态存在差异，则确保 kubernetes 资源/对象处于期望状态。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;根据官方文件，&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;在 Kubernetes 中，控制器是监视集群状态的控制循环，然后在需要时进行更改或请求更改。每个控制器都尝试将当前集群状态移近所需状态。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;假设要创建部署，在清单 YAML 文件中指定所需的状态（声明性方法）。例如，2 个副本、1 个卷挂载、configmap 等。内置的部署控制器可确保部署始终处于所需状态。如果用户使用 5 个副本更新部署，则部署控制器会识别它并确保所需的状态为 5 个副本。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kube Controller Manager 是管理所有 Kubernetes 控制器的组件。Kubernetes 资源/对象（如 Pod、命名空间、作业、副本集）由各自的控制器管理。此外，Kube-Scheduler 也是一个由 Kube-Controller-Manager 管理的控制器。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kubernetes Controller Manager&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240717195129.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以下是重要的内置 Kubernetes 控制器列表。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Deployment controller&lt;/li&gt; 
 &lt;li&gt;ReplicaSet controller&lt;/li&gt; 
 &lt;li&gt;DaemonSet controller&lt;/li&gt; 
 &lt;li&gt;Job controller&lt;/li&gt; 
 &lt;li&gt;CronJob controller&lt;/li&gt; 
 &lt;li&gt;endpoints controller&lt;/li&gt; 
 &lt;li&gt;namespace controller&lt;/li&gt; 
 &lt;li&gt;service account controller&lt;/li&gt; 
 &lt;li&gt;Node controller&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以下是您应该了解的有关 Kube Controller Manager 的信息。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;它管理所有控制器，控制器尝试将集群保持在所需状态。&lt;/li&gt; 
 &lt;li&gt;您可以使用与自定义资源定义关联的自定义控制器来扩展 kubernetes。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h3_9&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;5. Cloud Controller Manager（CCM）&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在云环境中部署 kubernetes 时，云控制器管理器充当云平台 API 和 Kubernetes 集群之间的桥梁。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;这样，kubernetes 核心组件可以独立工作，并允许云提供商使用插件与 kubernetes 集成。（例如，kubernetes 集群和 AWS 云 API 之间的接口）&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;云控制器集成允许 Kubernetes 集群预置云资源，例如实例（用于节点）、负载均衡器（用于服务）和存储卷（用于持久卷）。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Cloud Controller Manager（CCM）&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240717200010.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;云控制器管理器包含一组特定于云平台的控制器，可确保特定于云的组件（节点、负载均衡器、存储等）处于所需状态。以下是云控制器管理器中的三个主要控制器。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;节点控制器（Node controller）：此控制器通过与云提供商 API 通信来更新与节点相关的信息。例如，节点标记和注释，获取主机名，CPU 和内存可用性，节点运行状况等。&lt;/li&gt; 
 &lt;li&gt;路由控制器（Route controller）：负责在云平台上配置组网路由。这样不同节点的 Pod 就可以相互通信。&lt;/li&gt; 
 &lt;li&gt;服务控制器（Service controller）：它负责为 kubernetes 服务部署负载均衡器、分配 IP 地址等。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以下是云控制器管理器的一些经典示例。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;部署负载均衡器类型的 Kubernetes 服务。在这里，Kubernetes 预置了特定于云的负载均衡器，并与 Kubernetes 服务集成。&lt;/li&gt; 
 &lt;li&gt;为云存储解决方案支持的 Pod 配置存储卷 （PV）。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;总体而言，Cloud Controller Manager 管理 Kubernetes 使用的云特定资源的生命周期。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_10&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;Kubernetes 工作节点组件&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;现在，让我们看一下工作节点上的组件。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_11&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;1. Kubelet&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubelet 是一个 Agent 组件，运行在集群中的每个节点上。Kubelet 不作为容器运行，而是作为守护程序运行，由 systemd 管理。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;它负责向 API 服务器注册工作节点，并主要从 API 服务器使用 podSpec（Pod 规范 – YAML 或 JSON）。podSpec 定义了应在 Pod 内运行的容器、它们的资源（例如 CPU 和内存限制）以及其他设置，例如环境变量、卷和标签。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;然后，它通过创建容器将 podSpec 带到所需状态。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubelet 负责以下工作。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;创建、修改和删除容器。&lt;/li&gt; 
 &lt;li&gt;负责处理活跃度、准备情况和启动探测。&lt;/li&gt; 
 &lt;li&gt;负责通过读取 Pod 配置并在主机上为卷挂载创建相应的目录来挂载卷。&lt;/li&gt; 
 &lt;li&gt;通过调用 API 服务器来收集和报告节点和 Pod 状态 ，实现方式为 cAdvisor 和 CRI。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubelet 也是一个控制器，它监视 Pod 的变化，并利用节点的容器运行时来拉取镜像、运行容器等。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;除了来自 API 服务器的 PodSpec 之外，Kubelet 还可以接受来自文件、HTTP 端点和 HTTP 服务器的 podSpec。「来自文件的 podSpec」的一个很好的例子是 Kubernetes 静态 pod。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;静态 Pod 由 Kubelet 控制，而不是由 API 服务器控制。这意味着您可以通过向 Kubelet 组件提供 Pod YAML 位置来创建 Pod。但是，Kubelet 创建的静态 Pod 不受 API 服务器的管理。下面是静态 Pod 的真实示例用例。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在启动控制平面各组件时，kubelet 从 /etc/kubernetes/manifests 读取 podSpecs，启动 api-server、scheduler 和 controller-manager 作为静态 pod。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以下是关于 kubelet 的一些关键内容。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Kubelet 使用 CRI（容器运行时接口）gRPC 接口与容器运行时通信。&lt;/li&gt; 
 &lt;li&gt;它还公开 HTTP 终结点以流式传输日志，并为客户端提供 exec 会话。&lt;/li&gt; 
 &lt;li&gt;使用 CSI（容器存储接口）gRPC 配置块存储卷。&lt;/li&gt; 
 &lt;li&gt;它使用集群中配置的 CNI 插件来分配 Pod IP 地址，并为 Pod 设置任何必要的网络路由和防火墙规则。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kubernetes Kubelet&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240718085632.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_12&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;2. Kube proxy&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;要了解 Kube proxy，您需要对 Kubernetes 服务和端点对象有基本的了解。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubernetes 中的服务是一种在内部或向外部流量公开一组 Pod 的方法。创建服务对象时，它会为其分配一个虚拟 IP。它被称为 clusterIP。它只能在 Kubernetes 集群中访问。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Endpoint 对象包含 Service 对象下 Pod 组的所有 IP 地址和端口。端点控制器负责维护容器 IP 地址（端点）列表。服务控制器负责为服务配置端点。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;您无法 ping ClusterIP，因为它仅用于服务发现，这与可 ping 的 Pod IP 不同。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;现在让我们了解一下 Kube Proxy。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kube-proxy 是一个守护进程，它作为 daemonset 在每个节点上运行。它是一个代理组件，用于实现 Pod 的 Kubernetes 服务概念。（具有负载均衡功能的一组 Pod 的单个 DNS）。它主要代理 UDP、TCP 和 SCTP，不理解 HTTP。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;当您使用 Service （ClusterIP） 公开 Pod 时，Kube-proxy 会创建网络规则，将流量发送到 Service 对象下分组的后端 Pod（端点）。这意味着，所有负载均衡和服务发现都由 Kube proxy 处理。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;strong&gt;那么 Kube-proxy 是如何工作的呢？&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kube proxy 与 API 服务器通信，以获取有关服务 （ClusterIP） 和相应 Pod IP 和端口（端点）的详细信息。它还监视服务和端点的更改。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;然后，kube-proxy 使用以下任一模式创建/更新规则，将流量路由到 Service 后面的 Pod。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;IPTables：这是默认模式。在 IPTables 模式量由 IPtable 规则处理。这意味着，对于每个服务，都会创建 IPtable 规则。这些规则捕获进入 ClusterIP 的流量，然后将其转发到后端 Pod。此外，在这种模式下，kube-proxy 会随机选择后端 pod 进行负载均衡。建立连接后，请求将转到同一 Pod，直到连接终止。&lt;/li&gt; 
 &lt;li&gt;IPVS：对于服务超过 1000 的集群，IPVS 提供性能改进。它支持以下后端负载均衡算法。 
  &lt;ol&gt; 
   &lt;li&gt;rr ：这是默认模式。&lt;/li&gt; 
   &lt;li&gt;lc ：最少连接数（最小打开连接数）&lt;/li&gt; 
   &lt;li&gt;dh ：目标哈希&lt;/li&gt; 
   &lt;li&gt;sh ：源哈希&lt;/li&gt; 
   &lt;li&gt;sed ：最短的预期延迟&lt;/li&gt; 
   &lt;li&gt;nq ：从不排队&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Userspace：用户空间（旧版和不推荐）&lt;/li&gt; 
 &lt;li&gt;Kernelspace：此模式仅适用于 Windows 系统。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kubernetes Kube-Proxy&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240718091008.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;如果您想了解 kube-proxy IPtables 和 IPVS 模式之间的性能差异，请&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tigera.io%2Fblog%2Fcomparing-kube-proxy-modes-iptables-or-ipvs%2F&quot; target=&quot;_blank&quot;&gt;阅读本文&lt;/a&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;此外，您可以通过将 Kubernetes 集群替换为 Cilium 来运行没有 kube-proxy 的 Kubernetes 集群。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;1.29 Alpha 功能：Kubeproxy 有一个基于 nftables 的新后端。nftables 是 IPtables 的继任者，旨在更简单、更高效&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h3_13&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;3. Container Runtime&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;您可能了解 Java 运行时 （JRE）。它是在主机上运行 Java 程序所需的软件。同样，容器运行时是运行容器所需的软件组件。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;容器运行时在 Kubernetes 集群中的所有节点上运行。它负责从容器注册表中提取镜像、运行容器、分配和隔离容器资源，以及管理主机上容器的整个生命周期。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;为了更好地理解这一点，让我们看一下两个关键概念：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;容器运行时接口 （CRI）：它是一组 API，允许 Kubernetes 与不同的容器运行时进行交互。它允许不同的容器运行时与 Kubernetes 互换使用。CRI 定义了用于创建、启动、停止和删除容器以及管理映像和容器网络的 API。&lt;/li&gt; 
 &lt;li&gt;开放容器倡议 （OCI）：它是一组容器格式和运行时的标准。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Kubernetes 支持多个符合容器运行时接口 （CRI） 的容器运行时（CRI-O、Docker Engine、containerd 等）。这意味着，所有这些容器运行时都实现了 CRI 接口，并公开了 gRPC CRI API（运行时和镜像服务端点）。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;那么 Kubernetes 是如何利用容器运行时的呢？&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;正如我们在 Kubelet 部分所了解的，kubelet 代理负责使用 CRI API 与容器运行时进行交互，以管理容器的生命周期。它还从容器运行时获取所有容器信息，并将其提供给控制平面。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;我们以 CRI-O 容器运行时接口为例。下面是容器运行时如何与 Kubernetes 配合使用的高级概述。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kubernetes CRI-O&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240718091511.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;当 API 服务器对 Pod 有新的请求时，kubelet 会与 CRI-O 守护进程通信，以通过 Kubernetes 容器运行时接口启动所需的容器。&lt;/li&gt; 
 &lt;li&gt;CRI-O 使用 containers/image 库检查并从配置的容器注册表中提取所需的容器映像。&lt;/li&gt; 
 &lt;li&gt;然后，CRI-O 为容器生成 OCI 运行时规范 （JSON）。&lt;/li&gt; 
 &lt;li&gt;然后，CRI-O 启动与 OCI 兼容的运行时 （runc） 以根据运行时规范启动容器进程。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h2_14&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;Kubernetes 集群插件组件&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;除了核心组件之外，kubernetes 集群还需要附加组件才能完全运行。选择插件取决于项目要求和应用场景。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以下是集群上可能需要的一些常用插件组件。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;CNI 插件（容器网络接口）&lt;/li&gt; 
 &lt;li&gt;CoreDNS（用于 DNS 服务）：CoreDNS 充当 Kubernetes 集群中的 DNS 服务器。通过启用此插件，您可以启用基于 DNS 的服务发现。&lt;/li&gt; 
 &lt;li&gt;Metrics Server（用于资源指标）：此插件可帮助您收集集群中节点和 Pod 的性能数据和资源使用情况。&lt;/li&gt; 
 &lt;li&gt;Web UI（Kubernetes 仪表板）：此插件使 Kubernetes 仪表板能够通过 Web UI 管理对象。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h3_15&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;1. CNI Plugin&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;首先，您需要了解容器网络接口 （CNI）。它是一个基于插件的架构，具有供应商中立的规范和库，用于为容器创建网络接口。它不是特定于 Kubernetes 的。借助 CNI，容器网络可以在 Kubernetes、Mesos、CloudFoundry、Podman、Docker 等容器编排工具之间实现标准化。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在容器网络方面，公司可能有不同的要求，例如网络隔离、安全性、加密等。随着容器技术的进步，许多网络提供商为具有广泛网络功能的容器创建了基于 CNI 的解决方案。你可以称它为 CNI-Plugins。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;这允许用户从不同的提供商处选择最适合其需求的网络解决方案。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;CNI 插件如何与 Kubernetes 配合使用？&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Kube-controller-manager 负责为每个节点分配 Pod 网段。每个 Pod 从 Pod CIDR 获取一个唯一的 IP 地址。&lt;/li&gt; 
 &lt;li&gt;Kubelet 与容器运行时交互以启动定时 Pod。作为容器运行时一部分的 CRI 插件与 CNI 插件交互以配置 Pod 网络。&lt;/li&gt; 
 &lt;li&gt;CNI 插件支持使用叠加网络在分布在相同或不同节点上的 Pod 之间联网。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;Kubernetes CNI Plugin&quot; src=&quot;https://oscimg.oschina.net/oscnet/20240718092536.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以下是 CNI 插件提供的高级功能。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Pod 网络&lt;/li&gt; 
 &lt;li&gt;Pod 网络安全和隔离，使用网络策略来控制 Pod 之间和命名空间之间的流量。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;一些流行的 CNI 插件包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Calico&lt;/li&gt; 
 &lt;li&gt;Flannel&lt;/li&gt; 
 &lt;li&gt;Weave Net&lt;/li&gt; 
 &lt;li&gt;Cilium(Uses eBPF)&lt;/li&gt; 
 &lt;li&gt;Amazon VPC CNI (For AWS VPC)&lt;/li&gt; 
 &lt;li&gt;Azure CNI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_16&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;Kubernetes 原生对象&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;到目前为止，我们已经了解了核心 kubernetes 组件以及每个组件的工作原理。所有这些组件都致力于管理以下关键 Kubernetes 对象。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pod&lt;/li&gt; 
 &lt;li&gt;Namespace&lt;/li&gt; 
 &lt;li&gt;Replicaset&lt;/li&gt; 
 &lt;li&gt;Deployment&lt;/li&gt; 
 &lt;li&gt;Daemonset&lt;/li&gt; 
 &lt;li&gt;Statefulset&lt;/li&gt; 
 &lt;li&gt;Jobs &amp;amp; Cronjobs&lt;/li&gt; 
 &lt;li&gt;ConfigMaps &amp;amp; Secrets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在网络方面，以下 Kubernetes 对象起着关键作用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Service&lt;/li&gt; 
 &lt;li&gt;Ingress&lt;/li&gt; 
 &lt;li&gt;NetworkPolicy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;此外，Kubernetes 可以使用 CRD 和自定义控制器进行扩展。因此，群集组件还管理使用自定义控制器和自定义资源定义创建的对象。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_17&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;Kubernetes 架构常见问题解答&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_18&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;Kubernetes 控制平面的主要用途是什么？&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;控制平面负责维护集群及其上运行的应用程序的所需状态。它由 API Server、etcd、Scheduler 和 Controller manager 等组件组成。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_19&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;Kubernetes 集群中工作节点的用途是什么？&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;工作器节点是在群集中运行容器的服务器（裸机或虚拟）。它们由控制平面管理，并从控制平面接收有关如何运行属于 Pod 的容器的指令。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_20&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;如何在 Kubernetes 中保护控制平面和工作节点之间的通信？&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;控制平面和工作节点之间的通信使用 PKI 证书进行保护，不同组件之间的通信通过 TLS 进行。这样，只有受信任的组件才能相互通信。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_21&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;Kubernetes 中 etcd 键值存储的目的是什么？&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Etcd 主要存储集群的 kubernetes 对象、集群信息、节点信息以及集群的配置数据，例如集群上运行的应用程序的期望状态。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_22&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;如果 etcd 宕机，Kubernetes 应用程序会发生什么？&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;虽然如果 etcd 遇到中断，正在运行的应用程序不会受到影响，但如果没有正常运行的 etcd，将无法创建或更新任何对象。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_23&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;总结&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;了解 Kubernetes 架构有助于您进行日常 Kubernetes 实施和操作。在实施生产级群集设置时，对 Kubernetes 组件有正确的了解将有助于你运行应用程序并对其进行故障排除。接下来，您可以从分步 kubernetes 教程开始，获得 Kubernetes 对象和资源的实践经验。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;本文翻译自：https://devopscube.com/kubernetes-architecture-explained/&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h2_24&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/morflameblog/blog/11572634</link>
            <guid isPermaLink="false">https://my.oschina.net/morflameblog/blog/11572634</guid>
            <pubDate>Fri, 26 Jul 2024 07:28:41 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>百川智能完成 50 亿元融资，国内第三家估值 200 亿元大模型独角兽</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;百川智能已于近期完成了 A 轮融资，总融资金额达 50 亿元人民币，并且将以 200 亿估值开启 B 轮融资。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;A 轮的投资方有阿里、小米、腾讯、亚投资本、中金等头部大厂和市场化投资机构，也包括北京市人工智能产业投资基金、上海人工智能产业投资基金、深创投等国资背景产业投资基金。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;304&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ca2ab12cd7ea827914c80925949ae7bfd24.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;百川智能是于 2023 年 4 月成立的国内第一批 AI 大模型公司，由前搜狗公司 CEO 王小川创立。其核心团队由来自搜狗、Google、腾讯、百度、华为、微软、字节等科技公司的 AI 人才组成。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在成立之初，百川智能就获得了天使轮 5000 万美元的启动资金。去年 10 月，百川智能宣布完成 3 亿美元的 A1 轮战略融资，并表示参投方有阿里、腾讯、小米等科技巨头及多家顶级投资机构。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此前，国内已有两家大模型创业公司在以约 200 亿元的估值水平进行新一轮融资，即智谱 AI 与月之暗面。此外，新晋大模型公司阶跃星辰也跻身 AI 独角兽序列。今年 6 月，该公司被传正在进行一轮估值约 20 亿美元的新融资，阿里在投资者之列。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;相关数据显示，今年上半年，招投标市场已经产生了 498 次大模型相关招标项目，招标金额超过 13.4 亿元。在供应商中标次数上，智谱 AI、百度、科大讯飞、华为位居前列。智谱 AI 今年中标 18 个项目，涵盖金融、教育、能源、医疗等多个领域。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304037</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304037</guid>
            <pubDate>Fri, 26 Jul 2024 07:10:41 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>本周六，杭州源创会，一次对比四大编程助手</title>
            <description></description>
            <link>https://www.oschina.net/event/2332361</link>
            <guid isPermaLink="false">https://www.oschina.net/event/2332361</guid>
            <pubDate>Fri, 26 Jul 2024 07:09:41 GMT</pubDate>
        </item>
        <item>
            <title>支持！在 JetBrains IDE 中一键打开 Gitee 仓库</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;p style=&quot;text-align: center;&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100026736&quot; data-ratio=&quot;0.18333333333333332&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/4d28e929-2797-49a2-9791-a8defc15b145.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;section data-tool=&quot;mdnice 编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; style=&quot;font-size: 16px;color: black;padding-right: 10px;padding-left: 10px;letter-spacing: 0px;word-break: break-word;text-align: left;line-height: 1.25;counter-reset: section 0;background-image: linear-gradient(90deg, rgba(25, 25, 25, 0.067) 3%, rgba(255, 255, 255, 0) 3%), linear-gradient(0deg, rgba(25, 25, 25, 0.067) 3%, transparent 3%);background-size: 20px 20px;background-position: center center;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;margin-bottom: 24px;&quot;&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;在开发的日常中，如果你遇到一个喜欢的开源项目，希望在本地运行或调试它，你需要：&lt;/p&gt; 
  &lt;ol data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;padding-left: 25px;font-size: 15px;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);&quot;&gt;
      访问开源项目代码仓库 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);&quot;&gt;
      通过 Git 命令或客户端将代码 Clone 到本地 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);&quot;&gt;
      打开 IDE，定位到对应目录 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);&quot;&gt;
      打开工程 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;这种体验在很长时间内，让开发者们形成了独特的肌肉记忆，也让开发者们无比吐槽：&lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;为什么不能在 IDE 中一键打开呢？&lt;/strong&gt;&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;近日，JetBrains&amp;nbsp;和 Gitee 达成合作，&lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;现在你可以从 Gitee 的代码仓库一键进入 JetBrains IDE 了&lt;/strong&gt;。&lt;/p&gt; 
  &lt;figure data-tool=&quot;mdnice 编辑器&quot; style=&quot;display: flex;flex-direction: column;justify-content: center;align-items: center;margin-top: 26px;margin-bottom: 26px;&quot;&gt; 
   &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100026735&quot; data-ratio=&quot;0.7851851851851852&quot; src=&quot;https://oscimg.oschina.net/oscnet/ecc88b7c-d461-4153-b2fe-17aa8c1de91a.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;display: block;margin-right: auto;margin-left: auto;box-shadow: rgba(55, 55, 55, 0.12) 2px 4px 6px 0px;border-radius: 8px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;figcaption style=&quot;margin-top: 5px;text-align: center;color: #888;font-size: 14px;&quot;&gt;
     JetBrains Toolbox 浏览器扩展 
   &lt;/figcaption&gt; 
  &lt;/figure&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;你只需要在浏览器中&lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;安装 &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjetbrains.com.cn%2Ftoolbox-app%2F&quot; textvalue=&quot;JetBra‍ins Toolbox&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;JetBrains Toolbox&lt;/a&gt; 的浏览器扩展&lt;/strong&gt;，随后转到 Gitee 项目页面，点击浏览器中的 Toolbox 扩展程序图标。在&lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;扩展程序根据项目语言选择相应 JetBrains IDE&lt;/strong&gt; 后，即可享受丝滑流畅的本地开发体验。&lt;/p&gt; 
  &lt;figure data-tool=&quot;mdnice 编辑器&quot; style=&quot;display: flex;flex-direction: column;justify-content: center;align-items: center;margin-top: 26px;margin-bottom: 26px;&quot;&gt; 
   &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100026737&quot; data-ratio=&quot;0.709375&quot; src=&quot;https://oscimg.oschina.net/oscnet/4e0f14ca-afee-4488-bec6-2169e9269553.gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot; style=&quot;display: block;margin-right: auto;margin-left: auto;box-shadow: rgba(55, 55, 55, 0.12) 2px 4px 6px 0px;border-radius: 8px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;/figure&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;除了一键 Clone 外，JetBrains Toolbox 浏览器扩展还支持直接在 IDE 打开 Gitee 仓库内的文件。&lt;/p&gt; 
  &lt;figure data-tool=&quot;mdnice 编辑器&quot; style=&quot;display: flex;flex-direction: column;justify-content: center;align-items: center;margin-top: 26px;margin-bottom: 26px;&quot;&gt; 
   &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100026731&quot; data-ratio=&quot;0.4537037037037037&quot; src=&quot;https://oscimg.oschina.net/oscnet/b6b06ff4-30a8-46a3-934c-0733267eebf7.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;display: block;margin-right: auto;margin-left: auto;box-shadow: rgba(55, 55, 55, 0.12) 2px 4px 6px 0px;border-radius: 8px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;figcaption style=&quot;margin-top: 5px;text-align: center;color: #888;font-size: 14px;&quot;&gt;
     直接在 IDE 打开仓库内文件 
   &lt;/figcaption&gt; 
  &lt;/figure&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;除了浏览器扩展商店外，你还可以直接在 Gitee 下载该扩展的 CRX 文件，直接进行拖拽安装。访问 &lt;a href=&quot;https://gitee.com/mirrors/toolbox-browser-extension/releases/tag/2.4.0.31200&quot; style=&quot;font-weight: bold;border-bottom: 1px solid rgb(0, 87, 255);color: rgb(0, 87, 255);border-top-color: rgb(0, 87, 255);border-right-color: rgb(0, 87, 255);border-left-color: rgb(0, 87, 255);&quot; data-linktype=&quot;2&quot;&gt;https://gitee.com/mirrors/toolbox-browser-extension/releases/tag/2.4.0.31200&lt;/a&gt;，或在 Gitee 搜索&lt;code style=&quot;font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: &amp;quot;Operator Mono&amp;quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(0, 87, 255);&quot;&gt;toolbox-browser-extension&lt;/code&gt;进入发行版页面即可。&lt;/p&gt; 
  &lt;figure data-tool=&quot;mdnice 编辑器&quot; style=&quot;display: flex;flex-direction: column;justify-content: center;align-items: center;margin-top: 26px;margin-bottom: 26px;&quot;&gt; 
   &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100026734&quot; data-ratio=&quot;0.5407407407407407&quot; src=&quot;https://oscimg.oschina.net/oscnet/441e8ca9-ce97-4e1f-8206-6da717648a4b.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;display: block;margin-right: auto;margin-left: auto;box-shadow: rgba(55, 55, 55, 0.12) 2px 4px 6px 0px;border-radius: 8px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;/figure&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;除了上述方式，你也可以通过自行编译源代码实现本地安装：&lt;/p&gt; 
  &lt;pre data-tool=&quot;mdnice 编辑器&quot; style=&quot;margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: none !important;&quot;&gt;&lt;span style=&quot;display: block;background-attachment: initial;background-origin: initial;background-clip: initial;height: 30px;width: 100%;background-size: 40px;background-repeat: no-repeat;margin-bottom: -7px;border-radius: 5px;background-position: 10px 10px;background-color: rgb(38, 45, 49) !important;background-image: url(&amp;quot;https://oscimg.oschina.net/oscnet/5e0f07cf-d004-45dc-a7f5-a6801bdf2250.svg&amp;quot;);&quot;&gt;&lt;/span&gt;&lt;code style=&quot;overflow-x: auto;padding: 16px;color: #ddd;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;font-size: 12px;-webkit-overflow-scrolling: touch;padding-top: 15px;background: #272822;border-radius: 5px;background-color: #262D31 !important;&quot;&gt;git&amp;nbsp;&lt;span style=&quot;color: #a6e22e;line-height: 26px;&quot;&gt;clone&lt;/span&gt;&amp;nbsp;https://gitee.com/mirrors/toolbox-browser-extension.git&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: #a6e22e;line-height: 26px;&quot;&gt;cd&lt;/span&gt;&amp;nbsp;toolbox-browser-extension/&lt;br&gt;&lt;br&gt;npm&amp;nbsp;install&lt;br&gt;&lt;br&gt;npm&amp;nbsp;run&amp;nbsp;build:chrome&lt;br&gt;&lt;br&gt;npm&amp;nbsp;run&amp;nbsp;build:firefox&lt;br&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;Chrome 扩展管理（chrome://extensions/）开启开发者模式，点击&lt;code style=&quot;font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: &amp;quot;Operator Mono&amp;quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(0, 87, 255);&quot;&gt;加载已解压的拓展程序&lt;/code&gt;选择 &lt;code style=&quot;font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: &amp;quot;Operator Mono&amp;quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(0, 87, 255);&quot;&gt;dist/chrome&lt;/code&gt; 确认。&lt;/p&gt; 
  &lt;figure data-tool=&quot;mdnice 编辑器&quot; style=&quot;display: flex;flex-direction: column;justify-content: center;align-items: center;margin-top: 26px;margin-bottom: 26px;&quot;&gt; 
   &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100026732&quot; data-ratio=&quot;0.16666666666666666&quot; src=&quot;https://oscimg.oschina.net/oscnet/55d33ad9-5849-4253-8ba0-05e34f313a75.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;display: block;margin-right: auto;margin-left: auto;box-shadow: rgba(55, 55, 55, 0.12) 2px 4px 6px 0px;border-radius: 8px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;/figure&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;如果你正在使用 JetBrains 系列 IDE，不妨现在就去 Gitee 试试丝滑的 Clone 体验吧！&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;🔗 &lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;JetBrains Toolbox 网站&lt;/strong&gt;&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;https://www.jetbrains.com.cn/toolbox-app/&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;🔗 &lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;Toolbox Browser Extension 官方仓库&lt;/strong&gt;&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;https://github.com/JetBrains/toolbox-browser-extension&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;🔗 &lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;Toolbox Browser Extension Gitee 极速下载&lt;/strong&gt;&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;https://gitee.com/mirrors/toolbox-browser-extension&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;🔗 &lt;strong style=&quot;color: rgb(0, 87, 255);&quot;&gt;Google Chrome 插件地址&lt;/strong&gt;&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;https://chrome.google.com/webstore/detail/offnedcbhjldheanlbojaefbfbllddna&lt;/p&gt; 
  &lt;p data-tool=&quot;mdnice 编辑器&quot; style=&quot;padding-top: 8px;padding-bottom: 8px;line-height: 26px;letter-spacing: 2px;font-size: 15px;word-spacing: 2px;margin-left: 8px;margin-right: 8px;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100022373&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/53c1094a-d161-4a9c-817a-d590dcecd008.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;display: none;margin-bottom: 24px;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - JetBrains（JetBrainsChina）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5494143/blog/14204816</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/14204816</guid>
            <pubDate>Fri, 26 Jul 2024 06:55:41 GMT</pubDate>
            <author>JetBrains 中国</author>
        </item>
        <item>
            <title>减少 95% 资源的向量搜索 | 使用云搜索的 DiskANN</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;div&gt;
  当前尖端的向量近邻搜索算法，主要以图搜索算法为主，此类算法为了能够最大化搜索的速度与准确度，需要将对应的索引结构和原始数据存放在内存中，显然这不仅大大提高了成本，还限制了数据集的大小。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  例如在当前主流的内存型 HNSW 算法下，
  &lt;strong&gt;业界常用的内存估算方式是：向量个数 * 4 * (向量维度 + 12)&lt;/strong&gt;。那么
  &lt;strong&gt;在 DEEP 10M（96 维）的&lt;/strong&gt;
  &lt;strong&gt; &lt;/strong&gt;
  &lt;strong&gt;1&lt;/strong&gt;
  &lt;strong&gt; &lt;/strong&gt;
  &lt;strong&gt;千万数据就需要内存达到 4GB 以上，但是&lt;/strong&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;通过 DiskANN 优化后，仅需要 70&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;MB&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt; 的内存就可以对海量数据高效的进行检索&lt;/strong&gt;&lt;/span&gt;；在 MS-MARCO（1024 维）的 1.38 亿条记录里，需要内存更是高达 534GB，这样检索 1.38 亿的数据需要 12 个 64GB 的节点。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  按照上面的估算公式，到了 10 亿级别就需要大约 100 个节点，到 100 亿级别需要的节点数为 1000 个左右，这个规模的服务在资源成本和稳定性上都面临了极大的挑战。我们在服务客户的过程中，发现相比于低延迟检索需求，大部分客户更关注成本和稳定性，因此，火山引擎云搜索团队在原先已经支持的 HNSW、IVF 等低延迟的算法引擎的基础上，引入了内存和磁盘更好平衡的 
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;DiskANN&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;算法&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;，目前已经在&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;200&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;亿单一&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;向量库&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;得到落地验证并取得预期效果&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  DiskANN 算法的关键在于，仅将轻量级的索引结构置于内存中，而海量的原始数据以及构建好的图结构存放于磁盘，同时借助磁盘的多路读取能力，缓解内存压力的同时，
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;高效完成近邻检索任务的三大目标：海量数据、高召回率、低时延&lt;/strong&gt;&lt;/span&gt;。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  DiskANN 论文提到可以节约 95% 的资源，从我们落地的多个用户案例来看，非常接近这个收益值，客户仅需几十台机器就稳定高效地支撑百亿级业务需求。除了资源成本的收益之外，大规模数据应用场景下也极大提高了系统的稳定性。这是因为 DiskANN 极大减少了对内存资源的依赖，因此也具备了非常高的可扩展性，在我们的实践经验中也得到验证，从千万数据规模到十亿再到百亿，查询性能的波动非常小，具备非常高的系统可预测性。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img height=&quot;429&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-719d6ec1cc58fe1c2d9895343b883dd1d2d.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;h1&gt;什么是近邻检索&lt;/h1&gt; 
 &lt;div&gt;
  近邻检索问题，顾名思义便是给定一个数据集 P 与一个查询向量 Q，我们需要从中找出最近的 K 个结果。随着数据集规模和数据维度的增加 (
  &lt;em&gt;curse of dimensionality&lt;/em&gt;)，穷举遍历比较的方式便不再适用，更好地方式是取出近似的 K 个，然后引入召回率的概念，来表征近似结果集的好坏。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  针对此问题，应运而生了不同的算法，这些算法对应的索引结构也都基本受限于这些权衡：召回率、读写时延、成本等。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  比如，基于图结构的算法，选择将数据作为图中的数据点，而相近的点之间连接为边；查询向量从入口点出发，不断缩短距离，最终收敛得到结果。该类算法需要将构建的图结构全部存放于内存中，召回率高，读写时延低，但内存成本高，主流代表算法为 HNSW、NSG。而为了解决海量数据的存储成本问题，另一类基于聚类压缩的算法，将数据按簇进行聚类，选择不保存原始向量数据，而是通过乘积量化的方法 (
  &lt;em&gt;product quantization&lt;/em&gt;)，将原始数据压缩后再执行后续的流程。此类算法的特点在于内存成本大幅降低，但对应的缺陷就是召回率明显降低，主流算法为 IVF_PQ。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  上述介绍算法，要么受限于海量数据存储带来的内存成本压力，要么为了减轻内存成本压力而选择牺牲召回率，那么是不是可以考虑跳出内存的限制，直接将数据存放到磁盘中。显然，磁盘中数据的读写速度要远低于内存，
  &lt;strong&gt;因此我们需要考虑&lt;/strong&gt;
  &lt;strong&gt;的问题是&lt;/strong&gt;
  &lt;strong&gt;：1. 如何能够减少访问磁盘的频率，先访问内存，只有真正需要原始向量时再去访问磁盘；2. 如何组织数据结构，保证一次读盘操作便可以取出相关的节点边图信息&lt;/strong&gt;
  &lt;strong&gt;。&lt;/strong&gt;
 &lt;/div&gt; 
 &lt;h1&gt;DiskANN 实现&lt;/h1&gt; 
 &lt;div&gt;
  为了解决上述问题，
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;DiskANN&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;算法首先提出了新的图结构&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;Vamana&lt;/strong&gt;&lt;/span&gt;，Vamana 图与 HNSW、NSG 图类似，区别在于初始图的选择、以及构图剪枝过程中
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;引入宽松参数&lt;/strong&gt;&lt;/span&gt;，在图直径和节点连通度上达到平衡，图的质量相对有所提升。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  其次，为了规避多次随机读写磁盘数据，DiskANN 算法
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;结合两类算法：聚类压缩算法和图结构算法&lt;/strong&gt;&lt;/span&gt;，一是通过压缩原始数据，仅将压缩后的码表信息和中心点映射信息放到内存中，而原始数据和构建好的图结构数据存放到磁盘中，只需在查询匹配到特定节点时到磁盘中读取；二是修改向量数据和图结构的排列方式，将数据点与其邻居节点并排存放，这种方式使得一次磁盘操作即可完成节点的向量数据、邻接节点等信息的读取，通过对以上两种算法的结合可以
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;大幅提升&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;向量召回&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;的读取效率，降低图算法的内存，提升召回率&lt;/strong&gt;&lt;/span&gt;
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;h2&gt;构图流程&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    均匀采样数据，构建 pq 中心点信息以及压缩数据信息：
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;img height=&quot;311&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f05fac9d7221b636da1e1fb2ead828afc5e.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
   &lt;/div&gt; 
   &lt;ol&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    构建 Vamana 图，从随机图开始不断执行建边和剪枝操作，保证图的稠密度：
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img height=&quot;450&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-60805d69acd1dac532e6e8606f64720358c.png&quot; width=&quot;600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    创建磁盘图结构，向量数据和邻接节点紧凑排列：
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img height=&quot;225&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8476eb55a07c4b9c8d3ff3a6807ad8355ea.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;h2&gt;查询流程&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    给定查询向量 q，从入口点 p 出发，开始搜索 k 近邻：
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img height=&quot;197&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e0b37b6b0b5c268ae976a52a5101413c29d.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    当前遍历到的数据点，读取磁盘，以原始向量计算与查询节点的精确距离，进入结果集队列（Return Set，队列内以距离进行排序）。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img height=&quot;454&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-afb06ba2017758a99ba1e8b56b299666e14.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    当前节点的所有邻接节点，以 pq 数据计算与查询节点的近似距离，进入候选集队列（Candidate Set，队列内以距离进行排序）。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img height=&quot;454&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0350aa0452bd7b6c461048eaff252795ff1.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    从候选集队列的头部取出 pq 距离最近的数据点。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img height=&quot;454&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-39b65e8dc2eb88b535db939a99c7d05702d.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    重复执行 2-4 步骤，直至候选集中的数据点均被访问过，最终返回结果集。
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;img height=&quot;222&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e426f690a52c3a3462beba9cca12a3c0049.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
   &lt;/div&gt; 
   &lt;ol&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h1&gt;实现效果&lt;/h1&gt; 
 &lt;div&gt;
  我们能够通过标注数据集验证可以看到使用 DiskANN 可以带来 10 倍以上的内存资源的提升，并且在召回率、性能上依旧能保持高效的检索能力。
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img height=&quot;308&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-983c6abd3c21b6bb5b4376ac4ee4deb1c16.png&quot; width=&quot;900&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style=&quot;color:#999999&quot;&gt;*数据来源见文末参考论文&lt;/span&gt;
 &lt;/div&gt; 
 &lt;h1&gt;总结&lt;/h1&gt; 
 &lt;div&gt;
  DiskANN 通过构建低时延、高召回率的 Vamana 图，同时辅以内存与 SSD 磁盘之间的高效协同作业，召回率和主流的 HNSW 图算法基本保持一致，内存资源占用相比于基于图的算法要大幅减少，在召回率要求高、时延查询可接受的场景下，无疑是最具性价比的海量数据向量搜索算法。
 &lt;/div&gt; 
 &lt;div&gt;
  云搜索通过引入 DiskANN，以最低的成本构建海量数据检索，帮助客户在信息检索和 RAG 检索中能够大规模、高精度、低成本高效的构建检索应用。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h1&gt;参考&lt;/h1&gt; 
 &lt;div&gt;
  《DiskANN: Fast Accurate Billion-point Nearest Neighbor Search on a Single Node》
 &lt;/div&gt; 
 &lt;div&gt;
  《HM-ANN: Efficient Billion-Point Nearest Neighbor Search on Heterogeneous Memory》
 &lt;/div&gt; 
 &lt;div&gt;
  《GRIP: Multi-Store Capacity-Optimized High-Performance Nearest Neighbor Search for Vector Search Engine》
 &lt;/div&gt; 
 &lt;div&gt;
  《AiSAQ: All-in-Storage ANNS with Product Quantization for DRAM-free Information Retrieval》
 &lt;/div&gt; 
 &lt;div&gt;
  《A Comprehensive Survey and Experimental Comparison of Graph-Based Approximate Nearest Neighbor Search》
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304024</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304024</guid>
            <pubDate>Fri, 26 Jul 2024 06:19:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>豆包大模型日均 tokens 使用量超 5000 亿</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;在 2024 火山引擎 AI 创新巡展·成都站上，火山引擎方面透露，截至今年 7 月，豆包大模型日均 tokens 使用量超过 5000 亿。&lt;/p&gt; 
&lt;p&gt;火山引擎在今年 5 月发布豆包大模型，提供包含大语言模型、语音模型、视觉模型的豆包模型家族，以满足不同场景的关键需求。自今年 5 月 15 日豆包大模型发布的 2 个月内，平均每家企业客户日均 tokens 使用量增长了 22 倍。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;335&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8cfe5b97a5b24dfea139fd64da53d2c13d1.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;火山引擎副总裁张鑫在会上介绍，在字节内部，有 50 多个业务在使用豆包大模型，覆盖了协同办公、数据分析、文案创作、辅助编程、内容审核、客服、游戏 NPC、角色对话、教育等各种场景，基于豆包大模型打造的新技术引擎正在加速业务创新。&lt;/p&gt; 
&lt;p&gt;此外，豆包大模型的外部客户已覆盖手机、汽车、金融、消费、互娱等 30 多个行业。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303999</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303999</guid>
            <pubDate>Fri, 26 Jul 2024 03:09:15 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>OpenAI 进军 AI 搜索大战 —— 开始小范围内测 SearchGPT</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;7 月 25 日，OpenAI 突然在 X&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FOpenAI%2Fstatus%2F1816536290822881780&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;，正在测试其备受期待的 AI 搜索市场入驻产品「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fsearchgpt-prototype%2F&quot; target=&quot;_blank&quot;&gt;SearchGPT&lt;/a&gt; 」—— 一款由 GPT-4 系列模型驱动、能实时访问全网信息，附带清晰来源链接的搜索引擎。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1604&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0726/104932_dtVN_2720166.png&quot; width=&quot;1284&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;官方介绍称， SearchGPT 只是其新开发 AI 搜索功能的 「临时原型」。初期仅对小部分用户和出版商开放，其他有人若有兴趣尝试可以加入等候名单。未来这些功能的最佳部分将被直接集成到 ChatGPT 中。&lt;/p&gt; 
&lt;p&gt;从官方发布的演示来看，与现有的各类 AI 搜索相比，SearchGPT 并没有在交互上有特别明显的颠覆设计。整体界面与 Perplexity 差不多。用户在对话框中输入查询，SearchGPT 实时搜索网络后总结出一份结构化的答案，包含图片和视频信息，同时列出相关信息来源。用户可以继续追问或在侧边栏中探索更多相关搜索。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-082911c1a2891bffd0cc4b7dabaaaa6997f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Join waitlist：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fchatgpt.com%2Fsearch&quot; target=&quot;_blank&quot;&gt;http://chatgpt.com/search&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303988/openai=searchgpt-prototype</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303988/openai=searchgpt-prototype</guid>
            <pubDate>Fri, 26 Jul 2024 02:48:15 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>http path 参数有 %2f (/) 时用 solon 怎么解决？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;p&gt;默认情况，Solon 的 Context::path() 是解码的。当请求为：&lt;code&gt;/test/aa%2Fbb&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时，解码后是&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;text/aa/bb&lt;/code&gt;。想要用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@Mapping&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;匹配并拿到路径变量：&lt;/p&gt; 
 &lt;h3&gt;方案 1：&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Mapping(&quot;/test/**&quot;)&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;test&lt;/span&gt;&lt;span&gt;(Context ctx)&lt;/span&gt;{
    name = ctx.path().subString(&lt;span style=&quot;color:#986801&quot;&gt;6&lt;/span&gt;); &lt;em&gt;//值为：aa/bb&lt;/em&gt;
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;方案 2：&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Mapping(&quot;/test/{name}&quot;)&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;test&lt;/span&gt;&lt;span&gt;(String name)&lt;/span&gt;{
    name; &lt;em&gt;//值为：aa%2Fbb&lt;/em&gt;
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;此案默认是不能匹配的，需要添加应用配置。使用后 Context::path() 是未解码的，name 需要自己解码。&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span style=&quot;color:#986801&quot;&gt;server.request.useRawpath:&lt;/span&gt; &lt;span style=&quot;color:#0184bb&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303965</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303965</guid>
            <pubDate>Fri, 26 Jul 2024 00:39:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>马斯克再次约架扎克伯格：任何地点、任何时间、任何规则都可以</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;北京时间 7 月 25 日，马斯克昨日在美国国会大厦出席以色列总理内塔尼亚胡向国会发表的讲话，接受记者采访时被问到「还要和扎克伯格打吗」，他表示「我愿意和扎克伯格打一场，任何地点、任何时间、任何规则都可以」。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0725/185032_yUcG_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fkellyfphares%2Fstatus%2F1816198108457419044&quot; target=&quot;_blank&quot;&gt;https://x.com/kellyfphares/status/1816198108457419044&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;2023 年 6 月 21 日，马斯克发文表示要和扎克伯格展开肉搏，扎克伯格当即「应战」，要马斯克「发个地址」。&lt;/p&gt; 
&lt;p&gt;后续马斯克在直播中问扎克伯格住在哪里，他要「礼貌地问一句‘你是否要来一场肉搏战’」。扎克伯格回应称他认为肉搏并不会发生，但他喜欢「和朋友们一起练习格斗」，还提到他曾参加过柔术比赛。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303884/musk-zuck-cage-fight-mma</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303884/musk-zuck-cage-fight-mma</guid>
            <pubDate>Thu, 25 Jul 2024 10:52:46 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>开源日报 | 龙芯 3C6000 流片成功；Node.js 支持原生运行 TS；瑞士要求所有政府软件开源；Llama3.1 技术报告隐藏的干货；百川智能完成 50 亿元 A 轮融资</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.7.25&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/303827/so-developer-survey-2024&quot;&gt;Stack Overflow 2024 年度开发者调查报告&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;过去一年中共有 62.3% 受访者使用了 JavaScript，其次分别是 HTML/CSS（52.9%）和 Python（51%）。在开发者 「还未尝试但明年最想尝试的编程语言」 中，Python 夺得第一，超过了 JavaScript。此外 Python 也是正在学习编程的人中最受欢迎的编程语言，这一人群还表示，希望明年平均使用 12 种不同的语言。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;img alt=&quot;up-32fc258f9cd41cb021685f3c6d4155536e4.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-32fc258f9cd41cb021685f3c6d4155536e4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/303823&quot;&gt;龙芯 3C6000 服务器 CPU 流片成功&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;龙芯中科技术股份有限公司董事长胡伟武介绍，该公司在研的服务器 CPU 龙芯 3C6000 近日已经完成流片。实测结果表明，相比上一代服务器 CPU 龙芯 3C5000，其通用处理性能成倍提升，&lt;strong&gt;已达到英特尔公司推出的中高端产品至强（Xeon）Silver 4314 处理器水平&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4effd2b071ad9ff6b954b54f23a486c0486.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;据了解，龙芯 3C6000 是一款面向服务器市场的 CPU 产品，单硅片 16 核 32 线程，支持双路、四路、八路直连。该 CPU 采用龙芯自主指令系统 「龙架构」，无需国外授权。从整个架构的顶层规划，到各部分的功能定义，再到细节上每条指令的编码、名称、含义，龙芯中科均进行了重新设计，具有充分的自主性。龙芯 3C6000 处理器还将首次引入龙链 1.0，实现片间互连，成倍降低片间访问延迟。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FvNCBiJ5lzBfZlJpGXT-Liw&quot; target=&quot;_blank&quot;&gt;Node.js 支持原生运行 TypeScript&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Node.js 合并了为 TypeScript 添加实验性支持的 PR。根据 PR 的描述，开发者只需配置实验性 flag&lt;code&gt;--experimental-strip-types&lt;/code&gt;&lt;span&gt;就可以执行 TypeScript 文件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Node.js 会将 TypeScript 代码自动转译为 JavaScript 代码。在转译过程中，不会执行类型检查，类型会被丢弃 ——Node.js 团队称之为 &quot;type stripping&quot;（类型剥离）。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0725/145709_YpYP_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F53725&quot; target=&quot;_blank&quot;&gt;https://github.com/nodejs/node/pull/53725&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/303781/switzerland-requires-all-gov-software-to-be-open-source&quot;&gt;瑞士要求所有政府软件开源&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;7 月 23 日，瑞士&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatenrecht.ch%2Fen%2Fbundesgesetz-ueber-den-einsatz-elektronischer-mittel-zur-erfuellung-von-behoerdenaufgaben-embag-in-schlussabstimmung-angenommen%2F&quot; target=&quot;_blank&quot;&gt;通过&lt;/a&gt;了「履行政府任务电子手段使用联邦法案（EMBAG）」，&lt;strong&gt;要求所有公共机构披露其开发或为其开发的软件源代码&lt;/strong&gt;，除非涉及第三方权益或安全问题。此举旨在增强政府运作的透明度、安全性和效率。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;除了要求软件开源外，&lt;strong&gt;EMBAG 还要求发布非个人和非安全敏感的政府数据作为开放政府数据（OGD）&lt;/strong&gt;。这种「默认双重开放」的方法标志着瑞士政府向更大开放性做转变。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img height=&quot;1458&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0725/101919_I64g_2720166.png&quot; width=&quot;1998&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.newsd.admin.ch%2Fnewsd%2Fmessage%2Fattachments%2F70497.pdf&quot; target=&quot;_blank&quot;&gt;https://www.newsd.admin.ch/newsd/message/attachments/70497.pdf&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/303792/openai-free-fine-tuning-gpt-4o-mini&quot;&gt;OpenAI 对 GPT-4o Mini 模型进行免费微调&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 Meta 推出开源&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/303606/meta-llama-3-1&quot;&gt;Llama 3.1&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模型之后不久，OpenAI&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FOpenAIDevs%2Fstatus%2F1815836887631946015&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;对其 GPT-4o Mini 模型提供免费微调，允许用户免费使用额外数据训练模型，以便在特定用例中获得更高的性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;GPT-4o mini 微调适用于 OpenAI 的 Tier 4 和 5 使用层级的开发人员，这是 OpenAI 计划中价格最高的层级。OpenAI 计划逐步将免费微调扩展到所有层级。免费微调将从现在开始持续到 9 月 23 日。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/303788/mistral-large-2407&quot;&gt;Mistral AI 发布 1230 亿参数 Large 2 大模型&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;继 Meta 昨天发布最强开源大模型&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;Llama 3.1&lt;span&gt;&amp;nbsp;&lt;/span&gt;后，法国 AI 初创公司 Mistral AI 也加入了竞争，&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;今天发布了全新的旗舰开源模型&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmistral.ai%2Fnews%2Fmistral-large-2407%2F&quot; target=&quot;_blank&quot;&gt;Mistral Large 2&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;该模型拥有 1230 亿个参数，&lt;/span&gt;可在单个 H100 节点上以高吞吐量运行，&lt;span&gt;在代码生成、数学、推理等方面与 OpenAI 和 Meta 的最新尖端模型不相上下，&lt;/span&gt;并提供更强大的多语言支持和高级函数调用功能。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;Mistral 公司表示，训练的重点之一是尽量减少模型的幻觉问题。该公司称，Large 2 接受的训练让它的反应更具辨别力，当它不知道某些事情时，它会承认自己不知道，而不是编造一些看似合理的事情。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;Mistral Large 2 拥有 128k 的上下文窗口，支持包括中文在内的数十种语言以及 80 多种编码语言。该模型在 MMLU 上的准确度达到了 84.0%，并在代码生成、推理和多语言支持方面有非常明显的改进。它支持法语、德语、西班牙语、意大利语、葡萄牙语、阿拉伯语、印地语、俄语、汉语、日语和韩语。在编码方面，它支持 80 多种编码语言，包括 Python、Java、C、C++、JavaScript 和 Bash。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4f2ba991a36721c705731f0c0052d6c5f5d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1064649941%2FOp4uE0l4z&quot; target=&quot;_blank&quot;&gt;LLama 3 405B 模型效果已经赶上目前最好的闭源模型&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    LLama 3 405B 模型效果已经赶上目前最好的闭源模型比如 GPT 4o 和 Claude 3.5，这算是开源届的大事，技术报告接近 100 页，信息很丰富，粗略看了一下，很有启发。这里就 LLaMA 3 的模型结构、训练过程做些解读，并对其影响、小模型如何做、合成数据等方面谈点看法。
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
   &lt;div&gt;
    其实 405B 的正确用法不是用来提供服务，而是用来蒸馏应用的基座模型，来提升基座模型能力。毕竟用闭源模型蒸馏成本太高了。当然，405b 中文化方面需要改进。
   &lt;/div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    - 微博
    &lt;strong&gt; 张俊林 say&lt;/strong&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FQ2ihPyYmkdt-FuzslKAJ_A&quot; target=&quot;_blank&quot;&gt;正在消亡的浏览器，要靠 AI 大模型满血复活？&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;只要 Web 不死，浏览器就一定不会消亡。但用户需求在变，技术也在也变，所以浏览器的演变是不可避免的。&lt;/p&gt; 
    &lt;p&gt;或许，未来的浏览器会变成什么样的产品还没有定数，国产浏览器和海外浏览器都在进行相同或者不相同的探索。说到底，不只是浏览器，我们大多数人和厂商对于 AI 的应用都需要一个适应和学习的过程。&lt;/p&gt; 
    &lt;p&gt;但基本可以肯定，隐私和 AI 会是浏览器未来的两大主线，前者让用户更放心地上网，后者让用户在这个信息纷杂的时代，更轻松地从大模型、从互联网获取需要的信息。&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    - 微信&amp;nbsp;
    &lt;strong&gt;雷科技&lt;/strong&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1233486457%2FOp47O0sAi&quot; target=&quot;_blank&quot;&gt;Meta Llama3.1 技术报告隐藏的干货&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p&gt;大规模模型训练面临诸多挑战，包括硬件故障和稳定性问题。&lt;br&gt; 报告提到，在 54 天的快照期间，共发生 466 次作业中断，其中 419 次是意外中断。有趣的是，其中两次中断是由&quot;服务器机箱&quot;故障引起的。更令人吃惊的是，在预训练阶段，有 148 块 H100 GPU 出现故障。&lt;/p&gt; 
       &lt;p&gt;报告进一步分析指出:&quot;约 78% 的意外中断归因于已确认或疑似的硬件问题。&quot; 这一数据揭示了大规模 AI 训练中硬件可靠性的重要性。&lt;/p&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;高飞&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1914023002%2FOp15A8l4z&quot; target=&quot;_blank&quot;&gt;2023 年中国数据库市场规模 74.1 亿美元，占全球 7.34% &lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     近日，中国通信标准化协会发布《数据库发展研究报告（2024 年）》。 报告显示，2023 年全球数据库市场规模首次突破千亿美金，约为 1010 亿美元，中国数据库市场规模为 74.1 亿美元（约合 522.4 亿元人民币），占全球 7.34%。预计到 2028 年，中国数据库市场总规模将达到 930.29 亿元，市场年复合增长率（CAGR）为 12.23%。2023 年中国公有云数据库市场规模为 320.15 亿元，较 2022 年增速 46.1%，中国数据库市场规模稳步增长。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;盘石&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FPvjvjMAP3_blAtpV97yuZA&quot; target=&quot;_blank&quot;&gt;OpenAI 自研芯片帝国，全揭秘！&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      据 The Information 援引知情人士消息，OpenAI 一直在招聘谷歌 TPU 部门的前成员，寻求开发 AI 服务器芯片，并一直在与包括博通在内的芯片设计企业洽谈开发这款新型 AI 芯片的事宜。
     &lt;/div&gt; 
     &lt;div&gt;
      &lt;br&gt; 去年 OpenAI CEO 萨姆·阿尔特曼（Sam Altman）决定创办一家新公司，开发和生产新的 AI 芯片，并帮助建设芯片工厂、数据中心来制造和容纳这些芯片。此后他的计划几经曲折。但有迹象表明，他打造新芯片的努力正在成形，而且是从 OpenAI 内部开始。
     &lt;/div&gt; 
     &lt;div&gt;
      &lt;br&gt; OpenAI 芯片团队由谷歌 TPU 前工程高级总监 Richard Ho 领导。该团队很可能会选择一家美国公司（如博通）来帮助其开发拟议的新芯片。
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;芯东西&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FdbptTBT2SzGL9sY_w_X2AQ&quot; target=&quot;_blank&quot;&gt;假开源真噱头？Meta 再陷「开源」争议，LeCun 被炮轰 Meta 只是开放模型&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     Llama 3 模型并不是真正意义的开源，至少不是按照最严格定义的开源。开源意味着研究开发人员可以自由选择如何使用这些模型，不受限制。但在 Llama 3 的一些案例中，Meta 对于一些许可的授权进行了限制。
    &lt;/div&gt; 
    &lt;div&gt;
     例如，Llama 模型不能用于训练其他模型；拥有超过 7 亿月活跃用户的应用程序开发人员则必须向 Meta 申请特殊许可证。
     &lt;br&gt; 许多学者和研究机构也注意到了对于「开源」一词的滥用情况，许多标榜为「开源」的大模型都存在重大限制，「真假开源」存疑。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;新智元&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-07-25%2Fdoc-incfhpit9042511.shtml&quot; target=&quot;_blank&quot;&gt;人形机器人产业「火热」背后的冷思考&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;随着人工智能技术逐步成熟和机器人产业快速发展，越来越多人形机器人逐渐进入公众视野。面对人形机器人的「热」，行业人士表示应有冷思考，对于人形机器人行业的「一高五难」需有清楚认知，推动人形机器人发展需以应用驱动研究。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;媒体滚动&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.huanqiu.com%2Farticle%2F4IkbHSWS8Do&quot; target=&quot;_blank&quot;&gt;《鸿蒙 2030 白皮书》解读：塑造下一代智能终端体验与产业生态&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#262626&quot;&gt;《鸿蒙 2030 白皮书》认为，在万物智联时代将为操作系统带来服务智能化、体验空间化，终端多样化三大机遇。鸿蒙 2030 的愿景就是致力于以用户体验为中心，打造全场景智能操作系统，携手生态伙伴为用户带来更美好的全场景智能生活，共筑万物智联的鸿蒙世界。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;环球网&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5Nzc3ODcxMg%3D%3D%26mid%3D2657573418%26idx%3D2%26sn%3D215cc0938e00d1aa71862fdaae00a9e9%26scene%3D0&quot; target=&quot;_blank&quot;&gt;杭州市人民政府办公厅关于印发支持人工智能全产业链高质量发展若干措施的通知&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;鼓励企业开展算力关键技术研发攻关，市级按照有关政策给予支持。鼓励企业承担国家、省重点研发任务，加速形成重大科研成果，对符合政策规定的项目按国家、省实际到账资助经费的 25% 给予资助，资助金额不超过 500 万元。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;杭州新天地&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn808679288&quot; target=&quot;_blank&quot;&gt;百川智能完成总额 50 亿元 A 轮融资，估值达 200 亿元，阿里、腾讯、小米等投资&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;这意味着，国内头部的大模型初创企业仍在进行激烈的融资暗战，目前 MiniMax、月之暗面、智谱 AI 等公开估值均超 200 亿元，且头部 VC、科技大厂以及国资产投等主流基金都已入场。腾讯、阿里还同时投资了智谱 AI、月之暗面和 MiniMAX，阿里还尤其激进，押注了目前市面上最受关注的「大模型五虎」。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;搜狐科技&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcj.sina.com.cn%2Farticles%2Fview%2F2311077472%2F89c03e60020027g18&quot; target=&quot;_blank&quot;&gt;华为吸纳人工智能领域「天才少年」 加速 AI 研发布局&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span&gt;从此次发布的内容看，华为对「天才少年」的要求不限学校、不限专业、不限学历，但需要在数理化、计算机、人工智能等相关领域有特别建树并有志成为技术领军人物。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span&gt;华为还表示，将为「天才少年」提供世界级挑战课题、大牛导师、全球化的平台和资源。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span&gt;证券日报之声&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1805457791910004613%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;北京上半年累计上线大模型 71 款，占全国四成以上&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;2024 年上半年，北京市创新和高技术产业表现强劲，特别是在人工智能领域取得了重要进展，全市数字经济的增加值同比增长 7.8%，其中信息服务业实现增加值 4944.6 亿元，同比增长 12.4%，拉动 GDP 增长 2.6 个百分点。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;新京报&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn808693861&quot; target=&quot;_blank&quot;&gt;提前曝光 Llama 3.1，Meta 为什么想做「大模型界 Linux」？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;比肩世界上最强大模型的 Llama3.1 开源，社交平台 X 上，很多人将这一事件视为历史、拐点、史诗级时刻，这意味开源、闭源之间的差距进一步缩小乃至反超，还意味着开发者从此有了一个免费的最强基座模型在手。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;极客公园&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Ftech%2Froll%2F2024-07-24%2Fdoc-incffscy7104045.shtml&quot; target=&quot;_blank&quot;&gt;AI 生成作品版权算谁的？番茄小说 AI 训练协议惹争议&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;多位番茄小说作者在社交平台晒出番茄小说发出的「AI 训练补充协议」通知，内容显示，「甲方（番茄小说）可将签约作品的全部或部分内容及相关信息 (如作品名称、简介、大纲、章节、人物、作者个人信息、封面图等) 作为数据、语料、文本、素材等用于标注、合成数据/数据库建设、AI 人工智能研发、机器学习、模型训练、深度合成、算法研发等目前已知或未来开发的新技术研发/应用领域。」&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;第一财经网&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FEmbarkStudios%2Frust-gpu&quot; target=&quot;_blank&quot;&gt;EmbarkStudios/rust-gpu&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;270&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-af056152fffdc9a1b9abe70c9b1e7ce5c32.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FEmbarkStudios%2Frust-gpu&quot; target=&quot;_blank&quot;&gt;https://github.com/EmbarkStudios/rust-gpu&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Rust-GPU 是面向 GPU 编程的开源项目，目标是使 Rust 成为 GPU 着色器开发的 「一等公民」 编程语言和生态系统。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5783135/blog/13722371&quot; target=&quot;_blank&quot;&gt;得物 App 弱网诊断探索之路&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;本次实现的是被动弱网诊断，也就是不主动发起探测请求，被动采集 App 内的全部网络请求，再根据一定在策略计算出用户网络环境。相对于主动探测，被动探测不会浪费用户资源。尤其是在吞吐量计算方面，主动探测不仅会消耗用户流量，还可能会对正在进行中的用户网络请求产生影响。而且当用户网络环境不佳时，负向影响更加严重。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;01.jpg&quot; height=&quot;321&quot; src=&quot;https://oscimg.oschina.net/oscnet/01_1721723420942.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FKSfT74hdrHNMyqS7Ww2Tnw&quot; target=&quot;_blank&quot;&gt;「开源模型是智商税」 v.s. 「开源 AI 是前进的道路」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：让他搞 AI 别用开源的编译器、操作系统、开发语言、训练推理框架等等试试&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：百度这么多年闭源都闭出了啥垃圾？闭门造车还好意思 diss 别人，不知道自己的搜索引擎被上亿人 diss 吗？别再击穿道德底线了…如果还有底线的话&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：你中文的可信数据有多少，简直去污染模型&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：个人认为不开源的模型肯定比开源模型强，因为有些公司会拿开源模型稍微优化一下，再绕过开源协议，这样就变成闭源的了，瞎口嗨的，勿喷&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：百度和 meta 说的完全是两个事......&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：先不说开源模型和闭源模型比性能到底谁高谁低，开源是智商税的话，你 robin 的文心一言敢说代码里一点开源的成果都没用到吗? 你只要用了就算自己打自己脸吧?&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：开源都不要钱哪来的税？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：自己在 ollama 上用阿里的 Qwen2 都感觉比百度的文心一言舒服。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/303649&quot; target=&quot;_blank&quot;&gt;齐向东：中国目前不会发生 Windows 全球性蓝屏这样的事故&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：请说咱们自己的 LINUX 信创系统&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：说的一点不严谨,，港台可没少受这次影响&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：中国最大的网络安全公司不是 360 么？&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrTy1sp9BGuAN0vzGU_aMHg&quot; target=&quot;_blank&quot;&gt;深圳移动：线下解封「停机」需社保连续缴纳 6 个月以上&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：实名制这么久，骚扰电话一个没少&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：有点管的太多了，实名制就行了呗&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：评论区里的，移动公司的行为上升到社会问题是吧？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：这还真不是上升到社会问题，而是深圳很多都需要社保卡的，新办理银行卡转账限额为 0，手机卡......见微知著&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：直接工信部投诉就完事了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：银行开卡要手机入网半年以上&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：这是因为号码太好，值钱了，所以被人盯上了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：以前打电话人家还要猜你是谁，现在直接喊名字。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：没手机号也找不到工作啊&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：问一下：没在深圳交社保的是不是就不能在深圳办理移动卡&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：难怪说深圳移动不属于广东省&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 12：大家可能误会移动公司的要求了，这个被封禁，应该是出现一些恶意行为。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303872</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303872</guid>
            <pubDate>Thu, 25 Jul 2024 09:53:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>教育部支持高校布局集成电路、AI 等专业</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;教育部高等教育司日前公布《关于开展 2024 年度普通高等学校本科专业设置工作的通知》，提出加大本科专业调整力度，着力优化同新发展格局相适应的专业结构和人才培养结构。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持高校面向集成电路、人工智能、量子科技、生命健康、能源、绿色低碳、涉外法治、国际传播、国际组织、金融科技等关键领域布局相关专业，有的放矢培养国家战略人才和急需紧缺人才。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持高校深化新工科、新医科、新农科、新文科建设，对现有专业进行改造，培育交叉融合的新兴专业，打造特色优势专业集群。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;233&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4901bc7f59dc7dd3933631b86b116a6a782.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《通知》要求，省级教育行政部门要做好增设专业形式审核工作，报送本地急需紧缺以及就业率低的专业清单，为优化专业结构提供参考。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，《通知》还提到，高校增设本科专业、增设第二学士学位专业、调整专业名称、调整专业学位授予门类或修业年限、撤销专业等，在 2024 年 7 月 15 日到 8 月 31 日集中进行备案或审批申请。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303861</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303861</guid>
            <pubDate>Thu, 25 Jul 2024 08:59:25 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>得物 App 弱网诊断探索之路</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;h1&gt;一、背景&lt;/h1&gt; 
&lt;p&gt;随着得物用户规模和业务复杂度不断提升，端上网络体验优化已逐步进入深水区。为了更好地保障处于弱网状态下得物 App 用户的使用体验，我们在已有的网络体验大盘、网络诊断工具的基础上研发了弱网诊断能力。该工具能够高效实时诊断用户真实网络环境，同时给出精确网络质量分级，为后续 App 各业务场景进行针对性优化做好基础建设保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;一些网络性能指标：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;速率：指传送数据的速率。速率是计算机网络中最重要的性能指标，单位是 b/s(比特每秒，也写作 bps ，即 bit per second )。速率较高时可写作 kbps，mbps。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;带宽：带宽用来表示网络的通信线路传送数据的能力，表示在单位时间内从网络中的某一点到另一点所能通过的&quot;最高速率&quot;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;吞吐量（throughput）：表示在单位时间内通过某网络的数据量。吞吐量常用于对网络的一种测量。吞吐量受网络带宽或者速率限制。例如，对于一个 100Mb/s 的网络，其额定速率是 100Mb/s，那么该数值是此网络的吞吐量的上限，其吞吐量可能只有 70Mb/s。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;时延：指数据从网络上的一端传输到另一端所需要的时间。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;往返时间 RTT（Round-Trip Time）：表示从发送方发送数据开始，到发送方收到接收方的确认，总共经历的时间。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;HttpRTT：指从客户端请求的第一个字节开始发送到收到第一个数据包响应的时间差。这个时间包含 3 个部分，客户端发送数据到服务器耗时、服务器处理耗时、服务器响应数据到客户端耗时。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;弱网诊断观察的指标：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;弱网诊断根据 HttpRTT 和吞吐量来观察用户网络环境。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;HttpRTT：在不考虑服务器处理耗时的情况下，能够体现用户请求被处理的真实时延。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;吞吐量（throughput）：用户的额定速率能被系统提供的 API 获取到，然而其仅能表示设备能够提供的最大速率（一般很大），却不是真实速率，而测量真实的吞吐量更能体现出用户当前真实网络环境。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;二、整体架构&lt;/h1&gt; 
&lt;p&gt;本次实现的是被动弱网诊断，也就是不主动发起探测请求，被动采集 App 内的全部网络请求，再根据一定在策略计算出用户网络环境。相对于主动探测，被动探测不会浪费用户资源。尤其是在吞吐量计算方面，主动探测不仅会消耗用户流量，还可能会对正在进行中的用户网络请求产生影响。而且当用户网络环境不佳时，负向影响更加严重。&lt;/p&gt; 
&lt;p&gt;以下为被动网络诊断的整体架构图：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/01_1721723420942.jpg&quot; alt=&quot;01.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;整体架构图&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;三、采集层&lt;/h1&gt; 
&lt;h2&gt;HttpRTT 采集&lt;/h2&gt; 
&lt;p&gt;HttpRTT 的采集比较简单，各端根据自身 Http 协议栈的实现获取到从写入 requestHeader 开始，到收取 responseHeader 的时间差即可。&lt;/p&gt; 
&lt;p&gt;对于 Android，我们通过 OkHttp 完成 Http 请求，通过向 OkHttp 注册网络监听即可实现。需要说明的是，在不修改源码的情况下，Android 无法获取到收到第一个响应数据包的时间，只能监听到 Header 读取完成，这会有些许误差，但实测下来可以忽略。&lt;/p&gt; 
&lt;p&gt;对于其他客户端内通过自行实现 Http 协议栈发起的网络请求（如 PCDN），我们通过向其注册特定的监听回调，也能获取到 HttpRTT。&lt;/p&gt; 
&lt;h4&gt;采集样本过滤&lt;/h4&gt; 
&lt;p&gt;HttpRTT 包含了服务器处理时间，而当服务器处理时间过长或过低时对其他普遍意义上的 Http 请求参考价值相对较低，因此我们需要排除这些数据：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;localhost：如果向 localHost 发起请求，且响应的仅是缓存的数据，那么其 HttpRTT 时延明显接近于 0；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PUT 请求：由于 PUT 请求传输的数据量一般较大，其 HttpRTT 明显高于其他；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;其他明显偏离的数据。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;吞吐量（throughput）采集&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;throughput(bit/s , bps) = 单位时间内通过的数据量 (bit) / 单位时间 (s)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;吞吐量的采集相对要复杂得多，吞吐量采集目的是获取用户所能使用的&lt;strong&gt;最大的&lt;/strong&gt; 数据率（或带宽），因而其需要在设备上恰好有&lt;strong&gt;大量数据正在传输&lt;/strong&gt;时采集。对于主动探测来说，在无其他请求干扰的情况下，主动发起一个大数据量 CDN 下载请求即可快速测量出吞吐量。而被动探测则需要想办法预测或检测到大量数据传输的时刻，并适时计算吞吐量。&lt;/p&gt; 
&lt;h4&gt;时间窗口&lt;/h4&gt; 
&lt;p&gt;怎样选取计算吞吐量的时间窗口是计算吞吐量准确性的关键。这个窗口要恰好在大量数据正在传输时，不能早也不能晚。如果提前开启了时间窗口，那么同样的大小的数据通过，由于分母增大会导致计算出的数值偏低；如果数据传输完成后，稍晚关闭时间窗口，那么同样会由于分母增大而导致计算出的数值偏低。&lt;/p&gt; 
&lt;p&gt;我们知道 Http 请求或多或少会有上行/下行数据，但由于服务器处理耗时长短的不确定性（不能算在分母里），单个 Http 请求测速时并不可靠。而多个 Http 正在并发请求进行中的时候，其请求的流量会叠加，单个请求的服务器耗时会被其他 Http 请求覆盖，此时采集吞吐量会是个好的选择。因此，我们可以在监听到 Http 并发请求数量达到 5 个以上时采集吞吐量。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/02_1721723605084.jpg&quot; alt=&quot;02.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;时间串口的选择（忽略建连耗时）&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;可以看出，当并发较多时，服务器耗时会被覆盖，每个时间窗口内存在约 4 个 Http 请求的响应数据。&lt;/p&gt; 
&lt;p&gt;我们始终监听 App 内的全部 Http 请求，当监控到有 5 个及以上的网络请求尚未完成时，也就是 Http 并发 5 个以上，开启时间窗口；当时间窗口已开启且任意一个请求结束时，我们结束当前时间窗口；&lt;/p&gt; 
&lt;p&gt;需要注意的是，当我们结束一个时间窗口的时候，需要立刻检测当前并发是否 5 个以上，而不是等到新的请求到来时，这样能避免类似（图 2：时间窗口 2）的采样机会被浪费掉，而采样成功的样本数越多，越有利于最终结论的准确性（后面策略层会讲原因）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;可行性（我们的 App 内能满足 5 个并发以上吗？）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;当然可以。通过观察线下测试和线上数据分析，我们 App 内的并发数能够满足吞吐量采集的必要条件。举个例子，进入商详一次的并发量就能满足。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/03_1721723659560.jpg&quot; alt=&quot;03.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;用户 A 启动 90 秒内 Http 并发数量（线上数据）&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;数据量&lt;/h4&gt; 
&lt;p&gt;分母（单位时间）的问题解决了，分子（&lt;strong&gt;单位时间内通过的数据量&lt;/strong&gt;）如何取值呢？&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;思路 1：当前时间窗口内并行的 Http 通过的 Reponse 数据量；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;思路 2：设备内所传输的数据量；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;思路 3：当前网卡传输的数据量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;先说思路 1，这个实现上需要我们在时间窗口开始时记录全部 Http 请求已传输的字节数，时间窗口关闭时再记录一次，然后把当前并行的 Http 请求时间窗口内的数据量全部累加起来。这意为着我们要时刻监控每一个 Http 请求中每个字节的读取，成本太高了。另一方面，如果有其他非 Http 请求（或者我们 App 之外的请求）也在进行，我们仅测算 App 内 Http 请求的吞吐量显然是偏低的。因此，思路 1 不合适。&lt;/p&gt; 
&lt;p&gt;再说思路 2，相对合适。我们要测算的就是设备的吞吐量。因为即使是 App 外的流量，其也会有结束的时候，总能为我们所用（除非用户对我们 App 单独做带宽限制）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;获取网卡的数据量&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;相对于获取设备内的全部流量，获取网卡的流量则更为合适。&lt;/p&gt; 
&lt;p&gt;原因 1：部分系统已经支持 WIFI 与蜂窝并行请求，如果当前使用的是 WIFI，将 App 外的蜂窝流量测算进去会导致偏差。&lt;/p&gt; 
&lt;p&gt;原因 2：网络切换时，处于旧网络上的请求不会立即释放，而新的请求会发生在新的网络上，此时设备内的通过的流量是多网卡的累积。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;需要注意的是系统 API 返回的是字节数（byte），而我们计算的是 bit，因此计算吞吐量时需要进行换算。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;脏数据过滤&lt;/h4&gt; 
&lt;p&gt;前面讲到&quot;并发 5 个时，每个时间窗口内可以采集到约 4 个 Http 请求的响应数据&quot;，然而运气并不会始终这样好。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/04_1721723778529.jpg&quot; alt=&quot;04.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;窗口挂起&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;如上图所示，时间窗口 1 内仅两个有效的 response，时间窗口 2 内仅一个有效的 response，其计算出的吞吐量必然是偏低的。因此，脏数据过滤就显得十分重要。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;小数据量过滤&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;时间窗口内通过的流量小于 32KB 时，不会产生准确的速率，我们直接忽略这次采样。要知道，一个图片的数据量都可能会超过 32KB。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;低利用率过滤&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;低利用率是指由于数据需求较小，导致当前速率远未达到最大吞吐率的情况。如图 4-时间窗口 1，对于一个未被充分利用的网络，我至少希望一个 HttpRTT 的时间内接收到的数量大于 15KB。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// 窗口是否挂起
fun isHangingWindow(bitsRx: Long, duration: Long): Boolean {
    val kCwndSizeBits = 10 * 1.5 * 1000 * 8
    val multiplier = 1
    val httpRTT = ??? //由 Http RTT 模块计算
    val bitsReceivedOverOneHttpRtt = bitsRx * httpRTT / duration
    return bitsReceivedOverOneHttpRtt &amp;lt; kCwndSizeBits * multiplier
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;为什么是 15KB ？ 如果 TCP 连接刚刚建立，由于 Linux 系统的默认设置，客户端能够同时发送 10 个数据段，每个数据段时 1460 字节，合计也就是 15KB。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;四、策略层&lt;/h1&gt; 
&lt;p&gt;到这里，我们已经能采集到很多 HttpRTT 样本、throughput 样本了，现在我们要考虑下怎么将这些样本综成计算出一个可以代表设备普遍意义上的 HttpRTT、throughput，然后再归类出设备网络类型（慢的网络、一般的网络、快的网络、很快的网络...）。&lt;/p&gt; 
&lt;h2&gt;中位数&lt;/h2&gt; 
&lt;p&gt;首选是选取什么样的策略将众多的 HttpRTT 样本计算出最终值。可选方式如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/05_1721723906966.png&quot; alt=&quot;05.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;中位数相对于平均数等其他统计量来说，更适合处理包含极端值、偏态分布或受到干扰的数据集。&lt;/p&gt; 
&lt;h2&gt;时间权重&lt;/h2&gt; 
&lt;p&gt;用户网络质量可能随时间而发生变化，最新的样本数据更接近于当前网络环境。我们对样本数据施加时间权重，样本数据每 60 秒降低一半权重，那么越新的样本权重越高。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/06_1721723940276.jpg&quot; alt=&quot;06.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;时间权重&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;60 秒半衰期下不同时间差下的权重：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/07_1721723968111.jpg&quot; alt=&quot;07.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;时间权重变化&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;信号强度权重&lt;/h2&gt; 
&lt;p&gt;同样的，信号强度也可能会随用户移动位置而发生变更，不同信号强度下的网络质量也会不同。我们将用户信号强度划分为 4 个等级，再根据信号强度等级的变化施加不同的权重。那么，样本数据生成时的信号强度与当前信号强度越是接近，其样本权重就越高。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/08_1721723999527.jpg&quot; alt=&quot;08.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;信号权重&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;目前仅 Android 且网络环境为 WIFI 会计算信号强度权重。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;加权中位数&lt;/h2&gt; 
&lt;p&gt;最终，将全部样本以加权中位数的方式，计算 HttpRTT、throughput。而最终权重由时间权重与信号强度权重结合得出。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/09_1721724041759.jpg&quot; alt=&quot;09.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;综合权重&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;计算与缓存&lt;/h2&gt; 
&lt;p&gt;如图 4 所示，应用网络请求并发量能达到 20+，而启动 1 分钟内总 Http 请求数到达了 450，平均每秒约 8 个请求。而我们线下实测每次计算耗时 1~10ms，样本总数越高时耗时也越高。因此，我们要考虑下如何降低计算频率。&lt;/p&gt; 
&lt;h4&gt;适时计算&lt;/h4&gt; 
&lt;p&gt;调用方总是期望在请求 API 时立刻能够拿到最新的、最准确的结果。一个简单的方式是业务请求时将全部样本重新计算一遍，一开始我们也确实是这么设计的，然而每次计算耗时 1~10ms， 这个对调用方来说是显然是无法接受。&lt;/p&gt; 
&lt;p&gt;那么，我们真的需要在调用时将全部样本重算一遍吗？&lt;/p&gt; 
&lt;p&gt;首先来说，只有新的计算结果和旧的计算结果有差异时，我们才需要重新计算。我们的计算策略是加权中位数，其计算来源是样本总数、样本权重，而样本权重受时间、信号强度影响。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;对于样本数、信号强度：其变化时必然会引起最终结果的变化；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;对于时间，通过单个请求的时间权重公式（图 4），我们可以推导出多个样本时，单个样本的权重不会随当前时间发生变化（图 8），也就是我们无需考虑时间流逝对时间权重的计算影响。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/10_1721724108441.jpg&quot; alt=&quot;10.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;那么，我们只需要在样本数、信号强度发生变化时重新计算，然后将计算结果缓存下来。&lt;/p&gt; 
&lt;h4&gt;计算条件&lt;/h4&gt; 
&lt;p&gt;也并非只要有新样本生成我们就要重新计算一遍，那样计算频率太高了。总的来说，当有新样本到来时，重新计算需满足以下任意一个条件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;从未计算出结果&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;网络类型发生变更&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;信号强度发生变更&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;当前时间较上次计算大于 10 秒&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Http 样本数较上次计算多出 50%&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;throughput 样本数较上次计算多出 50%&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;HttpRTT 样本+throughput 样本合计增加 20 以上&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;网络变更监听&lt;/h4&gt; 
&lt;p&gt;对于 HttpRTT 样本，throughput 样本，我们各保留最新的 300 个。当网络发生变更时我们会清除全部，因为旧的船票不能登上新船。&lt;/p&gt; 
&lt;h1&gt;五、接口层&lt;/h1&gt; 
&lt;p&gt;现在我们有了具体的 HttpRTT、throughput，然而大部分业务并不需要这些数字，他们只想知道当前网络怎么样，快不快，有多快。基于此，我们根据 HttpRTT、throughput 将用户网络划分为 5 个类型，通过接口提供给上层。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/11_1721724224070.jpg&quot; alt=&quot;11.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;这里 throughput 的单位是 kbps，如果换算成常见的 KB/s，需要除以 8&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;需要说明的是，这里的 TYPE_2G 并不是指我们手机信号里所展示的 2G，而是基于被动探测对用户网络环境划分的结果。&lt;/p&gt; 
&lt;p&gt;即使用户连接的是 5G 网络，当其因信号不好等其他因素导致 RTT 较高或 throughput 较低时，也会被划分到 TYPE_2G。换句话说，这里用 TYPE_2G 就是表明网络很慢，就和很多年前的 2G 一样慢。&lt;/p&gt; 
&lt;p&gt;此外，由于网络类型的计算是在网络请求完成时进行的异步计算，上层通过接口读取的始终是缓存，所以无需考虑调用时的性能问题。&lt;/p&gt; 
&lt;h1&gt;六、阈值定义&lt;/h1&gt; 
&lt;p&gt;网络类型划分里有 4 个关键数值：272ms、511ms、400kpbs、1600kpbs，这些数组是怎么定义出来的呢？&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/12_1721724275168.jpg&quot; alt=&quot;12.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;线下测试：首选通过弱网工具判断我们的 HttpRTT、throughput 估算的是否准确。通过 Round-trip latancy(ms) 增加延迟观察 HttpRTT 是否同步改变，通过限制 Bandwidth(kbps) 观察 throughput 数值是否与之一致。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/13_1721724302378.jpg&quot; alt=&quot;13.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;charless 弱网模拟&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;线上验证：网络监控中携带当前网络类型，统计线上数据观察 TYPE_2G、TYPE_3G、TYPE_4G 网络请求耗时表现。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;反复实验：通过调整关键参数找到最有区分度的阈值。如缓存的样本总数越高就表明参照了越多的老数据、时间权重半衰期越长老数据的权重就越高、窗口挂起判定中 multiplier 越高样本数越少结果越准确......通过实验数据调整我们预埋的参数，能使判定更加准确。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;七、性能指标&lt;/h1&gt; 
&lt;h2&gt;HttpRTT 数值计算&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/14_1721724356750.jpg&quot; alt=&quot;14.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;用户 B 全部网络请求的首字节耗时与 nqeHttpRTT&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;上图是线上某用户 B 的首字节耗时（HttpRTT）与最终计算出的 nqeHttpRTT。单次网络请求耗时会有波动，但 nqeHttpRTT 维持准确与稳定。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注：&lt;/p&gt; 
 &lt;p&gt;nqeHttpRTT 指最终估算出的 HttpRTT；&lt;/p&gt; 
 &lt;p&gt;为优化显示，图中纵轴以 xx ms 为最高值，实际上部分请求远高于此；&lt;/p&gt; 
 &lt;p&gt;nqeHttpRTT 未伴随 Http 请求出立刻出现是因为诊断模块启动时机较晚，事实上 nqeHttpRTT 得计算最低只需要 5 个完成 Head 响应的 Http 请求。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;吞吐量（throughput）数值&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/15_1721724434130.jpg&quot; alt=&quot;15.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;用户 B 全部网络请求的并发数与吞吐率&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;上图是线上某用户 B 的并发数与吞吐率计算结果。并发 5 个以上时会采集出一个以上吞吐率样本，可以看到我们 App 内的并发数能够满足我们对吞吐率的采集需求，而估算出的吞吐率（nqeKbps）数值稳定。&lt;/p&gt; 
&lt;h2&gt;准确性判定&lt;/h2&gt; 
&lt;p&gt;大部分调用方并不关注具体的 HttpRTT，吞吐量数值，而只关注我们划分出的网络类型。划分网络类型的准确性自然是调用方关注的重点。那么，如何衡量我们的准确性呢？换句话说，我们判断为弱网，他真的是弱网吗?&lt;/p&gt; 
&lt;p&gt;一个简单的方式是请求耗时大于 500ms 算作实际弱网，但是业务接口的耗时与 CDN 的耗时会有明显差异，500ms 明显不能作为 CDN 耗时的弱网衡量标准。&lt;/p&gt; 
&lt;p&gt;如果我们以单个接口耗时 500ms 作为实际弱网呢？也会存在一些问题，比如西藏的用户与杭州 (机房在这里) 的用户在网络延迟上明显有巨大差异（物理距离决定的）。即使网络极佳的西藏用户，业务接口的耗时也会高于网络一般的杭州用户。但是网络极佳的西藏用户访问 CDN 时，其耗时又要优于杭州的网络一般的用户。&lt;/p&gt; 
&lt;p&gt;如果以某省份单接口耗时大于 500ms 呢？且不说可能以偏概全，就目前而言，同一省份的 IPv4 和 IPv6 的连接的机房都可能会不一样（有杭州，也有北京）。&lt;/p&gt; 
&lt;p&gt;.....&lt;/p&gt; 
&lt;h4&gt;目前的准确性判定&lt;/h4&gt; 
&lt;p&gt;我们以实际耗时比 50 分位网络传播耗时慢一倍为实际弱网（判断准确），比 50 分位耗时小为实际正常（误判或其他）。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/16_1721724500031.jpg&quot; alt=&quot;16.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;网络耗时阶段&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/17_1721724517085.jpg&quot; alt=&quot;17.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;怎么定义实际弱网？&lt;/h4&gt; 
&lt;p&gt;实际弱网（请求慢）=（request 耗时+response 耗时）*2+服务器处理+其他=50 分位总耗时+（request 耗时+response 耗时）&lt;/p&gt; 
&lt;p&gt;实际正常（请求快）=（request 耗时+response 耗时）+服务器处理+其他=50 分位总耗时&lt;/p&gt; 
&lt;h4&gt;怎么计算网络传播耗时？&lt;/h4&gt; 
&lt;p&gt;网络传播耗时=request 耗时+response 耗时，即数据包在网络上传输的耗时。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;数据发送速率 (kbps) = TCP 窗口大小 * 8 / RTT(TCP)
数据发送耗时 = 数据量 * 8 / 发送速率
网络传播耗时 = request + response = RTT + 数据发送耗时
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;以某接口为例&lt;/strong&gt;，TCP RTT=50ms，窗口大小=16192，上行字节数=4095，下行字节数=24807，总网络耗时（50 分位）=300ms；&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;那么&lt;/strong&gt; ：数据发送速率 (bps)=16192*8/0.05=2590720(bps)、数据发送耗时=(4095+24807)&lt;em&gt;8/3598222&lt;/em&gt;1000=89ms、网络传播耗时=50+89=139ms；&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;最终得出&lt;/strong&gt;，实际弱网耗时（比中位数多一倍网络耗时）=300+139=439ms；实际正常耗时（小于中位数）=300ms。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;网络发生拥塞时，我们以 16192 作为 TCP 窗口大小；以上数据全部以 50 分位计算。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;线上数据&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10703472/18_1721724647212.jpg&quot; alt=&quot;18.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;某接口的弱网准确率&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;数据说明：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;判断弱网：指弱网诊断输出当前网络类型为弱网，即 HttpRTT 类型为 2G、3G 或吞吐量类型为 2G。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;判断弱网-慢请求率：在判断为弱网的前提下，实际上慢请求的比例。慢请求指上文中的实际弱网，即高于 50 分位耗时+网络传播耗时。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;判断弱网-快请求率：在判断为弱网的前提下，实际上快请求的比例。快请求指上文中的实际正常，即低于 50 分位耗时。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;弱网率：判断弱网的请求量占总请求量的比例。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;可以看到：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;判定为弱网的用户占比约为 0.65%，而判定弱网中仅有约 5% 的请求耗时是低于 50 分位耗时。&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/19_1721724724579.jpg&quot; alt=&quot;19.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;某请求 HttpRTT 类型、吞吐量类型与耗时表现&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;当我们以具体的 HttpRTT 类型、吞吐率类型来区分数据的时候，更能够清晰大看到不同分类下的数据差异。通过上图我们可以看到：&lt;strong&gt;判断的类型越差（4G&amp;gt;3G&amp;gt;2G），请求耗时的越高（AVG、P50...），同时慢请求率越高（准确率），快请求率越低（误判率）&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;不准确性来源&lt;/h2&gt; 
&lt;p&gt;即使我们尽力优化策略，但仍有一部分误判。其来源如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;分位值判定带来的误差 （可以参考以上准确性说明）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;用户 RTT 恰好在阈值附近波动；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;来自算法本身限制，中位数机制本身就决定了当用户网络环境快速变更后无法快速响应。比如，用户从 WIFI 信号差的地方移动到路由器附近，网络质量立即变得极好，此时没有足够数量的新样本积累，弱网诊断输出的仍是弱网；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;大量请求异常高耗时，当用户吞吐量一般时， 用户高并发请求某 HOST 时，存在首包耗时异常高的情况。如图 16 第 9 秒、26 秒、26 秒都存在单 HOST 高并发高耗时，而导致估算值较高。（当然，后面我们会考虑优化并发数，但这和弱网诊断没有关系）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/20_1721724826497.jpg&quot; alt=&quot;20.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;用户 C 全部请求及 HttpRTT、吞吐率&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;八、应用场景&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;并行 Http2.0 连接&lt;/strong&gt;：我们知道 HTTP/2.0 支持多路复用，可以同一个 TCP 连接上进行并发的数据交换，而不像 HTTP/1.1 需要多个 TCP 连接。在正常网络环境下能够降低一部分延迟，然在弱网环境下 TCP 的队头阻塞问题将使请求变得更慢，那么我们在弱网时，并行建连多个 H2 连接将能在一定程度上缓解此问题；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;全站加速&lt;/strong&gt;：应用全站加速时，客户端会建连边缘节点，而不是中心业务服务器，这将能降低客户端到服务器的 TCP RTT，从而响应速度、成功率得到提升，弱网环境下更契合全站加速的应用场景；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;音视频降质&lt;/strong&gt;：弱网时，降低画质以快速加载要好于加载速度慢；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;预加载优化&lt;/strong&gt;：当前 App 内有各式各样的预加载，其本意是为了加速页面访问速度，提升用户体验。然而弱网时可能会适得其反。弱网时，根据网络环境评级，逐步降低预加载数据，将带宽让给前台网络请求将能提升页面加载速度。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;九、总结&lt;/h1&gt; 
&lt;p&gt;通过监听 App 内的 Http 请求，按照一定策略采集 HttpRTT、吞吐率样本，以加权中位数（时间权重、信号强度权重）的方式综合估算出 HttpRTT、吞吐率，最后根据 HttpRTT、吞吐率按照一定的策略划分出真实网络类型。经线上数据验证，弱网用户占比 0.65%，而弱网请求中仅 5% 以下耗时低于 50 分位，具有明显的区分性。后续可应用于网络连接优化、全站加速、音视频降质等多个场景。&lt;/p&gt; 
&lt;p&gt;*&lt;strong&gt;文 / 厉飞雨&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本文属得物技术原创，更多精彩文章请看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com%2F&quot; target=&quot;_blank&quot;&gt;得物技术&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未经得物技术许可严禁转载，否则依法追究法律责任！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5783135/blog/13722371</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/13722371</guid>
            <pubDate>Thu, 25 Jul 2024 08:54:25 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>国内环境，怎么做开源才能兼顾生存和情怀</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前天有朋友转发给我这个话题，让聊聊我们的情况，语音沟通后最后还是决定整理成文字分享出来，希望能给准备做开源的小伙伴一些启发，在这里也希望能结交更多的开源伙伴。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们目前正在运营一款开源电子签章软件，名为开放签开源电子签章。于 2023 年 12 月 15 日正式发布至 gitee 和 github 仓库，并在 gitee 上获得了 676 个 star 和 352 个 forks。商业化方面，我们平均每周能够吸引 2-4 个付费客户，偶尔也会遇到大客户以项目制方式交付定制化项目和源码。对于软件的生存能力，我们只能说勉强够公司运营支出，还算不上富裕，还需要继续努力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为什么选择开源这款软件，主要是与我们小团队的过往经历有关系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;说说团队经历&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们团队共 8 名小伙伴均出身于计算机专业。工作分工是这样的：5 名主力负责日常编写代码；1 名负责接收用户需求并进行产品设计和规划，同时协调 5 名主力的分工和代码联调；1 名负责产品测试和客户前期的售前支持；1 名负责销售运营和回答用户的日常问题，部分小伙伴同时也会兼些其他职务。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们做电子签章项目的理由，我们的这 8 名同事都来自某家电子合同 SaaS 公司，几乎在 2016 年接触到电子合同这个行业。不幸的是，我们的电子合同公司于 2019 年并购了另一家电子合同公司。业务融合进行了大约三个月，在一个黑夜大家相互聊工作感受（那些经历过互联网公司交易并购的人应该会有同样的体验）..........于是，不约而同地，我们向公司提出了离职，于是就成立了这家公司。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;公司创立之初并没有考虑到电子签章领域，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主要是没有找到电子签章运营的新模式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;团队成员主要是软件工程师，计划开发一个面向 C 端用户的小程序。然而，情况并不长久，在 2019 年底疫情爆发后，创业项目遇到了很多阻碍。因此，在 2020 年之后，团队开始承接软件项目，主要集中在电子签章方面。为客户提供平台搭建、集成 e 签宝、上上签的 API 接口，以及为用户选择电子合同供应商。此外，也承接了一些非电子签章项目。团队在 2020 年至 2023 年间共同度过这段时光，经历了迷茫和膨胀，也面临了各种项目挑战。幸运的是，成功留下了几家稳定合作的客户，确保了持续的合同收入。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有了之前电子签章 SaaS 和创业几年电子签集成服务的经验，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在 202&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2-23&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年制定企业运营规划时，大家提倡公司应该有一款主打产品，这样才能提升利润。作为一家一直从事软件外包的企业，心里有些不甘&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，最终还是选择了自己最熟悉的行业和产品（电子签），并确定选择以开源的方式运营产品，当时主要也是考虑了团队成员都有技术经历，也很符合从技术层面切入产品运营&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。于是，2023 年团队开始做准备，进行技术框架的整理、团队的精简和产品的规划。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;历经两年，最终&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在 2023 年底，我们打造了一套电子签章 P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;aa&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;S 平台，主要目标是支持多租户、可配置和本地化。同时，我们还&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;选择从&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源电子签章核心技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;组件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的方式执行开源计划&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，并选择了 MIT 开源协议&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，让使用的用户没有版权的顾虑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;【为什么选择 mit&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源协议&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;呢？更多的是为了情怀&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和信念&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。多年来一直致力于电子签章产品的开发&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和服务中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，希望能够&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;以我们多年积累的行业知识和技术，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为软件厂商和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;更多像我们一样的小微&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;企业做出一些贡献。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;让更多企业可以低门槛、便捷的使用电子签，让电子签可以更快速的普及。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;】&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;说说为什么选择了开源这条道？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在选择开源这条道路之前，我们可以说挣扎了三个月时间，主要担心外界和同行的嘲讽。作为一支在电子签章/电子合同行业工作了八年的团队，我们对于市场上产品和运营模式有一定的了解。市场产品有面向国央企客户提供过软件+硬件解决方案，有面向中大型组织提供过全套电子签章业务系统，也有面向互联网企业提供过接口集成服务，更多的是提供&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;SaaS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;订阅服务。此外，我们还调研了欧美和东南亚的电子签章企业，各种模式百花齐放、各有千秋，唯独在国内没有一家企业专门从事开源电子签章&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;服务的公司&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;毕竟，有些&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;很多&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;企业在购买&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;电子签产品和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;服务时，价格还是有一定的门槛。我们希望能够让大家以低门槛的方式使用电子签章技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和产品。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;虽然&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;网络中可以找到关于电子签相关的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，但是非常的零散。开放签开源工具版对电子签核心技术做了全面的整理、完善和可应用于商业中的技术开发和处理，在网络和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源社区&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中应该是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;较全面的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，使用开放签开源技术，有电子签需求的伙伴可以避免很多重复造轮子的工作，可以让更多精力放在自身业务开发中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们的目标是通过精良的电子签&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技术、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;工具与产品&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，通过开放签开源技术和工具构建专属电子签平台&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通过&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源模式，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;必定会降低用户使用电子签的门槛，加快电子签的应用速度。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;用户&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在开源模式下&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;根据需要进行灵活定制和选择相应的电子签章技术，摆脱固定流程和模式的限制。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;说说怎么生存？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;关于如何生存，文章在开头简单提到了公司目前有商业转化，这意味着公司能够继续生存下去。提到生存就不得不提到商业模式，公司目前有两款产品，一个是电子签名&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;工具&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，另一个是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;签署平台&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一套完整的电子签业务管理系统，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;正在准备发布开源版本）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;公司的营收&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来源&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;于向企业提供&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本地化、专属的签署平台&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（可以与其他系统接口集成和 OEM），&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;客户需要&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;支付软件授权费和第三方云服务费用（涉及数字证书、实名认证和短信等服务）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同时客户还可以选择工具&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;源代码，自建电子签功能或系统，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主要是供&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;能力的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;团队&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;或个人&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;使用的。如果需要权威的 CA 证书，可以找我们&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;代采&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;根据目前的流量和用户反馈，如果想走开源路线，产品质量是关键，还需要耐心回答开源用户的问题。对于白嫖的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;需要&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;放平心态&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;要怀着包容的心态对待&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因为这类用户也会起到宣传引导的作用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。只有在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;产品&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;被广泛的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;使用的情况下，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;才能越来越好&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同时，开源产品和非开源产品需要明确区分。我们也要感谢各个开源博主，他们帮我们转发博文，使我们的产品在开源市场有了声音。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;生存≠情怀？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果全身心的投入到开源项目，那么就要考虑到商业转化的问题。现在开源模式无非是售卖专业版软件授权、提供技术支持、售卖技术文档、广告模式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;无论开源与否，都应该要&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;考虑产品是否能够为业务带来价值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;对于商业化转换，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;尽量考虑企业侧用户，个人侧用户转换率比较难&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开放签&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;仍处在开源项目的「婴儿学步期」，需要更多经验人士和开源团队分享交流这个话题，助力开源项目的顺利进展。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们相信「花若盛开,蝴蝶自来,你若精彩,天自安排 」。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;谢谢！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303847</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303847</guid>
            <pubDate>Thu, 25 Jul 2024 08:25:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>9 大论坛、100+ 重磅嘉宾，GOTC 2024 来咯</title>
            <description>2024 全球开源极客嘉年华（GOGC X GOTC）开源中国报名通道</description>
            <link>https://www.huodongxing.com/event/8762568606000?td=6895280870225</link>
            <guid isPermaLink="false">https://www.huodongxing.com/event/8762568606000?td=6895280870225</guid>
            <pubDate>Thu, 25 Jul 2024 07:30:06 GMT</pubDate>
        </item>
        <item>
            <title>Stack Overflow 2024 年度开发者调查报告</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Stack Overflow 发布了 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstackoverflow.blog%2F2024%2F07%2F24%2Fdevelopers-want-more-more-more-the-2024-results-from-stack-overflow-s-annual-developer-survey%2F&quot; target=&quot;_blank&quot;&gt;2024 年开发者调查报告&lt;/a&gt;，据称共计超过 65,000 名开发者参与了此次调查，报告涉及了开发人员使用和希望学习的技术和工具、AI 以及开发人员的工作体验等方面。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;结果表明，JavaScript 和 PostgreSQL 等技术仍然最受欢迎，Rust 和 Markdown 仍然最受推崇，工作中的技术债务最令开发人员苦恼（62%）。同时，他们并不认为 AI 会对其工作构成威胁。76% 的受访者表示他们正在使用或计划使用 AI 工具，但只有 43% 的人表示他们信任 AI 工具的准确性，45% 的人认为 AI 工具难以处理复杂任务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;编程语言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;JavaScript 一直是开发人员调查和 Stack Overflow 上的主流语言。除了 2013 年和 2014 年 SQL 是最受欢迎的编程语言外，每年的 Stack Overflow 调查中最受欢迎的编程语言都是 JavaScript。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;过去一年中共有 62.3% 受访者使用了 JavaScript，其次分别是 HTML/CSS（52.9%）和 Python（51%）。在开发者「还未尝试但明年最想尝试的编程语言」中，Python 夺得第一，超过了 JavaScript。此外 Python 也是正在学习编程的人中最受欢迎的编程语言，这一人群还表示，希望明年平均使用 12 种不同的语言。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;和去年一样，大多数开发人员使用过并希望再次使用的语言依旧是 Rust，支持率高达 83%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;303&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-32fc258f9cd41cb021685f3c6d4155536e4.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;数据库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;PostgreSQL 于 2018 年首次出现在开发者调查中，当时有 33% 的开发者表示在使用 PostgreSQL，而当年最受欢迎的选择是 MySQL，有 59% 的开发者在使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 Stack Overflow 2023 年度报告中，PostgreSQL 取代 MySQL 成为最流行的数据库；并在今年连续第二年成为最受欢迎的数据库，占比 48.7%。MySQL 则以 40.3% 的占比位居第二，其次是 SQLite 占比 33.1%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于正在学习编程的人来说，更多的依旧使用 MySQL，采用占比为 44.9%。SQLite（占比 36%）和 PostgreSQL（占比 33%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;316&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8d07780afac2502727c05630a315d86c515.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Web 框架和技术&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Node.js 和 React.js 依然是最流行的两种 Web 技术。Node.js 的使用率在 2020 年达到顶峰，最高为 51%；虽然流行率有所下降，但它仍然是今年调查中使用最多的 Web 技术（占比 40.8%），并且从去年开始在正在学习编程的人中越来越受欢迎（占比 44.2%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，还有 73% 的受访者表示希望继续使用 Svelte。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;345&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-474ad8c81f0faef45b74443522e8287cb9b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;嵌入式技术&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年新增了嵌入式技术板块的调查，有 3% 的开发者表示使用了嵌入式技术。在最受欢迎的嵌入式技术中，Raspberry Pi（39%）和 Arduino（30%）名列榜首，这两种技术的用户都希望明年使用 Cargo。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;317&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-00641f022023f9cffd99e002e356f9b2442.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;集成环境&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Visual Studio Code 仍然是大多数开发者的首选 IDE。使用 Visual Studio Code（占比 73.6%）的开发人员数量是其最接近（和相关）的替代品 Visual Studio（占比 29.3%）的两倍多。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;如果有机会改变，开发人员可能会选择 Neovim（83%）。事实上，Visual Studio Code 用户大多表示只对尝试 Neovim 或 Vim 感兴趣。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;699&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-92437de674ddd915085608e07f219639fee.png&quot; width=&quot;1165&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;其他内容还包括：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;.NET 再次成为所有开发人员使用最多的框架和库。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;正在学习编程的人使用 NumPy 和 Pandas 最多（与去年一样）。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;专业开发人员最常使用 Docker（59％），而正在学习编程的开发人员最常使用 npm（45％）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Jira 和 Confluence 连续第三年位居开发人员使用最广泛的异步工具榜单榜首。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Teams 是专业开发人员（以及总体开发人员）最受欢迎的同步工具，而 Discord 是正在学习编程的人员中最受欢迎的工具。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;无论对于个人用途还是专业用途，Windows 都是开发人员最流行的操作系统。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;在所有 AI 工具中，大多数开发人员使用 ChatGPT，74% 的人希望明年继续使用它。41% 的 ChatGPT 用户希望明年使用 GitHub Copilot。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年有 62% 的专业开发人员正在使用&amp;nbsp;AI 工具，而去年这一比例为 44%。76% 的受访者目前正在使用或计划使用 AI 工具。72% 的受访者对在工作中使用 AI&amp;nbsp;工具持积极态度。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Erlang 开发人员位居报告的平均薪资最高榜首。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多详情可查看完整报告：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsurvey.stackoverflow.co%2F2024%2F&quot; target=&quot;_blank&quot;&gt;https://survey.stackoverflow.co/2024/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303827/so-developer-survey-2024</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303827/so-developer-survey-2024</guid>
            <pubDate>Thu, 25 Jul 2024 07:27:06 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>