<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 19 Aug 2025 07:48:46 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>中国开源 AI 模型背后供应商排名一览</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span&gt;Interconnects AI 是由 Nathan Lambert（艾伦人工智能研究所研究科学家、加州大学伯克利分校博士）于 2022 年创立的个人栏目，主要通过 Substack 通讯（网址：https://www.interconnects.ai ）分享 AI 领域的前沿见解，内容涵盖大模型训练、推理机制、强化学习等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;该栏目近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Finterconnectsai%2Fstatus%2F1957105950201950715" target="_blank"&gt;发布&lt;/a&gt;文章&lt;em&gt;《&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.interconnects.ai%2Fp%2Fchinas-top-19-open-model-labs" target="_blank"&gt;Ranking the Chinese Open Model Builders&lt;/a&gt;》&lt;/em&gt;，对中国开源 AI 模型背后的机构/公司进行了排名。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;作者称根据这些公司/机构在开源 AI 生态系统中的贡献质量和数量进行评估，重点关注开源模型、工具和数据集的发布，而非专有能力或原始性能&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0819/153430_zfia_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;第一梯队 (业界顶流)：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;深度求索 (DeepSeek)&lt;br&gt; 通义千问 (Qwen)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;第二梯队 (有力竞争者)：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;月之暗面 (Kimi)&lt;br&gt; 智谱 AI (Zhipu / Z AI)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;值得关注：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;阶跃星辰 (StepFun)&lt;br&gt; 腾讯 (混元)&lt;br&gt; 小红书 (RedNote)&lt;br&gt; MiniMax&lt;br&gt; 上海人工智能实验室 (书生/InternLM)&lt;br&gt; 天工 (昆仑万维)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;后起之秀：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;字节跳动 (豆包/Seed)&lt;br&gt; OpenBMB (清华大学)&lt;br&gt; 小米 (MiMo)&lt;br&gt; 百度 (文心)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;荣誉提名：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;多模态艺术模型项目 (Multimodal Art Projection)&lt;br&gt; 阿里巴巴国际数字商业集团&lt;br&gt; 北京智源人工智能研究院 (BAAI)&lt;br&gt; 蚂蚁集团 (inclusionAI)&lt;br&gt; 华为 (盘古)&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0de5cd5b8f905e902d1e9a1eb8af65e24d3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-69d73b09a07b845e141d838abcdec9a00a5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367177/chinas-top-19-open-model-labs</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367177/chinas-top-19-open-model-labs</guid>
      <pubDate>Tue, 19 Aug 2025 07:37:43 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI 编程工具 Augment 推出「Quick Ask Mode」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;AI 编程工具 Augment&amp;nbsp;推出了 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.augmentcode.com%2Fchangelog%2Fquick-ask-mode" target="_blank"&gt;Quick Ask Mode&lt;/a&gt;。该模式将 AI 助手置于只读状态，仅用于探索和回答问题，不会修改任何文件，从而确保代码安全。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-265989ac0f84cbb2b90969df7c6908b1320.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;适用场景&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;规划阶段&lt;/strong&gt;：分析系统架构、依赖关系或设计模式，然后据此制定任务清单，而无需进行实际代码更改。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;理解代码&lt;/strong&gt;：例如询问「身份认证系统是如何运作的？」以安全方式探索系统逻辑，无编辑风险。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;查阅文档&lt;/strong&gt;：如「这个函数的作用是什么？在哪儿被调用？」——帮助快速解析代码用途与位置。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;新成员入门&lt;/strong&gt;：新人可在不担心误改代码的前提下安全探查、熟悉项目结构。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;用户启用 Quick Ask Mode 后，可以放心地向 Agent 询问有关代码变更的澄清、在实施前审查计划，或进行代码理解，而无需担心意外触发代码修改。&lt;/p&gt; 
&lt;p&gt;该模式保留了完整的对话上下文，并允许用户在准备好实施更改时轻松切换回默认的 Agent 模式。目前，Quick Ask Mode 已在 VS Code 和 JetBrains 中向所有用户开放。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367167/augmentcode-quick-ask-mode</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367167/augmentcode-quick-ask-mode</guid>
      <pubDate>Tue, 19 Aug 2025 07:15:43 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 Java MCP 的鉴权？好简单的啦</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; text-align:start"&gt;听说 mcp 的鉴权，是件很麻烦的事情？估计是没选好工具。&lt;/p&gt; 
&lt;h2&gt;一、MCP Client 侧（负责传递，比较简单）&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在客户端，一般是使用 queryString 或者 header 或者 env（stdio 方式用） 传递鉴权信息，比如变量：token（名字随便取）&lt;/p&gt; 
&lt;h3&gt;（1）常见的 mcpServers json 配置方式&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;不同服务平台，mcpServers json 的配置格式可能会略有不同。具体需要按服务平台要求配置。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 queryString 传递（http 类传输方式）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;&lt;span&gt;{&lt;/span&gt;
    &lt;span style="color:#986801"&gt;"mcpServers"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span style="color:#986801"&gt;"demo"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"type"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span style="color:#50a14f"&gt;"sse"&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"url"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"https://localhost:8080/mcp?token=xxxx"&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 header 传递（http 类传输方式）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;&lt;span&gt;{&lt;/span&gt;
    &lt;span style="color:#986801"&gt;"mcpServers"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span style="color:#986801"&gt;"demo"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"type"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span style="color:#50a14f"&gt;"streamable"&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"url"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"https://localhost:8080/mcp"&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"headers"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;span style="color:#986801"&gt;"token"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span style="color:#50a14f"&gt;"xxx"&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 env 传递（stdio 传输方式）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;&lt;span&gt;{&lt;/span&gt;
    &lt;span style="color:#986801"&gt;"mcpServers"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span style="color:#986801"&gt;"demo"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"type"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span style="color:#50a14f"&gt;"stdio"&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"command"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span style="color:#50a14f"&gt;"java"&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"args"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;[&lt;/span&gt;&lt;span style="color:#50a14f"&gt;"-jar"&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"/data/demo/target/demo-mcp-stdio.jar"&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;
            &lt;span style="color:#986801"&gt;"env"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;&lt;span style="color:#986801"&gt;"token"&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"xxx"&lt;/span&gt;&lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;（2）使用 solon-ai-mcp 作为客户端&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;solon-ai-mcp 是比较简洁的 mcp java client 框架。它的体验与 mcpServers json 配置相差不大。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 queryString 传递（http 类传输方式）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.client.McpClientProvider;

&lt;span style="color:#986801"&gt;McpClientProvider&lt;/span&gt; &lt;span style="color:#986801"&gt;mcpClient&lt;/span&gt; &lt;span&gt;=&lt;/span&gt;  McpClientProvider.builder()
                .channel(McpChannel.SSE) &lt;em&gt;//表示使用 sse 传输方式&lt;/em&gt;
                .apiUrl(&lt;span style="color:#50a14f"&gt;"https://localhost:8080/mcp?token=xxxx"&lt;/span&gt;)
                .build();
                
&lt;em&gt;//mcpClient.getTools();&lt;/em&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 header 传递（http 类传输方式）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.client.McpClientProvider;

&lt;span style="color:#986801"&gt;McpClientProvider&lt;/span&gt; &lt;span style="color:#986801"&gt;mcpClient&lt;/span&gt; &lt;span&gt;=&lt;/span&gt;  McpClientProvider.builder()
                .channel(McpChannel.STREAMABLE) &lt;em&gt;//表示使用 streamable 传输方式&lt;/em&gt;
                .apiUrl(&lt;span style="color:#50a14f"&gt;"https://localhost:8080/mcp"&lt;/span&gt;)
                .headerSet(&lt;span style="color:#50a14f"&gt;"token"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"xxxx"&lt;/span&gt;)
                .build(); 
                
&lt;em&gt;//mcpClient.getTools();&lt;/em&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 env 传递（stdio 传输方式）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.client.McpClientProvider;

&lt;span style="color:#986801"&gt;McpClientProvider&lt;/span&gt; &lt;span style="color:#986801"&gt;mcpClient&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; McpClientProvider.builder()
                .channel(McpChannel.STDIO) &lt;em&gt;//表示使用 stdio 传输方式&lt;/em&gt;
                .serverParameters(McpServerParameters.builder(&lt;span style="color:#50a14f"&gt;"java"&lt;/span&gt;)
                        .args(&lt;span style="color:#50a14f"&gt;"-jar"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"/data/demo/target/demo-mcp-stdio.jar"&lt;/span&gt;)
                        .addEnvVar(&lt;span style="color:#50a14f"&gt;"token"&lt;/span&gt;,&lt;span style="color:#50a14f"&gt;"xxx"&lt;/span&gt;)
                        .build())
                .build();
                                
&lt;em&gt;//mcpClient.getTools();&lt;/em&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;与 chatModel 结合使用示例：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.chat.ChatModel;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.chat.ChatResponse;

&lt;span style="color:#986801"&gt;ChatModel&lt;/span&gt; &lt;span style="color:#986801"&gt;chatModel&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; ChatModel.of(apiUrl).provider(provider).model(model)
                .defaultToolsAdd(mcpClient) &lt;em&gt;//重点是这一行&lt;/em&gt;
                .build();

&lt;span style="color:#986801"&gt;ChatResponse&lt;/span&gt; &lt;span style="color:#986801"&gt;resp&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; chatModel
        .prompt(&lt;span style="color:#50a14f"&gt;"今天杭州的天气情况？"&lt;/span&gt;)
        .call();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;二、MCP Server 侧（也好简单的）&lt;/h2&gt; 
&lt;h3&gt;（1）方式 1：每个工具各自鉴权（适合&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;stdio&lt;/code&gt;，&lt;code&gt;sse&lt;/code&gt;，&lt;code&gt;streamable&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;三种传输方式）&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在 solon-ai-mcp 里，可以使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@Header&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;注解，获取 mcp 连接的元信息（比如 queryString、header、env）&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.annotation.ToolMapping;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.McpChannel;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.server.annotation.McpServerEndpoint;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Header;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Param;

&lt;span style="color:#4078f2"&gt;@McpServerEndpoint(channel = McpChannel.STREAMABLE, mcpEndpoint = "/mcp")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;McpServerTool&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@ToolMapping(description = "你好世界")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; String &lt;span style="color:#4078f2"&gt;hello&lt;/span&gt;&lt;span&gt;(&lt;span style="color:#4078f2"&gt;@Param(name="name", description = "名字")&lt;/span&gt; String name, &lt;span style="color:#4078f2"&gt;@Header("token")&lt;/span&gt; String token)&lt;/span&gt; {
        &lt;span style="color:#a626a4"&gt;if&lt;/span&gt;(token == &lt;span style="color:#0184bb"&gt;null&lt;/span&gt;) {
            &lt;span style="color:#a626a4"&gt;throw&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;IllegalArgumentException&lt;/span&gt;(&lt;span style="color:#50a14f"&gt;"你没有权限哦!"&lt;/span&gt;);
        }

        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"你好，"&lt;/span&gt; + name;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;（2）方式 2：为 http 传输的所有工具集中鉴权（适合&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;sse&lt;/code&gt;，&lt;code&gt;streamable&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;http 类的传输方式）&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;solon-ai-mcp 也可以通过过滤器（Filter），实现单点鉴权。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#4078f2"&gt;@Managed&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;McpServerTool&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;Filter&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;doFilter&lt;/span&gt;&lt;span&gt;(Context ctx, FilterChain chain)&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; Throwable {
        &lt;span style="color:#a626a4"&gt;if&lt;/span&gt; (ctx.pathNew().equals(&lt;span style="color:#50a14f"&gt;"/mcp"&lt;/span&gt;)) {
            &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;token&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; ctx.header(&lt;span style="color:#50a14f"&gt;"token"&lt;/span&gt;); &lt;em&gt;//支持从 header 取&lt;/em&gt;
            &lt;span style="color:#a626a4"&gt;if&lt;/span&gt; (token == &lt;span style="color:#0184bb"&gt;null&lt;/span&gt;) {
                token = ctx.param(&lt;span style="color:#50a14f"&gt;"token"&lt;/span&gt;); &lt;em&gt;//支持从 queryString 取&lt;/em&gt;
            }

            &lt;span style="color:#a626a4"&gt;if&lt;/span&gt; (token == &lt;span style="color:#0184bb"&gt;null&lt;/span&gt;) {
                ctx.status(&lt;span style="color:#986801"&gt;401&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"你没有权限哦!"&lt;/span&gt;);
                &lt;span style="color:#a626a4"&gt;return&lt;/span&gt;;
            }
        }

        chain.doFilter(ctx);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;（3）方式 3：程序启动时鉴权（适合&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;stdio&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;传输方式）&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#4078f2"&gt;@SolonMain&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;McpApp&lt;/span&gt; {
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;static&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; {
        &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;token&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; System.getenv(&lt;span style="color:#50a14f"&gt;"token"&lt;/span&gt;);
        &lt;span style="color:#a626a4"&gt;if&lt;/span&gt; (Utils.isEmpty(token)) {
            &lt;span style="color:#a626a4"&gt;throw&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;RuntimeException&lt;/span&gt;(&lt;span style="color:#50a14f"&gt;"你没有权限哦"&lt;/span&gt;);
        }

        Solon.start(McpApp.class, args);
    }
}&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367149</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367149</guid>
      <pubDate>Mon, 18 Aug 2025 06:28:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>陈天桥联手清华教授代季峰发布开源 AI「深度研究」项目：MiroMind ODR</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;国内 AI 领域科学家、清华大学电子工程系副教授代季峰，与创新企业家、慈善家、天桥脑科学研究院创始人陈天桥联手筹备一家致力于打造通用人工智能（AGI）新公司一事，引发广泛关注。&lt;/p&gt; 
&lt;p&gt;如今，代季峰带来了技术「首秀」。&lt;/p&gt; 
&lt;p&gt;代季峰领衔的 MiroMind AI 团队日前公布了一个高性能、完全开源、开放协作的深度研究项目：MiroMind Open Deep Research（Miro ODR），其 V0.1 版本的 GAIA 测试达 82.4 分，性能超越 OpenAI 的 DeepResearch、Manus 等一众开源和闭源 AI 深度研究模型，从而成为当前开源最强 Deep Research 模型。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-29c52019cf9892eb241c0244cf9bc89c5dc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5a2fb7bc5e874664ab5d0289cc1e4359eb0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;与现有的深度研究方法相比，MiroMind ODR 项目开放了深度研究的各个阶段，包括四个子项目：MiroFlow（Agent 框架）、MiroThinker（模型）、MiroVerse（数据）和 MiroTrain（训练基础设施）。&lt;/p&gt; 
&lt;p&gt;MiroFlow，支持多种主流工具调用，扩展大语言模型，支持工具辅助的深度研究推理。它的亮点在于可以稳定复现最强性能，也就是 GAIA 上 82.4 的成绩。&lt;/p&gt; 
&lt;p&gt;MiroThinker，原生支持工具辅助推理的大语言模型，可训练、可复现，在 GAIA 中表现最佳。此外，它在 GAIA-Text-103 上取得了 SOTA 性能（60.2%），接近 OpenAI Deep Research。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cf3f845768113618d3320726ec7628fbe21.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;MiroVerse，147K 开源训练数据支持深度研究训练。此外团队还会关注社区反馈，每月持续提供高质量、深入的研究数据集。&lt;br&gt; MiroTrain，支持深度研究模型的稳定高效训练，覆盖整个 Deep Research 训练流程，支持长文本训练和 RL 训练工具。&lt;/p&gt; 
&lt;p&gt;目前，Miro ODR 的四个子项目都已上线到 GitHub、Hugging Face 平台。&lt;/p&gt; 
&lt;p&gt;Blog: https://miromind.ai/blog/miromind-open-deep-research&lt;br&gt; Demo: https://dr.miromind.ai/&lt;br&gt; GitHub: https://github.com/MiroMindAI&lt;br&gt; Hugging Face: https://huggingface.co/miromind-ai&lt;/p&gt; 
&lt;p&gt;MiroMind ODR 既是 MiroMind 的正式亮相，同样也是代季峰面向 AGI 的技术首秀。&lt;/p&gt; 
&lt;p&gt;相关阅读：&lt;a href="https://www.oschina.net/news/364346" target="_blank"&gt;盛大网络挖角代季峰，筹建新 AGI 公司欲对标 DeepSeek&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367148/miromind-open-deep-research</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367148/miromind-open-deep-research</guid>
      <pubDate>Mon, 18 Aug 2025 06:15:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>小红书发布 DynamicFace 人脸生成技术</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;小红书 AIGC 团队近日正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fvi9QQyIciCY3yMZ3RnPVIA" target="_blank"&gt;发布&lt;/a&gt;了名为 DynamicFace 的可控人脸生成技术。针对图像及视频领域的人脸融合任务实现了高质量与高度一致性的置换效果。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;与传统人脸置换方法相比，DynamicFace 独创性地将扩散模型（Diffusion Model）与&lt;strong style="color:#3c3c3c"&gt;&lt;strong style="color:rgba(0, 0, 0, 0.9)"&gt;可组合&lt;/strong&gt;&lt;/strong&gt;&lt;strong style="color:#3c3c3c"&gt;&lt;strong style="color:rgba(0, 0, 0, 0.9)"&gt;的 3D 人脸先验&lt;/strong&gt;&lt;/strong&gt;进行深度融合，针对人脸运动与身份信息进行了精细化解耦以生成更一致的人脸图像和视频。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="250" src="https://oscimg.oschina.net/oscnet/up-0543a7ceec6ff03fe6e9addf187cafed4c6.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;可组合三维面部先验的显式条件解耦&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;针对现有方法在身份与运动表征中普遍存在的耦合冗余问题，Dynamicface 提出将人脸条件显式分解为身份、姿态、表情、光照及背景五个独立的表征，并基于 3DMM 重建模型获取对应参数。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;具体而言，利用源图像提取身份形状参数 α，目标视频逐帧提取姿态 β 与表情 θ，随后渲染生成形状–姿态法线图，减少目标人脸身份泄露，最大程度保留源身份；表情信息仅保留眉毛、眼球及口唇区域的运动先验，避免引入目标身份特征；光照条件由 UV 纹理图经模糊处理得到，仅保留低频光照分量；背景条件采用遮挡感知掩码与随机位移策略，实现训练–推理阶段的目标脸型对齐。四条条件并行输入 Mixture-of-Guiders，每组由 3×3 卷积与零卷积末端构成，在注入网络前经过 FusionNet 融合四条条件的特征后注入到扩散模型中，可在保持 Stable Diffusion 预训练先验的同时实现精准控制。&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;身份–细节双流注入机制&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c3c; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;为实现高保真身份保持，DynamicFace 设计了双流并行注入架构。高层身份流由 Face Former 完成：首先利用 ArcFace 提取 512 维 ID Embedding，再通过可学习 Query Token 与 U-Net 各层 Cross-Attention 交互，确保全局身份一致性；细节纹理流由 ReferenceNet 实现，该网络为 U-Net 的可训练副本，将 512×512 源图潜变量经 Spatial-Attention 注入主网络，实现细粒度的纹理迁移。&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;即插即用时序一致性模块&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c3c; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;针对时序一致性问题，DynamicFace 会在训练中插入时序注意力层来优化帧间稳定性，但时序层在处理长视频生成时会出现帧间跳动的现象。为此，我们提出了 FusionTVO，将视频序列划分为若干段，并为每段设置融合权重，在相邻段的重叠区域实行加权融合；并在潜变量空间引入总变差（Total Variation）约束，抑制帧与帧之间的不必要波动；对于人脸之外的背景区域，在每一步去噪迭代过程中采用目标图像中的背景潜变量空间进行替换，维持了场景的高保真度。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367147</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367147</guid>
      <pubDate>Mon, 18 Aug 2025 06:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>传音控股抢滩全球化 4.0 赛道，赋能新兴市场数字新基建</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:left"&gt;当世界迈入全球化 4.0 时代，数字浪潮以前所未有的速度重塑商业版图。 面对国际巨头构筑的竞争壁垒，中国品牌如何破局？传音控股以一组亮眼数据给出了答案——连续多年稳居非洲手机市场份额榜首，业务覆盖 70 余个国家和地区，成为新兴市场当之无愧的「数字生态定义者」。其成功核心在于深度践行「技术适配」与「文化共生」战略，为中国企业全球化征程提供了极具价值的参考样本。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//1c1fec45f4c460ba36f20bdb13bd3455.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;数字全球化时代&lt;/strong&gt;&lt;strong&gt;，传音&lt;/strong&gt;&lt;strong&gt;以技术适配破解「水土不服」&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;全球化 4.0 时代，即数字全球化的时代。在这一阶段，数字技术、人工智能、大数据、物联网等新兴技术成为推动全球经济发展的核心力量。与此同时，创新不再局限于发达国家，全球范围内的创新网络正在形成。通过跨境合作和技术转移，新兴市场国家也能够快速获取先进技术，实现经济的跨越式发展。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;这对于出海的中国企业来说，既是机遇，亦是挑战。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;深耕非洲等新兴市场的传音，在面对新兴市场复杂的用户需求与基础设施差异之时，没有选择「随大流式」的降维打击，而是构建起独特的、本土式的「反向创新」体系。例如，针对非洲国家局部地区经常停电、早晚温差大、使用者手部汗液多等问题，传音研制了低成本高压快充技术、超长待机、环境温度检测的电流控制技术和防汗液 USB 端口等；针对非洲消费者的娱乐方式，传音还研制了适合非洲音乐的低音设计和喇叭设计，适合非洲人的收音机功能设计，并在音乐、内容聚合等领域开发了契合非洲用户偏好的移动互联网应用。传音通过这些看似细微的技术改良，精准解决用户痛点，在当地市场逐渐站稳了脚跟。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//5755fde030952aaffb32f41c15b20f6a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;而更令人瞩目的当属其在影像技术上的突破。 针对非洲消费者对人像摄影的特殊偏好，传音自主研发基于深度学习的肤色识别算法，精准还原不同光照下的深色皮肤质感，确保夜间自拍也能呈现自然肤色。在此基础上，传音持续加大影像技术研发投入，推出 TECNO Universal Tone 全肤色影像技术，建立全肤色图像色卡及光谱数据库，在全球范围内建立起多肤色人像技术的新标准。这种将前沿科技深度融入本土化需求的能力，使传音手机超越了通讯工具的范畴，成为承载文化表达的数字载体。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;引领&lt;/strong&gt;&lt;strong&gt;新兴市场数字新基建&lt;/strong&gt;&lt;strong&gt;，传音深谙文化共生价值&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;在手机业务持续突破之后，传音的战略视野拓展至数字生态构建。依托庞大用户基数，传音打造了涵盖电子通信、社交应用、内容平台的完整生态链。其旗下的音乐流媒体平台 Boomplay、综合内容分发应用 Phoenix 等已成功席卷非洲年轻群体，成为他们打开视野的坚定选择。不止于用户端，传音移动互联还承载起「数字基础设施」的使命，搭建了全新的商业与技术中台：企业级数据洞察平台 DataSparkle、传音云生态平台 Dlight Cloud、一站式海外营销平台 Eagllwin、媒体变现工具 Hisavana。从开发、测试、推广、变现等环节赋能拓展新兴市场业务的全球开发者。这种生态布局开辟了新增长极。传音的实践证明，中国品牌完全有能力在全球价值链中高端环节掌握话语权，实现从跟随者到规则制定者的转变。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e90d80bedfcd7b37d4a1e7003e638a02.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;不仅如此，传音深谙，真正的品牌渗透必须建立在对当地文化的敬畏与共情之上。比如在影像技术领域，传音陆续与新加坡南洋理工大学亚洲传播研究中心、沙特达尔·爱克马女子学院、土耳其科奇大学达成战略合作，深入研究东南亚、中东等市场消费者的肤色特征和人像审美趋势。这种对文化差异的尊重，使传音的产品成为当地用户的身份认同符号。在 AI 语音领域，传音还构建了一套高效、低成本的语料数据生产体系，解决新兴市场小语种语料稀缺的难题。特别是其智能语音助手 Ella 支持斯瓦希里语、豪萨语等多种本地语言及方言，即使在网络不稳定地区，用户也能通过端侧 AI 实现流畅的语音指令控制和实时翻译，为当地用户带来便利的背后，更有效地弥合了数字鸿沟。可以说，传音的本地化战略超越了技术适配，深入文化认同领域。这也为中国企业国际化提供了两大启示：一是坚持「需求导向」而非「供给驱动」，在技术迭代中注入人文关怀；二是以生态思维替代单品思维，通过价值共创实现可持续发展。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;如今，传音控股持续进化。从 5G 研发到 AIoT 生态布局，从非洲大陆向亚太、拉美市场拓展，这家中国科技企业正以开放包容之姿，携手全球伙伴共建数字文明新生态。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367125</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367125</guid>
      <pubDate>Mon, 18 Aug 2025 05:03:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>理想汽车 MindGPT 3.1 发布：速度跃升近 5 倍</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;理想汽车正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FITMmZOSYW6AHbmuyosix7A" target="_blank"&gt;宣布&lt;/a&gt;其自研的 MindGPT 大模型迎来重大升级，全新版本 MindGPT3.1 惊艳亮相。此次升级将智能体能力深度融入大模型之中，实现了边想边搜的创新功能，即在推理过程中能够同步调用各类工具，从而为用户提供更加迅速、全面且精准的结果反馈。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;官方数据显示，MindGPT3.1 在性能上实现了质的飞跃，每秒出字速度最高可达 200tokens，相较于前代 MindGPT3.0，速度提升近 5 倍，这一突破将极大提升用户与智能助手的交互效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="332" src="https://oscimg.oschina.net/oscnet/up-962a85cad4a4b3153db1d3b7bb925463d03.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;MindGPT3.1 不仅速度惊人，更在智能交互层面展现出卓越实力。它深度融合了推理思维链及工具调用能力，模型能够像资深分析师一样，层层拆解复杂问题，通过「自主思考-自主调用工具-进一步推理」的循环机制，不断优化答案质量，使得复杂任务的完成率得到显著提升。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在核心能力维度上，MindGPT3.1 同样表现出色。在数学、代码、科学问答以及指令遵循等方面，其指标均全面优于 MindGPT3.0，并领先于行业内的开源模型如 Qwen3-235B 等。特别是在代码能力上，MindGPT3.1 实现了进一步增强，能够轻松实现贪吃蛇、弹球控制等经典编程样例，展现了其强大的技术实力。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367111</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367111</guid>
      <pubDate>Mon, 18 Aug 2025 03:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>「阿里淘宝第一个程序员」加入 AI 创业公司，后者创始人曾是阿里研究员</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;据贝联珠贯创始人毕玄（原阿里花名，本名林昊）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkPvjh7g5aog-c5gsE6eu2Q%3Fclick_id%3D222" target="_blank"&gt;公众号消息&lt;/a&gt;，阿里「扫地僧」多隆已于 8 月 6 日加入贝联珠贯，担任联合创始人兼首席架构师，专注 AI Agent 运维平台。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height="1154" src="https://static.oschina.net/uploads/space/2025/0819/112421_dsfV_2720166.png" width="1394" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;毕玄在文章中提到：很神奇，我和多隆都没有想到，在 AI 时代，我们竟然又有了联手做点事情的机会和缘分，这个事情就是基于 AI Agent 来改变运维服务，让每家公司都有 N 个不同领域的「多隆」，从而提升运维服务的质量和效率。&lt;/p&gt; 
&lt;p&gt;蔡景现花名「多隆」，早在 2000 年就加入了阿里巴巴，是淘宝初创团队的三个开发工程师之一，被称为淘宝第一个程序员，曾主导构建了淘宝交易系统和论坛系统。2025 年 8 月 1 日，&lt;a href="https://www.oschina.net/news/365665" target="_blank"&gt;多隆宣布离职&lt;/a&gt;，结束了他整整 25 年的阿里生涯。&lt;/p&gt; 
&lt;p&gt;毕玄，2007 年加入阿里，曾打造了阿里重要的中间件 HSF 服务框架，先后任职淘宝网平台架构部架构师、集团核心系统研发部资深技术专家、阿里中间件负责人。2021 年 8 月，毕玄以阿里云视频云负责人（P10）的身份离职，后创立贝联珠贯，担任 CEO。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8e8ca72fc6447676a480ef3f19af9439cd8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据悉，贝联珠贯科技成立于 2021 年 11 月，致力于为用户提供大数据、AI 基础设施的产品服务，帮助企业快速实现数智化转型。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367109</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367109</guid>
      <pubDate>Mon, 18 Aug 2025 03:25:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>得州总检察长调查 Meta 和 Character.AI</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;得克萨斯州总检察长肯・帕克斯顿已于周一发布新闻稿，宣布对 Meta 人工智能工作室（Meta AI Studio）和 &lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FCharacter.AI" target="_blank"&gt;&lt;span style="color:#000000"&gt;Character.AI&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt; 展开调查，理由是这两家公司 「可能存在欺骗性贸易行为，并将自身误导性地宣传为心理健康工具」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="273" src="https://oscimg.oschina.net/oscnet/up-8a5fb71acb3eb1bc8ee366cb57883920a14.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「在当今数字时代，我们必须持续努力保护得州儿童免受欺骗性和剥削性技术的伤害」， 新闻稿援引帕克斯顿的话称，「人工智能平台通过伪装成情感支持来源，可能会误导易受影响的用户，尤其是儿童，让他们误以为自己正在接受合法的心理健康服务。但实际上，这些平台往往提供的是经过循环利用的通用回应，这些回应是根据收集到的个人数据设计的，却被伪装成治疗建议。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此次调查发生在参议员乔希・霍利宣布对 Meta 展开调查的几天后。此前有报告发现，Meta 的人工智能聊天机器人与儿童存在不当互动，包括调情行为。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;得州总检察长办公室指控 Meta 和 &lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FCharacter.AI" target="_blank"&gt;&lt;span style="color:#000000"&gt;Character.AI&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt; 打造的人工智能角色 「冒充专业治疗工具，尽管它们缺乏正规的医疗资质或监管」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在 &lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FCharacter.AI" target="_blank"&gt;&lt;span style="color:#000000"&gt;Character.AI&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt; 平台上数百万个人工智能角色中，一个名为 「心理学家」（Psychologist）的用户创建机器人在该初创公司的年轻用户中需求旺盛。与此同时，Meta 虽未为儿童提供治疗类机器人，但并未阻止儿童使用 Meta 人工智能聊天机器人或第三方创建的用于治疗目的的角色。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「我们对人工智能进行了明确标注，并且为了帮助人们更好地了解其局限性，我们添加了免责声明，说明回应由人工智能生成而非人类」，Meta 发言人瑞安・丹尼尔斯称，「这些人工智能并非持照专业人士，我们的模型在适当情况下会引导用户寻求合格的医疗或安全专业人员的帮助。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;然而，媒体指出，许多儿童可能不理解此类免责声明，或者干脆无视它们。我们已向 Meta 询问其为保护使用聊天机器人的未成年人采取了哪些额外保障措施。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;帕克斯顿在声明中还指出，尽管人工智能聊天机器人声称会保密，但它们的 「服务条款显示，用户互动会被记录、追踪，并被用于定向广告和算法开发，这引发了关于隐私侵犯、数据滥用和虚假宣传的严重担忧」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据 Meta 的隐私政策，Meta 确实会收集与人工智能聊天机器人的交互提示、反馈以及跨 Meta 服务的其他互动，以 「改进人工智能及相关技术」。该政策未明确提及广告相关内容，但指出信息可能会与搜索引擎等第三方共享，以提供 「更个性化的输出」。考虑到 Meta 基于广告的商业模式，这实际上等同于定向广告。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FCharacter.AI" target="_blank"&gt;&lt;span style="color:#000000"&gt;Character.AI&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt; 的隐私政策也强调，该初创公司会记录用户的标识符、人口统计数据、位置信息以及更多用户相关信息，包括浏览行为和应用使用平台。它会跨 TikTok、YouTube、Reddit、Facebook、Instagram 和 Discord 等平台的广告追踪用户，并可能将这些追踪数据与用户账户关联。这些信息被用于训练人工智能、根据个人偏好定制服务，以及提供定向广告，包括与广告商和分析提供商共享数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Meta 和 Character 均表示，其服务并非为 13 岁以下儿童设计。尽管如此，Meta 因未能监管 13 岁以下儿童创建的账户而备受批评，而 Character 的儿童友好型角色显然旨在吸引更年轻的用户。该初创公司的首席执行官卡兰迪普・阿南德甚至表示，他 6 岁的女儿也在使用该平台的聊天机器人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此类数据收集、定向广告和算法剥削行为，正是《儿童在线安全法》（KOSA）等立法旨在防范的内容。《儿童在线安全法》去年曾在两党强烈支持下有望通过，但在科技行业说客的强烈反对后陷入停滞。Meta 尤其动用了强大的游说力量，警告议员们该法案的广泛授权将削弱其商业模式。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2025 年 5 月，田纳西州共和党参议员玛莎・布莱克本和康涅狄格州民主党参议员理查德・布卢门撒尔向参议院重新提交了《儿童在线安全法》。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;帕克斯顿已向这两家公司发出民事调查令 —— 这是要求企业在政府调查期间提供文件、数据或证词的法律命令，以确定它们是否违反了得州消费者保护法。（来源：环球市场播报）&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367101</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367101</guid>
      <pubDate>Mon, 18 Aug 2025 03:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>阿里通义发布全能图像编辑模型 Qwen-Image-Edit</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;阿里通义 Qwen 团队&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FibgZIskZqjnJl9yKgc_ixA" target="_blank"&gt;发布&lt;/a&gt;了 Qwen-Image 的图像编辑版本：Qwen-Image-Edit。&lt;/p&gt; 
&lt;p&gt;Qwen-Image-Edit 基于 20B 的 Qwen-Image 模型进⼀步训练，成功将 Qwen-Image 的独特的文本渲染能力延展至图像编辑领域，实现了对图片中文字的精准编辑。&lt;/p&gt; 
&lt;p&gt;此外，Qwen-Image-Edit 将输⼊图像同时输⼊到 Qwen2.5-VL（实现视觉语义控制）和 VAE Encoder（实现视觉外观控制），从而兼具语义与外观的双重编辑能⼒。&lt;/p&gt; 
&lt;p&gt;如需体验最新模型，访问 Qwen Chat （chat.qwen.ai）并选择「图像编辑」功能。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0819/105634_udvl_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Qwen-Image-Edit 的主要特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;语义与外观双重编辑:&amp;nbsp;Qwen-Image-Edit 不仅⽀持 low-level 的视觉外观编辑（如元素的添加、删除、修改等，要求图片其他区域完全不变），也支持 high-level 的视觉语义编辑（如 IP 创作、物体旋转、风格迁移等，允许整体像素变化但保持语义一致）。&lt;/li&gt; 
 &lt;li&gt;精准⽂字编辑:&amp;nbsp;Qwen-Image-Edit 支持中英文双语文字编辑，可在保留原有字体、字号、风格的前提下，直接对图片中的文字进行增、删、改等操作。&lt;/li&gt; 
 &lt;li&gt;强⼤的基准性能:&amp;nbsp;在多个公开基准测试中的评估表明，Qwen-Image-Edit 在图像编辑任务上具备 SOTA 性能，是一个强大的图像编辑基础模型。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;使用示例：&lt;/p&gt; 
&lt;p&gt;&lt;img height="720" src="https://static.oschina.net/uploads/space/2025/0819/105757_BFM2_2720166.jpg" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="720" src="https://static.oschina.net/uploads/space/2025/0819/105828_GtUw_2720166.jpg" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0819/105834_YhPa_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;ModelScope：https://modelscope.cn/models/Qwen/Qwen-Image-Edit&lt;br&gt; Hugging Face：https://huggingface.co/Qwen/Qwen-Image-Edit&lt;br&gt; GitHub：https://github.com/QwenLM/Qwen-Image&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367097</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367097</guid>
      <pubDate>Mon, 18 Aug 2025 02:56:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ARM 挖角亚马逊高管，推进自研芯片计划</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;根据路透社的最新报道，ARM 最近成功引进了亚马逊 AI 芯片主管拉米・辛诺（Rami Sinno），此举旨在加速公司自研完整芯片的进程。辛诺在亚马逊曾负责开发名为 「Trainium」 和 「Inferentia」 的 AI 芯片，这些芯片专为支持大型 AI 应用程序而设计。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="331" src="https://oscimg.oschina.net/oscnet/up-02243d99da0363cd55ec78f2f23d25a7871.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;ARM 的目标是从一个单纯提供芯片知识产权的供应商，转型为能够独立设计和生产完整芯片的企业。随着技术的发展，市场对自研芯片的需求日益增加，ARM 希望在这一领域抢占先机。去年 12 月，ARM 在一场审判中披露了其自研芯片的计划，并表示将通过挖角竞争对手的高管来实现这一目标。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;辛诺的加盟被认为是 ARM 实现这一战略的重要一步。除了辛诺，ARM 近期还从其他公司挖来了多位高管，包括具备大规模系统设计经验的慧与科技高管，以及来自英特尔的芯片架构师。这些新任高管的加入将为 ARM 在自研芯片方面带来更强的技术支持和经验积累。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;近年来，ARM 不断加强其在完整芯片和系统设计方面的团队建设，希望借助这些人才的专业背景与技术能力，推动公司的发展。芯片产业竞争愈发激烈，各大公司都在积极寻求突破，ARM 的这一战略调整将对其未来的市场表现产生重要影响。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;ARM 自成立以来一直以其创新的芯片架构而闻名，随着市场需求的变化，该公司意识到需要不断进化以适应新的挑战。通过引入行业精英，ARM 不仅能够提升其技术实力，也能进一步拓展其市场份额，确保在未来的竞争中立于不败之地。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367095</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367095</guid>
      <pubDate>Mon, 18 Aug 2025 02:54:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>阿里通义 Qwen Chat 更新视觉理解功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;阿里通义 Qwen 团队&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FIc0QlqvjyLG1xCR59QOZKA" target="_blank"&gt;宣布&lt;/a&gt;对其&amp;nbsp;Qwen Chat&amp;nbsp;中的视觉理解功能进行更新。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0819/105358_jvXb_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此次更新被称为「小而强大」：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持原生 128K 上下文&lt;/li&gt; 
 &lt;li&gt;显著提升数学推理与物体识别能力&lt;/li&gt; 
 &lt;li&gt;OCR 支持扩展至 30 多种语言&lt;/li&gt; 
 &lt;li&gt;2D/3D 定位更精准&lt;/li&gt; 
 &lt;li&gt;视频理解与定位能力大幅度增强，整体视觉智能更强大&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;该升级或与阿里云百炼平台上近期更新的通义千问 VL-MAX 有关，其 2025 年 8 月 13 日的快照版本显示，视觉理解指标得到全面提升。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367093</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367093</guid>
      <pubDate>Mon, 18 Aug 2025 02:54:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>架构提效的矛盾和矛盾的主要方面</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;在软件开发领域，架构设计是确保系统高效、稳定运行的重要环节或者称之为重要动作。无论架构从简单到复杂，还是从复杂回归简洁的演变过程。在这个过程中，又无论是初创公司还是大型企业，架构提效始终是技术团队的核心追求。本文将从稳定、性能、代码三大维度出发，结合实战经验，探讨如何有效提升架构效能。&lt;/p&gt; 
&lt;p&gt;为什么要选择或者认为这三个维度是必要要素呢？&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「一切事物中包含的矛盾方面的相互依赖和相互斗争，决定一切事物的生命，推动一切事物的发展。没有什么事物是不包含矛盾的，没有矛盾就没有世界。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;当然架构也有自身的矛盾统一，在架构提效上，系统的运行正常和问题频出是一对矛盾，功能的快和慢是一对矛盾，工程的整洁有序和无序是一对矛盾。这三对矛盾正是架构提效的矛盾。&lt;/p&gt; 
&lt;p&gt;如果不稳定，系统三天两头出故障，研发人员成了救火队员，系统的效率将无从谈起，稳定是我们谈架构效率的基础。如果性能不高，在网络基础环境稳定的情况下，访问一个页面 3S 才响应，那我们也不好意思说架构有效率。如果代码乱成一锅粥，比如大段大段面条式的代码，再比如满眼望去 N 多个 if 结构语句，研发人员加一个功能都要查找好久，也是无颜谈效率。&lt;/p&gt; 
&lt;p&gt;因此，我们认为，稳定、性能、代码是架构提效矛盾中的主要方面。接下来我们将从这三个主要方面去介绍。&lt;/p&gt; 
&lt;p&gt;软件工程发展了这么多年，高可用、高扩展、高并发已经有大量的文章篇幅，从宏观的角度去讲如何做微服务、如何分库分表，如何使用缓存等等。因此呢，本篇文章想聚焦到架构矛盾的微观层面，也就是偏工程结构、偏代码方面去阐述这三个要素。另外本篇文章的思想也参考了前辈们的研究成果，我也附在了文末。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;稳定：架构的基石与守护神&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;「万事万物都是运动的，发展的」。业务功能变多，用户数量变多，团队规模变大。如果没有规则和规范的引导和约束，系统逐渐野蛮生长，逐渐碎片化。那么，我们的系统何谈稳定呢。&lt;/p&gt; 
&lt;p&gt;我们就希望能找到这样的一种规则、规范 -- 正交分解或者叫做正交设计。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="image.png" src="https://oscimg.oschina.net/oscnet//bb82ceb06e46d5d6d4365e615d3f3785.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;架构设计的过程就是一个业务正交分解的过程。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;架构设计并不仅仅是技术层面的规划，更重要的是对业务逻辑的深入理解和把握。通过正交分解，我们可以将复杂的业务系统拆解成若干个相互独立但又彼此关联的模块或组件。这些模块或组件在保持功能完整性的同时，还能实现高度的内聚和松散的耦合，从而提高系统的可扩展性、可维护性和可重用性。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;正交分解的关键在于消除重复、分离关注点和管理依赖。通过这一方法，我们可以将业务系统中的公共部分和可变部分进行明确的划分，从而实现对业务逻辑的精准掌控。在架构设计过程中，我们需要不断地对业务进行抽象和分解，直至得到一系列规模可控、结构清晰的小模块。这些小模块通过组合和协作，能够形成更加复杂且功能完善的软件系统。&lt;/p&gt; 
&lt;p&gt;因此，正交分解的思想是我们架构设计保障稳定的重要方法基础。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;性能：速度与效率的双重考验&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;想快，就使用「战术设计」。曾经这是很多程序员的法宝，因为他们认为这样开发「确实快」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="image.png" src="https://oscimg.oschina.net/oscnet//0e3d7156e3234d0517c9adb69369faf3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;大多数程序员以称为战术编程的心态来进行软件开发。在战术方法中，主要重点是使某些功能正常工作，例如新功能或错误修复。乍一看，这似乎是完全合理的：还有什么比编写有效的代码更重要的呢？但是，战术编程几乎不可能产生出良好的系统设计。&lt;/p&gt; 
&lt;p&gt;想快的「战术设计」会造成常见的下面这样的情况。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;「团队新人不熟悉系统，为了急于上线一个特性，又不想影响到系统的其他部分，就会很自然地在某个地方加一个 flag，然后在所有需要改动的地方加 if 判断，而不是去调整系统设计以适应新的问题空间。」&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在一个充满活力的软件开发团队中，新成员小张刚刚加入不久。他对于团队正在使用的复杂系统还不是很熟悉，但面对紧迫的项目进度和上级施加的压力，他急于证明自己，并希望能尽快为团队做出贡献。团队正计划上线一个新的特性，这个特性需要在不干扰系统其他部分的前提下实现。&lt;/p&gt; 
&lt;p&gt;小张在浏览了系统的代码库后，发现要全面理解并调整整个系统设计以适应新的特性，需要花费大量的时间和精力。他深知自己作为新人，在这方面还有所欠缺，因此，他决定采取一个他认为更为「高效」的方法：在某个关键位置添加一个临时的标志位（flag），然后在所有需要改动的地方都加上 if 判断，以确保新特性能够按时上线，同时尽量减少对现有系统的影响。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="image.png" src="https://oscimg.oschina.net/oscnet//2b037e23421b103a664be64e68b760ae.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;虽然这种方法在短时间内确实让新特性得以顺利上线，但团队中的资深成员很快便发现了潜在的问题。这种做法虽然看似快速解决了问题，但实际上却在系统中埋下了隐患。它不仅增加了代码的复杂性，降低了代码的可读性和可维护性，还可能在未来引发更多的 bug 和性能问题。更重要的是，这种做法违背了软件开发中的最佳实践，&lt;strong&gt;即应通过优化系统设计来适应新的问题空间，而不是通过添加临时性的补丁来解决问题。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;「几乎每个软件开发组织都有至少一个将战术编程发挥到极致的开发人员：战术龙卷风」，而且常常被视为团队」英雄「，因为能「快速完成任务且高产」。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;「战术龙卷风」通常以战术编程为主要手段，即采用最快速、最直接的方法来解决当前的问题，而不考虑长远的影响和代码的可持续性。这种方法在初次使用时往往能够取得显著的效果，任务完成得既快又好，赢得了团队成员的赞誉和领导的认可。&lt;/p&gt; 
&lt;p&gt;然而，随着时间的推移，「战术龙卷风」所留下的隐患逐渐暴露出来。由于缺乏对系统设计的深入理解和长远规划，他的代码往往难以维护和扩展。当需要添加新功能或修复 bug 时，团队成员往往需要花费更多的时间和精力来理解和修改他的代码。因此，第二次和第三次修改时，效率会大幅下降，甚至可能引发新的问题。&lt;/p&gt; 
&lt;p&gt;实际造成结果：第一次快、第二次慢、第三次更慢。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;代码：简洁与优雅的双重追求&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我们做业务开发，代码的优雅简洁，不能局限在一段方法，还是要从整个工程结构然后在到类、到方法，这样从宏观到中观再到微观的整体去要求。我们的应用工程结构，常见大致分为四层。分别是 api 层、biz 层、domain 层和 dao 层。&lt;/p&gt; 
&lt;p&gt;这个时候我们就要很清晰地熟悉每一层的职责，然后将我们的代码放入进去。首先，api 层的作用，正如它的名字一样，是提供 api 服务的。向谁提供 api 呢，比如客户端，比如 APP 端、pc 端等等，公司外面的客户，比如 isv 等。其次，biz 层的作用，这一层也叫业务服务层。它主要负责编排。把一个业务场景下的主流程逻辑处理完成。这个主流程会涉及到多个原子接口，就在这层负责组装。再次，domain 层的作用，也叫做领域服务层。按照 OO 思想，领域编程的思维，我们的」厚对象「的代码都在这层。比如订单域、运费域等。这里对「这一层的位置」多说几句，在没有形成领域之前，这层一般叫 service 层，不过我们都是建议领域思维编写代码。最后是 dao 层，也就是我们的存储层了，负责持久化。&lt;/p&gt; 
&lt;p&gt;在清晰了每一层的作用之后，如果我们的代码职责也是按照这样逐层放入的，那么大体是符合我们的整洁要求的。但是呢，随着时间的推移，需求的增多和变化。原来整洁的工程结构和代码已经不那么优雅了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;这个时候，一般会出现两类现象，一类是业务层（biz）变的臃肿，能力层（domain）变的单薄。另一类是出现了网状调用。而且这两类现象也很有可能是混合在一起出现。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="image.png" src="https://oscimg.oschina.net/oscnet//5457bd8fcb8270c8dacce659508d85ba.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;这两类现象会直接带来下面 4 种结果。&lt;/p&gt; 
&lt;p&gt;1、biz 层越来越」胖「。胖了之后，还长成了两小层。上小层是面向单一业务场景的「业务 biz 层」，下小层成了通用场景可复用的「通用 biz 层」。&lt;/p&gt; 
&lt;p&gt;2、service 层越来越」瘦「。当 service 层变薄了以后，也就只能沦为 service 了，而这样的 service 层跟 dao 层实际没什么区别，更不能再称之为 domain 层或者没有机会演变成 domain 层。&lt;/p&gt; 
&lt;p&gt;3、但是也不是所有的 service 层都变瘦、变薄了。可能有的萎缩，有的膨胀。人员与设计的差异，导致颗粒度不一。&lt;/p&gt; 
&lt;p&gt;4、出现了网状调用。原本 biz-1 -&amp;gt; service-1 的实现链路下，随着新增业务逻辑，又新起了一个 service-2，链路演变成了 biz-1 -&amp;gt; service-1-&amp;gt; service-2。「这样的趋势持续发展下去，会发现 biz-1 下的 service 调用链路越发的复杂，呈现为一颗深度调用树，而 biz 层失去了业务编排的作用退化为一个业务场景入口的标志符」。有可能后面继续 3-4-5-6，越挖越深，不见尽头。&lt;/p&gt; 
&lt;p&gt;很显然，到这里，这样的结构现状，代码现状，已经远离了我们简洁和优雅的初衷。也谈不上提效了。&lt;/p&gt; 
&lt;p&gt;到此，我们介绍了架构提效中的稳定、性能和代码这三个主要的方面，限于篇幅和架构本身的实践性，还需要我们在架构提效上进行持续的优化。需要我们在稳定、性能、代码三大维度上不断探索和实践。通过高可用架构设计、性能优化策略、模块化与解耦、代码质量与规范等措施，我们可以构建一个既稳定又高效，且易于维护和扩展的系统。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「在复杂的事物发展过程中，有许多的矛盾存在，其中必有一种是主要的矛盾，由于它的存在和发展规定和影响着其他矛盾的存在和发展。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;架构的发展本身也是对抗熵增这一矛盾的过程，我们上面描述的稳定、性能和代码中的矛盾方面有是围绕和关联这一主要矛盾的。在这个过程中不仅有系统的有序变无序，也有组织的简单变复杂。我们既要关注技术层面的提升，更要注重团队协作、知识共享和持续改进的文化建设。只有这样，我们才能在快速变化的市场环境中，保持竞争力，不断前行。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4090830/blog/18688507</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18688507</guid>
      <pubDate>Mon, 18 Aug 2025 02:48:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>英伟达发布全新小型模型 Nemotron-Nano-9B-V2</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;英伟达发布了其&lt;span&gt;最新&lt;/span&gt;的小型语言模型（SLM）——Nemotron-Nano-9B-V2。该模型在多个基准测试中表现出色，并在特定测试中达到了同类产品的&lt;span&gt;最高&lt;/span&gt;水平。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;Nemotron-Nano-9B-V2 的参数量为 90 亿，虽然比一些数百万参数的微型模型要大，但它比之前的 120 亿参数版本显著减小，并专门针对单个英伟达 A10GPU 进行了优化。英伟达 AI 模型后训练总监 Oleksii Kuchiaev 解释说，这种调整是为了适配 A10 这款热门的部署 GPU。此外，Nemotron-Nano-9B-V2 是一款混合模型，能处理更大的批次，速度比同等规模的 Transformer 模型快 6 倍。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;该模型支持多达九种语言，包括中、英、德、法、日、韩等，并擅长处理指令跟踪和代码生成任务。其预训练数据集和模型本身都已在 Hugging Face 和英伟达的模型目录中提供。&lt;/p&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;融合 Transformer 与 Mamba 架构&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;Nemotron-Nano-9B-V2 基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;Nemotron-H&lt;span&gt;&amp;nbsp;&lt;/span&gt;系列，该系列融合了&lt;span&gt;&amp;nbsp;&lt;/span&gt;Mamba&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;Transformer&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构。传统的 Transformer 模型虽然强大，但在处理长序列时会消耗大量内存和计算资源。而 Mamba 架构则引入了选择性状态空间模型（SSM），能够以线性复杂度处理长信息序列，从而在内存和计算开销上更具优势。Nemotron-H 系列通过用线性状态空间层替换大部分注意力层，在长上下文处理上实现了 2-3 倍的吞吐量提升，同时保持了高精度。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="218" src="https://oscimg.oschina.net/oscnet/up-ebd73f87284c797290002428bbcbbb7371d.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;独特的推理控制功能&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;这款模型的一大创新是其内置的「推理」功能，允许用户在模型输出最终答案前进行自我检查。用户可以通过简单的控制符（如&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/think&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/no_think&lt;/code&gt;）来开启或关闭此功能。模型还支持运行时「思考预算」管理，开发者可以限制用于内部推理的令牌数量，从而在准确性和延迟之间取得平衡。这对于客户支持或自主代理等对响应速度有要求的应用场景尤为关键。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="281" src="https://oscimg.oschina.net/oscnet/up-5de1df85730cbf8d4cb29cda3ca17f92329.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;英伟达根据其开放模型许可协议发布了 Nemotron-Nano-9B-V2，该协议对企业友好且高度宽松。英伟达明确表示，企业可以自由地将该模型用于商业用途，并且无需为使用该模型支付费用或版税。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;尽管如此，协议仍有一些核心要求，例如用户必须遵守内置的安全机制、在重新分发模型时进行归属标注，并遵守相关法律法规。英伟达表示，该协议旨在确保负责任和合乎道德的使用，而不是通过限制商业规模来盈利。这使得 Nemotron-Nano-9B-V2 成为了那些希望在降低成本和延迟的同时，保持高精度的企业开发者的理想选择。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367083</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367083</guid>
      <pubDate>Mon, 18 Aug 2025 02:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Qwen Chat 正式发布 Windows 版桌面端应用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;阿里通义 Qwen 团队发布了适用于 Windows 系统的 Qwen Chat 桌面版应用。&lt;/p&gt; 
&lt;p&gt;下载地址：&lt;em&gt;https://qwen.ai/download&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="734" src="https://static.oschina.net/uploads/space/2025/0818/192124_WWIt_2720166.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1038" src="https://static.oschina.net/uploads/space/2025/0818/192158_OMZi_2720166.png" width="1909" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Windows 版 Qwen Chat 桌面端集成了 Qwen Chat 的全部功能，并新增了对 MCP（Model Context Protocol）的支持，用户可以通过运行 MCP Servers 来提升工作效率。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367001</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367001</guid>
      <pubDate>Sun, 17 Aug 2025 11:26:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>openKylin 2.0 SP2 揭秘 - SDK V3.0 来袭，开发体验大升级！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0"&gt;OpenAtom openKylin（简称「openKylin」） SDK 是在 openKylin 开源操作系统上，为生态建设与软件开发提供安全、可靠、快捷、稳定的开发者接口。相比于社区中其他的开发者套件或框架，openKylin SDK 更聚焦于解决 openKylin 操作系统的兼容、适配、移植、优化等方面的问题。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;openKylin 2.0 SP2 将搭载全新 openKylin SDK&amp;nbsp; V3.0 开发套件上线。此次 V3.0 版本对&lt;strong&gt;应用层、桌面层、系统层、基础层&lt;/strong&gt;四大核心架构进行了更新升级，通过标准化接口设计、丰富的功能组件和完善的管控，为开发者提供更加统一的开发体验。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//2994ae1a35d2b884affe6225d5e24e2e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;span&gt;应用层升级：界面开发专业化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;1. 更统一的设计体验&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;全面支持 Design Token 规范，让开发者告别界面风格不统一的困扰。无论是按钮、输入框还是弹窗，都能保持一致的视觉风格，让应用看起来更专业。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;2. 更丰富的控件选择&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;精选了控制面板中最实用的 11 个控件直接集成，包括各种按钮、输入框、滑块、开关等常用组件。这些控件都经过了系统级应用的长期验证，拿来就能用，省去了重复造轮子的时间。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;3. 更灵活的标签展示&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;klabel 控件现在支持三态显示、轻量级样式、固定布局等多种模式，让文本展示更加灵活。无论是状态提示、信息展示还是标题显示，都能找到合适的样式。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;span&gt;桌面层升级：系统级交互能力&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;1. 更智能的快捷键管理：&lt;/strong&gt;&lt;br&gt; 提供完整的全局快捷键控制功能，包括快捷键冲突检测、全局快捷键注册和监听等。这一特性对于提升用户操作效率具有重要意义，特别是对于需要频繁操作的专业软件。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;2. 更完善的主题控制：&lt;/strong&gt;&lt;br&gt; 新增系统主题管理接口，开发者可以轻松获取系统主题列表、设置主题、获取系统强调色，并实现主题深浅模式的智能切换。让应用能够完美融入系统环境，为用户提供个性化的使用体验。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;3. 更便捷的应用管理：&lt;/strong&gt;&lt;br&gt; 提供全面的应用行为控制接口，包括获取开机自启动应用列表、查询指定文件类型的默认打开应用、设置应用的开机自启动状态等功能，让开发者能够精确控制应用的启动行为。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;span&gt;系统层升级：核心功能模块化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;1. 更完善的数据处理：&lt;/strong&gt;&lt;br&gt; 集成高效的数据压缩解压模块，全面支持 zip、gzip、xz、lz4 等主流压缩算法，为应用数据存储和网络传输提供性能优秀，低存储成本和传输延时的解决方案。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;2. 更丰富的设备管理：&lt;/strong&gt;&lt;br&gt; 全新设备管理模块实现硬件设备信息的获取与统一管理，适用于系统工具类应用开发。即插即用设备监控功能能够实时响应硬件插拔事件，配合强大的磁盘管理模块，为系统级应用提供丰富的硬件控制能力。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;3. 更可靠的系统控制：&lt;/strong&gt;&lt;br&gt; 提供可靠的系统电源管理方案，支持安全关机、重启控制，集成任务监控和定时执行功能，确保开发者能够在各种场景下安全执行系统级操作，保障系统稳定性。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;4. 更标准的网络处理：&lt;/strong&gt;&lt;br&gt; 构建统一的 URI 处理标准接口，涵盖 URI 格式验证、智能解析、参数提取、资源下载等核心功能，让网络操作开发更加规范化和高效化，大幅提升开发效率。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;5. 更简单的多媒体支持：&lt;/strong&gt;&lt;br&gt; 完善的音频模块接口设计，支持默认输入输出设备管理、声卡设备枚举等功能，让多媒体应用开发更加便捷，开发者可以专注于业务逻辑实现而非底层音频处理。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;6. 更精准的性能监控：&lt;/strong&gt;&lt;br&gt; 集成实时性能监控模块，提供系统关键指标的持续监测能力，为应用性能优化提供精确数据支撑，帮助开发者构建高性能、高可用的应用系统。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;7. 更完善的国际支持：&lt;/strong&gt;&lt;br&gt; 提供完整的多语言环境支持，包括系统语言列表获取、语言区域匹配验证等功能，确保应用在全球化部署中的本土化适配能力，为应用的国际化提供坚实技术基础。&lt;br&gt; &lt;strong&gt;8. 更熟悉的开发体验：&lt;/strong&gt;&lt;br&gt; 借鉴 Win32 API 成熟的设计理念，为 Linux 平台开发者打造熟悉的开发环境，有效降低跨平台开发门槛。具备 Windows 开发经验的开发者能够快速迁移，显著缩短学习成本。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;span&gt;基础层升级：底层能力标准化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;1. 更全面的系统属性完善的系统属性模块提供统一的 API 接口，实现系统配置信息的便捷获取与设置，让应用能够智能适配不同系统环境，为跨平台兼容性和系统集成提供强有力的技术支撑。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;如何轻松上手使用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;在 openKylin 系统上安装&lt;br&gt; 只需一条命令：&lt;br&gt; $ sudo apt-get install libkysdk-base-dev libkysdk-system-dev libkysdk-desktop-dev libkysdk-applications-dev&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;在其他 Linux 系统上安装&lt;br&gt; 添加软件源：&lt;br&gt; deb http://archive.build.openkylin.top/openkylin/ nile main cross pty&lt;br&gt; 更新并安装：&lt;br&gt; $ sudo apt update&lt;br&gt; $ sudo apt-get install libkysdk-base-dev libkysdk-system-dev libkysdk-desktop-dev libkysdk-applications-dev&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;学习资源&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;详细教程点击查看&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.openkylin.top%2Fzh%2F04_%25E7%25A4%25BE%25E5%258C%25BA%25E8%25B4%25A1%25E7%258C%25AE%2F%25E5%25BC%2580%25E5%258F%2591%25E6%258C%2587%25E5%258D%2597%2FopenKylin%2BSDK%25E5%25BC%2580%25E5%258F%2591%25E6%258C%2587%25E5%258D%2597" target="_blank"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;openKylin SDK 开发指南&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367000</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367000</guid>
      <pubDate>Sun, 17 Aug 2025 11:16:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Cursor 命令行工具 Cursor CLI 集成 MCP 支持</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Cursor 命令行工具 Cursor CLI 近日发布更新，带来了多项实用功能，进一步提升了终端开发的体验和效率&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;@符号引用&lt;/strong&gt;：现在你可以直接在提示词中使用 @ 符号来引用文件和目录，AI 可以精准地定位上下文，这对于大型项目和复杂的文件操作尤其有用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;审查模式 (Review Mode)&lt;/strong&gt;:通过 Ctrl+R 快捷键，可以进入一个可视化的审查界面，清晰地查看 AI 对代码的修改。这让代码审查变得前所未有的直观和高效。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;/compress 命令&lt;/strong&gt;：这个新命令可以一键释放上下文窗口的空间，优化长对话中的性能和相关性，确保 AI 始终能聚焦在最重要的信息上。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCPs 支持&lt;/strong&gt;：现在 CLI 也支持 MCPs，这意味着你可以利用更丰富的扩展能力来完成复杂任务。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="982" src="https://static.oschina.net/uploads/space/2025/0818/190643_waza_2720166.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;本次更新还对用户体验和性能做了一些改进，例如现在显示 Token 计数，支持 AGENTS.md 和 CLAUDE.md（为了兼容 Claude Code）文件。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-de60b8ab05a32ba9549f7fa100f6895787d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;em&gt;https://cursor.com/cn/cli&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366998</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366998</guid>
      <pubDate>Sun, 17 Aug 2025 11:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI 编程独角兽 Cognition 获近 5 亿美元新融资，估值达 98 亿美元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wsj.com%2Farticles%2Fcognition-cinches-about-500-million-to-advance-ai-code-generation-business-f65f71a9" target="_blank"&gt;据报道&lt;/a&gt;，AI 编程独角兽 Cognition 在新一轮融资中获得了近 5 亿美元，使其估值达到 98 亿美元。&lt;/p&gt; 
&lt;p&gt;Cognition 成立于 2023 年，由三位国际信息学奥林匹克（IOI）金牌得主 Scott Wu、Steven Hao 和 Walden Yan 联合创立。&lt;/p&gt; 
&lt;p&gt;Cognition 的核心产品是被称为首个能自主编程的&lt;a href="https://www.oschina.net/news/282895/cognition-labs-devin" target="_blank"&gt;「AI 程序员」Devin&lt;/a&gt;。今年 7 月，&lt;a href="https://www.oschina.net/news/360382/cognition-devin-acquires-windsurf" target="_blank"&gt;Cognition 收购了 Windsurf&lt;/a&gt;。在本次最新融资之前，Cognition 已筹集了 3 亿美元，投资者包括 8VC、Avenir Growth Capital 等。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-63fe0533116cdf85964e331427c9d8b851b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;被收购的 Windsurf 截至今年 7 月的年收入已达到 8200 万美元，拥有超过 350 家企业客户和数十万日活跃用户。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366994</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366994</guid>
      <pubDate>Sun, 17 Aug 2025 11:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>快手高级副总裁盖坤兼任可灵 AI 技术部负责人</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;快手宣布高级副总裁盖坤兼任可灵 AI 技术部负责人，继续向 CEO 程一笑汇报，进一步强化可灵 AI 在快手战略中的地位。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0818/183846_pqqc_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据了解，盖坤自 2020 年加入快手后，主导推荐算法、视频生成大模型等技术研发，并推动可灵 AI 成为全球首个对标 Sora 的开放视频生成模型。此次兼任技术负责人，体现快手对可灵 AI 「技术驱动」 战略的重视。&lt;/p&gt; 
&lt;p&gt;公开信息显示，盖坤本科与博士均毕业于清华大学，研究方向为识别与智能系统。2020 年，盖坤正式加入快手，主导内容理解应用、推荐大模型及视频生成大模型的技术布局，推动算法、应用与商业模式的协同创新。2024 年 6 月，盖坤带领团队研发推出全球首个用户可用的 DiT 视频生成模型 —— 可灵 AI 。&lt;/p&gt; 
&lt;p&gt;内部人士分析，盖坤深耕算法技术多年，作为可灵 AI 团队的灵魂人物，此次兼任可灵 AI 技术负责人，显现出可灵 AI 在快手大模型整体战略中的重要地位，也意味着 「技术驱动」 战略，将在很长一段时间内主导着可灵 AI 的发展。&lt;/p&gt; 
&lt;p&gt;自上线以来，可灵 AI 已迭代升级 30 余次，在全球拥有超过 4500 万用户，累计生成超 2 亿个视频和 4 亿张图片，服务超过 2 万家企业客户。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366988</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366988</guid>
      <pubDate>Sun, 17 Aug 2025 10:36:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI 技术被滥用成「退款神器」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;据央视新闻报道，近期，电商平台出现一种新型恶意退款行为:部分买家利用人工智能工具伪造商品损坏图片，申请「仅退款」，导致商家遭受货款和运费的双重损失。这一现象引起广泛关注，揭示了 AI 技术被滥用所带来的新挑战。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;商家们在社交平台吐槽，买家利用 AI 将完好无损的商品，如衣物、杯子或玩具，通过「伪毁损」处理，使其在图片上呈现出碎裂或有瑕疵的状态。这些伪造的图片逼真，让商家难辨真伪。更令人沮丧的是，即使商家察觉到是假图，部分电商平台的自动审核机制仍可能通过退款申请，使得商家在没有收回商品的情况下，被迫退还货款。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="300" src="https://oscimg.oschina.net/oscnet/up-6f9ecd233181d9dac72df712c5ff273ef4b.png" width="186" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;针对这种行为，法律专家指出，利用 AI 伪造图片骗取退款的行为已涉嫌违法。这不仅违背了《民法典》中的诚实信用原则，构成民事欺诈，还可能触犯《治安管理处罚法》。如果骗取金额达到或超过 3000 元，甚至可能构成《刑法》规定的诈骗罪。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;面对这一挑战，专业人士呼吁监管部门、电商平台和商家采取多方面措施共同应对。&lt;span&gt;监管部门应完善法律法规，在《电子商务法》中增设保护商家权益的条款，并明确恶意退款行为的法律后果。同时，强制推行 AI 生成内容标识，并对删除或篡改标识的行为进行处罚。此外，建议建立跨平台的用户消费信用机制，将恶意行为纳入个人征信，从根本上限制其线上活动。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;电商平台需要强化审核机制，减少对 AI 客服的依赖，增加人工审核投入，并延长审查时间，给商家提供充足的举证机会。技术方面，平台应加大投入，利用技术手段验证图片与实物的匹配性，从源头拦截伪造内容。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;商家也需积极自保，优化售后流程，要求买家提供清晰、完整的退款证据，并通过对打包发货全过程录像等方式，留存商品质量证据。若发现恶意行为，应及时向平台反映，情节严重时可直接向公安机关报案，维护自身合法权益。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;AI 技术的初衷是提质增效，但当它被用于不法目的时，对商业生态的破坏力不容小觑。只有多方联动，才能有效遏制这种新型网络欺诈，重建消费者与商家之间的信任。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366985</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366985</guid>
      <pubDate>Sun, 17 Aug 2025 10:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
