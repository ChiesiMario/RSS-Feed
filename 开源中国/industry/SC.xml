<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 26 Apr 2024 10:51:34 GMT</lastBuildDate>
        <ttl>1</ttl>
        <item>
            <title>开源日报 | DOS 4.0 开源；PHP 获 20 万欧元投资；跨平台游戏开发入门；Ubuntu 24.04</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.4.26&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/289586/ubuntu-24-04-noble-numbat-lts&quot; target=&quot;news&quot;&gt;Ubuntu 24.04 LTS 正式发布&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Canonical 首席执行官 Mark Shuttleworth 称 Ubuntu 24.04 LTS 会提供至少 12 年的支持，并在性能工程和机密计算方面提升明显，还集成了通过 TCK 认证的 LTS 版本 Java、.NET 和最新的 Rust 工具链。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-29ba3bda6308cfc261bd09fce68e2814fe1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Ubuntu 24.04 LTS 包含多项新功能，包括改进的 Ubuntu 桌面安装程序、新的 ZFS 和 TPM 支持等。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;新版本使用 Linux 6.8 内核，可利用 Netplan 在桌面上配置网络连接，还配备了现代化的桌面操作系统安装程序，还带来了新版 Ubuntu 字体以及各种性能优化以及大量新功能。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;此外，Ubuntu 24.04 LTS 还配备了名为 Firmware Updater 的全新图形化固件更新工具、原生支持 Raspberry Pi 5、用于最先进网络管理的 Netplan 1.0 以及默认 Snap 功能 Mozilla Thunderbird。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/289596/open-sourcing-ms-dos-4-0&quot; target=&quot;news&quot;&gt;微软开源 MS-DOS 4.0 版系统源代码&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;微软宣布与 IBM 合作，在 MIT 许可下&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudblogs.microsoft.com%2Fopensource%2F2024%2F04%2F25%2Fopen-sourcing-ms-dos-4-0%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;MS-DOS 4.00 的源代码。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;一位名叫 Connor 「Starfrost」 Hyde 的年轻英国研究员最近与微软前首席技术官 Ray Ozzie 就他收藏的一些软件进行了通信。在这些软盘中，Ray 发现了他在 Lotus 时发送的未公布版 DOS 4.0 测试版二进制文件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;因此 Starfrost 联系了微软开源项目办公室（OSPO），探索发布 DOS 4 源代码的可能性。微软开发者社区副总裁 Scott Hanselman 在互联网档案管理员兼爱好者 Jeff Sponaugle 的帮助下，对这些原始磁盘进行了成像，并仔细扫描了 「Ozzie Drop」 中的原始印刷文档。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;「微软和 IBM 的朋友们都认为这是一段值得分享的操作系统历史。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-10ee548b5edaa2c4531037cc909fc054294.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/289646/nodejs-v22-released&quot; target=&quot;news&quot;&gt;Node.js v22 正式发布&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Node.js 22 现已正式发布，亮点包括 require () ing ES 模块、WebSocket 客户端、V8 JavaScript 引擎的更新等等。Node.js 22 将于 10 月份进入长期支持 (LTS)，但在此之前，它将在接下来的六个月内作为 「Current」 版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1762d0573f12a4ee86b24d36d9bc4a3ce60.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fi.ifeng.com%2Fc%2F8Z5jwLawM1r&quot; target=&quot;_blank&quot;&gt;Open-Sora 全面开源升级：支持 16s 视频生成和 720p 分辨率&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;国产视频生成模型 Open-Sora 在开源社区悄悄更新了。现在单镜头支持长达 16 秒的视频生成，分辨率最高可达 720p，并且可以处理任何宽高比的文本到图像、文本到视频、图像到视频、视频到视频和无限长视频的生成需求。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ff4b33592dd9cd4bfdde6e427221db32a99.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Open-Sora 依旧全部开源，包含最新的模型架构、最新的模型权重、多时间/分辨率/长宽比/帧率的训练流程、数据收集和预处理的完整流程、所有的训练细节、demo 示例，和 详尽的上手教程。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6974787068%2FObspXvClS&quot; target=&quot;_blank&quot;&gt;Run:ai 在大模型和生成式 AI 爆发前就取了个好名字&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;英伟达用 7 亿美元买下以色列初创公司 Run:ai。他们的产品也叫 Run:ai，做 Kubernetes GPU 集群的 AI 应用和资源调度和管理。公司成立于 2018 年，目前好像不到 200 人。在大模型和生成式 AI 爆发前就取了个好名字 Run:ai。不过，公司和产品的名字中间有冒号，我好像还是第一次见。&lt;/p&gt; 
   &lt;p&gt;IBM 花 64 亿美元收购了云计算基础设施软件公司 HashiCorp。这个公司由两个小年青在 2012 年创建，主打产品是 Terraform，IPO 前一直是云计算初创公司中的明星。在拒绝了无数次收购诱惑后，2021 年成功上市，当时市值超过 140 亿美元，但 3 年多后的今天跌得一半都不到了。&lt;/p&gt; 
   &lt;p&gt;最近 HashiCorp 更是麻烦不断，因为改变 Terraform 的软件许可证来限制云厂商的使用，开源社区拿出一个分支重启炉灶，搞了一个新项目」开源豆腐」（OpenTofu）。两边吵来吵去，都闹上法庭了，不知道 IBM 买下来后会怎么处理。不过从产品角度，他们的软件和 OpenShift 还是很般配的。收购价格嘛，就不好说了。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;硅谷陈源博士&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FObufybGsO&quot; target=&quot;_blank&quot;&gt;GitHub 上最大的开源算法库 The Algorithms&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;该库收录了 Python、Java、C++、JavaScript、Go 等多种主流编程语言的算法实现代码。其中包含二分查找、快速排序、斐波那契数列等众多热门算法，可以说是应用尽有。&lt;/p&gt; 
   &lt;p&gt;此外，通过其网站，你可以轻松地使用搜索功能、浏览热门分类或选择编程语言来学习各种算法代码。&lt;/p&gt; 
   &lt;p&gt;GitHub：github.com/TheAlgorithms&lt;/p&gt; 
   &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0c0cfab4fc75bfe7e5cb587068c1f459dc0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;GitHubDaily&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1233486457%2FObf4Gyfr2&quot; target=&quot;_blank&quot;&gt;Llama3 拯救了一个创业公司&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;刚在 X 上看到的一个故事。一个创业公司是做 AI 心理咨询的，也就是用 AI 模型来模拟心理治疗师的安抚工作。之前基本没有什么付费客户，但在从 Mixtral 开源模型改到 Llama3 的 70B 模型之后，创业者发了一些帖子，付费客户开始起飞了。不过有人认为是他的贴子起到了宣传作，但是他自己认为 Llama3 的质量比 Mixral 好的原因。不管到底是什么因素在起作用，但是大模型这一波确实创造了完全新的创业场景。&lt;/p&gt; 
   &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0d3c8d38d44b1321c398309516064906baf.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;高飞&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGNjyDSjKAwCP9zE-KcAcdg&quot; target=&quot;_blank&quot;&gt;生成式 AI 抢滩生死战：全球云计算巨头怎么打&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;云计算领域将迎来新一轮的洗牌，各大巨头纷纷加速部署 AI 大模型。微软继续加强与 OpenAI 的合作，将 AI 技术更深入地整合进 Azure 的各个技术栈；谷歌则投入重金研发自家的大模型，并于近期对组织架构进行了全面调整。&lt;/p&gt; 
 &lt;p&gt;从底层的大模型训练和推理基础设施，到中间层的 AI 应用开发工具，再到上层的开箱即用 AI 应用，亚马逊云科技已经构建起一套完整的 AI 生态系统。作为三巨头中唯一一个不过分依赖自研或单一大模型的云计算厂商，亚马逊云科技的 AI 生态投资布局具有极高的借鉴意义。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;极客公园&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240426A03DB900&quot; target=&quot;_blank&quot;&gt;ChatGPT 之父最新演讲：GPT-5 聪明程度超乎想象，一大批 AI 初创公司的努力将变得毫无意义&lt;/a&gt;&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Sam Altman 坚定地认为，根据科学预测，GPT-5 将比 GPT-4 智能得多，而 GPT-6 的智能又会远超 GPT-5。目前 OpenAI 还没有达到这个智能发展曲线的顶点。&lt;/li&gt; 
  &lt;li&gt;「抄袭」很容易， 在 GPT-4 诞生的基础上，Google 很容易「复制」出 Gemini，但真正的创新在于界定 AI 能力的下一个范式转变。&lt;/li&gt; 
  &lt;li&gt;Sam Altman 将 AI 的潜力与 iPhone 对移动计算的变革性影响相提并论。&lt;/li&gt; 
  &lt;li&gt;OpenAI 的使命是实现 AGI，开源可能不是实现这一目标的最好途径，OpenAI 希望通过向公众提供免费无广告的 ChatGPT 来实现社会影响力。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;爱范儿&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fozq5LdyXOfkr_oLzlGBanA&quot; target=&quot;_blank&quot;&gt;苹果开源了，首次公开手机端侧大模型，AI iPhone 的细节就藏在里面&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;相较于 Grok 1.0 开源的「抠搜」，苹果此次发布了完整的框架，涵盖数据的整理、模型的构建与训练、模型的调整与优化，此外，苹果还提供了多个预先训练好的模型节点和详尽的训练记录等。&lt;/p&gt; 
 &lt;p&gt;基于优化的 Transformer 模型架构，OpenELM 采用了逐层的缩放策略。在 Transformer 模型架构的每一层中都有效分配参数。通过这种方式，模型可以更好地学习数据，同时避免过度拟合，保持较高的泛化能力。&lt;/p&gt; 
 &lt;p&gt;简单点理解，就是想象有一座多层的图书馆，每一层都放着不同类别的书籍，为了让图书馆运作得更高效，你决定采用「逐层缩放策略」，也就是根据每一层存放书籍的多少来灵活分配图书管理员。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;- &lt;strong&gt;APPSO&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkochrt%2Fqr-designer&quot; target=&quot;_blank&quot;&gt;kochrt/qr-designer&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;294&quot; src=&quot;https://static.oschina.net/uploads/space/2023/0531/160608_iRuA_2720166.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkochrt%2Fqr-designer&quot; target=&quot;_blank&quot;&gt;https://github.com/kochrt/qr-designer&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;QR Designer 是用于对二维码样式进行个性化自定义的开源库。该库仅支持对二维码的中间部分进行自定义设计，它没有使用二维码的纠错功能，只是打开 / 关闭某些像素，不影响二维码码所指向的内容。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4925410/blog/11059258&quot; target=&quot;_blank&quot;&gt;给前端同学看的跨平台游戏开发入门&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;来看看如何在 Dora SSR 中用 100 行以内的 TSX 代码编写一个类似 「愤怒的小鸟」 的小游戏。当然，在开始之前还是要准备开发环境，做这个事用 Dora SSR 就很简单：我有一个&lt;/span&gt;&lt;strong&gt;安装包一装&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，我有一个&lt;/span&gt;&lt;strong&gt;浏览器一开&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，嗯，开始&lt;/span&gt;&lt;strong&gt;写代码&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;运行吧。安装启动参见：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdora-ssr.net%2Fzh-Hans%2Fdocs%2Ftutorial%2Fquick-start&quot; target=&quot;_blank&quot;&gt;Dora 启动！&lt;/a&gt;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;不小心装成了 APK 包在手机上？那就在同局域网下访问，直接在手机上进行开发调试吧&quot; height=&quot;375&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4741d10bcdec9d4b7c56d1a5f7342bfbaec.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;事件点评&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289626/sovereign-tech-fund-php-gnome&quot; target=&quot;_blank&quot;&gt;PHP 获得来自 STF 的 20 万欧元投资&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;德国&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fsearch%2FSovereign%2BTech%2BFund&quot; target=&quot;_blank&quot;&gt;Sovereign Tech Fund&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;(STF)&lt;span&gt;&amp;nbsp;&lt;/span&gt;新增了对 Mamba、GNOME 和 PHP 项目的投资。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Sovereign Tech Fund 承诺投入 205,000 欧元来帮助提高 PHP 生态系统的长期可持续性和安全性。 PHP 开发人员将使用这笔 STF 资金来检修他们的 PECL 扩展分发系统、对 PHP 的安全性和代码库审计进行更多改进、改进 PHP 文档，并围绕测试工具进行更多开发。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;226&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cbcbb3437d060ccd35518e0f08cd82c1a97.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这些投资反映了开源社区对持续创新和发展的需求。对于 PHP 和 GNOME 这样的项目来说，这些资金将有助于它们保持竞争力，吸引更多开发者和用户，同时也促进了开源软件生态系统的健康发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;STF 对 PHP 的投资表明了对 PHP 语言持续价值的认可。其对上述开源软件的投资不仅会对这些项目本身产生积极影响，还强调了开源社区在全球软件开发领域中的重要地位。它们表明，开源项目在全球范围内仍然受到重视，且对于推动技术进步和创新至关重要。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289609&quot; target=&quot;_blank&quot;&gt;拼多多被发现使用 iPhone「实时活动」在灵动岛推送广告&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;不过 V2EX 网友 @sorakado&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv2ex.com%2Ft%2F1035389&quot; target=&quot;_blank&quot;&gt;发现&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;拼多多竟然在灵动岛使用「实时活动」推送领券广告，触发场景为&lt;/span&gt;&lt;strong&gt;当天首次打开拼多多后滑动返回主屏幕&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，此时拼多多已经处于后台 —— 但它就在这个时候使用「实时活动」推送了广告。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;650&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e3a58d8ad20b3e4139ed0942a9e233f8b9d.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;拼多多此举可能被视为滥用平台功能，违反了苹果的规定。如果被苹果发现并确认违规，拼多多可能会面临应用下架、开发者账户限制或其他惩罚措施。利用技术特性进行广告推送，特别是在苹果明确禁止的情况下，可能被视为缺乏商业道德和透明度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;与此同时，这一举措也引发了用户对应用在后台时仍推送广告的行为感到不满，影响用户对拼多多的信任和满意度。此外，拼多多的做法也引起了关于如何在尊重用户体验的同时进行有效广告推送的讨论，以及对技术规范和创意边界的讨论。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289620/rhel-7-extended-life-cycle-support-4-years&quot; target=&quot;_blank&quot;&gt;红帽为 RHEL 7 提供为期 4 年的额外技术支持&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;今年已是 RHEL 7 推出的第十年。Red Hat Enterprise Linux 的支持期通常为 10 年，而对于 Red Hat Enterprise Linux 7，他们决定通过延长生命周期支持（ELS）将支持期延长 4 年。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;一个月前，Canonical 宣布他们将为 Ubuntu Pro 客户把 Ubuntu LTS 支持期&lt;a href=&quot;https://www.oschina.net/news/284787/ubuntu-lts-12-years&quot;&gt;延长至 12 年&lt;/a&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;225&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-593d00cbfb082f8a6499595c44155818a37.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一延长生命周期支持对于仍在使用 RHEL 7 的企业来说是一个重要的好消息。红帽的这一决定允许这些企业在标准生命周期结束后继续获得技术支持，这对于那些需要更多时间来迁移到新版本的企业来说尤其重要，有助于他们更好地规划和管理 IT 基础设施的升级和维护。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;然而，值得注意的是，要享受 ELS，企业用户必须将 RHEL7 升级到 RHEL 7.9 版本。这一要求可能对某些企业构成挑战，特别是那些依赖特定硬件或软件配置的企业。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstatic.dingxinwen.com%2Fdd-sharepage%2Fdetail%2Findex.html%3Fid%3D6644493%23%2F%3FcategoryId%3D13%26isRecommend%3D1&quot; target=&quot;_blank&quot;&gt;雷军周鸿祎出圈：中年 CEO，抢着当网红&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;不过，雷军们算是开了一个好头。社交平台的发展改变了用户和品牌沟通的&quot;天平&quot;，对中小创业者来说，接下来一定是 CEO 做个人品牌的时代，要将人格化力量应用于商业环节。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;商业是一个&quot;人影响人&quot;的战场，没人比 CEO 们更懂这门学问。三十年过去，时代弄潮儿还是这批人。或许，当网红不仅是 CEO 的选择，也是市场的呼唤，希望未来还会有更多网红 CEO 站到台前，以新的姿态，引领年轻一代参与商业世界的竞争。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;定焦&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNTMwNjUxMQ%3D%3D%26mid%3D2247563798%26idx%3D1%26sn%3Da21370488ce6180280a7e8e546cd9552%26scene%3D0&quot; target=&quot;_blank&quot;&gt;AI 投入超预期引发 Meta 暴跌？这锅 GPU 不背&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;总的来看，公司一季度业绩数据还是很可观的。虽然 Q2 指引不及预期，但是考虑到公司一贯保守的指引风格，市场的反应或许有些过激。&lt;/p&gt; 
 &lt;p&gt;&lt;span&gt;不过，大幅增加投向 AI 的资本开支，仍然反映了行业的高景气度。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span&gt;接下来就看微软和谷歌的资本开支了。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;见智研究 Pro&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1797318032401549857%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;李开复：AI 大模型应用今年迎爆发元年&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;创新工场董事长兼零一万物 CEO 李开复接受北京日报客户端记者采访时提出，中国 AI 大模型已经进入到落地为王的阶段，今年会迎来「大模型应用爆发元年」。推理成本是制约 AI（人工智能）大模型大规模应用的重要因素之一。他预测，预计在明年下半年，随着大模型推理成本的大幅度下降，人们将迎来大模型普惠应用的井喷期。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;北京日报客户端&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7GvgPkthbmuFY3c6iSndGQ&quot; target=&quot;_blank&quot;&gt;Ubuntu 24.04 LTS 正式发布：集成最新 LTS 版 Java 和.NET、引入低延迟内核功能、UI 更现代化&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：放弃了 Unity 桌面环境就是放弃了最大的优势，现在还强推 Snap 包管理器，我选择 Fedora，至少 Firefox 默认不是 Snap 或者 Flatpak&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：ff 默认 snap，Ubuntu 就是一打底裤。我会选择解压即用的 ff。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：低延迟内核不错，昨天刚注册了 Ubuntu pro，从 9.04 开始尝试，到 12.04 开始卸载其他发行版并稳定使用 ubuntu 至今&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：debian testing 比 ubuntu 好用，不仅软件版本新，还没有 snap，至少到目前我还没遇到严重 bug&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：昨天安装的 Fedora，体验远超 Ubuntu。&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/news/289440/is-php-still-worth-it-in-2024&quot; target=&quot;_blank&quot;&gt;PHP 在 2024 年还值得学习吗？&lt;/a&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：asp.net blazor 既支持纯静态渲染，也支持可交互的服务端渲染，也支持可交互客户端渲染，还支持可交互的服务端和客户端动态切换；这些模式下开发组件方式一样，类库共享，组件可运行在任何模式下。php 完全不具备这种能力。&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：asp.net blazor 没什么人用吧&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：「类库共享，组件可运行在任何模式」是.net 的优势？开玩笑吧，php 的第三方库多得堪比 java，运行环境更是全平台，全架构兼容。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：吵吵没赢过，占比没输过。😁&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：啊组，放弃 php 吧，外面全是 python。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：值得 , PHP 是全世界最牛 B 的编程语言&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289622&quot; target=&quot;_blank&quot;&gt;科大讯飞发布首个支持长文本、长图文、长语音的大模型&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：讯飞好低调，最近在头条经常看到推 kimi 和各种国内 ai 的排名，鲜有看到迅飞星火的，但经本人测试，还是迅飞星火最强&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：用过讯飞晓医，还不错，输入中药药方大概能告诉我起什么作用&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;程序员梗图&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-eac5a84d3eea9075251817afd8b83cc0765.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289686</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289686</guid>
            <pubDate>Fri, 26 Apr 2024 10:06:26 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>给前端同学看的跨平台游戏开发入门</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;p&gt;  大家好，我是一个游戏引擎技术探索者，同时也是一名做过不少前端开发工作的程序员。如果你想知道如何从编写网页到开发游戏，那你来对地方了！&lt;/p&gt; 
&lt;p&gt;  今天我们聊聊如何使用 Dora SSR，一个支持 TSX 且跨平台在 native 运行的游戏引擎，助你轻松跨入游戏开发的世界。不必担心，说到游戏引擎并不是啥高不可攀的技术，反而和我们熟悉的前端开发工具可以有惊人相似之处。&lt;/p&gt; 
&lt;h2&gt;一、游戏客户端开发也可以是一种前端开发&lt;/h2&gt; 
&lt;p&gt;  首先，让我们解释一下什么是游戏引擎。简单来说，游戏引擎就是一套工具和库的集合，帮助开发者构建游戏，管理图形、声音、物理计算或碰撞检测等。对于前端开发者来说，你可以把它想象成就是一种特殊的浏览器，专门用来运行游戏。&lt;/p&gt; 
&lt;p&gt;  Dora SSR 的游戏场景管理使用了类似于 HTML DOM 的树形结构，这对我们来说再熟悉不过了。想象一下，将 div 元素换成游戏中的各种对象，CSS 动画换成游戏动画，概念也差不多，代码写法上可能也差不多，是不是觉得有点意思了？&lt;/p&gt; 
&lt;h2&gt;二、从 TypeScript 到 TSX：前端技术在游戏中的应用&lt;/h2&gt; 
&lt;p&gt;  许多前端开发者都熟悉 TypeScript 和 React 的 JSX 语法。在 Dora SSR 开源游戏引擎中，我们通过支持 TSX，提供了与前端开发编程模式相似的游戏开发接口。是的你没听错，就是那个 TSX。&lt;/p&gt; 
&lt;p&gt;  使用 TSX 开发游戏，意味着你可以利用已有的前端技术栈—组件、模块和其他现代前端技术，直接在游戏开发中复用这些概念。而且，Dora SSR 的性能优化确保了即使是在复杂的游戏场景中，也能保持流畅的运行。&lt;/p&gt; 
&lt;h2&gt;三、挑战 100 行代码以内，教你写一个「愤怒的小鸟」like 的游戏&lt;/h2&gt; 
&lt;p&gt;  好了，理论知识够多了，让我们来点实际操作吧。来看看如何在 Dora SSR 中用 100 行以内的 TSX 代码编写一个类似「愤怒的小鸟」的小游戏。当然，在开始之前还是要准备开发环境，做这个事用 Dora SSR 就很简单：我有一个&lt;strong&gt;安装包一装&lt;/strong&gt;，我有一个&lt;strong&gt;浏览器一开&lt;/strong&gt;，嗯，开始&lt;strong&gt;写代码&lt;/strong&gt;运行吧。安装启动参见：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdora-ssr.net%2Fzh-Hans%2Fdocs%2Ftutorial%2Fquick-start&quot; target=&quot;_blank&quot;&gt;Dora 启动！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4741d10bcdec9d4b7c56d1a5f7342bfbaec.jpg&quot; alt=&quot;不小心装成了 APK 包在手机上？那就在同局域网下访问，直接在手机上进行开发调试吧&quot; referrerpolicy=&quot;no-referrer&quot;&gt; &lt;code&gt;不小心装成了 APK 包在手机上？那就在同局域网下访问，直接在手机上进行开发调试吧&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;1. 编写最简单游戏场景&lt;/h3&gt; 
&lt;p&gt;  在编写实际的代码之前，我们可以先写一个有特别功能的注释，它可以告诉 Dora SSR 的 Web IDE 在我们按下 Ctrl + S 保存文件时，自动热更新运行的代码，以实现代码运行结果的实时预览功能。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ts&quot;&gt;// @preview-file on
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;  然后，我们引入必要的库和组件。当然我们的代码编辑器也会提示辅助我们自动引入需要的模块，可以放到后面编码过程中再完成：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;import { React, toNode, useRef } from &#39;dora-x&#39;;
import { Body, BodyMoveType, Ease, Label, Line, Scale, TypeName, Vec2, tolua } from &#39;dora&#39;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;  在 Dora SSR 中显示一个图片很简单，只要使用&lt;code&gt;&amp;lt;sprite&amp;gt;&lt;/code&gt;标签，最后通过&lt;code&gt;toNode()&lt;/code&gt;函数将标签实例化为一个游戏对象就可以了。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;toNode(&amp;lt;sprite file=&#39;Image/logo.png&#39; scaleX={0.2} scaleY={0.2}/&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;  好的，至此你已经基本掌握大部分 Dora SSR 游戏开发的诀窍了，开始做你自己的游戏吧（认真）。&lt;/p&gt; 
&lt;h3&gt;2. 编写游戏箱子组件&lt;/h3&gt; 
&lt;p&gt;  接下来我们在游戏中碰撞的箱子会由 &lt;code&gt;Box&lt;/code&gt; 组件定义，它接受 &lt;code&gt;num&lt;/code&gt;、&lt;code&gt;x&lt;/code&gt;、&lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;children&lt;/code&gt; 等属性：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;interface BoxProps {
  num: number;
  x?: number;
  y?: number;
  children?: any | any[];
}

const Box = (props: BoxProps) =&amp;gt; {
  const numText = props.num.toString();
  return (
    &amp;lt;body type={BodyMoveType.Dynamic} scaleX={0} scaleY={0} x={props.x} y={props.y} tag={numText}&amp;gt;
      &amp;lt;rect-fixture width={100} height={100}/&amp;gt;
      &amp;lt;draw-node&amp;gt;
        &amp;lt;rect-shape width={100} height={100} fillColor={0x8800ffff} borderWidth={1} borderColor={0xff00ffff}/&amp;gt;
      &amp;lt;/draw-node&amp;gt;
      &amp;lt;label fontName=&#39;sarasa-mono-sc-regular&#39; fontSize={40}&amp;gt;{numText}&amp;lt;/label&amp;gt;
      {props.children}
    &amp;lt;/body&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;  我们使用仿 React 的函数组件的写法来完成我们箱子组件的定义，其中：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;body&lt;/code&gt; 组件的 &lt;code&gt;tag&lt;/code&gt; 属性：用于存储箱子的分数。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;rect-fixture&lt;/code&gt; ：定义了箱子的碰撞形状。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;draw-node&lt;/code&gt; ：用于绘制箱子的外观。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;label&lt;/code&gt; ：用于显示盒子的分数。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. 创建 TSX 实例化后的对象引用&lt;/h3&gt; 
&lt;p&gt;  使⽤ useRef 创建两个引⽤变量进行备用，分别指向⼩⻦和分数标签：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;const bird = useRef&amp;lt;Body.Type&amp;gt;();
const score = useRef&amp;lt;Label.Type&amp;gt;();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4. 创建发射线&lt;/h3&gt; 
&lt;p&gt;  发射线由 &lt;code&gt;line&lt;/code&gt; 变量创建，并添加触摸（同时也是鼠标点击）的事件处理：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;let start = Vec2.zero;
let delta = Vec2.zero;
const line = Line();

toNode(
  &amp;lt;physics-world
    onTapBegan={(touch) =&amp;gt; {
      start = touch.location;
      line.clear();
    }}
    onTapMoved={(touch) =&amp;gt; {
      delta = delta.add(touch.delta);
      line.set([start, start.add(delta)]);
    }}
    onTapEnded={() =&amp;gt; {
      if (!bird.current) return;
      bird.current.velocity = delta.mul(Vec2(10, 10));
      start = Vec2.zero;
      delta = Vec2.zero;
      line.clear();
    }}
  &amp;gt;
    {/* ...在物理世界下创建其它游戏元素 ... */}
  &amp;lt;/physics-world&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;在 &lt;code&gt;onTapBegan&lt;/code&gt; 事件中，记录触摸开始的位置并清除发射线。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 &lt;code&gt;onTapMoved&lt;/code&gt; 事件中，计算触摸移动的距离并更新发射线。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 &lt;code&gt;onTapEnded&lt;/code&gt; 事件中，根据触摸移动的距离设置小鸟的发射速度并清除发射线。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5. 创建其它游戏元素&lt;/h3&gt; 
&lt;p&gt;  接下来，我们以 &lt;code&gt;&amp;lt;physics-world&amp;gt;&lt;/code&gt; 作为游戏场景的父级标签，在它下面继续创建游戏场景中的各个元素：&lt;/p&gt; 
&lt;h4&gt;5.1 地面&lt;/h4&gt; 
&lt;p&gt;  首先，我们使用 &lt;code&gt;body&lt;/code&gt; 组件创建一个地面，并将其设置为静态刚体：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;body type={BodyMoveType.Static}&amp;gt;
  &amp;lt;rect-fixture centerY={-200} width={2000} height={10}/&amp;gt;
  &amp;lt;draw-node&amp;gt;
    &amp;lt;rect-shape centerY={-200} width={2000} height={10} fillColor={0xfffbc400}/&amp;gt;
  &amp;lt;/draw-node&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;type={BodyMoveType.Static}&lt;/code&gt;：表明这是一个静态刚体，不会受到物理模拟的影响。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;rect-fixture&lt;/code&gt;：定义地面碰撞形状为一个矩形。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;draw-node&lt;/code&gt;：用于绘制地面的外观。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;rect-shape&lt;/code&gt;：绘制一个矩形，颜色为黄色。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5.2 箱子&lt;/h4&gt; 
&lt;p&gt;  接下来，我们使用之前写好的 &lt;code&gt;Box&lt;/code&gt; 组件创建 5 个箱子，并设置不同的初始位置和分数，在创建时播放出场动画：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;{
  [10, 20, 30, 40, 50].map((num, i) =&amp;gt; (
    &amp;lt;Box num={num} x={200} y={-150 + i * 100}&amp;gt;
      &amp;lt;sequence&amp;gt;
        &amp;lt;delay time={i * 0.2}/&amp;gt;
        &amp;lt;scale time={0.3} start={0} stop={1}/&amp;gt;
      &amp;lt;/sequence&amp;gt;
    &amp;lt;/Box&amp;gt;
  ))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;map&lt;/code&gt; 函数：用于遍历分数数组从 10 到 50，并为每个分数创建一个需要小鸟撞击的箱子。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Box&lt;/code&gt; 组件：用于创建箱子，并传入以下属性：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;num={num}&lt;/code&gt;：箱子的分数，对应数组中的数字。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;x={200}&lt;/code&gt;：箱子的初始 x 轴位置，为 200。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;y={-150 + i * 100}&lt;/code&gt;：箱子的初始 y 轴位置，根据创建序号递增。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;sequence&lt;/code&gt; 组件：用于创建要在父节点上播放的动画序列，包含以下动画：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;delay time={i * 0.2}&lt;/code&gt;：延迟播放动画，延迟时间根据创建序号递增。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;scale time={0.3} start={0} stop={1}&lt;/code&gt;：缩放动画，从不显示到完全显示，耗时 0.3 秒。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5.3 小鸟&lt;/h4&gt; 
&lt;p&gt;  最后，我们使用 &lt;code&gt;body&lt;/code&gt; 组件创建小鸟，并设置碰撞形状、外观和分数标签：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-tsx&quot;&gt;&amp;lt;body ref={bird} type={BodyMoveType.Dynamic} x={-200} y={-150} onContactStart={(other) =&amp;gt; {
  if (other.tag !== &#39;&#39; &amp;amp;&amp;amp; score.current) {
    // 累加积分
    const sc = parseFloat(score.current.text) + parseFloat(other.tag);
    score.current.text = sc.toString();
    // 清除被撞箱子上的分数
    const label = tolua.cast(other.children?.last, TypeName.Label);
    if (label) label.text = &#39;&#39;;
    other.tag = &#39;&#39;;
    // 播放箱子被撞的动画
    other.perform(Scale(0.2, 0.7, 1.0));
  }
}}&amp;gt;
  &amp;lt;disk-fixture radius={50}/&amp;gt;
  &amp;lt;draw-node&amp;gt;
    &amp;lt;dot-shape radius={50} color={0xffff0088}/&amp;gt;
  &amp;lt;/draw-node&amp;gt;
  &amp;lt;label ref={score} fontName=&#39;sarasa-mono-sc-regular&#39; fontSize={40}&amp;gt;0&amp;lt;/label&amp;gt;
  &amp;lt;scale time={0.4} start={0.3} stop={1.0} easing={Ease.OutBack}/&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ref={bird}&lt;/code&gt;：使用 &lt;code&gt;ref&lt;/code&gt; 创建引用变量，方便后续操控小鸟。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;type={BodyMoveType.Dynamic}&lt;/code&gt;：表明这是一个动态刚体，会受到物理模拟的影响。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;onContactStart={(other) =&amp;gt; {}}&lt;/code&gt;：小鸟的物理体接触到其它物体时触发的回调处理函数。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;disk-fixture&lt;/code&gt;：定义小鸟形状为一个圆盘。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;draw-node&lt;/code&gt; ：用于绘制小鸟的外观。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;label&lt;/code&gt; ：用于显示小鸟的累积分数。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;scale&lt;/code&gt; ：用于播放小鸟的出场动画。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;6. 完成游戏逻辑&lt;/h3&gt; 
&lt;p&gt;  至此，我们已经完成了小游戏的核心逻辑。你可以根据自己的想法进一步完善游戏逻辑和增加功能。完整的 demo 代码可以见这个链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FIppClub%2FDora-SSR%2Fblob%2Fmain%2FAssets%2FScript%2FTest%2FBirdy.tsx&quot; target=&quot;_blank&quot;&gt;Dora-SSR/Assets/Script/Test/Birdy.tsx&lt;/a&gt;。下面是一些运行效果的截图。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b0a5b9b9439a8d66fca877fe16996bcbf8d.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;lt;p align=center&amp;gt;拖拽屏幕发射了「愤怒的小鸟」&amp;lt;/p&amp;gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f0b12646a593bad25333a2a92d4a917bcf7.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;lt;p align=center&amp;gt;高超的技巧，使我一击获得了所有得分&amp;lt;/p&amp;gt;&lt;/p&gt; 
&lt;h2&gt;四、简单揭秘一下&lt;/h2&gt; 
&lt;h3&gt;1. 是鹿还是马&lt;/h3&gt; 
&lt;p&gt;  事实上我们写的这段游戏代码，在 Dora SSR 引擎的能力下是可以确保在跨 Linux、Android、iOS、macOS 和 Windows 获得一致的运行结果。但是为了运行这段代码，我们的 Dora SSR 引擎甚至都没有做 JavaScript 运行环境的支持……（你说什么？）&lt;/p&gt; 
&lt;p&gt;  是的，Dora SSR 的底层技术实现其实是基于 Lua 和 WASM 虚拟机作为脚本语言运行环境的。对 TypeScript 的支持其实是通过整合了 TypescriptToLua（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTypeScriptToLua%2FTypeScriptToLua&quot; target=&quot;_blank&quot;&gt;https://github.com/TypeScriptToLua/TypeScriptToLua&lt;/a&gt; ）这个编译器提供的。TSTL 通过重新编写了 TypeScript 语言编译器的后端，将 TS 和 TSX 的代码编译为了等价运行的 Lua 代码，从而使得 TS 代码可以在 Dora 上加载运行。在 Dora 自带的 Web IDE 的代码编辑器下，可以帮助大家做 TS 的语言检查和补全以及 Dora 内置库 API 的提示。最终的使用体验，大家就可以不用管最后是鹿还是马，只要代码能通过了 TS 的编译检查，拉出来那都是一样的跑啦。&lt;/p&gt; 
&lt;h3&gt;2. 和 React 有关系吗&lt;/h3&gt; 
&lt;p&gt;  这个问题的答案目前是：可以有（所以截至发文前还没有）。React 最重要的能力是通过 Virtual DOM 和执行 Tree Diff 处理的过程来进行渲染组件和业务数据的状态同步，目前这个机制还没有在 Dora SSR 中实现，所以大家目前看到的用 TSX 编写出的类似 VDOM 的构建代码只会在运行时做一次性的游戏渲染对象的构建，往后都是底层 C++ 实现的引擎功能在负责继续处理。也许有一天我们会为游戏 UI 的开发，提供仿 React 通过执行 Tree Diff 做状态同步的能力，或是仿 SolidJS 基于 TSX 实现其它的渲染组件状态同步的机制。所以在这里也诚挚地邀请广大前端开发的朋友，加入我们，一起玩 Dora SSR 项目，一起研究怎么运用前端开发技术思想，为游戏开发也引入更多好用便捷的轮子吧。&lt;/p&gt; 
&lt;p&gt;  最后我们的 Q 群在这里，欢迎过来玩：512620381&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4925410/blog/11059258</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4925410/blog/11059258</guid>
            <pubDate>Fri, 26 Apr 2024 08:31:28 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>LFOSSA 源来如此公开课 | 掌握云原生未来：CNCF 认证全面攻略与备考秘籍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span&gt;CNCF 认证是云原生领域的重要认证之一，对于想要&lt;/span&gt;&lt;span&gt;深入了解并应用云原生技术的专业人士来说，具有极&lt;/span&gt;&lt;span&gt;高的价值。本期 LFOSSA 源来如此公开课带你&lt;/span&gt;&lt;span&gt;深入了解 CNCF 认证体系与备考秘籍。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;更多精彩内容锁定&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;strong&gt;4 月 29 日 19:30-21:00&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;直播间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;直播中将发放&lt;/strong&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;strong&gt;CNCF&lt;/strong&gt;&lt;strong&gt;官方认证考试 9 折；&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;strong&gt;世达教育&lt;/strong&gt;&lt;strong&gt;CNCF&lt;/strong&gt;&lt;strong&gt;相关课程 8.5 折&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;优惠&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;赶快扫码预约！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt=&quot;&quot; height=&quot;1200&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a7e47b8b0085a31bceb914ad0f7dda8d65e.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289653</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289653</guid>
            <pubDate>Fri, 26 Apr 2024 07:30:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>沙特 2030 年愿景和对中国 IT 企业的市场机会分析</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 年愿景和对中国 IT 企业的市场机会分析&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前言：最近「开源老 DJ，带你去沙特」栏目第一期已经播出，收到了不错的反响。见 COPU 官网的回顾。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F3B0jNVhybxTF1xPiy2VOJA&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/3B0jNVhybxTF1xPiy2VOJA&lt;/a&gt;）有观众希望得到更多详细的信息，所以写下此文，来分析为什么沙特对于中国 IT 企业来说是一个很好的机会，以及如何抓住它。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;552&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-384ee4b5b1310d4d6ea0e3c50b0d7125305.png&quot; width=&quot;812&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;目录：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特概况&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景简介&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景出台背景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景目标&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景现在进展&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景跟 IT 相关部分&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景对于中国 IT 的机会&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中国 IT 企业该如何抓住这些机会？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;正文：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;1. 沙特概况&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特阿拉伯（Saudi Arabic）位于亚洲、欧洲、非洲三大洲的交界处，人口超过 3600 万（2022 年数据），是中东地区最大的经济体，也是伊斯兰世界的核心国家，拥有&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#222222&quot;&gt;两大伊斯兰圣地麦加与麦地那&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;。沙特阿拉伯是全球最大的石油出口国，也是石油输出国（OPEC）的领导者。以下是 GDP 相关的数字。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0cm; margin-right:0cm&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;GDP&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;2022 年：1.1 万亿美元（根据国际货币基金组织数据），是&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#202122&quot;&gt;全球 20 大经济体之一，GDP 增长率 8.7%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0cm; margin-right:0cm&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;人口&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;2022 年：3603.1 万（根据世界银行数据），沙特的人口结构非常年轻，50% 以上是 25 岁以下，60% 左右是 30 岁以下。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0cm; margin-right:0cm&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;人均 GDP&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;2022 年：3 万美元（根据国际货币基金组织数据）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;2. 沙特 2030 愿景简介&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景（Saudi Vision 2030 ）是沙特阿拉伯政府于 2016 年公布的一项经济改革计划，希望把沙特转型成为一个更多多元化、可持续和繁荣的国家。该计划由沙特王储和经济和发展事务委员会主席默罕默德. 本.萨勒曼（MOHAMMAD BIN SALMAN，有人也把他简称为 MBS），主导制定。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;438&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8e5b1a3e001cb7805249607296c6a9613a8.png&quot; width=&quot;420&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;沙特 2030 愿景出台的背景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景的出台，是沙特阿拉伯王国着眼于本国长远发展，顺应时代潮流，作出的重大战略决策，其出台主要有如下几方面的背景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;石油依赖症的困扰&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;石油产业是沙特的支柱产业，但是近年来国际石油持续低迷，给沙特经济带来巨大的冲击。沙特政府认识到，过度依赖石油收入十分危险，必须加快经济转型，实现经济多元化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;社会转型和民生诉求&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;随着沙特社会的发展，民众对教育、医疗、就业等方面的需求日益增长。同时，沙特人口年轻化，也带来了新的社会挑战。沙特政府需要通过改革，满足民众的诉求，维护社会稳定。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;地缘政治压力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;近年来，中东地区局势动荡，沙特面临着来自外部的压力。沙特政府希望通过实施沙特 2030 愿景，增强国家综合实力，维护国家安全和利益。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;国际经验的启示&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一些国家通过经济转型和改革取得了成功，例如阿联酋。沙特政府希望借鉴这些国家的经验，走出一条适合自身特点的转型发展道路。类似的项目还有中国的五年规划、巴基斯坦愿景 2025，东盟愿景 2025，伊朗愿景 2025 等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;3.沙特 2030 愿景目标&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景首先定义了沙特阿拉伯的长期愿景和三大支柱：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;成为阿拉伯与伊斯兰世界的心脏&lt;/span&gt;&lt;/strong&gt;：沙特将致力于成为阿拉伯与伊斯兰世界的文化和精神中心，并加强与其他穆斯林国家的联系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;成为全球性投资强国&lt;/span&gt;&lt;/strong&gt;：沙特将大力发展非石油产业，吸引外资，打造全球投资中心。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;成为连接亚欧非三大洲的世界枢纽&lt;/span&gt;&lt;/strong&gt;：沙特将利用其独特的地理位置，发展交通运输和物流业，成为连接亚欧非三大洲的重要贸易和运输中心。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为此，沙特 2030 愿景确定了沙特在 2030 年要实现的三大主要目标：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;A Vibrant Society&lt;/span&gt;&lt;span&gt;（一个&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;充满活力的社会）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;A thriving Economy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;（一个无比繁荣的经济）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;An ambitious Nation (&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;一个雄心勃勃的国家)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;其中第一个目标：A vibrant society（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;一个&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;充满活力的社会）又分解为很多细分目标，包括：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;把人均寿命从 74 岁提升到 80 岁；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;提高朝觐者数量：到 2030 年，将每年朝觐者数量从 800 万增加到 3000 万；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;把国民的文娱消费占总消费的比例从 2.9% 提升到 6%；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;每周进行一次锻炼的国民的比例从 13% 提升到 40%；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;等等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;其中第二个目标:A thriving Economy（一个无比繁荣的经济）是跟经济非常相关的，包括提高就业，激励创业，提升非油 GDP 比例等等，也是细分为很多量化的指标，例如：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;降低失业率：将失业率从 11.6% 降低到 7%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;提高中小企业对 GDP 的贡献：将中小企业（SMEs）对 GDP 的贡献比例从 20% 提高到 35%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;提升女性就业率：将沙特女性的就业率从 12% 提高到 40%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;增加非石油出口在非石油 GDP 中的占比：将非石油出口在非石油 GDP 中的占比从 16% 提高到 50%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;提升私营部门对 GDP 的贡献：将私营部门对 GDP 的贡献比例从 40% 提高到 65%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;增加公共投资基金的资产价值：将公共投资基金管理的资产价值从 6000 亿沙特里亚尔增加到超过 7 万亿沙特里亚尔。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;等等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;除了社会和经济目标外，第三个目标是 An ambitious Nation （一个雄心勃勃的国家），分解如下的指标：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;政府效率指数排名从第 80 位提高到第 20 位；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;电子政务调查指数排名从目前的第 36 位提高到全球前 5 名；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;每年组织 100 万志愿者；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;等等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;4.沙特 2030 愿景现在的进展如何？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;2016&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;年提出，距离今年 2024 年已经过去 7 年了，目前取得了显著进展，但是仍然面临一些挑战：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;主要进展：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;经济多元化取得初步成效：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;旅游业、娱乐业增长速度较快，物流行业增长非常迅速，已经成为三大洲的交通枢纽；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;基础设施建设加快：一大批基建项目正在推进，包括 Neom 等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;沙特第一大公司阿美公司（Saudi Aramco）成功上市，这是沙特对外开放和吸引外国投资的一个重要步骤。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;沙特国民平均寿命从 2016 年的 74.8 岁增长到 2020 年的 75.6 岁&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;等等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;当然也有很大的挑战：经济转型任重道远，社会改革阻力犹存，全球经济环境复杂等都给沙特的转型带来一些风险。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;比较令人印象深刻的是 GDP 从 2016 年到 2023 年，年均增长率是 3.4%，人口年均增长率是 1.1%，GDP 年均增长率为 1.5%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;5.沙特 2030 愿景跟 IT 相关部分&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景将信息技术（IT）确定为实现经济多元化、社会发展和可持续增长关键驱动之一。根据规划，沙特将致力于打造全球领先的 IT 中心，并推动 IT 产业在各个领域广泛应用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;具体而言，沙特 2030 愿景中的 IT 目标主要包括如下几个方面：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;发展数字经济：推动数字技术在各行各业的应用，促进数字经济发展。例如发展电子商务、数字金融、智慧城市等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;建设数字基础设施：加大对信息基础设施的投资，包括 5G 网络、IDC 等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;培养 IT 人才：加强 IT 人才培养，提高劳动力的 IT 技能水平，满足数字经济发展对人才的需求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;发展数字政府，用 IT 技术提升政府治理水平。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;6.沙特 2030 愿景对于中国 IT 的机会&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;沙特 2030 愿景为中国 IT 企业提供了巨大的发展机遇，其市场规模庞大，发展潜力巨大。是中国之外的海外地区，唯一一个同时有海量资金和海量用户潜力的地区。而且跟中国有长期稳定友好的关系。&lt;span style=&quot;color:black&quot;&gt;1995&lt;/span&gt;&lt;span style=&quot;color:black&quot;&gt;年以来，沙特阿拉伯一直是中国在中东，地区第一大贸易伙伴。中国是沙特阿拉伯第一大贸，易伙伴。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;预计到 2030 年，沙特 IT 市场规模将达到 1 万亿 RMB，年复合增长率约为 10%。其中细分市场规模如下。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数字基础设施&lt;/span&gt;&lt;/strong&gt;：预计到 2030 年，沙特数字基础设施市场规模将达到 300 亿美元，CAGR 约为 12%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;云计算&lt;/span&gt;&lt;/strong&gt;：预计到 2030 年，沙特云计算市场规模将达到 200 亿美元，CAGR 约为 15%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;大数据&lt;/span&gt;&lt;/strong&gt;：预计到 2030 年，沙特大数据市场规模将达到 150 亿美元，CAGR 约为 18%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;人工智能&lt;/span&gt;&lt;/strong&gt;：预计到 2030 年，沙特人工智能市场规模将达到 100 亿美元，CAGR 约为 20%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#1f1f1f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数字安全&lt;/span&gt;&lt;/strong&gt;：预计到 2030 年，沙特数字安全市场规模将达到 50 亿美元，CAGR 约为 10%。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中国 IT 企业可以在如下重点领域进行发力：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数字基础设施建设：包括 5G 网络、光纤宽带、数据中心等。目前华为、阿里、腾讯都已经有相关合作进展。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数字政府建设：中国 IT 企业可以提供电子政务、智慧城市等解决方案。目前商汤科技在此比较活跃。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中小企业数字化转型：沙特中小企业数字化转型需求旺盛，中国 IT 企业可以提供相应的技术，帮助中小企业提高效率和竞争力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数字经济发展：沙特正在发展数字经济、电子商务、数字金融等领域，中国 IT 企业可以参与沙特数字经济建设，提供技术和解决方案。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#0f4761&quot;&gt;&lt;span&gt;7．中国 IT 企业该如何抓住这个机会？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:36pt; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;虽然沙特 IT 预计每年有 1000 亿美金的市场，但也是市场竞争格局十分复杂，世界知名的 IT 巨头在此扎根很多年，比如沙特 IT 市场目前被国际 IT 四巨头微软、Oracle、SAP、IBM 占据主要份额，亚马逊、谷歌等也在纷纷进入。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;而中国虽然在沙特被视为「Brother Country」，但是之前长期的投资集中在高铁、高速等基础设施建设上，中国 IT 企业在沙特市场的品牌知名度较低，文化差异和语言差异导致交流进展不快，人才也非常短缺，缺乏即懂中国 IT 企业又懂沙特市场的双向人才。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;建议中国 IT 企业可以采取以下策略在沙特市场取得成功：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;加强合作：中国 IT 企业可以与沙特本地企业合作，优势互补，共同开拓市场；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;本地化运营：中国 IT 企业应建立本地化团队，了解沙特市场需求，提供符合当地需求的产品和服务。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;差异化竞争：中国 IT 企业可以根据自身优势，选择细分市场进行差异化竞争。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;注重人才培养：中国 IT 企业应加强对沙特本地人才的培养，提升其技术水平和服务能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;当然机会和方法都是显而易见的，但是要抓住，还得「躬身入局」，切实采取各种有效的活动，了解沙特市场和政策，跟沙特相关机构建立联系，然后视情况而制定灵活的策略，努力拓展新的市场，结合沙特本地的利益达到双赢。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_8&quot;&gt;&lt;/span&gt; 
&lt;h2 style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;后记：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;COPU&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;（中国开源推进联盟）作为中国开源最老牌也最受尊敬的开源组织，一直致力于推动和发展中国的开源 IT 产业，现在也发现这个机会，希望能致力于推动中沙两方 IT 企业和组织的合作，帮助实现中国 IT 企业的发展，同时助力沙特 2030 愿景的实现。为此，COPU 常务副秘书长谭中意近期多次奔赴沙特，会见沙特相关政府机构和企业组织以及开发者，并作为第一个中国人员在沙特有名的开源峰会上发表主题演讲，和沙特当地非常有影响力的开发者组织沙特开发者协会 PARMG 签署战略合作协议，开创中沙开源合作新篇章（详见&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FtziisV72HoZ-1Y2mQKP2Zg&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/tziisV72HoZ-1Y2mQKP2Zg&lt;/a&gt;）。同时也多次带领中国 IT 企业访问沙特首都利雅得，跟沙特工信部、商务部、投资部、沙特国王科技大学等机构，跟行业组织 PARMG、华人商会等，跟当地知名企业 ajlan、slnee、tamkeen 等沟通交流合作，并促成国内某企业跟沙特某企业的战略合作签署。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;另外，COPU 将和 OpenTekr 在 5 月 18 日－5 月 23 日期间将组织新的一批企业赴沙特深度考察。具体考察内容见「【邀请函】2024 中沙 IT 合作交流考察团 (第二期) 限时报名中！」（ &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FvBnNOZtlgQSaA-dpkqoLGA&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;https://mp.weixin.qq.com/s/vBnNOZtlgQSaA-dpkqoLGA&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span style=&quot;background-color:white&quot;&gt;&lt;span style=&quot;color:#191b1f&quot;&gt;）希望参加的企业欢迎联系 COPU 谭老师 13718272827.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3742410/blog/11054357</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3742410/blog/11054357</guid>
            <pubDate>Fri, 26 Apr 2024 07:12:05 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>PHP 获得来自 STF 的 20 万欧元投资</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;德国&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fsearch%2FSovereign%2BTech%2BFund&quot; target=&quot;_blank&quot;&gt;Sovereign Tech Fund&lt;/a&gt;&amp;nbsp;(STF) 一直在对各种开源上游项目（从 GNOME 桌面到 Rust 编写的 Coreutils 等）进行大量、急需的投资。&lt;/p&gt; 
&lt;p&gt;现如今，该基金进一步概述了他们用于推进开源软件生态系统的最新资金。即，对 Mamba、GNOME 和 PHP 的投资。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;226&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cbcbb3437d060ccd35518e0f08cd82c1a97.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;br&gt; Sovereign Tech Fund 将继续资助 GNOME 致力于 Linux 桌面的桌面可访问性、工具和安全性，例如围绕 systemd 托管的加密。&lt;br&gt; &lt;br&gt; 对于 PHP，Sovereign Tech Fund 承诺投入 205,000 欧元来帮助提高 PHP 生态系统的长期可持续性和安全性。 PHP 开发人员将使用这笔 STF 资金来检修他们的 PECL 扩展分发系统、对 PHP 的安全性和代码库审计进行更多改进、改进 PHP 文档，并围绕测试工具进行更多开发。&lt;/p&gt; 
&lt;p&gt;Sovereign Tech Fund 还启动了 Bug 赏金计划，作为 Bug 恢复计划的一部分。该漏洞赏金计划主要针对安全研究人员，最初将针对 systemd 和 Sequoia PGP 项目。 STF 还提供「fix」赏金作为修复安全问题的一部分，有关 STF Bug 赏金计划的更多详细信息将在未来几周内发布。&lt;br&gt; &lt;br&gt; 详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sovereigntechfund.de%2Fnews%2Fnewsletter-april-2024&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289626/sovereign-tech-fund-php-gnome</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289626/sovereign-tech-fund-php-gnome</guid>
            <pubDate>Fri, 26 Apr 2024 06:08:14 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>科大讯飞发布首个支持长文本、长图文、长语音的大模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;讯飞星火大模型 V3.5 更新，科大讯飞董事长刘庆峰&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7lAuW3MDMq-dGHsTX7o3yA&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;了讯飞星火大模型一系列新功能：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持长文本、长图文、长语音的大模型正式上新，首发星火图文识别大模型，快速识别和学习多类型海量知识，行业场景下的回答更专业、更精准。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;星火合同助手首次上线，审核规避合同风险、提炼总结关键要素、一键起草合同文件。星火智能评标助手升级，投标文件解析更高效，让评标更便捷、更高效、更准确。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;「多情感超拟人合成」和「一句话声音复刻」首发，实现更生动、更具个性化的表达，带来更有温度的人工智能体验。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;星火智能体平台全新发布，解决大模型企业落地最后一公里，为员工打造专属助理，为企业解放生产力。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，讯飞 AI 学习机、星火智慧黑板、星火科研助手也进行了升级。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;刘庆峰介绍称，星火 APP 在安卓上的下载量已经达到 9600 多万次，在国内工具类通用大模型 APP 中排名第一。在 1 月 30 日讯飞星火 V3.5 发布后，新增了 55 万实名认证的开发者，其中一半以上是来自企业。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前星火大模型通用长文本能力，包括长文档信息抽取、长文档知识问答、长文档归纳总结、长文档文本生成等，总体已经达到 GPT-4 Turbo 今年 4 月最新长文本版本的 97% 的水平，而在多个垂直领域的知识问答任务上，星火大模型长文本总体水平已经超过 GPT-4 Turbo。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;227&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-00f5e3fd825d3eceb55ea80fb455233ff09.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;他还透露，讯飞星火 V4.0 将在今年 6 月 27 日正式发布 。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289622</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289622</guid>
            <pubDate>Fri, 26 Apr 2024 05:47:14 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>红帽为 RHEL 7 提供为期 4 年的额外技术支持</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;今年已是 RHEL 7 推出的第十年。Red Hat Enterprise Linux 的支持期通常为 10 年，而对于 Red Hat Enterprise Linux 7，他们决定通过延长生命周期支持（ELS）将支持期延长 4 年。&lt;/p&gt; 
&lt;p&gt;一个月前，Canonical 宣布他们将为 Ubuntu Pro 客户把 Ubuntu LTS 支持期&lt;a href=&quot;https://www.oschina.net/news/284787/ubuntu-lts-12-years&quot;&gt;延长至 12 年&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;红帽公司也不甘示弱，在类似的情况下，一些客户在十年后仍在生产中部署企业级操作系统，红帽公司今天&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.redhat.com%2Fen%2Fblog%2Fannouncing-4-years-extended-life-cycle-support-els-red-hat-enterprise-linux-7&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;延长 RHEL 7 的生命周期 —— 在原来基础上再提供为期 4 年的一次性 ELS 维护期。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-593d00cbfb082f8a6499595c44155818a37.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;尽管如此，红帽公司仍然鼓励客户转向新版本的红帽企业 Linux。 企业必须使用 RHEL 7.9 才能选择 RHEL 7 的 ELS。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289620/rhel-7-extended-life-cycle-support-4-years</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289620/rhel-7-extended-life-cycle-support-4-years</guid>
            <pubDate>Fri, 26 Apr 2024 05:40:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>拼多多被发现使用 iPhone「实时活动」在灵动岛推送广告</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;iPhone 14 Pro 及后续机型引入了名为「灵动岛」的交互 UI，支持显示「实时活动」，以便用户在主屏幕顶部或活跃 App 顶部的灵动岛中查看提醒和正在进行的当前活动。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;实时活动显示来自你 App 的最新信息，可让用户一览活动、事件或任务的进度。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;按照苹果的 HIG 人机界面指南，开发者不应该使用「实时活动」来显示广告内容或推广信息。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-5770b85c09629723c2ed46ec36f45d1bcc6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fcn%2Fdesign%2Fhuman-interface-guidelines%2Flive-activities%23The-Dynamic-Island&quot; target=&quot;_blank&quot;&gt;https://developer.apple.com/cn/design/human-interface-guidelines/live-activities#The-Dynamic-Island&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;不过 V2EX 网友 @sorakado &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv2ex.com%2Ft%2F1035389&quot; target=&quot;_blank&quot;&gt;发现&lt;/a&gt;拼多多竟然在灵动岛使用「实时活动」推送领券广告，触发场景为&lt;strong&gt;当天首次打开拼多多后滑动返回主屏幕&lt;/strong&gt;，此时拼多多已经处于后台——但它就在这个时候使用「实时活动」推送了广告。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e3a58d8ad20b3e4139ed0942a9e233f8b9d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;这名网友表示「当时马上截了一张图，接着这个通知马上就消失了，在通知中心也看不到对应的实时活动。再次打开拼多多尝试触发，但无法复现」。&lt;/p&gt; 
&lt;p&gt;有网友回复称：没有灵动岛的机型是实时活动，一天只能触发一次，只显示 2-3 秒然后就消失。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-63afdb2d4b30f3f32473b3ee448ad75e1ee.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289609</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289609</guid>
            <pubDate>Fri, 26 Apr 2024 03:48:54 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Bytebase 2.16.0 - 支持 Oracle 和 SQL Server DML 变更的事前备份</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f586b20348f3fb6dedc60332c65214329b7.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 新功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持 Oracle 和 SQL Server DML 变更的事前备份。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持在 SQL 编辑器中显示存储过程和函数。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持兼容 TDSQL 的 MySQL 和 PostgreSQL 版本。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持把数据库密码存储在 AWS Secrets Manager 和 GCP Secret Manager。 &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-95ea7ca07a205e6e912cef85ce3d28a70fb.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持通过 IAM 连接到 Google Cloud SQL (适用于 MySQL 和 PostgreSQL)。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持在 schema 编辑器中编辑分区表（适用于 MySQL 和 TiDB）。 &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7ace38337837f17adb9305a550e9c563eb6.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔔 重大变更&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;弃用了 Oracle 的基于数据库的管理模式，仅支持基于 schema 管理的模式。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎄 改进&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持在上传 SQL 文件后按照指定的编码格式进行预览。 &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f1be2250e8235267be5099af09a5333d1da.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;增强 SQL 编辑器自动补全功能。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📕 安装及升级&lt;/h2&gt; 
&lt;p&gt;参考&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytebase%2Fbytebase%23installation&quot; target=&quot;_blank&quot;&gt;升级指南&lt;/a&gt;。如果从之前版本升级，获取新版本后，重新启动升级即可。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/6148470/blog/11059177</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11059177</guid>
            <pubDate>Fri, 26 Apr 2024 03:08:02 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>微软开源 MS-DOS 4.0 版系统源代码</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软宣布与 IBM 合作，在 MIT 许可下&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudblogs.microsoft.com%2Fopensource%2F2024%2F04%2F25%2Fopen-sourcing-ms-dos-4-0%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt; MS-DOS 4.00 的源代码。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2014 年 3 月，微软曾向计算机历史博物馆发布了 MS-DOS 1.25 和 2.0 版的源代码。其中，MS-DOS 1.25 代码可追溯到 1983 年 5 月 9 日左右，由 7 个源文件组成，其中包括最初的 MS-DOS Command-Line shell – &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMicrosoft%2FMS-DOS%2Fblob%2Fmaster%2Fv1.25%2Fsource%2FCOMMAND.ASM&quot; target=&quot;_blank&quot;&gt;COMMAND.ASM&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;!&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;MS-DOS 2.0 大约可追溯到 1983 年 8 月 3 日，在复杂性（和团队规模）方面有了长足的发展，由 100 个 .ASM 文件组成。而 MS-DOS 4.0 则发布于 1988 年，由微软与 IBM 合作开发了部分代码。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;公告称，一位名叫 Connor「Starfrost」Hyde 的年轻英国研究员最近与微软前首席技术官 Ray Ozzie 就他收藏的一些软件进行了通信。在这些软盘中，Ray 发现了他在 Lotus 时发送的未公布版 DOS 4.0 测试版二进制文件。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;因此 Starfrost 联系了微软开源项目办公室（OSPO），探索发布 DOS 4 源代码的可能性。微软开发者社区副总裁 Scott Hanselman 在互联网档案管理员兼爱好者 Jeff Sponaugle 的帮助下，对这些原始磁盘进行了成像，并仔细扫描了「Ozzie Drop」中的原始印刷文档。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「微软和 IBM 的朋友们都认为这是一段值得分享的操作系统历史。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Jeff Wilcox 和 OSPO 访问了 Microsoft Archives，虽然没有找到 MT-DOS 的完整源代码，但确实找到了 MS DOS 4.00 源代码，以及一些额外的 beta 二进制文件、文档的 PDF 和磁盘镜像。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;341&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-10ee548b5edaa2c4531037cc909fc054294.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微软方面表示，他们将继续探索这些档案，如果有更多新发现，后续或将继续进行更新。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;更多详情可查看&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FMS-DOS&quot; target=&quot;_blank&quot;&gt;此处&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289596/open-sourcing-ms-dos-4-0</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289596/open-sourcing-ms-dos-4-0</guid>
            <pubDate>Fri, 26 Apr 2024 02:57:02 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>deepin 亮相 Intel 合作伙伴交流会，展示 AI 大模型应用最新成果</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;内容来源：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-attends-the-intel-channel-partner-networking-fair%2F&quot; target=&quot;_blank&quot;&gt;deepin 社区&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;2024 年 4 月 18 日，备受业界瞩目的 Intel Channel&amp;nbsp;Partner Networking Fair&amp;nbsp;在香港天际万豪酒店隆重举办。&lt;/p&gt; 
&lt;p&gt;在这场行业盛会上，deepin（深度）受邀参与了 Intel Demo Showcase 环节，向全球科技界的精英们展示了 deepin（深度）操作系统及人工智能大模型应用方面的最新成果。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;621&quot; src=&quot;https://storage.deepin.org/thread/202404260158486563_1.png&quot; width=&quot;840&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;自 2023 年 9 月&amp;nbsp;deepin（深度）宣布接入大模型，实现多款自研应用智能升级以来，持续加强在操作系统与 AI 结合方面的探索，&amp;nbsp;目前已实现了国内外主流大模型的能力接入，并封装成 deepin 的 AI 底层公共能力，打造 AI 助手，与邮箱、浏览器、全局搜索、看图和&amp;nbsp; &amp;nbsp;deepin-IDE 等应用深度融合，为用户带来智能化的体验。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;630&quot; src=&quot;https://storage.deepin.org/thread/202404260158565806_2.png&quot; width=&quot;837&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;deepin（深度）的亮相引起了 Intel 众多 ODM 和 Mini PC 厂家的热切关注和高度评价，纷纷对&amp;nbsp;deepin（深度）的 AI 创新功能表现出浓厚的兴趣，并表示非常期待进一步与&amp;nbsp;deepin（深度）展开深入合作。&lt;/p&gt; 
&lt;p&gt;值得一提的是，现场来自土耳其、印尼、日本等国家的采购商亲自体验了 deepin（深度）操作系统的应用效果，并对其性能、体验给予了高度的赞扬。这些伙伴的积极反馈不仅为&amp;nbsp;deepin（深度）在国际市场上树立了良好的口碑，也为公司未来在全球市场上的拓展与发展奠定了坚实的基础。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;628&quot; src=&quot;https://storage.deepin.org/thread/20240426015904497_3.png&quot; width=&quot;843&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通过本次会议，&amp;nbsp;deepin（深度）期待与更多国际伙伴建立合作关系，共同推动 deepin（深度）操作系统及 AI PC 应用在全球范围内的发展。我们相信，deepin（深度）的创新技术和优异性能将为全球用户带来更加智能、高效的体验，这种全球化的合作也将为 deepin（深度） 开拓更广阔的市场空间，并进一步提升其全球影响力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;附录：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;deepin V23 Beta3 镜像下载：&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;https://www.deepin.org/zh/download/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;历史版本软件包获取（V20 前）：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;https://distrowatch.com/index.php?distribution=deepin&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289580</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289580</guid>
            <pubDate>Fri, 26 Apr 2024 02:05:15 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>工作流引擎 Warm Flow 加入 Dromara 开源社区</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;&lt;span&gt;​&lt;/span&gt;作者介绍&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;名称：warm&lt;/li&gt; 
 &lt;li&gt;dromara 开源组织成员，dromara/warm-flow 作者&lt;/li&gt; 
 &lt;li&gt;研发工程师、技术经理，工作经验 8 年。此工作流已经持续开发有一年有余。&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/dromara/warm-flow.git&quot;&gt;https://gitee.com/dromara/warm-flow.git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fwarm-flow.git&quot; target=&quot;_blank&quot;&gt;https://github.com/dromara/warm-flow.git&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;历史背景&lt;/h3&gt; 
&lt;p&gt;flowable 和 activities 确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;学习曲线：&lt;/strong&gt; 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;复杂性：&lt;/strong&gt; 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;定制化需求：&lt;/strong&gt; 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;版本更新：&lt;/strong&gt; 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;阅读难度：&lt;/strong&gt; 全英文注释，对于英文不好的人来说，确实有门槛。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;那何不开发属于国人的工作流呢，为此耗时一年时间自研 warm-flow 工作流。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;warm-flow 能给你带来什么&lt;/h3&gt; 
&lt;p&gt;国产自研工作流，其特点简洁 (只有 6 张表) 但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持常规的流程流转，比如跳转、回退、审批和任意跳转&lt;/li&gt; 
 &lt;li&gt;支持转办、终止，任务最终回到发起人&lt;/li&gt; 
 &lt;li&gt;支持或签（会签和票签开发中）&lt;/li&gt; 
 &lt;li&gt;业务项目可不依赖流程设计器，组件可生成流程图片&lt;/li&gt; 
 &lt;li&gt;支持角色、部门和用户等权限配置&lt;/li&gt; 
 &lt;li&gt;支持监听器，参数传递，动态权限&lt;/li&gt; 
 &lt;li&gt;支持多租户&lt;/li&gt; 
 &lt;li&gt;支持互斥网关，并行网关&lt;/li&gt; 
 &lt;li&gt;支持条件表达式，可扩展&lt;/li&gt; 
 &lt;li&gt;支持不同 orm 框架和数据库扩展&lt;/li&gt; 
 &lt;li&gt;同时支持 spring 和 solon&lt;/li&gt; 
 &lt;li&gt;兼容 java8、java17 及以上版本，理论 11 也可以&lt;/li&gt; 
 &lt;li&gt;官方提供简单流程封装 demo 项目，很实用&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;接&lt;strong&gt;入 warm-flow 后妈妈再也不用担心我加班了&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;项目功能模块&lt;/h3&gt; 
&lt;h4&gt;流程流转管理&lt;/h4&gt; 
&lt;p&gt;​ 流程流转就像是 warm-flow 的驾驶人。让办理流程像喝水一样简单的事情。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;// 部署流程
public void deployFlow() throws Exception {
    defService.importXml(new FileInputStream(&quot;/xxx/leaveFlow-serial.xml&quot;));
}
// 发布流程
public void publish() {
    defService.publish(1219285650587652096L);
}
// 开启流程
public void startFlow() {
    insService.start(&quot;2&quot;, getUser());
}
// 跳转流程
public void skipFlow() {
    Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey())
                                .permissionFlag(Arrays.asList(&quot;role:1&quot;, &quot;role:2&quot;)));
}
//任意跳转
public void skipAnyNode() {
    Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey())
                .permissionFlag(Arrays.asList(&quot;role:1&quot;, &quot;role:2&quot;)).nodeCode(&quot;4&quot;));
}
// 终止流程
public void termination() {
    taskService.termination(1232001396254052352L, getUser());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;流程图管理&lt;/h4&gt; 
&lt;p&gt;​ 流程图管理就像 warm-flow 的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow 自研了流程图绘制，通过设计器获取座标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的 demo 项目中设计好导出 xml，业务系统再次导入即可）。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet/78238060_2218307.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;监听器管理&lt;/h4&gt; 
&lt;p&gt;监听器可以说是工作流引擎的上限，灵活度和可扩展性的核心人物&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;监听器类型 
  &lt;ul&gt; 
   &lt;li&gt;create：创建监听器，任务创建时执行&lt;/li&gt; 
   &lt;li&gt;start：开始监听器，任务开始办理时执行&lt;/li&gt; 
   &lt;li&gt;permission：权限监听器，办理任务动态设置权限&lt;/li&gt; 
   &lt;li&gt;assignment： 分派办理人监听器，分派后执行&lt;/li&gt; 
   &lt;li&gt;finish：结束监听器，当前任务完成后执行&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;监听器生命周期&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet/b12574ec_2218307.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;配置管理&lt;/h4&gt; 
&lt;p&gt;​ 配置文件可以让工作流使用更加方便，如虎添翼。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;配置文件目前支持 banner 图和填充器配置，后续还会增加多租户和软删除等。&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;# warm-flow 工作流配置
warm-flow:
  # 是否显示 banner 图，默认是
  banner: true
  #填充器（也通过代码防守注入）
  data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;填充器也可通过代码方式注入&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Configuration
public class WarmFlowConfig {

    @Bean
    public DataFillHandler dataFillHandler() {
        return new CustomDataFillHandler();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;扩展支持&lt;/h3&gt; 
&lt;h4&gt;orm 和数据库扩展&lt;/h4&gt; 
&lt;p&gt;​ 作为新时代的程序员不能固步自封，只支持 mybatis 和 msyql。所以目前已经解偶数据库操作，按照 mybatis 方式扩展其他的 orm 或者数据库类型即可&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet/321e9d93_2218307.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;条件表达式扩展&lt;/h4&gt; 
&lt;p&gt;​ 工作流引擎想要灵活跳转，就得有相应表达式，满足不同的条件，执行不同的任务&lt;/p&gt; 
&lt;p&gt;目前支持，并且支持规则扩展&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;, &amp;gt;=, &amp;lt;, &amp;lt;=, =, !=, like, not like
&lt;/code&gt;&lt;/pre&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289573</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289573</guid>
            <pubDate>Fri, 26 Apr 2024 01:17:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | 「鸿蒙原生版」微信；小镇里的「大模型」；全网最刚游戏公司；半个 AI 圈向李彦宏「开炮」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.4.25&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/289383/nginx-1-26-released&quot; target=&quot;_blank&quot;&gt;nginx 1.26.0 稳定版实验性支持 HTTP/3&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;主要变化&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;合并来自 1.25.x 主线分支的新功能和错误修复&lt;/li&gt; 
 &lt;li&gt;实验性支持 HTTP/3&lt;/li&gt; 
 &lt;li&gt;流模块 (stream module) 引入&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnginx.org%2Fen%2Fdocs%2Fstream%2Fngx_stream_core_module.html%23server_name&quot; target=&quot;_blank&quot;&gt;虚拟服务器&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持将流连接&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnginx.org%2Fen%2Fdocs%2Fstream%2Fngx_stream_pass_module.html&quot; target=&quot;_blank&quot;&gt;传递&lt;/a&gt;给监听套接字&lt;/li&gt; 
 &lt;li&gt;HTTP/2 on a&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnginx.org%2Fen%2Fdocs%2Fhttp%2Fngx_http_v2_module.html%23http2&quot; target=&quot;_blank&quot;&gt;per-server&lt;/a&gt;&amp;nbsp;basis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnginx.org%2Fen%2Fdownload.html&quot; target=&quot;_blank&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/289394/apple-openelm&quot; target=&quot;_blank&quot;&gt;苹果开源面向移动设备打造的小尺寸模型 OpenELM&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;苹果在 Hugging Face 平台上发布了一个「具有开源训练和推理框架的高效语言模型」，名为 OpenELM。&lt;/span&gt;OpenELM 使用分层缩放策略，可以有效地分配 Transformer 模型每一层的参数，从而提高准确率。例如，在参数量约为 10 亿的情况下，OpenELM 与 OLMo 相比准确率提升了 2.36%，同时所需的预训练 tokens 数量仅有原来的 50%。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;OpenELM 有四种尺寸：2.7 亿、4.5 亿、11 亿和 30 亿个参数。而微软 Phi-3 模型为 38 亿，因此前者在小型机型上运行成本更低，可在手机和笔记本电脑等移动设备上运行，是做 AI 硬件的绝佳小模型。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/289497/wechat-mmkv-support-harmonyos-next&quot; target=&quot;news&quot;&gt;最新开源代码证实！「鸿蒙原生版」微信正在积极开发中&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;MMKV 是微信客户端自用的 key-value 组件，于 2018 年&lt;a href=&quot;https://www.oschina.net/news/100210/tecent-opensource-mmkv&quot;&gt;正式开源&lt;/a&gt;，支持 Android /macOS/ Windows / POSIX 平台。MMKV 底层序列化 / 反序列化使用 protobuf 实现，性能高，稳定性强。从 2015 年中至今在微信上使用，其性能和稳定性经过了时间的验证。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;官方公告显示，最新发布的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FMMKV%2Freleases%2Ftag%2Fv1.3.5&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;MMKV&amp;nbsp;v1.3.5&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;已正式支持&amp;nbsp;HarmonyOS NEXT&lt;/strong&gt;，目前大部分功能在该平台上可正常使用。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-23464b9424efb7293554a65a98292c32ae6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;MMKV for HarmonyOS NEXT 使用文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FMMKV%2Fwiki%2Fohos_setup&quot; target=&quot;_blank&quot;&gt;https://github.com/Tencent/MMKV/wiki/ohos_setup&lt;/a&gt;&lt;/p&gt; 
&lt;h3 style=&quot;margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/289471/snowflake-s-open-source-arctic-llm&quot; target=&quot;_blank&quot;&gt;Snowflake 开源 Arctic LLM 挑战 Llama 3、Grok 等&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;数据库公司 Snowflake&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.snowflake.com%2Fblog%2Farctic-open-efficient-foundation-language-models-snowflake%2F%3Futm_cta%3Dwebsite-homepage-featured-blog-snowflake-artic-intro&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;开源了新的大语言模型&amp;nbsp;Arctic，号称 「高效智能且真正开放」。专为复杂企业工作负载而设计，以成本效益为主要亮点。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;与训练预算远高于所需的模型相比，它可以高效地完成 SQL 生成、编码和指令跟踪等企业智能任务，满足或超过这些领域的基准。 Snowflake 表示，这些指标对企业很重要，因为这些是构建生成式人工智能副驾驶所需的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Snowflake 声称，其 Arctic 模型的性能优于大多数开源模型和一些参数较少的闭源模型，并且使用较少的计算能力进行训练。较低的训练成本将使公司能够训练定制模型，而无需花费过多的资金。&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6182606334%2FObcWj1sxJ&quot; target=&quot;_blank&quot;&gt;字节和旷视发布的项目 HiDiffusion，代码开源了&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;无需训练，只需要一行代码就可以提高 SD 生成图像的清晰度和生成速度。&lt;/p&gt; 
   &lt;p&gt;支持将图像生成的分辨率提高至 4096×4096，同时将图像生成速度提升 1.5 至 6 倍。&lt;/p&gt; 
   &lt;p&gt;支持所有 SD 模型同时也支持 SD 模型的下游模型，比如 Playground。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;归藏的 AI 工具箱&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FObbl8kXSU&quot; target=&quot;_blank&quot;&gt;Meta 宣布推出 Llama 3 的介绍视频（双语字幕）&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;在我们深入了解 Llama 之前，先给大家介绍一些背景信息。我们实际上在 2023 年 2 月在 Meta 组织了一个团队。这个团队集结了公司内从 SysML 到模型开发，再到数据处理，甚至是一些在各个领域进行深度研究的顶级研究员。我们还聘请了一些创新型的人才。&lt;/p&gt; 
   &lt;p&gt;Llama 2 模型在 7 月份发布，可商业使用。参数范围从 7 到 70。这是当时的最先进成果。然后在八月和一月，我们发布了 Code Llama。12 月推出 Purple Llama 项目，关注安全和信任。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;宝玉 xp&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FObkDInc3e&quot; target=&quot;_blank&quot;&gt;开源可商用文本转语音模型&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;加拿大初创公司 MyShell 和 MIT 升级推出 OpenVoice V2。&lt;/p&gt; 
   &lt;p&gt;作为一种文本转语音模型，OpenVoice V2 仅使用一小段人声就能克隆语音。&lt;/p&gt; 
   &lt;p&gt;而且支持转成其他语言，包括英语、西班牙语、法语、中文、日语和韩语。&lt;/p&gt; 
   &lt;p&gt;PS：官方宣布 OpenVoice V2 完全开源，允许免费商业使用~&lt;/p&gt; 
   &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;在线体验：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lepton.ai%2Fplayground%2Fopenvoice&quot; target=&quot;_blank&quot;&gt;网页链接&lt;/a&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_7517400647_1c0126e47059050t3e.html&quot; target=&quot;_blank&quot;&gt;信息软件业，加快「拥抱」大模型&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;根据行动方案，北京将探索人工通用智能前沿技术，支持攻关内容生成、检索增强生成、人工智能内容安全标识、深度学习框架、向量数据库等大模型工具类软件，搭建大模型原生软件应用商店、大模型安全靶场。以建设单体万卡智能算力中心为目标，组织攻关算力芯片、高性能通信、调度系统、容器编排等云计算关键技术。支持在教育、医疗、文化、工业等领域建设人工智能场景应用实验室，打造示范性场景落地项目。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;人民资讯&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_3205514555_bf10453b02001lvrq.html&quot; target=&quot;_blank&quot;&gt;中国经济向前「进」丨小镇里的「大模型」 这里有 100 万台电脑的算力→&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;进军，代表着在新领域开拓新空间。当前我国不断增长的高技术产业，就体现出了这样一种势头。&lt;/p&gt; 
 &lt;p&gt;同比增长 11.4%!这是高技术产业投资跑出的增速，这个增速比全部投资增速还要高出 6.9 个百分点，投资新引擎的地位日渐凸显。&lt;/p&gt; 
 &lt;p&gt;分领域来看，高技术制造业投资同比增长 10.8%!高技术服务业投资同比增长 12.7%!&lt;/p&gt; 
 &lt;p&gt;这组高速增长的数据，意味着有更多企业正在抓紧向「高技术」攀登，向前沿领域进军。人工智能可以说是今年最火的领域之一。在浙江杭州钱塘江畔，一个人工智能小镇里，大模型、各类 AI 应用正在加速生长。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;安徽财经网&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fi.ifeng.com%2Fc%2F8Z3yMkcdKSE&quot; target=&quot;_blank&quot;&gt;英伟达收购两家 AI 创企，要让 AI 芯片变得更便宜&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;英伟达正成为 AI 热潮中最活跃的企业投资方之一，在去年投资 30 多家创企后，现在它的投资名单又新增两家以色列 AI 创企——Run:ai 与 Deci。&lt;/p&gt; 
 &lt;p&gt;英伟达今日宣布达成一项最终协议，收购 Run:ai。据 CTech 报道，这笔交易价预计约为 7 亿美元。根据 LinkedIn，Run:ai 约有 150 名员工，累计融资 1.18 亿美元；Deci 拥有约 100 名员工，累计融资 5500 万美元。英伟达与 Deci 的交易未公开披露，交易价未知。&lt;/p&gt; 
 &lt;p&gt;据 The Information 报道，被英伟达最近达成收购交易的这两家创企，旨在降低开发或运行生成式 AI 模型的成本，帮助客户更有效地利用 AI 计算资源，进而提振英伟达 AI 芯片的需求。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;- &lt;strong&gt;芯东西&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkevmo314%2Fmagic-copy&quot; target=&quot;_blank&quot;&gt;kevmo314/magic-copy&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;248&quot; src=&quot;https://static.oschina.net/uploads/space/2023/0414/184116_YyZh_5430600.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkevmo314%2Fmagic-copy&quot; target=&quot;_blank&quot;&gt;https://github.com/kevmo314/magic-copy&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;Magic Copy 是一个 Chrome 扩展，可从图像中提取前景对象并将其复制到剪贴板，基于&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;&amp;nbsp;Meta 的 Segment Anything Model。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5783135/blog/11054744&quot; target=&quot;_blank&quot;&gt;大模型下 B 端前端代码辅助生成的思考与实践&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;B 端页面列表、表单、详情都支持生成，链路大概可分为以下几个步骤。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;img alt=&quot;&quot; height=&quot;312&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-865640d7af801189d2dad45b3f22b568e07.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;输入自然语言&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;结合大模型按照指定规则提取出相应搭建信息&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;搭建信息结合代码模板与 AST 输出前端代码&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;事件点评&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289460&quot; target=&quot;_blank&quot;&gt;知名游戏公司出新规：员工娶妻彩礼不得超过 10 万元&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;日前知名游戏公司多益网络发布公告称，公司规定：公司任何员工娶妻彩礼不得超过 10 万人民币价值，否则全公司通报批评并严惩。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;公开资料显示，多益网络成立于 2006 年 7 月，总部位于广东省广州市，公司专注于网络游戏的研发与运营，是中国十大网游研发及运营公司之一。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;多益网络的业务涵盖大型网络游戏、移动游戏、电子邮箱、IM 即时通讯软件和社交网站等，旗下拥有多款知名游戏产品，如《神武 4》端手游、《梦想世界》端手游等。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;224&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8e5d0f2f76f8ec6b802487165dda682abd6.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一规定在业界引起了一定的争议。一方面，它反映了企业对员工个人生活的干预，这在现代企业管理中较为罕见。另一方面，这也反映了企业在制定内部政策时对文化和社会习俗的考虑。彩礼传统上被视为男性家庭对女性家庭的补偿，这一规定可能被解读为对这一传统性别角色的挑战，从而引发关于性别平等和传统性别角色定位的讨论。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;以及可能会影响员工对公司的看法和忠诚度，同时也可能引起公众对企业文化和社会责任的讨论，反映了当前社会对传统习俗与现代企业管理的冲突的关注。在现代企业环境中，如何平衡企业文化、员工个人权益以及社会习俗，是一个值得深思的问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;此举还可能会引起公众对多益网络企业形象的关注，影响其品牌形象和公众信任度。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289441/ftc-bans-noncompete-agreements&quot; target=&quot;_blank&quot;&gt;美国废除绝大部分职业的《竞业禁止协议》&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;4 月 24 日，美国媒体 NPR&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.npr.org%2F2024%2F04%2F23%2F1246655366%2Fftc-bans-noncompete-agreements-lina-khan&quot; target=&quot;_blank&quot;&gt;报道称&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，美国联邦贸易委员会 (FTC) 周二发以 3 票对 2 票的微弱优势&lt;/span&gt;&lt;strong&gt;禁止了几乎所有职业的竞业禁止协议&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。此类协议会禁止员工加入竞争企业或创办自己的企业。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;据称这是 50 多年来 FTC 官员首次发布一项规定，要求在整个经济范围内改变公司企业的竞争方式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;FTC 主席 Lina Khan 在一份声明中表示：「竞业禁止条款压低了工资，遏制了新想法，并剥夺了美国经济的活力。一旦禁止竞业禁止条款，每年将会有 8500 多家新的初创公司诞生，员工平均每年也将多赚 524 美元。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6ce1bff7b6ae17ffeefd93492175c935f26.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FTC 废除竞业禁止协议的决定不仅对员工和雇主产生影响，还可能对市场竞争、法律框架以及经济结构产生深远的影响。这一决策反映了政府在平衡商业利益和劳动力权益方面的重要作用，同时也表明了在不断变化的经济环境中，法律和政策需要不断适应和调整。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;竞业禁止协议的废除意味着员工将有更大的自由度去选择他们的工作，而不受前雇主合同的限制。这有助于提高员工的工作满意度和职业流动性，同时促进市场竞争。废除竞业禁止协议将减少企业间的垄断行为，增强市场竞争。这有助于新企业的成立和发展，从而促进创新和经济增长。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FTC 估计，这一禁令将使工资和福利在十年内增加 4880 亿美元。这表明废除竞业禁止协议可能对工人的经济福祉产生积极影响。虽然 FTC 的决定已经作出，但预计会有来自雇主和商业团体的法律挑战。这些挑战可能会延迟该禁令的实施，甚至可能导致其最终无法生效。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于企业来说，这一决策意味着他们需要寻找其他方式来保护其商业秘密和知识产权，而不是依赖于竞业禁止协议。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289440/is-php-still-worth-it-in-2024&quot; target=&quot;_blank&quot;&gt;PHP 在 2024 年还值得学习吗？&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;IOBE 在&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/news/286796/tiobe-index-202404&quot;&gt;2024&amp;nbsp;年 4 月榜单&lt;/a&gt;中曾指出，随着众多竞争对手进入市场以及语言本身出现的一些问题；PHP 已经不复往日辉煌，在 TIOBE 指数中的排名跌至历史最低点（第 17 位）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在有关 PHP 已经日渐没落的言论四起的背景下，软件工程师&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Sotiris Kourouklis&amp;nbsp;&lt;span style=&quot;color:#000000&quot;&gt;近日发布了一篇名为 「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsotergreco.com%2Fis-php-still-worth-it-in-2024&quot; target=&quot;_blank&quot;&gt;Is PHP still worth it in 2024 ?&lt;/a&gt;」 的博客文章，对 PHP 语言进行了一番详尽的分析，探讨该语言在现代 Web&amp;nbsp;开发中的实用性和效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;并最终得出结论称，&lt;strong&gt;PHP 在 2024 年仍然是 Web 开发的一个不错选择。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;203&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-138c3b04e87d1fef7bf375ce68eae75cd0b.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;PHP 在 2024 年的编程语言发展和市场方面仍具有重要地位。尽管面临新兴技术的挑战，但其在 Web 开发领域的普及度、社区支持、灵活性和与其他技术的良好集成，使其继续在市场上保持竞争力。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;PHP 仍然是网络开发中最受欢迎的编程语言之一，支撑着包括 Facebook、Wikipedia 和 WordPress 在内的大量网站。PHP 社区仍然活跃，持续有贡献者参与 PHP 核心的开发，这些贡献不仅包括错误修复和小补丁，还包括许多前瞻性的增强，推动 PHP 进入现代网络开发的现代时代。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xinhuanet.com%2Ftech%2F20240425%2Fb4292ac6fe234709ac2fd21ddb15d0ce%2Fc.html&quot; target=&quot;_blank&quot;&gt;周鸿祎参加中关村论坛：2024 是大模型场景之年，有望实现「万模万企万场景」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#1a1a1a; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;360 集团创始人周鸿祎认为，大模型不是泡沫，将引领新一轮工业革命。大模型有两条路，一条是越做越大，OpenAI 走的就是这条路。这条路需要政府层面多指导，鼓励开源、开放、共享的理念，组织一个开源社区，让更多人参与进来，共同推动技术的进步，实现产业的跨越式发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1a1a1a; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;「除了越做越大，还能越做越专。专业大模型这条路，可以让我们不被 OpenAI 牵着鼻子走。2023 年，是百模大战，解决了大模型从无到有的问题。2024 年则是场景之年，如果有一万家企业寻找了一万个场景，开发了一万个大模型，那大模型就真正进入百行千业。新一轮工业革命因此会在中国率先出现。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;央广网&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_1642634100_61e89b7401901e0cu.html&quot; target=&quot;_blank&quot;&gt;半个 AI 圈，向李彦宏「开炮」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#27282d; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;「目前李彦宏认为开源模型会越来越落后，最主要的理由还是训练和推理成本高。」但事实上，「office、数据库等人力成本很高的项目也有许多不错的开源项目，为何大模型就不行了呢？」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#27282d; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;「如果百度市占率高，那你的对手可能就会考虑推开源版本，哪怕是不如闭源版本好，但是客观上也是一个选择，有些客户的需求也未必很高，那开源版本就足够了。」在他看来，「开源闭源都是一种选择，很难一刀切地评价开源好坏。毕竟，开源赚的是名气和社区，闭源做的是收入。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;新浪科技&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8Z41fmEzREk&quot; target=&quot;_blank&quot;&gt;一个大模型引发的停牌：商汤科技股价为何一日暴涨 30%？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;商汤将股价暴涨的原因指向了日前发布的「日日新 SenseNova 5.0」大模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;不过，时代周报记者从多位 AI 从业者口中获知，「日日新 5.0」带来的行业震动也许没有想象中那么大。有从业者表示，如今大模型的突破已经很难在科技圈掀起波澜了。在他们看来，国内各家大模型的差距并不大，且多为大参数，除非有完全不同的技术路线出现，或者是有开源的且通过小参数、小算力达到良好的效果。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;时代周报&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.ce.cn%2Fcysc%2Ftech%2Fgd2012%2F202404%2F25%2Ft20240425_38982717.shtml&quot; target=&quot;_blank&quot;&gt;鸿蒙系统迎「决战时刻」 原生应用成「关键之战」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;前方无限风光，脚步铿锵有力。站在 2024 年，华为鸿蒙操作系统的建设迎来「决战时刻」。日前，中国证券报记者调研发现，尽管面临巨大的挑战和不确定性，但鸿蒙的成功已经具备了多重有利因素，而一旦跨过临界点，鸿蒙将实现华为在操作系统领域的历史性跨越。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;中国证券报&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F5vKismrj3JQLRTwPM2Akag&quot; target=&quot;_blank&quot;&gt;全网最刚游戏公司&lt;span&gt;——&lt;/span&gt;规定员工娶妻彩礼不得超过 10 万元&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：公司效益越好，工资就越降的多？&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：这个董事长，可以了解一下一夫多妻制的推崇者&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：不是正常人能想到的观点&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：「公司效益良好，允许员工自愿降薪 10%」 这真是奇葩中的战斗机啊&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：这个董事长戏真多啊，上蹿下跳的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：为什么不要求女性要多少，而要求娶妻给多少&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：多益的女员工已经被裁得差不多了&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：他就是想让你们单身好加班&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289272/us-china-risc-v-risk&quot; target=&quot;_blank&quot;&gt;路透社：美国正在审查中国使用 RISC-V 芯片技术的风险&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：看来技术真的有国界&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：这东西为什么开源呢？&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：不开源早被 arm 灭了&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289250/2024-bad-bot-report&quot; target=&quot;_blank&quot;&gt;近一半的互联网流量是机器人，32% 是恶意机器人&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：人类在用互联网训练大量恶意机器人，等这些 AI 真的出现了智能后果难以想象，终结那一天时问他为啥如此，他说都是人类教的。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：恶意的不是机器人，是有意识的&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;程序员梗图&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0c69f9102f46babc98decd7d1644947ed7c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289528</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289528</guid>
            <pubDate>Thu, 25 Apr 2024 11:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>一文搞懂 Vue3 defineModel 双向绑定：告别繁琐代码！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;前言&lt;/h1&gt; 
&lt;p&gt;随着&lt;code&gt;vue3.4&lt;/code&gt;版本的发布，&lt;code&gt;defineModel&lt;/code&gt;也正式转正了。它可以简化父子组件之间的双向绑定，是目前官方推荐的双向绑定实现方式。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;code&gt;vue3.4&lt;/code&gt;以前如何实现双向绑定&lt;/h1&gt; 
&lt;p&gt;大家应该都知道&lt;code&gt;v-model&lt;/code&gt;只是一个语法糖，实际就是给组件定义了&lt;code&gt;modelValue&lt;/code&gt;属性和监听&lt;code&gt;update:modelValue&lt;/code&gt;事件，所以我们以前要实现数据双向绑定需要给子组件定义一个&lt;code&gt;modelValue&lt;/code&gt;属性，并且在子组件内要更新&lt;code&gt;modelValue&lt;/code&gt;值时需要&lt;code&gt;emit&lt;/code&gt;出去一个&lt;code&gt;update:modelValue&lt;/code&gt;事件，将新的值作为第二个字段传出去。&lt;/p&gt; 
&lt;p&gt;我们来看一个简单的例子，父组件的代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;template&amp;gt;
  &amp;lt;CommonInput v-model=&quot;inputValue&quot; /&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup lang=&quot;ts&quot;&amp;gt;
import { ref } from &quot;vue&quot;;

const inputValue = ref();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;子组件的代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;template&amp;gt;
  &amp;lt;input
    :value=&quot;props.modelValue&quot;
    @input=&quot;emit(&#39;update:modelValue&#39;, $event.target.value)&quot;
  /&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup lang=&quot;ts&quot;&amp;gt;
const props = defineProps([&quot;modelValue&quot;]);
const emit = defineEmits([&quot;update:modelValue&quot;]);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;上面的例子大家应该很熟悉，以前都是这样去实现&lt;code&gt;v-model&lt;/code&gt;双向绑定的。但是存在一个问题就是&lt;code&gt;input&lt;/code&gt;输入框其实支持直接使用&lt;code&gt;v-model&lt;/code&gt;的，我们这里却没有使用&lt;code&gt;v-model&lt;/code&gt;而是在&lt;code&gt;input&lt;/code&gt;输入框上面添加&lt;code&gt;value&lt;/code&gt;属性和&lt;code&gt;input&lt;/code&gt;事件。&lt;/p&gt; 
&lt;p&gt;原因是因为从&lt;code&gt;vue2&lt;/code&gt;开始就已经是单向数据流，在子组件中是不能直接修改&lt;code&gt;props&lt;/code&gt;中的值。而是应该由子组件中抛出一个事件，由父组件去监听这个事件，然后去修改父组件中传递给&lt;code&gt;props&lt;/code&gt;的变量。如果这里我们给&lt;code&gt;input&lt;/code&gt;输入框直接加一个&lt;code&gt;v-model=&quot;props.modelValue&quot;&lt;/code&gt;，那么其实是在子组件内直接修改&lt;code&gt;props&lt;/code&gt;中的&lt;code&gt;modelValue&lt;/code&gt;。由於单向数据流的原因，&lt;code&gt;vue&lt;/code&gt;是不支持直接修改&lt;code&gt;props&lt;/code&gt;的，所以我们才需要将代码写成上面的样子。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;使用&lt;code&gt;defineModel&lt;/code&gt;实现数据双向绑定&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;defineModel&lt;/code&gt;是一个宏，所以不需要从 vue 中&lt;code&gt;import&lt;/code&gt;导入，直接使用就可以了。这个宏可以用来声明一个双向绑定 prop，通过父组件的&amp;nbsp;&lt;code&gt;v-model&lt;/code&gt;&amp;nbsp;来使用。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;基础 demo&lt;/h2&gt; 
&lt;p&gt;父组件的代码和前面是一样的，如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;template&amp;gt;
  &amp;lt;CommonInput v-model=&quot;inputValue&quot; /&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup lang=&quot;ts&quot;&amp;gt;
import { ref } from &quot;vue&quot;;

const inputValue = ref();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;子组件的代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;template&amp;gt;
  &amp;lt;input v-model=&quot;model&quot; /&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup lang=&quot;ts&quot;&amp;gt;
const model = defineModel();
model.value = &quot;xxx&quot;;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在上面的例子中我们直接将&lt;code&gt;defineModel&lt;/code&gt;的返回值使用&lt;code&gt;v-model&lt;/code&gt;绑定到 input 输入框上面，无需定义 &lt;code&gt;modelValue&lt;/code&gt; 属性和监听 &lt;code&gt;update:modelValue&lt;/code&gt; 事件，代码更加简洁。&lt;code&gt;defineModel&lt;/code&gt;的返回值是一个&lt;code&gt;ref&lt;/code&gt;，我们可以在子组件中修改&lt;code&gt;model&lt;/code&gt;变量的值，并且父组件中的&lt;code&gt;inputValue&lt;/code&gt;变量的值也会同步更新，这样就可以实现双向绑定。&lt;/p&gt; 
&lt;p&gt;那么问题来了，从&lt;code&gt;vue2&lt;/code&gt;开始就变成了单向数据流。这里修改子组件的值后，父组件的变量值也被修改了，那这不就变回了&lt;code&gt;vue1&lt;/code&gt;的双向数据流了吗？其实并不是这样的，这里还是单向数据流，我们接下来会简单讲一下&lt;code&gt;defineModel&lt;/code&gt;的实现原理。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;实现原理&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;defineModel&lt;/code&gt;其实就是在子组件内定义了一个叫&lt;code&gt;model&lt;/code&gt;的 ref 变量和&lt;code&gt;modelValue&lt;/code&gt;的 props，并且&lt;code&gt;watch&lt;/code&gt;了 props 中的&lt;code&gt;modelValue&lt;/code&gt;。当&lt;code&gt;props&lt;/code&gt;中的&lt;code&gt;modelValue&lt;/code&gt;的值改变后会同步更新&lt;code&gt;model&lt;/code&gt;变量的值。并且当在子组件内改变&lt;code&gt;model&lt;/code&gt;变量的值后会抛出&lt;code&gt;update:modelValue&lt;/code&gt;事件，父组件收到这个事件后就会更新父组件中对应的变量值。&lt;/p&gt; 
&lt;p&gt;实现原理代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;template&amp;gt;
  &amp;lt;input v-model=&quot;model&quot; /&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup lang=&quot;ts&quot;&amp;gt;
import { ref, watch } from &quot;vue&quot;;

const props = defineProps([&quot;modelValue&quot;]);
const emit = defineEmits([&quot;update:modelValue&quot;]);
const model = ref();

watch(
  () =&amp;gt; props.modelValue,
  () =&amp;gt; {
    model.value = props.modelValue;
  }
);
watch(model, () =&amp;gt; {
  emit(&quot;update:modelValue&quot;, model.value);
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;看了上面的代码后你应该了解到了为什么可以在子组件内直接修改&lt;code&gt;defineModel&lt;/code&gt;的返回值后父组件对应的变量也会同步更新了吧。我们修改的其实是&lt;code&gt;defineModel&lt;/code&gt;返回的&lt;code&gt;ref&lt;/code&gt;变量，而不是直接修改 props 中的&lt;code&gt;modelValue&lt;/code&gt;。实现方式还是和&lt;code&gt;vue3.4&lt;/code&gt;以前实现双向绑定一样的，只是&lt;code&gt;defineModel&lt;/code&gt;这个宏帮我们将以前的那些繁琐的代码给封装到内部实现了。&lt;/p&gt; 
&lt;p&gt;其实&lt;code&gt;defineModel&lt;/code&gt;的源码中是使用 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vuejs.org%2Fapi%2Freactivity-advanced.html%23customref&quot; target=&quot;_blank&quot;&gt;customRef&lt;/a&gt; 和 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vuejs.org%2Fapi%2Freactivity-core.html%23watchsynceffect&quot; target=&quot;_blank&quot;&gt;watchSyncEffect&lt;/a&gt; 去实现的，我这里是为了让大家能够更容易的明白&lt;code&gt;defineModel&lt;/code&gt;的实现原理才举的&lt;code&gt;ref&lt;/code&gt;和&lt;code&gt;watch&lt;/code&gt;的例子。如果大家对&lt;code&gt;defineModel&lt;/code&gt;的源码感兴趣，请在评论区留言，如果感兴趣的小伙伴比较多，我会在下一期出一篇&lt;code&gt;defineModel&lt;/code&gt;源码的文章。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;code&gt;defineModel&lt;/code&gt;如何定义&lt;code&gt;type&lt;/code&gt;、&lt;code&gt;default&lt;/code&gt;等&lt;/h1&gt; 
&lt;p&gt;既然&lt;code&gt;defineModel&lt;/code&gt;是声明了一个 prop，那同样也可以定义 prop 的&lt;code&gt;type&lt;/code&gt;、&lt;code&gt;default&lt;/code&gt;。具体代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const model = defineModel({ type: String, default: &quot;20&quot; });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;除了支持&lt;code&gt;type&lt;/code&gt;和&lt;code&gt;default&lt;/code&gt;，也支持&lt;code&gt;required&lt;/code&gt;和&lt;code&gt;validator&lt;/code&gt;，用法和定义&lt;code&gt;prop&lt;/code&gt;时一样。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_7&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;code&gt;defineModel&lt;/code&gt;如何实现多个 &amp;nbsp; &lt;code&gt;v-model&lt;/code&gt; &amp;nbsp; 绑定&lt;/h1&gt; 
&lt;p&gt;同样也支持在父组件上面实现多个 &amp;nbsp; &lt;code&gt;v-model&lt;/code&gt; &amp;nbsp; 绑定，这时我们给&lt;code&gt;defineModel&lt;/code&gt;传的第一个参数就不是对象了，而是一个字符串。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const model1 = defineModel(&quot;count1&quot;);
const model2 = defineModel(&quot;count2&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在父组件中使用&lt;code&gt;v-model&lt;/code&gt;时代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;CommonInput v-model:count1=&quot;inputValue1&quot; /&amp;gt;
&amp;lt;CommonInput v-model:count2=&quot;inputValue2&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;我们也可以在多个&lt;code&gt;v-model&lt;/code&gt;中定义&lt;code&gt;type&lt;/code&gt;、&lt;code&gt;default&lt;/code&gt;等&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const model1 = defineModel(&quot;count1&quot;, {
  type: String,
  default: &quot;aaa&quot;,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;span id=&quot;OSC_h1_8&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;code&gt;defineModel&lt;/code&gt;如何使用内置修饰符和自定义修饰符&lt;/h1&gt; 
&lt;p&gt;如果要使用系统内置的修饰符比如&lt;code&gt;trim&lt;/code&gt;，父组件的写法还是和之前是一样的：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;CommonInput v-model.trim=&quot;inputValue&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;子组件也无需做任何修改，和上面其他的&lt;code&gt;defineModel&lt;/code&gt;例子是一样的：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const model = defineModel();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;defineModel&lt;/code&gt;也支持自定义修饰符，比如我们要实现一个将输入框的字母全部变成大写的&lt;code&gt;uppercase&lt;/code&gt;自定义修饰符，同时也需要使用内置的&lt;code&gt;trim&lt;/code&gt;修饰符。&lt;/p&gt; 
&lt;p&gt;我们的父组件代码如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;CommonInput v-model.trim.uppercase=&quot;inputValue&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;我们的子组件需要写成下面这样的：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;template&amp;gt;
  &amp;lt;input v-model=&quot;modelValue&quot; /&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script setup lang=&quot;ts&quot;&amp;gt;
const [modelValue, modelModifiers] = defineModel({
  // get 我们这里不需要
  set(value) {
    if (modelModifiers.uppercase) {
      return value?.toUpperCase();
    }
  },
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;这时我们给&lt;code&gt;defineModel&lt;/code&gt;传进去的第一个参数就是包含&lt;code&gt;get&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;set&lt;/code&gt;&amp;nbsp;方法的对象，当对&lt;code&gt;modelValue&lt;/code&gt;变量进行读操作时会走到&lt;code&gt;get&lt;/code&gt;方法里面去，当对&lt;code&gt;modelValue&lt;/code&gt;变量进行写操作时会走到&lt;code&gt;set&lt;/code&gt;方法里面去。如果只需要对写操作进行拦截，那么可以不用写&lt;code&gt;get&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;defineModel&lt;/code&gt;的返回值也可以解构成两个变量，第一个变量就是我们前面几个例子的&lt;code&gt;ref&lt;/code&gt;对象，用于给&lt;code&gt;v-model&lt;/code&gt;绑定。第二个变量是一个对象，里面包含了有哪些修饰符，在这里我们有&lt;code&gt;trim&lt;/code&gt;和&lt;code&gt;uppercase&lt;/code&gt;两个修饰符，所以&lt;code&gt;modelModifiers&lt;/code&gt;的值为：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
  trim: true,
  uppercase: true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在输入框进行输入时，就会走到&lt;code&gt;set&lt;/code&gt;方法里面，然后调用&lt;code&gt;value?.toUpperCase()&lt;/code&gt;就可以实现将输入的字母变成大写字母。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_9&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;总结&lt;/h1&gt; 
&lt;p&gt;这篇文章介绍了如何使用&lt;code&gt;defineModel&lt;/code&gt;宏实现双向绑定以及&lt;code&gt;defineModel&lt;/code&gt;的实现原理。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在子组件内调用&lt;code&gt;defineModel&lt;/code&gt;宏会返回一个&lt;code&gt;ref&lt;/code&gt;对象，在子组件内可以直接对这个&lt;code&gt;ref&lt;/code&gt;对象进行赋值，父组件内的相应变量也会同步修改。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;defineModel&lt;/code&gt;其实就是在子组件内定义了一个 ref 变量和对应的 prop，然后监听了对应的 prop 保持 ref 变量的值始终和对应的 prop 是一样的。在子组件内当修改 ref 变量值时会抛出一个事件给父组件，让父组件更新对应的变量值，从而实现双向绑定。&lt;/li&gt; 
 &lt;li&gt;使用&lt;code&gt;defineModel({ type: String, default: &quot;20&quot; })&lt;/code&gt;就可以定义 prop 的&lt;code&gt;type&lt;/code&gt;和&lt;code&gt;default&lt;/code&gt;等选项。&lt;/li&gt; 
 &lt;li&gt;使用&lt;code&gt;defineModel(&quot;count&quot;)&lt;/code&gt;就可以实现多个&lt;code&gt;v-model&lt;/code&gt;绑定。&lt;/li&gt; 
 &lt;li&gt;通过解构&amp;nbsp;&lt;code&gt;defineModel()&lt;/code&gt;&amp;nbsp;的返回值拿到&lt;code&gt;modelModifiers&lt;/code&gt;修饰符对象，配合&amp;nbsp;&lt;code&gt;get&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;set&lt;/code&gt;&amp;nbsp;转换器选项实现自定义修饰符。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;关注公众号：【前端欧阳】，解锁我更多 vue 原理文章。还可以加我微信，让你的朋友圈多一位对 vue 有深入理解的人。也可以通过微信给我说你想看哪些 vue 原理文章，我会根据大家的反馈进行创作。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3322222/blog/11053418</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3322222/blog/11053418</guid>
            <pubDate>Thu, 25 Apr 2024 09:02:10 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>微信客户端底层组件 MMKV 官宣支持 HarmonyOS NEXT</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;MMKV 是微信客户端自用的 key-value 组件，于 2018 年&lt;a href=&quot;https://www.oschina.net/news/100210/tecent-opensource-mmkv&quot;&gt;正式开源&lt;/a&gt;，支持 Android / macOS / Windows / POSIX 平台。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;MMKV 是基于 mmap 内存映射的 key-value 组件，底层序列化/反序列化使用 protobuf 实现，性能高，稳定性强。从 2015 年中至今在微信上使用，其性能和稳定性经过了时间的验证。&lt;/p&gt; 
 &lt;p&gt;近期也已移植到 Android / macOS / Windows / POSIX / HarmonyOS NEXT 等平台，一并开源。&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-98fec1f555bf09389fa2ebffea665cf744d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;官方公告显示，最新发布的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FMMKV%2Freleases%2Ftag%2Fv1.3.5&quot; target=&quot;_blank&quot;&gt; &lt;strong&gt;MMKV&amp;nbsp;v1.3.5 &lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;已正式支持&amp;nbsp;HarmonyOS NEXT&lt;/strong&gt;，目前大部分功能在该平台上可正常使用。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-23464b9424efb7293554a65a98292c32ae6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MMKV for HarmonyOS NEXT 使用文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FMMKV%2Fwiki%2Fohos_setup&quot; target=&quot;_blank&quot;&gt;https://github.com/Tencent/MMKV/wiki/ohos_setup&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;此前一度有传言称，华为鸿蒙和微信之间的合作谈崩，但之后又有消息称华为与腾讯关于微信推送机制谈判结束，同意华为采用同 iOS 墓碑机制的推送方式，微信接入鸿蒙 NEXT 版本。&lt;/p&gt; 
&lt;p&gt;近日有接近华为的人士&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cls.cn%2Fdetail%2F1650707&quot; target=&quot;_blank&quot;&gt;告诉《科创板日报》&lt;/a&gt;：谈崩是谣言，进度还不方便透露，到时会有正式官宣。&lt;/p&gt; 
&lt;p&gt;目前看来，&lt;span&gt;微信的鸿蒙原生版确实正在开发中，并且已经取得了一定的进展。这对于鸿蒙操作系统的推广和生态建设是一个积极信号，有助于吸引更多用户和开发者加入鸿蒙生态。&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;延伸阅读&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/281254&quot; target=&quot;_blank&quot;&gt;深圳发布政策支持鸿蒙原生应用发展&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/283921&quot; target=&quot;_blank&quot;&gt;深圳成立鸿蒙生态创新中心&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/288303&quot; target=&quot;news&quot;&gt;华为：用 1 年时间将 5000 个常用手机应用全面迁移至鸿蒙&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289497/wechat-mmkv-support-harmonyos-next</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289497/wechat-mmkv-support-harmonyos-next</guid>
            <pubDate>Thu, 25 Apr 2024 08:49:10 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Snowflake 开源 Arctic LLM 挑战 Llama 3、Grok 等</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;数据库公司 Snowflake &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.snowflake.com%2Fblog%2Farctic-open-efficient-foundation-language-models-snowflake%2F%3Futm_cta%3Dwebsite-homepage-featured-blog-snowflake-artic-intro&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;开源了新的大语言模型&amp;nbsp;Arctic，号称「高效智能且真正开放」。专为复杂企业工作负载而设计，以成本效益为主要亮点。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;与训练预算远高于所需的模型相比，它可以高效地完成 SQL 生成、编码和指令跟踪等企业智能任务，满足或超过这些领域的基准。 Snowflake 表示，这些指标对企业很重要，因为这些是构建生成式人工智能副驾驶所需的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Snowflake 声称，其 Arctic 模型的性能优于大多数开源模型和一些参数较少的闭源模型，并且使用较少的计算能力进行训练。较低的训练成本将使公司能够训练定制模型，而无需花费过多的资金。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Arctic 在企业指标上与 LLAMA 3 8B 和 LLAMA 2 70B 相当或更好，而使用的训练计算预算不到 1/2。同样，尽管训练预算减少了 17 倍，Arctic 在编码（HumanEval+ 和 MBPP+）、SQL（Spider）和指令跟踪（IFEval）等方面仍然与 Llama3 70B 相当。且尽管使用的计算量比 DBRX 少 7 倍，但它在语言理解和推理（11 个指标的集合）方面仍然具有竞争力，同时在数学 (GSM8K) 方面表现更好。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;358&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0509fae3f9129291ed25c678f9085b5c3d7.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;189&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6a7436479c9aa80a1eb974196c00f123e80.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Snowflake AI 研究团队在一篇博客文章中写道： 「传统上，使用 LLM 构建顶级企业级智能的成本高昂，而且资源匮乏，通常需要花费数千万至数亿美元。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Snowflake 首席执行官 Sridhar Ramaswamy 表示：「通过以真正开放的方式向 AI 社区提供行业领先的智能和效率，我们正在进一步拓展开源 AI 的前沿。我们与 Arctic 的研究将显着增强我们为客户提供可靠、高效的人工智能的能力。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Snowflake 在 Apache 2.0 许可证下提供 Arctic 及其其他文本嵌入模型以及代码模板和模型权重，允许商业使用而无需任何许可成本。Arctic LLM 现已通过 Hugging Face 提供。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289471/snowflake-s-open-source-arctic-llm</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289471/snowflake-s-open-source-arctic-llm</guid>
            <pubDate>Thu, 25 Apr 2024 07:40:12 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>「deepin 生态共建小组」正式启动！三大生态共建项目，速来 ！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;383&quot; src=&quot;https://storage.deepin.org/thread/202404250700454329_%E5%95%86%E4%B8%9A%E6%8A%95%E8%B5%84%E8%93%9D%E8%89%B2%E7%AE%80%E7%BA%A6%E5%85%AC%E4%BC%97%E5%8F%B7%E9%A6%96%E5%9B%BE__2024-04-25+14_58_57.jpg&quot; width=&quot;900&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;基于社区开源精神，为提高大家对 deepin 生态建设的参与感，应用商店将正式开放众多软件给广大开源爱好者进行维护。参与小组工作可获得多项专属小组福利，工作项目分为玲珑格式迁移、wine 应用打包、deb 原生应用维护。&lt;/p&gt; 
&lt;h1&gt;&amp;nbsp;&lt;strong&gt;招募条件&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;1）不限性别年龄职业地区，认同开源文化，愿投身 deepin 软件生态建设，且有一定的时间投入；&lt;/p&gt; 
&lt;p&gt;2）有一定的计算机基础，拥有一定的 linux 技术积累，对源码有一定的认识；&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;项目介绍&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;项目一、玲珑格式迁移&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目目标：玲珑是一种新型的独立包管理工具集，致力于治理 Linux 系统下传统软件包格式复杂、交叉的依赖关系导致的各种兼容性问题，迁移项目的目标是让玲珑能实际应用于常见的发行版操作系统，包括四大架构：amd64、arm64、loongarch64、riscv&amp;nbsp;；现阶段仅支持 amd64 的迁移&lt;/li&gt; 
 &lt;li&gt;参与要求：需要具备文档阅读能力，有源码编译构建、开源应用维护经验更佳&lt;/li&gt; 
 &lt;li&gt;参与方式：认领迁移任务，任务一般分为 1、入门迁移任务：该部分可使用转格式工具快速将现有的 deb 包转为玲珑格式，难度较低，可以作为玲珑入门学习；2、进阶迁移任务及转格式失败的入门任务：该部分需手动编译构建，需要对玲珑有比较深入的了解；构建完毕的应用通过开发者平台或社区投递系统上架应用商店（有特殊需求可以申请官方的机器设备支持）&lt;/li&gt; 
 &lt;li&gt;参考文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flinglong.dev%2Fguide%2Fll-builder%2Fmanifests.html%23runtime-20-5-0-%25E5%258C%2585%25E5%2590%25AB%25E4%25BE%259D%25E8%25B5%2596%25E9%25A1%25B9&quot; target=&quot;_blank&quot;&gt;玲珑在线文档&lt;/a&gt;&amp;nbsp;、转换工具及文档（目前只有 amd64，群内分享）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;项目二、wine 应用打包&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;第一期 wine 打包活动进行中，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fzh%2Fpost%2F271247&quot; target=&quot;_blank&quot;&gt;详情见 &amp;gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目目标：将常用 exe 格式的 Windows 应用转成 deepin/UOS 可用的 deb 格式并上架应用商店&lt;/li&gt; 
 &lt;li&gt;参与要求：有 wine 容器配置、调试经验更佳&lt;/li&gt; 
 &lt;li&gt;参与方式：Windows 应用可通过官方一键打包工具将软件转成 deepin/UOS 下可用的 deb 包（提供清单方向），部分打包失败或打开后功能异常的软件需要手动调试配置，打包后通过开发者平台或社区投递系统上架应用商店；&lt;/li&gt; 
 &lt;li&gt;参考文档：进群领取 wine 一键打包工具，已支持一键生成 amd64&amp;amp;arm64 的 deb&lt;/li&gt; 
 &lt;li&gt;划重点！&lt;strong&gt;wine 有奖打包活动&lt;/strong&gt;即将上线&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;项目三、deb 原生应用维护&lt;/strong&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目目标：遵循开源精神，商店内开源应用放开给社区用户自行维护，能保证深度商店应用的正常使用、新版本的及时更新&lt;/li&gt; 
 &lt;li&gt;参与要求：SHELL 脚本读写能力、对 Linux 桌面发行版运行库相互关系有一定的了解&lt;/li&gt; 
 &lt;li&gt;参与方式：除部分重点应用保持官方维护外，绝大多数开源应用公开给社区用户自行维护，平台定期公开应用新版本或问题修复的需求任务，感兴趣的可认认领任务，成为应用的维护者。打包后通过开发者平台或社区投递系统上架应用商店，并此后保持应用的维护或及时转出&lt;/li&gt; 
 &lt;li&gt;参考文档：&amp;nbsp;&lt;a href=&quot;https://gitee.com/ziggy615/packing-master-pool&quot; target=&quot;_blank&quot;&gt;packing master pool: 打包仙人自动化构建模版池&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;工作流程&lt;/strong&gt;&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;扫码入群，报名登记&lt;img alt=&quot;&quot; height=&quot;200&quot; src=&quot;https://storage.deepin.org/thread/202404250700268021_202404170843266411_%E7%94%9F%E6%80%81%E5%85%B1%E5%BB%BA%E5%B0%8F%E7%BB%84%E4%BA%8C%E7%BB%B4%E7%A0%81(1).png&quot; width=&quot;200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;成为小组成员（不定期公示小组成员）&lt;/li&gt; 
 &lt;li&gt;认领任务（共享云文档登记，不可重复认领任务）&lt;/li&gt; 
 &lt;li&gt;适配打包（回填任务完成情况，打包成功/已上架/打包失败及原因）&lt;/li&gt; 
 &lt;li&gt;上架商店（可选通过&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fappdelivery.deepin.org.cn%2F%23%2Findex&quot; target=&quot;_blank&quot;&gt;社区投递系统&lt;/a&gt;或&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flogin.uniontech.com%2F&quot; target=&quot;_blank&quot;&gt;开发者平台&lt;/a&gt;进行上架，上架需通过基础测试）&lt;/li&gt; 
 &lt;li&gt;获得激励（积分公示、定期发放奖励等）&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;&lt;strong&gt;小组福利&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;1）打包激励标准&lt;/h2&gt; 
&lt;p&gt;完成各类型应用打包及上架可以获得一定的生态积分&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;打包类型&lt;/th&gt; 
   &lt;th&gt;应用新增上架&lt;/th&gt; 
   &lt;th&gt;应用维护更新&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;生态积分&lt;/td&gt; 
   &lt;td&gt;对生态共建项目中涉及的应用进行&lt;strong&gt;打包上新&lt;/strong&gt;&lt;br&gt; 可以获得对应的积分激励：&lt;br&gt; ● wine 应用：20 分/架构包&lt;br&gt; ● 玲珑格式：50 分/架构包&lt;br&gt; ● deb 原生：40 分/架构包&lt;/td&gt; 
   &lt;td&gt;对生态共建项目中涉及的应用进行&lt;strong&gt;升级维护&lt;/strong&gt;&lt;br&gt; 可以获得对应的维护积分激励：&lt;br&gt; ● wine 应用：10 分/架构包&lt;br&gt; ● 玲珑格式：30 分/架构包&lt;br&gt; ● deb 原生：20 分/架构包&lt;br&gt; 备注：需要规范管理版本号，不可无故刷新版本号。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;按实际上架到应用商店的架构包数量计算积分，包括 amd64、arm64、loongarch64，其中 loongarch64 的包可额外多奖励 50% 积分；&lt;/li&gt; 
 &lt;li&gt;目前社区投递系统仅支持单一架构包提交，一个应用多个架构的需要通过开发者平台提交；&lt;/li&gt; 
 &lt;li&gt;如果完成了高难度的软件包适配，可以与官方运营沟通，评估后可以一定比例提升积分；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;2）生态积分激励&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;获得生态积分达到一定数量，可以获得对应的社区荣誉称号，并且积分可以用于兑换 deepin 周边礼品。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;A. 专属 deepin 社区荣誉称号&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;生态积分&lt;/th&gt; 
   &lt;th&gt;50-599&lt;/th&gt; 
   &lt;th&gt;600-2999&lt;/th&gt; 
   &lt;th&gt;3000-9999&lt;/th&gt; 
   &lt;th&gt;≥10000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;deepin 社区称号&lt;/td&gt; 
   &lt;td&gt;生态共建组成员&lt;/td&gt; 
   &lt;td&gt;生态共建组骨干&lt;/td&gt; 
   &lt;td&gt;生态共建组专家&lt;/td&gt; 
   &lt;td&gt;生态共建组导师&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;B. 积分可兑换周边奖励&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;生态积分可自选兑换 deepin 积分商城内奖品池的等价值礼品，具体兑换说明后续共建小组群内同步&lt;/li&gt; 
 &lt;li&gt;周边奖励：小浣熊公仔/小浣熊钥匙扣/deepin 笔记本/deepinT 恤/deepin 超大鼠标垫/deepin 鼠标/deepin 徽章/小浣熊帆布袋等等&lt;/li&gt; 
 &lt;li&gt;达到 50 生态积分可申请获得 UOS 专业版半年期激活码&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;C. 2024 年度限定荣誉证书&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;截止至 2024 年 12 月 31 日，年度生态积分 top10 的小组成员，颁发荣誉证书——deepin 生态共建小组-卓越贡献奖.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;特殊说明&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;在共建小组工作中已上架的应用软件包，在没有新版本的情况下，可以直接用于申报参与 1 次后续的生态适配活动（积分不重复计算）&lt;/li&gt; 
 &lt;li&gt;每个月末核算小组成员的积分情况，并在 deepin 社区论坛公示&lt;/li&gt; 
 &lt;li&gt;社区荣誉称号按获得的总积分计算，消耗积分兑换奖励并不影响已获得的称号&lt;/li&gt; 
 &lt;li&gt;当小组成员大于 12 个月未有软件维护或更新，已获得的社区荣誉称号将会被取消&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;3）用户特权&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;优秀软件将被商店重点推荐，优秀个人获得商店专属展示专区&lt;/li&gt; 
 &lt;li&gt;生态活动出谋划策，邀请成为生态适配导师&lt;/li&gt; 
 &lt;li&gt;社区论坛、Github 项目定期公示成员及贡献&lt;/li&gt; 
 &lt;li&gt;成为深度各技术沙龙的特邀讲师&lt;/li&gt; 
 &lt;li&gt;作为特邀嘉宾参与 DDUC 年度大会&lt;/li&gt; 
 &lt;li&gt;在校生可获得实习机会，社招工作优先录取&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;官方支持&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;1）官方提供打包教程、打包规范；&lt;/p&gt; 
&lt;p&gt;2）官方组织开展系统化打包培训；&lt;/p&gt; 
&lt;p&gt;3）官方打包维护群，提供在线答疑；&lt;/p&gt; 
&lt;p&gt;4）官方不定期公开任务给社区维护者。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;以上为本小组的详细介绍，欢迎加入生态共建小组，共谋大事~&lt;/p&gt; 
&lt;p&gt;本方案试运行，可能会参考大家的意见进行一定的调整，欢迎大家提出各种建设性意见。最终解释权归 deepin 深度应用商店运营组所有。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相关链接：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;社区投递系统介绍：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fzh%2Fpost%2F265432&quot; target=&quot;_blank&quot;&gt;deepin 社区「应用投递系统」全新上线，诚邀您来共建应用生态！&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.chinauos.com%2F%23document3%3Fdirid%3D656ef276bd766615b0b0300c%26id%3D657036f6bd766615b0b03132&quot; target=&quot;_blank&quot;&gt;开发者认证及上架指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;了解 deepin（深度操作系统）：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;DistroWatch.com: Put the fun back into computing. Use Linux, BSD.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289464</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289464</guid>
            <pubDate>Thu, 25 Apr 2024 07:23:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>知名游戏公司出新规：员工娶妻彩礼不得超过 10 万元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;日前知名游戏公司多益网络发布公告称，公司规定：公司任何员工娶妻彩礼不得超过 10 万人民币价值，否则全公司通报批评并严惩。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4719edabcb32a121346342ca9e4906fa130.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;u&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5088502796%2FObbRPb9ZR&quot; target=&quot;_blank&quot;&gt;https://weibo.com/5088502796/ObbRPb9ZR&lt;/a&gt;&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;公开资料显示，多益网络成立于 2006 年 7 月，总部位于广东省广州市，公司专注于网络游戏的研发与运营，是中国十大网游研发及运营公司之一。&lt;/p&gt; 
&lt;p&gt;多益网络的业务涵盖大型网络游戏、移动游戏、电子邮箱、IM 即时通讯软件和社交网站等，旗下拥有多款知名游戏产品，如《神武 4》端手游、《梦想世界》端手游等。&lt;/p&gt; 
&lt;p&gt;多益网络还位列 2017 年中国互联网企业百强榜第 25 位，2018 年被评为「广东年度十大互联网领军企业」，2019 年获得「年度中国十大游戏研发企业」和「年度中国十大游戏出版运营企业」等称号。&lt;/p&gt; 
&lt;p&gt;在去年 3 月份，多益网络发布《前女高管们利用网络水军造假导致公司损失几亿的情况公告》。公告提到：前 CEO 唐忆鲁为首的腐败团伙，利用职务之便以权谋私，伙同广告代理皮包公司、网络水军刷量公司等制造虚假广告，对公司进行合同欺诈，给公司带来直接经济损失高达 5 亿元。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/289460</link>
            <guid isPermaLink="false">https://www.oschina.net/news/289460</guid>
            <pubDate>Thu, 25 Apr 2024 07:19:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Apache Doris 基于 Workload Group 的负载隔离能力｜Deep Dive</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;p&gt;作者：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2Fyjdpth&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;SelectDB&lt;/a&gt; 技术团队&lt;/p&gt; 
&lt;p&gt;现如今企业的数据查询需求在不断增多，在共享同一集群时，往往需要同时面对多个业务线或多种分析负载的并发查询。在有限的资源条件下，查询任务间的资源抢占将导致性能下降甚至集群不稳定，因此负载管理的重要性不言而喻。&lt;/p&gt; 
&lt;p&gt;从业务场景出发，用户负载管理的需求主要来自以下几方面：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;多个业务部门或租户可能共享同一套集群时，为避免不同租户间的负载相互影响，需保证每个租户的资源使用独立性和性能稳定性。&lt;/li&gt; 
 &lt;li&gt;不同业务对查询任务的响应度和优先级有着不同要求，对于关键业务或高优先级任务，如实时数据分析、在线交易等，需要确保这些任务能够获得足够的资源并优先执行，避免因资源竞争对查询性能产生影响。&lt;/li&gt; 
 &lt;li&gt;用户不仅关心资源的分配和管理，还注重成本控制和资源利用率。负载管理方案需在满足隔离要求的同时，实现用户对低使用成本和高资源利用率的诉求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在早期版本中，Apache Doris 推出了基于资源标签（Resource Tag）的隔离方案，包括集群内节点级别的资源组划分以及针对单个查询的资源限制，实现了不同用户间的资源物理隔离。而为给用户提供更完善的负载管理方案，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2Fyjdpth&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Apache Doris&lt;/a&gt; 自 2.0 版本起，推出了基于 Workload Group 的管理方案，&lt;strong&gt;实现了 CPU 资源的软限，为用户提供较高的资源利用率。&lt;strong&gt;在新发布的 2.1 版本基于 Linux 内核提供的 CGroup 技术，进一步地&lt;/strong&gt;实现了对 CPU 资源的硬限，为用户提供更好的查询稳定性。&lt;/strong&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;基于 Resource Tag 的物理隔离方案&lt;/h2&gt; 
&lt;p&gt;在 Apache Doris 中有 FE 和 BE 两类节点，FE 节点负责元数据存储、集群管理、用户请求接入以及查询计划解析等，BE 节点则负责数据的存储和计算。在查询执行过程中涉及资源消耗的主要是 BE 节点，因此 Apache Doris 负载隔离方案都是面向 BE 节点设计。&lt;/p&gt; 
&lt;p&gt;在 Resource Tag 资源物理隔离方案中，可以对同一个集群内的 BE 节点设置标签，标签相同的 BE 节点会组成一个资源组（Resource Group），可将资源组看作数据存储和计算的一个单元。数据入库时会按照资源组配置将数据的副本写入到不同的资源组中，查询时按照资源组的划分使用对应资源组上的计算资源进行计算。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;参考文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2Fii4x6r&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://doris.apache.org/zh-CN/docs/2.0/admin-manual/resource-admin/multi-tenant&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;我们以常见的读写分析场景为例，假设集群中有 3 台 BE，具体使用步骤如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;BE 节点绑定 Resource Tag：将两台 BE 绑定到 Tag Read 上，服务于读负载；一台 BE 绑定到 Tag Write 上，服务于写负载。读负载和写负载位于不同的机器上，以实现读写隔离。&lt;/li&gt; 
 &lt;li&gt;数据副本绑定 Resource Tag：Table 1 有三个副本，两个副本绑定到 Tag Read 上，一个副本绑定到 Tag write 上。写入 replica 3 的数据会自动同步到 replica 1 和 replica 2 上，同步过程不会占用过多 BE 1 和 BE 2 的计算资源。&lt;/li&gt; 
 &lt;li&gt;工作负载绑定到 Resource Tag：如果查询 SQL 携带的 Tag 为 Read，查询将被自动路由到 Tag 为 Read 上的机器上（BE 1 、BE 2）上执行；如果将 Stream Load 导入负载指定 Tag 为 Write，那么 Stream Load 就会路由到 Tag 为 Write 的机器上（ BE 3）。在此过程除了副本同步时产生的开销，查询和导入之间不再有资源的竞争。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/Resource_Tag_67d668b5cb.png&quot; alt=&quot;基于 Resource Tag 的物理隔离方案.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Resource Tag 还可以实现多租户的功能。例如有两个用户 UserA 和 UserB，期望创建各自独立的租户以避免相互影响，那么可以把 UserA 的计算和存储资源绑定到名为 UserA 的 Tag 上，把 UserB 的计算和存储资源绑定到名为 UserB 的 Tag 上，那么两个用户在 BE 侧就实现了租户间的资源隔离。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/Resource_Tag_2_13c66f617b.png&quot; alt=&quot;基于 Resource Tag 的物理隔离方案-2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Resource Tag 本质是通过对 BE 节点的分组实现了资源隔离，这个方案的优点是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;隔离性好，多个租户之间通过物理机隔离，对 CPU、内存、IO 都实现了完全的隔离；&lt;/li&gt; 
 &lt;li&gt;故障隔离，当一个租户出现问题（比如进程崩溃），另外一个租户丝毫不受影响；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;基于这个技术，有的用户将不同的资源组放置到不同的物理机房内，实现同城 2 个机房的双活。&lt;/p&gt; 
&lt;p&gt;但是也存在一定的局限性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;读写隔离场景下，当写入负载停止时，Tag 为 Write 的机器就处于空闲状态，从而降低整个集群的资源利用率，显然无法满足用户对资源充分利用的期望。&lt;/li&gt; 
 &lt;li&gt;多租户场景下，同一个租户内的多个业务方的负载之间也会相互影响。即使可以通过为每个业务方配置单独物理机来满足隔离性，却带来了高成本、低资源利用率等问题。&lt;/li&gt; 
 &lt;li&gt;灵活性差，租户的数量实际是跟副本数绑定的，如果要建立 5 个租户，那么至少需要有 5 个副本才可以，这在一定程度上造成了存储空间的浪费。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;基于 Workload Group 的负载管理方案&lt;/h2&gt; 
&lt;p&gt;为解决上述问题，Apache Doris 推出了基于 Workload Group 的管理方案，支持了更细粒度的资源隔离机制——进程内的资源隔离，这意味着同一个 BE 内多个 Query 间也可以实现一定程度上的隔离，有效避免了进程内的资源竞争，提高资源的利用率。&lt;/p&gt; 
&lt;p&gt;Workload Group 是通过对工作负载进行分组管理，实现对内存和 CPU 资源的精细化管控。通过将用户执行的 Query 与 Workload Group 相关联，限制单个 Query 在单个 BE 节点上的 CPU 和内存资源的百分比。同时可以配置开启内存资源限制，集群资源紧张时自动终止组内高内存占用查询以缓解压力。资源空闲时，多个 Workload Group 共享空闲资源并自动突破限制，确保查询稳定执行。&lt;/p&gt; 
&lt;p&gt;CPU 资源的限制可细分为软限和硬限，CPU 软限具备资源利用率更高的特点，允许在资源空闲时候灵活分配资源；而 CPU 硬限则更侧重于性能稳定性的保障，确保各 Group 之间不会因负载变化而相互干扰。&lt;/p&gt; 
&lt;p&gt;（&lt;em&gt;CPU 硬限和软限这两种隔离方式可匹配不同使用场景，但不可同时应用，用户可根据自身需求灵活选择）&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/Workload_Group_e4dba91c4d.png&quot; alt=&quot;基于 Workload Group 的负载管理方案.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Workload Group 与 Resource Tag 的方案主要有以下不同：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;从计算资源的角度来说，Workload Group 是对 BE 进程内的 CPU 和内存资源进一步划分，多个 Workload Group 需要在同一个 BE 上竞争资源。而 Resource Tag 则是对 BE 节点进行分组，不同业务方的负载发送到不同分组的 BE 上实现资源隔离，不同 BE 分组间的业务负载不会有直接的资源竞争。&lt;/li&gt; 
 &lt;li&gt;从存储资源的角度来说，Workload Group 无需关注存储资源，只关注单 BE 内计算资源的分配。Resource Tag 则需要对数据的副本进行分组，确保需要隔离的业务方数据分布在不同的 BE 上。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;01 CPU 软限制&lt;/h3&gt; 
&lt;p&gt;CPU 优先级主要通过参数 &lt;code&gt;cpu_share&lt;/code&gt; 体现，可以将它类比为权重的概念。在相同的时间周期内，权重越高的 Group 可以获得更多的 CPU 时间。&lt;/p&gt; 
&lt;p&gt;以 Group A 和 Group B 为例，若配置 Group A 的 &lt;code&gt;cpu_share&lt;/code&gt; 为 1、Group B 的 &lt;code&gt;cpu_share&lt;/code&gt; 为 9，给定 10s 的时间周期。当两者负载均饱和时，权重更高的 Group B 可以获得 CPU 的时间为 9s（所有资源的 90%），Group A 可获得 CPU 时间为 1s（所有资源的 10%）。而在实际使用中，并非所有业务都是满负载运行，若 Group B 的负载较低或无负载，那么 Group A 可以独占 10s 的 CPU 时间。这种方式可以提供更高的资源分配灵活性，从而提高集群 CPU 资源的整体利用率。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/CPU_e856b0fbad.png&quot; alt=&quot;CPU&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;02 CPU 硬限制&lt;/h3&gt; 
&lt;p&gt;使用 CPU 软限时，如果系统负载较高或 CPU 资源紧张时，可能引起查询性能的波动。为满足更用户对查询性能稳定的高要求， &lt;strong&gt;Apache Doris 在最新的 2.1 版本中，实现了 Workload Group 的 CPU 硬限制——无论当前物理机整体 CPU 是否空闲，配置了硬限的 Group 最大 CPU 用量不能超过预先配置的限制值。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;以 Group A 和 Group B 为例，若配置 Group A 的 &lt;code&gt;cpu_hard_limit=10%&lt;/code&gt;，Group B 的&lt;code&gt;cpu_hard_limit=90%&lt;/code&gt;。当两者单机 CPU 资源均达到饱和时， Group A 的 CPU 利用率为 10%， Group B 的 CPU 利用率为 90%，这与 CPU 软限是一样的。但是当 Group B 的负载降低或没有负载时，即便 Group A 增加查询负载，其最大 CPU 利用率仍被严格限制在 10%，无法获得更多的资源。虽然这种方式牺牲了资源分配的弹性，但也确保了查询性能的稳定性。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/CPU_ec2c0fd7f0.png&quot; alt=&quot;硬限制&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;03 内存资源限制&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;使用须知，BE 节点内存主要划分为以下几部分：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;操作系统保留内存&lt;/li&gt; 
  &lt;li&gt;BE 进程内非查询部分的内存，暂时无法被 Workload Group 统计到。&lt;/li&gt; 
  &lt;li&gt;BE 进程内的查询部分的内存（包括导入操作），可被 Workload Group 统计并管理。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;内存资源限制主要通过参数 &lt;code&gt;memory_limit&lt;/code&gt; 来限制（设置可以使用 BE 内存的百分比）。不仅可以设置预配置内存用量，还影响内存过度分配（Overcommit）之后的归还优先级。&lt;/p&gt; 
&lt;p&gt;在初始状态下，高优先级的资源组会被配置更多的内存、低优先级的资源组被分配较少的内存。为了提升内存的利用率，可以通过 &lt;code&gt;enable_memory_overcommit&lt;/code&gt; 开启资源组的内存软限制，如果系统有空闲内存资源时可以超限使用。&lt;/p&gt; 
&lt;p&gt;为了保证系统稳定运行，当系统整体内存资源不足时，系统将会优先取消占用内存较大的任务，以回收超额分配（Overcommit）的内存资源。在此过程中，系统会尽量保留高优先级的资源组内存资源，低优先级资源组超额内存将被更快收回。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/_153887415b.png&quot; alt=&quot;内存资源限制&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_6&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;04 查询排队&lt;/h3&gt; 
&lt;p&gt;当业务负载超过系统可承载上限时，继续提交新的查询不仅无法有效执行，还会对运行中的查询造成影响。为避免该问题出现，Workload Group 支持查询排队功能。当查询达到预设的最大并发时，新提交计划会进入排队逻辑，当队列已满或等待超时，查询会被拒绝，以此来缓解高负载下系统的压力。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/_6e1a32f528.png&quot; alt=&quot;查询排队.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;查询排队功能主要有三个属性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;max_concurrency&lt;/code&gt;：当前 Group 允许同时运行的最大 SQL 数，如果超过最大数值，则进入排队逻辑。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;max_queue_size&lt;/code&gt;：排队队列中的允许最大查询个数，如果队列满了，那么查询会被拒绝、执行失败。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;queue_timeout&lt;/code&gt;：队列中排队的时间限制，如果超时会直接失败，单位是毫秒。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;参考文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2FA2KmBm&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://doris.apache.org/zh-CN/docs/admin-manual/workload-group&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;Workload Group 使用测试&lt;/h2&gt; 
&lt;p&gt;接下来，我们对 Workload Group 的 CPU 软限制和硬限制进行详细测试，以便为用户清晰呈现这两种限制在相同硬件条件下的负载管理效果与性能表现。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;测试环境：16 核 64G 内存单台物理机&lt;/li&gt; 
 &lt;li&gt;部署方式：1 台 FE、1 台 BE&lt;/li&gt; 
 &lt;li&gt;测试数据集：Clickbench、TPCH&lt;/li&gt; 
 &lt;li&gt;压测工具：JMeter&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;01 CPU 软限测试&lt;/h3&gt; 
&lt;p&gt;启动两个客户端（1、2），分别在未使用/使用 CPU 软限的前提下，测试 CPU 软限制对负载管理的效果。需要注意的是，在该测试中 Page Cache 会影响测试结果，需要关闭 Page Cache 才会达到理想的测试效果。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/CPU_a28bb3b520.png&quot; alt=&quot;CPU 软限测试.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通过对比分析两次测试中的客户端的吞吐量数据，我们可以得出以下结论：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;未使用 Workload Group 的情况下&lt;/strong&gt;，两个客户端的吞吐量比例为 1:1，表明它们在相同运行时间内获得的 CPU 资源是相同的。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;使用 Workload Group 之后，&lt;/strong&gt; 分别设置 &lt;code&gt;cpu_share&lt;/code&gt; 为 2048 及 1024，结果表明吞吐量比例变为 2:1。这说明在相同的运行时间内，&lt;code&gt;cpu_share&lt;/code&gt;参数更大的客户端 1 获得了更高比例的 CPU 资源。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_9&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;02 CPU 硬限测试&lt;/h3&gt; 
&lt;p&gt;由上文介绍可知，CPU 硬限制在负载较高时，可以保证很好的隔离性。因此我们使用硬限限制 CPU 使用率为 50%（&lt;code&gt;cpu_hard_limit=50%&lt;/code&gt;），并使用同一客户端分别在并发数为 1、2、4 时（模拟不同负载）下执行 q23 查询测试，每次测试运行时间为 5 分钟。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/CPU_5bfebd10d0.jpeg&quot; alt=&quot;CPU 硬限测试.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;从上方测试结果可知，随着查询并发数的增加，CPU 的利用率的始终稳定在 800% 上下（在一个 16 核的机器上，800% 的意味着使用 8 个核，&lt;strong&gt;实际的 CPU 利用率，为 50%&lt;/strong&gt;）。由于 CPU 资源被硬限，因此在并发增加时，tp99 延时增加是符合预期的。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_10&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;03 模拟生产环境测试&lt;/h3&gt; 
&lt;p&gt;在实际生产环境中，用户往往更关注查询的延迟性能而非单纯的吞吐量。为了更贴近实际应用场景并准确评估性能，我们选取了一系列延迟约为 1 秒的查询 SQL（包括 CKBench 的 q15、q17、q23 和 TPCH 的 q3、q7、q19），构成一个 SQL 集合。这些查询涵盖了单表聚合和 Join 计算等多种特性，使用的 TPCH 数据集大小为 100G。&lt;/p&gt; 
&lt;p&gt;我们设计了两组测试，分别模拟了未使用 Workload Group 和使用 Workload Group 的场景。在客户端 1 和客户端 2 上进行了四次测试，重点关注 tp90 和 tp99 的延迟情况。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.selectdb.com/static/_f8188b69dd.png&quot; alt=&quot;模拟生产环境测试.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通过观察上表 4 次测试中查询延迟，可得出以下结论：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;未使用 Workload Group（测试 1、2）&lt;/strong&gt;：当客户端 2 的并发量从 1 增加到 4 时，客户端 1、2 的查询延迟均显著上升。对比客户端 1 的性能表现，median、tp90 和 tp95 查询响应时间均增加了 2-3 倍。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;使用 Workload Group（测试 3、4）：&lt;/strong&gt; 这两次测试中应用了 CPU 硬限制：设置客户端 1 &lt;code&gt;cpu_hard_limit=90%&lt;/code&gt;、客户端 2 &lt;code&gt;cpu_hard_limit=90%&lt;/code&gt;。从测试结果可知，即使客户端 2 的并发量增加，客户端 1 的查询延迟仅呈现小幅上升，明显优于测试 2 中性能表现。这一结果充分展现了 Workload Group 在负载隔离和性能稳定保障上的有效性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_11&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;结束语&lt;/h2&gt; 
&lt;p&gt;目前 Resource Tag 和 Workload Group 功能已经在多个社区用户的生产业务中上线并得到大规模验证，推荐有资源隔离需求的用户使用。&lt;/p&gt; 
&lt;p&gt;无论是 Resource Tag 或是 Workload Group，其目标都在于&lt;strong&gt;在资源隔离的独立性和资源的利用率二者之间进行平衡&lt;/strong&gt;，前者采取了更彻底的隔离方案，而后者在保证隔离性的同时实现了资源的充分利用，并通过查询队列和任务排队机制进一步保证了在高工作负载场景下的系统稳定性。&lt;/p&gt; 
&lt;p&gt;在资源隔离的实际使用过程中，我们建议两种方案可以根据业务场景结合起来应用：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果是跨体系/跨业务部门之间共享同一集群，希望实现资源和数据的物理隔离，可以采取 Resource Tag 方案；&lt;/li&gt; 
 &lt;li&gt;如果是在同一集群内同时面对多种类型的查询负载，可以通过 Workload Group 将不同负载区分开来，通过灵活的资源分配保证多种查询负载均可以获得合适的资源；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;在后续的功能完善上，我们还有很多规划：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;当前内存限制通过 Cancel Query 来释放内存，未来通过算子落盘可以进一步提升大查询的稳定性、避免资源紧张时的查询任务失败。&lt;/li&gt; 
 &lt;li&gt;目前在 BE 进程的内存模型中，还存在部分非查询的内存未被统计到，这可能导致用户看到的 BE 进程内存和 Workload Group 使用内存之间存在差异，未来版本中将尝试解决这个问题。&lt;/li&gt; 
 &lt;li&gt;查询排队功能只支持根据最大查询并发数排队，未来将通过 BE 的资源用量来约束最大并发数，从而对客户端形成自动的反压，提升 Doris 在客户端持续提交高负载情况下的可用性。&lt;/li&gt; 
 &lt;li&gt;Resource Tag 功能是对 BE 机器资源的划分，Workload Group 则是对单机进程内的资源划分，这两种资源划分的方式都对用户暴露了 BE 节点的概念。而用户在使用资源管理功能时，本质上仅需要关注自己的工作负载在整个集内的可用资源量和资源分配的优先级。未来会探索资源划分新方式，降低用户的理解和使用成本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_12&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;致谢&lt;/h2&gt; 
&lt;p&gt;Workload Group 功能是开源社区合作开发的项目，感谢以下同学的贡献：罗甑林（luozenglin），刘立家（liutang123），赵立伟（levy5307）&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/selectdb/blog/11054766</link>
            <guid isPermaLink="false">https://my.oschina.net/selectdb/blog/11054766</guid>
            <pubDate>Thu, 25 Apr 2024 06:47:29 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>大模型下 B 端前端代码辅助生成的思考与实践 ｜ 得物技术</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    &lt;div class=&quot;ad-wrap&quot; style=&quot;margin-bottom: 8px;&quot;&gt;
            &lt;div data-traceid=&quot;news_comment_top_ad&quot; data-tracepid=&quot;news_comment_top&quot; style=&quot;text-align: center;&quot;&gt;
&lt;a style=&quot;color:#A00;font-weight:bold;&quot; href=&quot;https://www.oschina.net/action/visit/ad?id=1603&quot; target=&quot;_blank&quot;&gt;【直播预告】大模型会取代程序员吗？」 &lt;img src=&quot;https://www.oschina.net/img/hot3.png&quot; align=&quot;absmiddle&quot; style=&quot;max-height: 32px;max-width: 32px;margin-top: -4px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;
&lt;/div&gt;
            &lt;/div&gt;
                                                        
                                                                                            &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;一、背景&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;重复工作，代码规范：&lt;/strong&gt;B 端前端代码开发过程中开发者总会面临重复开发的痛点，很多 CRUD 页面的元素模块基本相似，但仍需手动开发，将时间花在简单的元素搭建上，降低了业务需求的&lt;strong&gt;开发效率&lt;/strong&gt;，同时因为不同开发者的&lt;strong&gt;代码风格不一致&lt;/strong&gt;，使得敏捷迭代时其他人上手成本较高。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AI 代替简单脑力：&lt;/strong&gt;AI 大模型的不断发展，已经具备简单的理解能力，并可以进行&lt;strong&gt;语言到指令的转换&lt;/strong&gt;。对于基础页面搭建这样的通用指令可以满足日常基础页面搭建的需要，提升通用场景业务开发效率。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;二、生成链路一览&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;B 端页面列表、表单、详情都支持生成，链路大概可分为以下几个步骤。&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-865640d7af801189d2dad45b3f22b568e07.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;输入自然语言&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;结合大模型按照指定规则提取出相应搭建信息&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;搭建信息结合代码模板与 AST 输出前端代码&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;三、表达需求&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;图形化配置&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;辅助代码生成第一步是告诉它开发出怎样的界面，提到这里，我们首先想到的是&lt;strong&gt;页面配置&lt;/strong&gt;，即目前主流的低代码产品形式，用户通过一系列的图形化配置对页面进行搭建，如下图：&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;664&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e52cbe02c18dc1b38482a6afee34aa8baed.png&quot; width=&quot;1356&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;以上配置方式对于通用场景（如后台逻辑较为简单的 CURD 页面）或是特定的业务场景（如会场搭建）有较好的提效作用 。而对于需要不断迭代逻辑相对复杂的需求来说，由于是通过图形化操作的方式进行配置，对于交互设计要求较高，并且具备一定的上手成本，并且随着需求的复杂度越来越高，配置表单交互越来越复杂，维护成本也越来越高。因此，页面配置的方式前端领域的使用是相对&lt;strong&gt;克制&lt;/strong&gt;的。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AI 直接生成代码&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;AI 生成代码在工具函数场景下应用较多，但对于公司内部特定业务场景的需求，可能需要考虑以下几点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;生成定制化：&lt;/strong&gt;公司团队内部有自己的技术栈与重型通用组件，需要将这些知识进行预训练，目前对于长文本的预训练内容仅支持单次会话注入，token 数消耗较高；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;准确度：&lt;/strong&gt;AI 生成代码的准确度挑战是比较大的，加上预训练包含大段 prompt，因为代码输出的内容细节过多，加上模型幻觉，目前来看业务代码的失败率是较高的，而准确度是考量辅助编码的核心指标，如果这一点无法解决，辅助编码效果将大打折扣；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;生成内容残缺：&lt;/strong&gt;由于 GPT 单次会话的存在限制，对于复杂需求，代码生成有一定几率被截断，影响生成成功率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;自然语言转指令&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;GPT 其实还有个很重要的能力，那就是&lt;strong&gt;自然语言转指令&lt;/strong&gt;，指令即行动，举个例子：我们假设一个函数方法实现，输入是自然语言，结合 GPT 与内置的 prompt，让其稳定的输出某几个单词，我们是不是就可以通过对这些单词输出做出进一步的行动？这相对于&lt;strong&gt;图形化配置&lt;/strong&gt;有以下几个&lt;strong&gt;优点&lt;/strong&gt;：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;学习门槛低：&lt;/strong&gt;因为自然语言本身就是人类的原生语言，你只需要根据你的想法描述页面即可，当然描述的内容是需要遵循一些规范的，但相对于图形化配置来说效率是有明显提升的；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;复杂度黑盒：&lt;/strong&gt;图形化配置的复杂度会随着配置页面复杂度的上升而上升，而这样的复杂度会一览无余地展示在用户面前，用户可能会迷失在复杂的配置页面交互中，配置成本逐步上升；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;敏捷迭代：&lt;/strong&gt;如果要在用户端新增一个页面配置功能，基于大模型的交互方式可能只需要新增几个 prompt，但图形化配置需要开发复杂表单以便于快速输入。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;这里大家可能会有个疑问：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;生成的指令信息不也会出现大模型幻觉吗？如何保证每次生成指令信息是稳定且一致的呢？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;自然语言转指令可行大致有以下几个原因：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;由长文本转关键信息属于总结内容，大模型在总结场景下的准确度远高于扩散型场景；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;由于指令信息只是提取需求中的关键信息，不需要做代码技术栈上的预训练，因此 prompt 存在很大的可优化空间，通过优化完善 prompt 内容可以有效提升输出准确度；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;准确性可验证，对于每一个场景不同表述需求输入，可以通过单测预测输出验证准确性，当出现 badCase，我们在优化后针对该 badCase 接入单测。保证准确度不断提高。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;让我们来看最终的信息转化结果：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;对于代码辅助来说，基于用户的需求描述，经过 PROMPT 处理，可以拿到这样的信息。为代码生成提供基础信息。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1187&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-40d8202f2c6579aaf62af80dd1f85fec3da.png&quot; width=&quot;865&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;四、信息转化为代码&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;通过大模型拿到自然语言对应可编码的信息（即上面例子中的 JSON）后，我们就可以基于这个信息转化代码了。对于一个有明确场景的页面而言，一般情况下可分为主代码模板（列表、表单、描述框架）+&amp;nbsp;业务组件。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;转化流程&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1173&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7a48ed8cf5e91801c2807f2642febcaab1b.png&quot; width=&quot;1507&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;我们如何开发代码的？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;其实这一步很像我们自己开发代码，我们拿到需求后，大脑中会提取其中的关键信息，即上方提到的&lt;strong&gt;自然语言转指令&lt;/strong&gt;，然后我们会在 vscode 中创建一个文件，然后会进行以下操作：&lt;/p&gt; 
&lt;p&gt;首先一定是创建代码模板，然后根据场景引入对应重型组件，如列表就引入 ProTable，表单就引入 ProForm。&lt;/p&gt; 
&lt;p&gt;基于 ProTable 等重型组件并向其中添加一些属性，如 headerTitle、pageSize 等列表相关信息。&lt;/p&gt; 
&lt;p&gt;根据需求描述引入组件，比如识别到筛选项中存在类目选择，会在 useColumns 新增业务组件，识别到需求描述中存在导入导出组件，会在页面的指定位置新增导入导出业务组件。&lt;/p&gt; 
&lt;p&gt;拿到 mock 链接，新增请求层，在页面指定位置引入。&lt;/p&gt; 
&lt;p&gt;对于以上常用的代码插入场景都可以封装进 JSON 中，然后通过代码模板结合 AST 插入或字符串模板替换的方式生成对应代码。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;五、源码生成&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;定位&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;源码辅助主要帮助开发者减少重复的工作，提升编码效率，和低代码页面搭建属于完全不同的赛道，低代码重在特定场景下搭建完整的页面，并且页面功能数量是可枚举的，业界低代码搭建也有很优秀的实践。而源码辅助工具旨在帮助用户尽可能多的初始化业务需求代码，后面的修改维护在代码层面交给用户，提升新增页面的开发效率。&lt;/p&gt; 
&lt;p&gt;具体的功能架构见下方：&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;574&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-10a3e7083fb654dbe05509ba7e826504583.png&quot; width=&quot;1208&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;六、组件向量搜索与嵌入&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;对于前端开发来说，提效的本质是少开发代码，更快的页面生成是一方面，良好的组件抽离是相当重要的一环，我们结合向量对组件的引入链路进行了优化，在初始化模板与存量代码中快速搜索定位组件。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件向量引入链路&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;650&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1576ee8c75af651f89628fce11084f9812d.png&quot; width=&quot;1752&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件信息录入&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;支持快速获取组件的描述内容与组件引入范式，一键录入组件，组件描述会转化为向量数据存入向量数据库。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;592&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ea11af01ef770e833806a26694aabff8066.gif&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件向量搜索&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;用户输入描述后，会将描述转化为向量，基于余弦相似度与组件列表进行比对，找到相似度最高的组件 TOP N。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;718&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-463882cffc8d66e44062e99010d5413e7b8.gif&quot; width=&quot;382&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件快速插入&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;用户可以在存量代码中快速通过描述搜索匹配度最高的组件，回车进行插入。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;660&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3d97928b4a52dc11c0a64eea5f606a1cbe9.gif&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;七、未来展望&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;组件嵌入模板：&lt;/strong&gt;目前组件已支持向量搜索，通过结合源码页面生成，支持动态匹配组件并嵌入模板；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;存量代码的编辑生成：&lt;/strong&gt;目前仅支持新增页面的源码生成，后续将支持存量页面的局部代码新增；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;代码模板流水线：&lt;/strong&gt;AST 的代码操作工具化，将自然语言与代码写入进一步打通，提升场景拓展效率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&amp;nbsp;*文/&lt;/strong&gt;天意&lt;/p&gt; 
&lt;p&gt;本文属得物技术原创，更多精彩文章请看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Ftech.dewu.com&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;得物技术官网&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未经得物技术许可严禁转载，否则依法追究法律责任！&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5783135/blog/11054744</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/11054744</guid>
            <pubDate>Thu, 25 Apr 2024 02:26:00 GMT</pubDate>
            <author>得物技术</author>
        </item>
    </channel>
</rss>