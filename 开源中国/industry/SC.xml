<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 15 Sep 2025 02:41:05 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>OpenAI 拟将与微软分成比例降至 8%，获 500 亿美元额外收入</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;据美国科技媒体《The Information》报道，人工智能公司 OpenAI 正寻求调整其与主要投资方微软的财务协议，以期保留更多收入，用于支付其庞大的计算开销。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;报道援引知情人士透露，OpenAI 已向部分投资者表示，计划将微软获得的收入分成比例从目前略低于 20% 的水平，到 2030 年逐步降至 8% 左右。根据最初的协议，到 2030 年，微软将获得 20% 的分成。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="251" src="https://oscimg.oschina.net/oscnet/up-879eb71753d9c8a6f9579fa9d00e263ca1e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;这一调整意义重大，预计将为 OpenAI 带来超过 500 亿美元的额外收入。这笔资金将成为其维持和扩展 AI 模型训练所需的宝贵「弹药」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;作为回报，微软将获得重组后 OpenAI 实体的三分之一股份，而剩余部分将归其非营利组织所有。不过，报道称，微软仍将不会在 OpenAI 董事会中拥有席位。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;此外，两家公司还在就通用人工智能（AGI）的潜在应用、服务器费用及合同条款进行深入谈判。目前，尚不清楚这是否已体现在两家公司近期宣布的非约束性协议中。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;a href="https://www.oschina.net/news/371712" target="_blank"&gt;OpenAI 与微软达成非约束性协议：允许将营利部门转型公益股份公司&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372214</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372214</guid>
      <pubDate>Mon, 15 Sep 2025 02:05:02 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>重塑研发组织形态：从「中心软件工厂」到「移动软件工厂」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;数字化转型的加速，让软件研发从幕后走到前台，成为组织创新和产业升级的关键引擎。无论是科研攻关、产业制造，还是信息基础设施建设，软件都已经渗透到最核心的环节。 然而，在现实环境中，研发并非总是发生在高速网络与开放环境下。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;有时，它需要在&lt;strong&gt;严格隔离的网络&lt;/strong&gt;中完成；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;有时，它需要跨越地域，在&lt;strong&gt;多团队协作&lt;/strong&gt;中推进；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;有时，它要面对&lt;strong&gt;安全与合规&lt;/strong&gt;的高压要求，容不得半点松懈。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这就是今天的研发新常态：复杂、分布、受限，却又必须高效、统一、可控。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;行业挑战：研发必须跨越的三重门槛&lt;/h2&gt; 
&lt;p&gt;面对这样的新常态，研发组织普遍遭遇三道门槛：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;协同门槛&lt;/strong&gt;：不同地域、不同团队之间，工具链与流程标准不一致，导致研发成果常常无法顺畅对接。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;网络门槛&lt;/strong&gt;：在断网或弱网的条件下，环境一致、基线相同、依赖拉取、制品共享、版本同步都成了奢望。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;合规门槛&lt;/strong&gt;：即使是短期的现场研发，也必须满足严格的标准与安全要求，否则创新成果难以落地。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这三道门槛，几乎成了所有组织共同面对的困境。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;新形态的亮相：中心与移动软件工厂&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/185857_1Zh5_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在这样的背景下，软件工厂的形态正在发生演进。&lt;/p&gt; 
&lt;p&gt;Gitee 带来了一个新的答案：&lt;strong&gt;中心软件工厂与移动软件工厂的双重驱动模式&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;它不是简单的功能叠加，而是研发组织能力的一次重塑：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;中心软件工厂&lt;/strong&gt;：承载统一的研发基线与标准，形成高效、安全、合规的研发中心；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;移动软件工厂&lt;/strong&gt;：作为灵活的延伸，将研发能力带到任何需要的地方，让创新不再受限。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;中心软件工厂：标准的承载者&lt;/h2&gt; 
&lt;p&gt;在中心软件工厂里，研发流程被整体化、规范化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;统一的代码管理与版本基线；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;标准化的流水线与构建环境；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安全可控的制品仓库与扫描规则；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全局适配的权限与合规策略。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/185923_8uvl_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;它是研发的「大本营」，确保所有成果都有迹可循、有规可依。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;移动软件工厂：灵活的延伸者&lt;/h2&gt; 
&lt;p&gt;移动软件工厂的使命，是让研发能力突破环境的限制。&lt;/p&gt; 
&lt;p&gt;它并不是「缩减版」，而是&lt;strong&gt;完整工厂能力的便携延伸&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;携带基线&lt;/strong&gt;：将中心工厂中经过验证的基线，带到断网或弱网的现场；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;独立运行&lt;/strong&gt;：在隔离条件下完成开发、构建与测试；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;成果回传&lt;/strong&gt;：生成资产包，回传中心工厂，完成入库、复用与追踪；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;快速部署&lt;/strong&gt;：无需长期建设，即插即用，满足现场研发需求。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;一句话概括：移动软件工厂让研发随时随地发生，同时与中心保持标准一致。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/185946_9FIg_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;场景化小故事&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;隔离环境中的创新&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在一处无法连接外部网络的现场，团队依然能够基于移动工厂的基线顺利开发，研发成果在返回中心后快速入库，形成统一管理。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;弱网条件下的交付&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在网络条件不足的地区，移动工厂携带所需的依赖和制品，避免频繁的远程请求。研发节奏不再因网络波动而停滞。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;跨组织的协作&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在大型项目中，不同组织以中心工厂为标准，各自研发成果通过移动工厂快速接入与同步，协作效率显著提升。&lt;/p&gt; 
&lt;p&gt;这些故事有一个共同点：&lt;strong&gt;研发不再因环境受限而止步&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/190005_a74I_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;双工厂模式的价值&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;效率不受限&lt;/strong&gt;：研发团队可以在任何环境中持续迭代，项目进度更有保障。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;标准不走样&lt;/strong&gt;：中心工厂统一的基线与规则，让所有研发成果始终符合合规与质量要求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;扩展不昂贵&lt;/strong&gt;：移动工厂以低成本实现灵活部署，避免重复建设与资源浪费。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;成果可复用&lt;/strong&gt;：通过资产回传机制，现场研发的成果也能纳入中心，成为可追溯、可检索、可复用的知识资产。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;这不仅仅是一种工具组合，而是一种新的研发组织能力。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;展望：研发的新未来&lt;/h2&gt; 
&lt;p&gt;中心与移动双工厂模式，正在成为下一代软件研发体系的关键基石。 让研发在复杂环境中依然顺畅，让创新在任何场景下都能发生。 未来，无论研发场景如何变化，这一模式都将持续释放价值：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;让效率与合规不再对立，而是并行；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;让组织在变化的环境中，依然保持稳健与敏捷；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;让创新真正随时随地、无处不在。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;Gitee DevSecOps 的现代化研发生态&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Gitee DevSecOps 是一站式国产化研发与交付平台，集成了代码托管（Code）、项目协作（Team）、持续集成（CI）、持续部署（CD）、代码安全（Scan）、数据洞察（Insight）等多项能力，致力于打造具备全生命周期管控能力的现代软件工厂。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0523/174619_MpFL_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;平台设计充分考虑关键领域行业对安全性、可控性、合规性的极高要求，具备以下核心特征：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;国产化适配与私有化部署能力：全面兼容国产操作系统与基础设施，支持灵活部署于内网环境，保障数据主权；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;全流程 DevSecOps 管控体系：代码从提交、审核、构建、扫描、部署到发布全流程可视、可追溯、安全可控；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;模块化产品结构：各能力模块（如 Code、Team、Repo、Pipe、Scan、Insight 等）可灵活组合、渐进集成，适配多样化团队与流程要求；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;深度可观测与度量体系：内置研发效能度量与数据洞察引擎，支撑管理者宏观掌控项目态势与交付健康度。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="162046_MD15_2720166.png" src="https://static.oschina.net/uploads/space/2025/0516/162046_MD15_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在多个国家级重大项目与关键领域单位落地实践中，Gitee DevSecOps 已成为构建「自主、可控、高效、安全」的软件工程体系的重要基石。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-825957ffbed1798ea7b6a37079fd6c99d18.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371860</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371860</guid>
      <pubDate>Fri, 12 Sep 2025 11:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软正加大投资训练自己的人工智能模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;微软正在进行重大的投资，以增强其用于训练自主 AI 模型的服务器能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="334" src="https://oscimg.oschina.net/oscnet/up-85c73e1b3777c036f3526be295fc3e499f7.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;微软 AI 负责人穆斯塔法・苏莱曼在公司内部会议上表示，微软正在为未来的前沿模型进行 「显著的投资」。他指出：「我们应该具备内部构建&lt;span&gt;世界级&lt;/span&gt;前沿模型的能力，涵盖各种规模的模型，但在必要时也应理性地使用其他模型。」 这一战略显示出微软的决心，希望在 AI 领域与 Meta、谷歌及 xAI 等公司并肩竞争。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;据悉，微软目前正在建设自己的计算集群。目前，MAI-1-preview 模型仅在 15000 个 H100GPU 上进行训练，这在整体看来仍然是一个相对较小的集群。苏莱曼提到，微软计划训练的模型集群规模将是目前的 「六到十倍」，以增强其在 AI 研发中的实力。他表示:「还有很多工作要做，但迈出了&lt;span&gt;第一&lt;/span&gt;步，这很好。」&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在同一场会议上，微软首席执行官萨提亚・纳德拉也表达了他对未来模型能力建设的期待。他强调，微软将 「&lt;span&gt;绝对&lt;/span&gt;支持多种模型」 的应用，并以 GitHub Copilot 为例，说明该战略的成功。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，微软还计划在即将推出的 Microsoft365 中引入 Anthropic 的 AI 模型。据《信息时报》报道，Microsoft365Copilot 将 「部分由 Anthropic 模型驱动」，因为这些模型在 Excel 和 PowerPoint 的性能上超过了 OpenAI。这表明微软正在积极探索各种合作，以提升其产品的智能化水平。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371856</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371856</guid>
      <pubDate>Fri, 12 Sep 2025 10:30:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>JuiceFS on Windows: 首个 Beta 版的探索与优化之路</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;在近期发布的 JuiceFS 社区版 1.3 和企业版 5.2 中，我们对 Windows 客户端进行了大量的优化工作。在早期版本中，JuiceFS 也尝试支持 Windows 平台，但是在使用体验和稳定性方面存在诸多问题，无法达到一个稳定的可用状态。&lt;/p&gt; 
&lt;p&gt;去年，我们决定重新对 Windows 客户端，进行全面改进，力求在提高性能的同时，提供更加稳定和高质量的用户体验。在近期的一次云端渲染场景测试中，我们对 3000 台 Windows 客户端进行了小文件读写性能测试，结果表明性能已能满足大规模使用需求。我们将在下一篇博客中分享此次测试的详细情况。&lt;/p&gt; 
&lt;p&gt;在此次历时一年的优化过程中，由于 Windows 客户端相关文档和资料相对有限，我们面临了诸多挑战。本文将详细阐述过程中遇到的关键问题、采取的方案以及目前已取得的进展。需要注意的是，目前的版本处于 Beta 阶段，即主要功能已完成，但仍需通过持续的测试和用户反馈进行优化。希望有需求的用户积极使用，并在社区中提出建议，我们也将积极支持并解决大家的问题。&lt;/p&gt; 
&lt;h2&gt;01 目标是什么？&lt;/h2&gt; 
&lt;p&gt;对于 Windows 版本，的开发，核心任务是将现有文件系统逻辑迁移到 Windows 平台。接入方式主要有两种：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;一是通过 Linux 挂载并启动 Samba 服务，将文件共享给 Windows 使用；这种方式可能带来额外的协议开销和配置复杂性，进而影响性能和稳定性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;二是直接在 Windows 上运行客户端，这种方式更接近 Windows 原生的使用体验，但历史版本存在较多 bug。在此次 Beta 版本，中，我们主要针对第二种方式对 Windows 客户端进行优化。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我们希望这个版本能够达到真正可用的状态，包括确保大多数 Windows 应用程序能够在 JuiceFS 的文件系统上正常运行，支持数据读写操作以及文件管理功能；确保系统具有合格的性能。为此，Beta 版本需要完成的工作可以分为几个方面：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. 修复工具集&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;工具集是 JuiceFS 使用过程中的重要组成部分，但许多常用命令在 Windows 客户端上无法正常使用。我们将在下文详细描述各个主要命令，所进行的优化和改进工作。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. 优化使用体验&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在过去的版本中，用户体验存在许多问题，尤其在性能方面和操作简便性方面。因此，我们需要着重优化这些方面，使得使用过程更加流畅、简便。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. 修复 Bug&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;与身份验证和权限管理相关的问题，过去的版本在这些方面比较混乱。&lt;/li&gt; 
 &lt;li&gt;与 Windows API 相关的 Bug，特别是错误码返回值和某些逻辑问题。&lt;/li&gt; 
 &lt;li&gt;一些零散的 Bug，需要在 Beta 版本中一并修复。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;02 怎么做 ？&lt;/h2&gt; 
&lt;p&gt;在这个优化过程中，我们依旧借助了一个非常重要的组件------WinFsp（Windows File System Proxy），它是一个开源库，提供了两个至关重要的特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;提供了一个高效的文件系统驱动接口，实现了 Windows 文件系统驱动（FSD, File System Driver）。&lt;/li&gt; 
 &lt;li&gt;还提供了 FUSE（Filesystem in Userspace）接口中的 high-level 接口。FUSE 本身提供了两套接口------high-level 接口和 low-level 接口。在 JuiceFS 中，我们使用的是 low-level 的接口，但通过做一些路径转换，我们已经可以成功对接 FUSE 层。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在引入 WinFsp 后，Windows 上的读取流程大致是这样的。下图中上半部分代表用户空间，下半部分代表内核空间。&lt;/p&gt; 
&lt;p&gt;图中展示的流程是数据从应用程序到驱动程序之间的流转路径。在用户空间中，应用程序执行 I/O 操作（如文件读写）会传递到内核空间，并流转到 Windows 内核中的一个核心组件 ------ Windows I/O Manager。该组件负责管理所有的 I/O 操作。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-b57a140b1efff9c20e1868dcd2ae1dbe89a.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;接下来，Windows I/O Manager 会将这些 I/O 操作转换为 Windows I/O Request Package（IRP），然后将其转发到文件系统驱动层。此处简化了部分层级，最终这些请求会传递到文件系统驱动层，具体来说就是 WinFsp 文件系统驱动。&lt;/p&gt; 
&lt;p&gt;当文件系统驱动接收到请求时，它会将请求转发给 WinFsp 的 DLL。这个 DLL 承担了与 Windows 系统内核数据进行接口转换的责任。&lt;/p&gt; 
&lt;p&gt;在我们 JuiceFS 的实现中，应用程序通过链接 WinFsp DLL 来处理 I/O 请求。当 Windows I/O 请求被传递到 DLL 时，WinFsp 会将其转换为 FUSE 接口，并通过 Windows FUSE 兼容层，进行回调处理。绝大部分的工作集中在这一层，包括 bug 修复和性能优化。&lt;/p&gt; 
&lt;p&gt;处理完这些操作后，最终的请求会交给 JuiceFS 核心 VFS（虚拟文件系统）层，核心 VFS 负责执行具体的文件系统逻辑和请求处理。&lt;/p&gt; 
&lt;h3&gt;还有 4 个困难&lt;/h3&gt; 
&lt;h4&gt;1. Unix vs Windows&lt;/h4&gt; 
&lt;p&gt;尽管 WinFsp 已经帮助我们将 I/O 请求转换为 FUSE 接口，但我们依然需要面对 Unix 和 Windows 之间的本质性差异。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;权限管理差异&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;例如，Linux 中的文件权限（可读、可写、可执行等）和扩展权限（如 ACL）与 Windows 中的权限模型完全不同。Windows 使用 DACL（Discretionary Access Control List）进行权限定义，同时支持权限继承，这与 Unix 的权限模型有很大差异。因此，虽然 WinFsp 处理了一部分权限的转换，但我们仍需解决如何将这两种，权限体系进行有效映射，以便更好地支持 Windows 应用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;系统特性的差异&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unix 和 Windows 在文件系统特性方面也存在较多的本质差异。诸如硬链接、软链接、挂载方式、目录长度、字符限制等、文件属性等，而我们的 JuiceFS 核心文件系统是基于 Unix 的文件系统设计，因此我们需要解决或者绕开这些差异，以确保在 Windows 平台上也能正常运行。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;API 差异&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unix 和 Windows 在系统 API 上也有许多差异，尽管我们使用了 Go 语言来简化部分 API 差异的处理，但依然存在一些需要手动解决的情况。例如，获取 UID 和 GID 等信息，在 Windows 系统中并没有直接的对应方式。虽然 Go 语言在跨平台处理上做了很多优化，但一些特定的系统 API 仍然需要我们自行处理这些差异，确保系统的兼容性和稳定性。&lt;/p&gt; 
&lt;h4&gt;2. Linux FUSE vs WinFsp FUSE&lt;/h4&gt; 
&lt;p&gt;之前，JuiceFS 一直与 low-level FUSE 接口进行对接，而 WinFsp FUSE 则是一个 high-level FUSE 接口，这两者存在本质的区别。&lt;/p&gt; 
&lt;p&gt;首先，low-level FUSE 通常使用 inode 作为回调参数，而高级 FUSE 则主要使用路径作为回调参数，这是两者的一个显著差异。然而，差异不仅限于此。&lt;/p&gt; 
&lt;p&gt;尽管 WinFsp 提供了一个 high-level 的 FUSE 回调接口，但其实现逻辑并未完全遵循 Linux 中 libfuse 的实现方式。因此，在使用 WinFsp FUSE 时，我们常常会遇到一种情况：在 Linux 中，某些行为表现得很自然和一致，完全如 FUSE 文档所述的一致，但在 WinFsp 中，这些行为的回调逻辑却有所不同。这使得我们需要特别注意并解决这些平台之间的行为差异。&lt;/p&gt; 
&lt;h4&gt;3. 黑盒的 Windows 内核&lt;/h4&gt; 
&lt;p&gt;在开发过程中，我们还需要面对一个，黑盒的 Windows 内核。由于 Windows 内核没有开源，且相关文档资料非常有限，调试和观察 Windows 内核的行为变得较为困难。这使得整个开发过程充满了不确定性，对于开发人员来说，Windows 内核的工作机制就像一个封闭的黑盒，需要通过不断的实验和反向工程来理解和适应。&lt;/p&gt; 
&lt;h4&gt;4. 有限的 FSD 文档资源&lt;/h4&gt; 
&lt;p&gt;除了 Windows 内核本身的黑盒特性外，关于文件系统驱动（FSD）的文档资源也非常有限。微软并未公开完整的 Windows 内核开发文档，很多 API 仅由第三方整理，官方文档稀缺。事实上，唯一一本专注于 Windows 文件系统驱动的书籍是 1997 年出版的 《Windows NT File System Internals: A Developer's Guide》。尽管该书中包含大量错误（多数是由于不适用于当前版本），直到今天，Windows 文件系统驱动的开发者仍然只能依赖这本书作为参考。这些有限的文档资源使得我们在排查问题和理解 Windows 文件系统行为时，必须付出更多的时间和精力来收集资料并进行学习。&lt;/p&gt; 
&lt;h2&gt;03 做到了哪些？&lt;/h2&gt; 
&lt;p&gt;接下来，我们将介绍我们在 Beta 版本中进行的具体工作。主要可以分为两个部分：JuiceFS 端的工作以及 WinFsp 端的工作。&lt;/p&gt; 
&lt;h4&gt;1. JuiceFS 部分&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;工具集&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;首先，工具集在我们日常使用 JuiceFS 时至关重要。使用者在部署之后，都需要借助工具集来进行性能测试、监控等操作。例如，最基本的性能测试通常会运行 bench 命令。然而，在早期版本中，这个命令在 Windows 平台上无法运行，系统会提示命令不支持 Windows。&lt;/p&gt; 
&lt;p&gt;此外，挂载文件系统后，我们通常需要观察一些关键的性能指标，例如原始数据的延迟、吞吐量、对象存储的表现，以及分布式缓存的吞吐量等。然而，在之前的版本中，这些监控功能也无法正常使用，系统会提示无法打开 &lt;code&gt;.control&lt;/code&gt; 文件。&lt;/p&gt; 
&lt;p&gt;JuiceFS 1.3 和，企业版 5.2 中，这些问题都得到了修复。目前，工具集已经从几乎完全不可用，发展到了基本可用的状态。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;API 兼容性&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，一些用户可能会遇到问题，特别是当将 JuiceFS 用作 Git 目录时。有些用户发现直接执行 Git 命令时，操作无法正常执行。问题的主要原因在于错误码的处理不兼容 Windows 系统。我们没有像 Windows 本身那样处理特定的错误码，导致应用程序依赖于某些特定错误码时无法正常工作。这一部分主要涉及到 API 兼容性，的改进。&lt;/p&gt; 
&lt;p&gt;此外，早期版本中还可能出现挂载状态异常的情况。例如，挂载过程完成后，系统提示挂载失败，实际上文件系统已经挂载；或是挂载成功的提示显示不正确。在当前的 Beta 版本中，我们已经对这些行为进行了修复和优化，包括 Git 命令相关的错误。&lt;/p&gt; 
&lt;p&gt;本质上，Linux 和 Windows 在错误码方面的差异是难以完全匹配的，因此实现 100% 的一致性非常困难。尽管如此，我们依然通过持续的反馈和改进，不断优化这些兼容性问题，力求提供更稳定的 Windows 版本。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User/permission&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，我们的权限管理还存在一些模糊之处。比如，当用户 A 设置了某些权限或在其他区域设置了权限时，我们并没有清晰的预期和统一的处理方式。这导致了一些问题，例如，用户 A 挂载了文件系统后，他希望同事能够读取文件，但当时我们没有明确的方案来处理这种情况。为了实现文件共享，我们曾使用一个名为 as-root 的参数，将所有用户权限提升为 root 权限，这种做法虽然能暂时解决问题，但并不理想。&lt;/p&gt; 
&lt;p&gt;而在 Beta 版本中，我们对权限管理进行了优化。重新设计了权限机制，明确了权限管理的目标，确保在 Windows API 的正常工作下，尽可能地与 POSIX 行为保持一致。具体来说，我们在没有开启 UID 映射的情况下，确保 Linux 用户的 UID（如 1001）能够在 Windows 系统中正确映射和共享，保证相同 UID 的用户被视为相同的用户。&lt;/p&gt; 
&lt;p&gt;此外，如果启用了 UID 映射功能，这是一个更为复杂的话题，但我们也将提供支持。总之，我们的目标是确保 Windows 系统的权限管理尽可能与 POSIX 行为一致，为用户提供更清晰、可靠的权限控制。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;挂载相关&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，挂载操作只能在前台进行，无法支持后台挂载。这导致了一个问题：如果用户希望后台挂载文件系统以便共享给其他用户，他们不得不依赖第三方工具或手动配置。例如，他们可能需要使用微软自带的命令行工具来创建系统服务，或者手写 YAML 配置文件，这样的过程既繁琐又容易出错。&lt;/p&gt; 
&lt;p&gt;在 JuiceFS 1.3 和，企业版 5.2 中，我们解决了这一问题，直接支持了后台挂载。与 Linux 版本一致，用户可以通过 &lt;code&gt;-d&lt;/code&gt; 参数在社区版中实现后台挂载，而企业版默认支持后台挂载。如果用户需要前台挂载，则可以使用 &lt;code&gt;-f&lt;/code&gt; 参数。&lt;/p&gt; 
&lt;p&gt;此外，过去的社区版也不支持将同一个文件系统挂载到多个盘符上。现在，在，企业版，中，我们已实现了这一功能，允许用户将同一个文件系统挂载到多个盘符上。目前，这项功能仅在企业版中可用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;性能提升&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在早期版本中，存在一个广泛且严重的问题，那就是小文件的读写性能非常差，文件属性的读取效率也很低。&lt;/p&gt; 
&lt;p&gt;在 JuiceFS 1.3 和，企业版 5.2 版本中，我们进行了大幅优化，显著提升了小文件的读写性能。具体的优化进展可以通过 bench 工具来测试和反馈，该工具能够提供关于大文件和小文件的读写性能指标。&lt;/p&gt; 
&lt;p&gt;以阿里云上一个 88 核 16 GB 的机器为例，使用阿里云的 Redis 和自建的 MinIO 进行性能测试。在默认命令行参数下，我们发现小文件的写入性能接近 1.2 版本，而小文件的读取性能则有了显著提升：从 1.2 版本，的每秒 200 个小文件提升至 1.3 版本，的每秒接近 1000 个小文件。&lt;/p&gt; 
&lt;p&gt;此外，文件属性的读取性能也得到了优化。过去每秒大约只能获取 200 个文件属性，而现在可以达到 4500 次每秒。当然，这一结果受缓存的影响，实际性能可能会有所波动，但总体上优化效果非常显著。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-e99aa801f3ab93281f35c83c5641a364771.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;另一项重要的优化涉及路径深度的影响。在 1.2 版本，中，当文件路径深度增加时，性能急剧下降。例如，在三层目录的情况下，读取小文件的性能大幅下降，可能每秒只能读取几十个小文件。而在 1.3 版本，中，即使路径深度达到三层，性能几乎没有显著变化，保持了稳定的表现。这一改进确保了用户在使用过程中，不会因为创建更多目录而导致性能下降。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-d3ecb240d7be9c8504d22847a6baebef086.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;其他优化与修复&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;子目录挂载和文件重命名操作在之前的版本中可能无法正常进行，尤其是在重命名时，常常会遇到一些难以解释的错误，导致操作无法完成。现在，这些问题已经得到了优化和修复。此外，可能还有一些其他因素未在此列出，仍在持续改进中。&lt;/p&gt; 
&lt;h3&gt;2. FSD 相关问题修复与定位&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;POSIX 文件权限映射&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在之前的版本中，我们遇到一个与文件权限映射相关的问题，尤其是 0666 权限设置。根据 POSIX 标准，0666 权限意味着文件对于所有用户都是可读可写的。然而，在 Windows 上，即使我们为某个文件设置了 0666 权限，Everyone 组（即所有用户）仍然无法进行覆盖写操作。&lt;/p&gt; 
&lt;p&gt;这个问题的根本原因在于 WinFsp 目前没有完全处理这些权限映射。即使在 Windows 上设置了类似的权限，实际上它并不会如 POSIX 系统那样让所有用户都能够读取和写入文件。&lt;/p&gt; 
&lt;p&gt;目前，WinFsp 的版本仍然存在这个问题，我们已经向上游提交 PR 来修复这个问题，期望能够使 Windows 上的行为与 POSIX 系统一致，确保在 Windows 平台上也能正确地处理文件权限。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;close to open 一致性&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;默认情况下，JuiceFS 遵循 close-to-open 一致性模型，这意味着在文件关闭之后，下次打开该文件时，用户能够看到之前写入的数据，即使是在不同的机器上也是如此。&lt;/p&gt; 
&lt;p&gt;然而，在 WinFsp 及 Windows 系统中，文件关闭的处理方式与此不同。WinFsp 的默认行为并不会在文件关闭时，异步等待 FUSE 应用程序处理完数据。具体来说，当应用程序调用 CloseHandle 关闭文件句柄时，经由 WinFsp 的 Windows 应用程序并不会阻塞在 CloseHandle 的调用处，而是直接返回，哪怕本地还有未上传至云端的数据。这种方式导致了 close-to-open 一致性无法得到保证，甚至本机用户，在下一次打开此文件时，依旧可能读取到的是错误的文件长度信息。&lt;/p&gt; 
&lt;p&gt;为了解决这个问题，我们已经向 WinFsp 的源代码做出相应调整，以确保在 Windows 平台上也能够维持 close-to-open 一致性，确保数据的同步和一致性不受影响。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;内核 cache manager 使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在 WinFsp 的处理过程中，默认情况下它并未利用内核的 Cache Manager，这直接导致了文件读取性能较差。Cache Manager 通常会负责缓存和预读操作，这有助于提升文件系统的读取效率。然而，在 WinFsp 的默认配置下，Cache Manager 并未得到有效利用，从而影响了系统的性能表现。&lt;/p&gt; 
&lt;p&gt;为了解决这一问题，我们在 FSD 层面进行了问题定位和修复，并研究了如何在 WinFsp 中正确启用 Cache Manager。我们的目标是通过正确启用和配置缓存管理，显著提升文件读取性能，并优化系统的整体表现。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-5e3109a0cee8c5df150e577ae7e76e404f0.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;03 未来计划&lt;/h2&gt; 
&lt;p&gt;我们将持续聚焦 Windows 客户端的可用性，包括 bug 修复、功能扩展以及对软链接（symlink）的支持；性能提升也是我们不断努力的方向。随着使用场景日益复杂，数据规模不断扩大，且涉及的技术点较为广泛，Windows 客户端，的优化将是一个长期过程。&lt;/p&gt; 
&lt;p&gt;此外，许多用户反馈希望能够与 AD 域账号进行集成。在 Windows 环境下，与 AD 域账号的绑定将是一个非常实用的特性，我们正在研究这一需求。如果大家有相关的建议或希望实现的功能，欢迎与我们讨论。&lt;/p&gt; 
&lt;p&gt;最后，感谢大家对 Windows 版本的支持，欢迎大家体验和反馈，希望我们能为大家提供更好的使用体验。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相关阅读推荐&lt;/strong&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuicefs.com%2Fzh-cn%2Fblog%2Fsolutions%2Fjuicefs-windows--performance-test" target="_blank"&gt;3000 台 JuiceFS Windows 客户端性能评估&lt;/a&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuicefs.com%2Fzh-cn%2Fblog%2Fsolutions%2Fbuilding-high-throughput-cache-pool-resilience-with-juicefs" target="_blank"&gt;从资源闲置到弹性高吞吐，JuiceFS 如何构建 70GB/s 吞吐的缓存池？&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5389802/blog/18691611</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5389802/blog/18691611</guid>
      <pubDate>Fri, 12 Sep 2025 10:15:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>538 款生成式人工智能服务完成备案</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;网信中国微信公众号&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FT8vhj9NpAlgSqelIgqAw-Q" target="_blank"&gt;发布&lt;/a&gt;「关于发布生成式人工智能服务已备案信息的公告（2025 年 7 月至 8 月）」指出，为促进生成式人工智能服务创新发展和规范应用，网信部门会同有关部门按照《生成式人工智能服务管理暂行办法》要求，持续开展生成式人工智能服务备案工作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="278" src="https://oscimg.oschina.net/oscnet/up-09f942a364574298c671c90b997b3602e1e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;7 月至 8 月，新增 99 款生成式人工智能服务在国家网信办完成备案，对于通过 API 接口或其他方式直接调用已备案模型能力的生成式人工智能应用或功能，由地方网信办开展登记，本阶段新增 27 款完成登记。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;截至 2025 年 8 月 31 日，累计有 538 款生成式人工智能服务完成备案，263 款生成式人工智能应用或功能完成登记。现将相关信息予以公告。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;提供具有舆论属性或者社会动员能力的生成式人工智能服务的，可通过属地网信部门履行备案或登记程序。已上线的生成式人工智能应用或功能，应在显著位置或产品详情页面公示所使用已备案或登记生成式人工智能服务情况，注明模型名称、备案号或上线编号。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371844</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371844</guid>
      <pubDate>Fri, 12 Sep 2025 09:36:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>美国 FTC 启动对 Meta、OpenAI 等 AI 聊天机器人调查</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;美国联邦贸易委员会（FTC）已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ftc.gov%2Fnews-events%2Fnews%2Fpress-releases%2F2025%2F09%2Fftc-launches-inquiry-ai-chatbots-acting-companions" target="_blank"&gt;要求&lt;/a&gt;Alphabet 旗下的谷歌、OpenAI、Meta Platforms Inc．及其他四家人工智能聊天机器人开发商提交相关资料，说明其技术对儿童的影响。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="279" src="https://oscimg.oschina.net/oscnet/up-fd5e589e48989ed04809b07ad777a304ad6.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这家负责反垄断和消费者保护的机构周四表示，已向这些公司发出指令，以收集信息研究它们如何评估、测试和监控聊天机器人，以及采取了哪些措施限制未成年人使用。七家公司包括谷歌、OpenAI、Meta 及其 Instagram 子公司、Snap Inc．、埃隆·马斯克的 xAI，以及 Character.AI 的开发商 Character Technologies Inc．。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;聊天机器人开发商正面临越来越严格的审查，外界质疑它们是否采取足够行动保障服务安全，防止用户参与危险行为。上月，一名加州高中生的父母起诉 OpenAI，称 ChatGPT 让他们的儿子与家人疏远，并帮助他筹划了在今年 4 月的自杀。该公司表示已经向家属致以同情，并正在评估这起诉讼。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;谷歌和 Snap 未立即置评，OpenAI、xAI 和 Character.AI 也未立即做出回应。Meta 拒绝发表评论，但该公司近期已采取措施，确保聊天机器人避免与未成年人讨论包括自残和自杀在内的话题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据美国法律，科技公司未经父母许可不得收集 13 岁以下儿童的数据。多年来，国会议员一直试图将这些保护措施扩展至年龄更大的青少年，但相关立法迄今未能推进。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371837</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371837</guid>
      <pubDate>Fri, 12 Sep 2025 09:14:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>小红书开源 FireRedTTS2，专为长对话设计的语音生成系统</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;小红书团队发布名为 FireRedTTS2 的开源项目，这是一款面向多说话人对话生成的长篇流式语音合成系统，旨在为播客和聊天机器人提供稳定、自然的语音输出。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0912/170756_ZLiI_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;核心亮点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;长篇对话生成：支持长达 3 分钟的 4 人对话，且可通过扩展训练语料轻松扩展至更长对话和更多说话人。&lt;/li&gt; 
 &lt;li&gt;多语言支持：涵盖英语、中文、日语、韩语、法语、德语和俄语等多种语言，支持跨语言和代码切换场景下的零样本文本到语音克隆。&lt;/li&gt; 
 &lt;li&gt;超低延迟：基于 12.5Hz 流式语音标记器，采用双 Transformer 架构，实现文本 - 语音交错序列操作，灵活支持逐句生成，首包延迟低至 140ms，同时保持高质量音频输出。&lt;/li&gt; 
 &lt;li&gt;高稳定性：在独白和对话测试中均展现出高相似性和低词错误率 / 字符错误率。&lt;/li&gt; 
 &lt;li&gt;随机音色生成：适用于创建语音识别 / 语音交互数据。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;团队已发布技术报告与演示页面，并计划在 10 月，推出增强版多语言基模型、微调代码与教程，以及端到端的 text-to-blog 流水线。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0912/170608_M6s3_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;代码仓库附带完整的安装与使用示例，依赖 PyTorch 2.7.1，模型权重托管于 Hugging Face。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://github.com/FireRedTeam/FireRedTTS2&lt;br&gt; https://arxiv.org/abs/2509.02020&lt;br&gt; https://huggingface.co/FireRedTeam/FireRedTTS2&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371836</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371836</guid>
      <pubDate>Fri, 12 Sep 2025 09:13:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Claude 面向 Team 和 Enterprise 用户上线「记忆」功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Anthropic 为 Claude 的 Team 与 Enterprise 用户上线了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Fnews%2Fmemory" target="_blank"&gt;「记忆」功能&lt;/a&gt;，允许模型记住过去的对话内容以提供更个性化的服务，并同步向所有用户开放隐身聊天模式。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0a5998ceff0c7afdcc7d851886dfd39172d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该功能默认关闭，用户可在设置中启用「搜索并引用聊天记录」与「生成聊天历史记忆」两项开关，随时查看、编辑或删除 Claude 保存的内容。&lt;/p&gt; 
&lt;p&gt;&lt;img height="592" src="https://static.oschina.net/uploads/space/2025/0912/164543_xQy8_2720166.jpg" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;系统以项目为边界，为每个项目单独维护记忆，确保不同工作流互不干扰；企业管理员可一键关闭组织级记忆。隐身聊天模式下，对话既不写入历史也不进入记忆，适合敏感讨论。&lt;/p&gt; 
&lt;p&gt;Anthropic 表示，记忆功能将很快扩展至其他付费档位，并支持导入导出以便迁移或备份。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371832</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371832</guid>
      <pubDate>Fri, 12 Sep 2025 09:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>蚂蚁数科宣布：支持企业客户按大模型「应用效果」付费</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;9 月 12 日，蚂蚁数科在外滩大会论坛上宣布，将推出按「效果付费」的新型商业模式。该模式支持企业客户根据大模型应用的实际效果（如业务增长或成本节省）来付费，而非传统的项目制或订阅制模式。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-48b8376d0785073871e8503b6452a7ea3bb.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;随着大模型从技术层向场景层渗透，AI 已经不再是单点技术工具，而正成为业务成果的加速器，「企业级 AI 服务的衡量标准，应从‘为技术付费’向‘为效果付费’转变，一些以结果为重的产品，客户可以选择为可见的效果买单这种付费方式。」&lt;/p&gt; 
&lt;p&gt;「按效付费」模式将显著降低企业应用大模型的门槛和风险，企业无需投入高昂的基础设施成本，即可收获 AI 带来的业务价值，尤其将助力中小企业更轻松地接入 AI 能力，加速大模型在金融、能源、零售等千行百业的规模化落地。&lt;/p&gt; 
&lt;p&gt;蚂蚁数科副总裁余滨表示，目前蚂蚁数科已经与部分战略级客户达成基于关键业务效果的合作模式，将逐步向全行业推广。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371830</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371830</guid>
      <pubDate>Fri, 12 Sep 2025 08:43:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌 Nano Banana 将于本月登陆 Photoshop</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Adobe 首席设计推广大使 Howard Pinsky 在 X 平台宣布，谷歌热门 AI 模型 Nano Banana 将于本月内正式集成至 Photoshop。用户可通过自然语言提示词，结合 Photoshop 的选区、图层、蒙版等「非破坏性」工具进行精准图像编辑。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="392" src="https://oscimg.oschina.net/oscnet/up-a98a767bbdca784d50d8820ada92bebadb3.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;Nano Banana 正式名称为谷歌 Gemini 2.5 Flash Image，本月初在 Gemini 平台上线后迅速走红。谷歌实验室副总裁 Josh Woodward 曾透露，该模型已完成超 2 亿次图像编辑，吸引超 1000 万新用户，火爆程度导致「内部 TPU 严重过载，SRE 警报不停」。众多用户表示，其核心优势在于解决了 AI 图像生成的「恐怖谷效应」，在角色一致性、手办与真人渲染等场景表现突出。&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;此次集成并非 Adobe 首次布局 AI。今年 7 月，Photoshop 已测试 Generative Upscale、Remove 等功能，支持用户选择 Firefly 模型。而 Nano Banana 的加入将进一步强化多模态编辑能力——用户既能用提示词生成内容，又能通过 PS 工具精细调整，实现「AI 创意+专业控制」的无缝衔接。&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371828</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371828</guid>
      <pubDate>Fri, 12 Sep 2025 08:39:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Claude API 新增 Web Fetch 功能，支持从任意 URL 获取并分析内容</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Anthropic 宣布为 Claude API 新增 Web Fetch 功能，支持从任意网页 URL 获取并分析内容，无需额外的基础设施。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5ae2b1d7e1c66a7c026cbdc2310eee177c3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该功能现已进入公测阶段。开发者只需在请求头中加入 anthropic-beta: web-fetch-2025-09-10 即可启用，无需额外基础设施就能让 Claude 抓取并分析任意网页或 PDF 的完整内容。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;调用时，Claude 会根据提示与可用的 URL 决定何时进行抓取，API 会返回纯文本或自动提取的 PDF 文本，并可选择开启引用功能。&lt;/p&gt; 
&lt;p&gt;开发者可以通过 max_uses 限制单次请求的抓取次数，使用 allowed_domains 或 blocked_domains 进行域级黑白名单管理，并通过 max_content_tokens 控制最大 token 用量以防止超额计费。&lt;/p&gt; 
&lt;p&gt;为防止数据泄露，该工具禁止 Claude 动态构造 URL，只能抓取用户显式提供或先前搜索/抓取结果中的 URL。在不可信环境中处理敏感数据时，建议关闭该工具或结合上述限制使用。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/web-fetch-too&lt;/em&gt;l&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371827</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371827</guid>
      <pubDate>Fri, 12 Sep 2025 08:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>网易澄清前游戏高管创业争议</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;网易近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F7960183925%2FQ3Y0aj9jY" target="_blank"&gt;发布声明称&lt;/a&gt;：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;我们观察到近期媒体及社交媒体出现「网易前 COO 再创业」及与其相关的纠纷传闻等信息。经查，该人员已于 2011 年正式离职，其后在其他公司任职、创业等一切经历均与网易公司无关。其个人引发的争议与风波，均不代表网易立场。&lt;/p&gt; 
 &lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/162440_LLcG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;据悉，网易所指的前 COO 为詹钟晖。9 月 4 日，有网友在社交平台发现，詹钟晖正在为其创业项目的单机游戏新作招聘人才。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;公开资料显示，詹钟晖于 1999 年加入网易，从程序员做起，历任在线游戏事业部总监、网易联合 COO、网易 COO，后于 2011 年离职创立简悦。2017 年，简悦被阿里收购，2019 年詹钟晖成立灵犀互娱，此后，他在灵犀长期担任游戏业务负责人。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;2024 年 3 月，詹钟晖发布内部邮件表示即将卸任。2025 年，他发布朋友圈，表示自己将投身内容驱动的单机买断制游戏。2025 年 4 月，詹钟晖成立广州钛麒数字科技有限公司，紫龙 CEO 王一任联合创始人。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/162821_Ri9X_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此次引发舆论风波的是其今年 4 月创立的广州钛麒数字科技有限公司，据其自述，该公司当前主营赛道为「内容驱动的单机买断游戏」，并对外发布招聘意向。&lt;/p&gt; 
&lt;p&gt;近日，有网友发帖称，詹钟晖带队的单机项目在招聘时白嫖应聘者创意方案，并指控其人和游戏公司存在多项弊病。目前，詹钟晖尚未做出公开回应。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371825</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371825</guid>
      <pubDate>Fri, 12 Sep 2025 08:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>字节跳动图像创作模型 Seedream 4.0 登顶国际评测排行榜</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;国际知名评测机构 Artificial Analysis&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FArtificialAnlys%2Fstatus%2F1966284499249193306" target="_blank"&gt;发布消息称&lt;/a&gt;，字节跳动 Seedream 4.0 已登顶文生图及图像编辑排行榜榜首，在两个领域都超越了谷歌的 Gemini 2.5 Flash（Nano-Banana）。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0912/161703_QBMX_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a3ae8d198fa06a3c44d15a23b6347861f31.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://artificialanalysis.ai/text-to-image/arena/leaderboard-image&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/news/371058" target="_blank"&gt;Seedream 4.0&lt;/a&gt;是字节跳动最新发布的豆包图像创作模型。该模型集成了文生图、图像编辑、多图融合、组图生成等多种能力，最高支持 4K 分辨率图像生成。&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;主要亮点&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;多模态玩法拓展：灵活支持文本、图像的组合输入，允许文生图、图生图、图像编辑、多图编辑、组图生成等创作模式，玩法创意多样。&lt;/li&gt; 
 &lt;li&gt;风格化美感提升：支持高度自由的艺术风格迁移，从巴洛克到赛博朋克风，风格百变，更可组合创造全新风格，美感突出。&lt;/li&gt; 
 &lt;li&gt;逻辑理解力增强：结合世界知识，提升了多模态输入理解，会 「画」，更会先 「想」，在涉及物理和时间约束、解谜填字、续写漫画等任务中，展现出推理生成能力。&lt;/li&gt; 
 &lt;li&gt;自适应与 4K 生成：可根据指令或参考图生成最佳比例图片，也支持用户自定义尺寸，最高分辨率从 2K 扩展至 4K 超高清。&lt;/li&gt; 
 &lt;li&gt;推理速度跃升：通过全新高效的架构设计，以及极致的蒸馏加速，DiT 生图的推理速度较 Seedream 3.0 提升超 10 倍。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;目前 Seedream 4.0 已在豆包 App、即梦 AI、扣子等产品上线，并通过火山引擎开放给企业客户。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371822</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371822</guid>
      <pubDate>Fri, 12 Sep 2025 08:19:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI 数据版权新纪元：Real Simple Licensing 协议引发关注</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;随着人工智能（AI）行业面临日益严峻的版权问题，尤其是在 Anthropic 与版权方达成 15 亿美元和解后，许多企业开始重视其训练数据的合法性。目前，有多达 40 起未授权数据使用的诉讼案正在进行中，其中包括一起因 Midjourney 制作超人形象而被起诉的案件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在没有有效的授权体系的情况下，AI 公司可能面临大规模的版权诉讼，这让行业前景堪忧。为了应对这一挑战，一群技术专家和网络出版商联合推出了一项名为 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frslstandard.org%2F" target="_blank"&gt;Real Simple Licensing&lt;/a&gt;（RSL）的新系统，旨在实现大规模的数据授权。该系统已经得到了 Reddit、Quora 和 Yahoo 等大型网络出版商的支持，但行业内能否形成合力，吸引主要的 AI 实验室参与仍然是个未知数。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="264" src="https://oscimg.oschina.net/oscnet/up-2a91fdf28d01d6c3fde86bdbb96309eb93d.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;RSL 的联合创始人 Eckart Walther 表示，他们的目标是创建一个可以在互联网上广泛应用的训练数据授权体系。他指出，「我们需要为互联网提供机器可读的许可协议，而 RSL 正是解决这一问题的工具。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;多年来，诸如数据提供者联盟等组织一直在推动更清晰的数据采集实践，但 RSL 是第一个旨在提供实际技术和法律基础设施的尝试。技术上，RSL 协议定义了出版商可以为其内容设定的具体许可条款，这包括 AI 公司是否需要定制许可或采用知识共享（Creative Commons）条款。参与的网页将把条款纳入其 「robots.txt」 文件，以便轻松识别哪些数据受哪些条款保护。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在法律层面，RSL 团队建立了一个名为 RSL Collective 的集体许可组织，旨在为出版商谈判条款并收取版税，类似于音乐行业的 ASCAP 或电影行业的 MPLC。目前，已经有许多知名出版商加入了这一集体，包括 Yahoo、Reddit 和 Medium 等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;尽管如此，确定 AI 模型具体使用哪些训练数据以计算版税的挑战依然存在。对于实时获取网络数据的产品，如谷歌的 AI 搜索摘要，数据使用的追踪相对简单，但如果训练过程未被记录，确认特定文档是否被某个大语言模型（LLM）使用就变得困难重重。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;尽管存在这些挑战，RSL 的创建者们相信 AI 公司能够应对。「他们在之前的某些授权协议中已经需要能够报告数据使用情况，因此这并不是不可能的」，RSL 的另一位联合创始人 Doug Leeds 表示。「只要足够好，就能让人们得到应有的报酬。」&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371819</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371819</guid>
      <pubDate>Fri, 12 Sep 2025 08:09:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>网传甲骨文中国新一轮裁员赔偿 N+6，AI 相关岗位招聘月薪 2 至 7 万元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1988800805%2FQ45m9dzXh" target="_blank"&gt;据网传消息&lt;/a&gt;，9 月 9 日上午，甲骨文中国区公布了新一轮裁员名单，涉及 CSS（客户支持服务）、GCS（全球客户服务）等多个部门的多种岗位。本次裁员补偿方案为「N+6」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;对此，时代周报记者通过官网电话联系甲骨文进行求证，对方回应表示，暂不清楚这一变动细节。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;此外，时代周报记者注意到，甲骨文在脉脉、boss 直聘等平台仍在招聘生成式 AI 销售工程师、公有云解决方案架构师等技术岗位，月薪从 20000 元到 70000 元不等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;福布斯实时富豪榜显示，甲骨文创始人拉里・埃里森总财富达 4019 亿美元，日增 1100 亿美元或 37%，成为史上第二个净资产突破 4000 亿美元大关的人。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="587" src="https://oscimg.oschina.net/oscnet/up-1c2309c9f3f45c8e7522623751993556803.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371813</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371813</guid>
      <pubDate>Fri, 12 Sep 2025 08:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>HarmonyOS NEXT 安全开发实践感悟</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#333333"&gt;踏入鸿蒙世界的敲门砖，标志着您在技术征途上的全新起点，提升就业竞争力，获得行业认可，点亮职业成长先机，快人一步抢占未来应用开发赛道！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;本文旨在深入探讨华为鸿蒙 HarmonyOS NEXT 系统（截至目前 API12）的技术细节，基于实际开发实践进行总结。主要作为技术分享与交流载体，难免错漏，欢迎各位同仁提出宝贵意见和问题，以便共同进步。本文为原创内容，任何形式的转载必须注明出处及原作者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;一、安全开发环境搭建&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）搭建步骤&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;要开启 HarmonyOS NEXT 的安全开发之旅，首先得搭建一个合适的开发环境。这就像盖房子前要先准备好坚固的地基一样重要。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 安装开发工具&lt;br&gt; 我们需要下载并安装 HarmonyOS NEXT 的官方开发工具包，例如 DevEco Studio。这个工具包就像是一个万能工具箱，里面包含了我们开发所需的各种工具，如代码编辑器、编译器、调试器等。安装过程就像按照说明书组装家具，按照提示一步步操作即可。不过要注意，在安装过程中，一定要选择安全的下载源，避免下载到被篡改的安装包，这就好比购买正品家具，要从正规渠道购买，防止买到假货。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 配置开发环境变量&lt;br&gt; 安装完成后，还需要配置一些环境变量，让系统能够找到我们安装的开发工具。这就像是给工具箱在房间里找一个固定的存放位置，并告诉大家这个位置在哪里，以便随时取用。例如，设置 JDK（Java Development Kit）的路径，因为 HarmonyOS NEXT 的开发可能会用到 Java 相关技术，JDK 就像是给我们提供建筑材料的仓库，没有它，我们无法构建出想要的软件大厦。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）环境安全配置要点&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 定期更新开发工具&lt;br&gt; 开发工具就像我们手中的武器，要时刻保持锋利。定期更新开发工具可以确保我们拥有最新的安全修复和功能改进。想象一下，如果我们拿着一把生锈的剑去战斗（使用旧版本且存在安全 X 洞的开发工具），很容易被敌人（攻 X 者）攻破。而定期更新就像是给剑打磨、升级，让它更加强大。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 限制不必要的网络访问&lt;br&gt; 在开发环境中，有些工具可能不需要联网就可以正常工作，对于这些工具，我们要限制其网络访问权限。这就好比给房子的门窗安装防盗网，防止小偷（恶意网络攻 X）从这些不必要的通道进入。例如，我们可以在防火墙中设置规则，只允许开发工具访问必要的网络资源，如下载更新包的官方服务器等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;二、安全编码规范&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）规范条目&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 输入验证&lt;br&gt; 在处理用户输入时，一定要进行严格的验证。用户输入就像一个神秘的包裹，我们不能直接打开，必须先检查包裹是否安全（输入是否合法）。例如，如果我们的应用需要用户输入一个数字，那么我们要检查输入的内容是否真的是数字，而不是其他恶意字符，否则可能会导致程序出现异常甚至被攻 X。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 权限最小化原则&lt;br&gt; 在代码中申请权限时，要遵循权限最小化原则。这就像在一个公司里，员工只被授予完成工作所需的最小权限。例如，如果一个应用只需要读取用户的联系人信息，那么就只申请读取联系人的权限，而不申请其他不必要的权限，如发送短信、拨打电话等权限，这样可以减少因权限过多而带来的安全风险。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）代码片段展示规范编码方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 输入验证代码示例&lt;br&gt; 以下是一个简单的 ARKTS 代码片段，用于验证用户输入是否为数字：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//10ef51225b659c1f50d0327686c10fea.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在这个示例中，通过正则表达式来验证用户输入是否符合数字的格式，如果符合则返回 true，表示输入有效，否则返回 false。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 权限最小化代码示例&lt;br&gt; 假设我们正在开发一个图片查看应用，只需要读取存储中的图片文件，以下是部分代码展示如何申请最小化权限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//38bdb3d469e7d5c5a1139dcba32a05fb.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在这个代码中，我们只申请了读取用户存储的权限，而没有申请其他无关权限，确保了权限的最小化使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;三、安全测试与 X 洞修复&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）安全测试工具及方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 静态代码分析工具&lt;br&gt; 静态代码分析工具就像一个严格的代码审查员，它不需要运行程序，而是直接对源代码进行分析。例如，Checkmarx 可以帮助我们发现代码中的潜在安全 X 洞，如缓冲区溢出、SQLX 入等风险。它会仔细检查代码中的每一行，就像审查员逐字逐句检查文章一样，找出可能存在问题的地方。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 动态测试方法&lt;br&gt; 动态测试则是在程序运行时进行测试。我们可以模拟各种用户操作和环境条件，观察程序的行为。比如，通过模拟大量用户同时登录应用，检查系统在高并发情况下是否会出现安全问题，如身份验证失败、数据泄露等。这就像是在真实战场上测试武器的性能，看它在各种复杂情况下是否能正常发挥作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）实例说明 X 洞发现与修复过程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;假设我们开发了一个简单的登录应用，在进行安全测试时发现了一个 X 洞。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. X 洞发现&lt;br&gt; 使用动态测试方法，当我们输入一个超长的用户名时，发现应用程序出现崩溃。这就像我们发现房子的一面墙在受到大力撞击时（输入超长用户名相当于一种异常输入攻 X）突然倒塌了。经过分析，发现是在处理用户名输入的代码部分，没有对输入长度进行限制，导致程序在处理过长字符串时内存溢出。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. X 洞修复&lt;br&gt; 针对这个问题，我们可以在输入验证的代码中添加对用户名长度的限制。修改后的代码如下：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//e4441527d213e66948111b3d35c70fb8.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;通过添加长度限制和更严格的字符验证，修复了这 X 洞，就像重新加固了那面倒塌的墙，让房子（应用程序）更加坚固安全。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;遵循 HarmonyOS NEXT 的安全开发实践指南，从搭建安全开发环境，到遵循安全编码规范，再到进行全面的安全测试和及时的 X 洞修复，就像为我们开发的软件穿上了一层又一层的防护铠甲。这不仅能保障应用的安全稳定运行，还能提升用户对我们产品的信任度。在开发过程中，我们要时刻保持警惕，将安全意识贯穿于每一个环节，才能在 HarmonyOS NEXT 的开发之路上走得更稳更远。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;（转载自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//92cd0433e0818d9ea81e0d4b7aa00def.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371811</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371811</guid>
      <pubDate>Fri, 12 Sep 2025 07:57:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>HarmonyOS NEXT 分布式管理权限控制：安全与隐私</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#333333"&gt;踏入鸿蒙世界的敲门砖，标志着您在技术征途上的全新起点，提升就业竞争力，获得行业认可，点亮职业成长先机，快人一步抢占未来应用开发赛道！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;本文旨在深入探讨华为鸿蒙 HarmonyOS NEXT 系统（截至目前 API12）的技术细节，基于实际开发实践进行总结。主要作为技术分享与交流载体，难免错漏，欢迎各位同仁提出宝贵意见和问题，以便共同进步。本文为原创内容，任何形式的转载必须注明出处及原作者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在当今数字化时代，安全与隐私如同基石般重要，对于 HarmonyOS NEXT 的分布式管理服务而言，更是如此。随着设备之间的协作日益紧密，如何确保数据的安全传输、设备的可信交互，成为了开发者和用户共同关注的焦点。今天，就让我们深入探究 HarmonyOS NEXT 分布式管理中的权限控制机制，看看它是如何为我们的分布式应用保驾护航的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;一、分布式设备管理的权限体系概述&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;HarmonyOS NEXT 构建了一套完善的权限体系，旨在确保分布式管理服务中的每一个操作都在安全、可控的范围内进行。这个体系就像是一个严格的门禁系统，只有经过授权的应用和设备才能访问特定的资源和执行相应的操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;权限分为多个级别，从普通权限到敏感权限，每个级别对应着不同的操作范围和风险程度。例如，一些基本的设备信息查询可能只需要普通权限，而涉及到设备控制、数据传输等操作则可能需要更高级别的权限。这种分级管理机制有助于在保障功能正常使用的同时，最大程度地降低安全风险。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;二、权限控制：精准设置与获取权限&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一） 权限设置步骤&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 确定所需权限&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：在开发分布式应用时，首先要明确应用需要哪些权限才能正常运行。例如，如果应用需要发现周边设备，就需要申请设备发现权限（如 ohos.permission.DISTRIBUTED_DEVICE_DISCOVERY）；如果要进行设备信息查询，可能需要获取设备信息读取权限（ohos.permission.READ_DEVICE_INFO）等。这就好比在建造一座房子之前，先规划好需要哪些建筑材料一样重要。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 在配置文件中声明权限&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：将所需权限在应用的配置文件（如 module.json5）中进行声明。以申请分布式数据同步权限（ohos.permission.DISTRIBUTED_DATASYNC）为例，配置如下：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//5b17e5cb39ef269e1272ac382c80cb68.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;这里的 reason 字段用于向用户解释为什么应用需要这个权限，usedScene 则指定了权限使用的场景和相关能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;3. 动态申请权限（如有需要）&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：对于一些敏感权限，除了在配置文件中声明外，还需要在应用运行时动态向用户申请。这是为了让用户充分了解应用将如何使用这些权限，并给予用户自主选择的权利。例如，当应用首次尝试进行设备绑定操作时，可以使用如下代码动态申请权限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//df0e4838e6e963dba82c7a4ae82a0780.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）权限获取与检测&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 获取已授予权限列表&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：应用可以通过相应的接口获取当前已授予的权限列表，以便在运行时根据权限情况调整功能或提供相应的提示。例如，以下代码可以获取当前应用的所有权限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//4cdec7c468d78a5bd27c80045a479509.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 检测特定权限是否已授予&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;：在执行某些关键操作之前，需要检测特定权限是否已经授予。比如，在进行设备信息查询之前，先检查是否具有设备信息读取权限：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//3ce68fe1ba598cbd50cc93600353f7a5.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;三、安全策略：守护设备间通信安全&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）数据加密传输&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;为了防止设备间传输的数据被窃取或篡改，HarmonyOS NEXT 采用了强大的数据加密技术。在设备进行通信时，数据会被加密成密文进行传输，只有拥有相应解密密钥的设备才能将其还原为原始数据。这就好比给数据穿上了一层坚固的铠甲，即使在传输过程中被不法分子拦截，他们也无法理解其中的内容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）设备认证与信任机制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在分布式管理中，设备认证是确保设备可信的重要环节。通过设备认证框架，如 pin 码、碰、扫、靠等方式，设备之间可以相互验证身份，建立信任关系。只有经过认证的设备才能参与分布式业务，从而有效防止恶意设备的入侵。这就像是在一个安全的社区中，只有经过身份验证的居民才能进入，保障了社区的安全与和谐。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）安全审计与日志记录&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;系统会对设备间的交互操作进行安全审计和日志记录，以便及时发现潜在的安全问题并进行追踪和分析。这些日志记录包含了设备的操作行为、权限使用情况等重要信息，就像一个详细的监控系统，为系统管理员和开发者提供了有力的工具，用于监控系统的安全性和排查故障。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;四、权限控制的不同应用场景与权限申请流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//6456b03bb1a4bc3ad2c85ec6b942504f.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;五、示例代码：权限申请与检测完整流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;以下是一个综合的示例代码，展示了从权限申请到检测的完整流程，以设备发现和信息查询为例：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//1762c16a126ebb4ae5162738163e1450.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//8604f525f6f1d6f980fb585bd978ec32.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在这个示例中，首先定义了 requestPermissions 函数用于申请设备发现和信息查询权限，成功后调用 discoverDevicesAndQueryInfo 函数进行设备发现和信息查询操作。在 discoverDevicesAndQueryInfo 函数中，分别检测了设备发现权限和设备信息读取权限，根据权限情况执行相应的操作，并处理可能出现的错误。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;六、常见的权限问题与优化策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）权限被拒绝的处理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;问题描述：用户在应用请求权限时选择拒绝，导致应用部分功能无法正常使用。&lt;br&gt; 优化策略：&lt;br&gt; - 提供友好的提示信息：当权限被拒绝时，应用应弹出详细的提示框，向用户解释为什么需要该权限以及拒绝权限可能导致的功能受限情况。例如，「您拒绝了设备发现权限，将无法搜索和连接周边设备，是否重新考虑授予权限？」并提供「去设置」按钮，方便用户直接跳转到系统设置页面重新授权。&lt;br&gt; - 引导用户手动开启权限：在提示信息中，明确告知用户如何手动开启权限，如「您可以在系统设置 - 应用管理 - [应用名称] - 权限中，手动开启设备发现权限。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）权限申请时机优化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;问题描述：如果在应用启动时一次性申请过多权限，可能会引起用户反感，降低用户体验。&lt;br&gt; 优化策略：&lt;br&gt; - 按需申请权限：根据应用的功能流程，在用户实际需要使用某个功能时，再申请相应的权限。例如，当用户点击设备发现按钮时，才申请设备发现权限；当用户尝试查询设备信息时，再申请设备信息读取权限。&lt;br&gt; - 提前告知权限用途：在用户操作即将触发权限申请之前，提前弹出一个简短的提示框，告知用户接下来的操作需要申请某个权限以及该权限的用途，让用户有心理准备，提高用户授权的可能性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）权限冲突与兼容性问题&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;问题描述：不同设备或系统版本可能对权限的支持和管理方式存在差异，导致应用在某些设备上出现权限相关的兼容性问题。&lt;br&gt; 优化策略：&lt;br&gt; - 进行兼容性测试：在应用发布前，在多种不同型号、不同系统版本的设备上进行全面的权限兼容性测试，及时发现并解决可能出现的问题。&lt;br&gt; - 动态适配权限管理：根据设备的系统版本和特性，采用不同的权限申请和管理策略。例如，对于某些旧版本系统可能不支持动态权限申请，需要在应用安装时就明确告知用户所需权限；而对于新版本系统，可以充分利用其更灵活的权限管理机制，提供更好的用户体验。&lt;br&gt; HarmonyOS NEXT 的分布式管理权限控制机制为分布式应用的安全与隐私提供了坚实的保障。通过合理的权限设置、严格的安全策略以及有效的问题解决策略，我们开发者能够构建出更加安全、可靠的分布式应用，让用户在享受设备协同带来的便捷的同时，无需担忧数据安全和隐私问题。希望本文能够帮助开发者更好地理解和应用这些权限控制技术，为 HarmonyOS NEXT 生态系统的繁荣贡献力量。如果大家在开发过程中遇到其他问题或有更好的经验分享，欢迎随时交流哦！让我们一起打造更加安全、智能的分布式应用世界！哈哈，加油吧，各位开发者小伙伴们！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;（转载自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//a73b6b5a947aa33721662fdbe2e10472.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371810</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371810</guid>
      <pubDate>Fri, 12 Sep 2025 07:57:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>分布式管理核心功能解析：网络服务和数据传输的实现</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#333333"&gt;踏入鸿蒙世界的敲门砖，标志着您在技术征途上的全新起点，提升就业竞争力，获得行业认可，点亮职业成长先机，快人一步抢占未来应用开发赛道！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;本文旨在深入探讨华为鸿蒙 HarmonyOS NEXT 系统（截至目前 API12）的技术细节，基于实际开发实践进行总结。主要作为技术分享与交流载体，难免错漏，欢迎各位同仁提出宝贵意见和问题，以便共同进步。本文为原创内容，任何形式的转载必须注明出处及原作者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;一、HTTP 数据传输：编织信息交互的纽带&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）完备的请求方法集&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;HarmonyOS NEXT 在 HTTP 数据传输领域展现出了强大的实力，其支持的请求方法涵盖了从数据获取到资源操作的全方位需求。GET 方法如同一位精准的信息采集员，轻巧地从服务器撷取数据，而不触动服务器的状态分毫。在诸如新闻阅读应用中，它负责将一篇篇精彩的新闻内容呈现在用户眼前，让用户能够轻松浏览最新资讯。&lt;br&gt; POST 方法则化身为数据的忠诚传递者，将用户精心准备的数据稳稳地提交至服务器。想象一下在社交媒体应用里，用户发表一篇充满创意的动态，POST 方法就会将这些文字、图片等数据准确无误地送达服务器，等待服务器的处理与存储。&lt;br&gt; PUT 和 DELETE 方法宛如服务器资源的管理员，PUT 负责精心更新服务器上的资源，确保信息的时效性与准确性。比如在文档协作应用中，当用户对文档进行修改后，PUT 方法就会将新的内容上传至服务器，使其他协作者能够看到最新的版本。DELETE 方法则果断地删除那些不再需要的资源，保持服务器资源的整洁有序，就像在文件管理应用中，用户删除无用文件时，DELETE 方法迅速执行清理任务。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）实战示例与操作指南&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;为了让大家更清晰地理解 HTTP 数据传输的实际应用，我们来看一个在线购物应用的案例。当用户在应用中浏览商品时，需要从服务器获取商品的详细信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 导入关键模块&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;首先，从&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;@kit.NetworkKit&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;中引入&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;http&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;命名空间，这是开启 HTTP 数据传输之旅的关键钥匙。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//3c828cda15513afaebf2dc74c60655ee.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 构建 HTTP 请求对象&lt;br&gt; 借助&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;createHttp()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法，我们创建一个&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;HttpRequest&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;对象，它将成为后续数据传输操作的核心指挥官。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//2b5de69a1735d146419cc10bc6230866.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;3. 响应头事件订阅（可选操作）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;若希望在第一时间获取服务器响应头中的重要信息，可选择订阅 headersReceive 事件。例如，我们可以从中获取服务器对请求的一些初始响应信息，如数据格式、缓存策略等。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//67847646ddf288ff33763a8d37a8a159.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;4. 发起 HTTP 请求&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;一切准备就绪后，调用&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;request()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法，传入精心准备的 URL 地址及其他相关参数，正式向服务器发起 HTTP 网络请求。在我们的购物应用场景中，假设服务器提供了获取商品详情的接口，地址为&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;"https://api.shopping.com/product"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//b2af0762bb719c608208ef3ed592f9d9.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在实际应用中，我们还可以根据服务器接口的具体要求，灵活定制请求头字段。例如，若服务器需要用户身份验证信息，我们可以在&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;header&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;中巧妙添加相应的认证字段。对于 POST 请求，&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;extraData&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;字段则成为传递请求体数据的重要通道，比如用户提交的商品评价等信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）错误应对与优化策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在 HTTP 数据传输的征程中，难免会遭遇各种挑战，如网络波动、服务器故障等。因此，一套完善的错误处理机制就如同坚固的盾牌，为应用保驾护航。&lt;br&gt; 当请求不幸失败时，&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;request()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法的回调函数会及时返回一个&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;BusinessError&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;对象。通过仔细检查这个对象的&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;code&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;属性，我们能够精准判断错误类型，进而采取针对性的应对措施。若&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;code&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;为&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;403&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;，表示用户权限不足，此时我们可以友好地提示用户检查权限设置，或者引导用户进行权限申请操作；若遇到&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;500&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;错误，则可能是服务器内部出现问题，我们可以向用户展示一个恰当的提示，告知用户服务器暂时繁忙，请稍后重试。&lt;br&gt; 此外，为了进一步提升应用的性能和稳定性，还有一些值得借鉴的优化策略。在请求完成后，务必及时调用&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;destroy()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法销毁请求对象，防止资源泄漏。同时，合理设置超时时间也是一门艺术，过长的超时时间可能会让用户陷入漫长的等待，影响体验；而过短的超时时间可能会导致正常请求被误判为失败。开发者需要根据应用的具体需求，在响应速度和请求成功率之间找到微妙的平衡。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;二、网络服务管理：掌控多网络连接的智慧中枢&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一）多网络连接管理的卓越能力&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;在分布式的复杂环境中，设备往往置身于多种网络连接的交织之中，HarmonyOS NEXT 的网络服务管理功能就像一位睿智的领航员，引领应用在这片网络海洋中顺畅航行。&lt;br&gt; 网络连接优先级管理功能赋予了开发者强大的掌控力，能够根据应用的特性和需求，为不同的网络连接精心安排优先级。以高清视频播放应用为例，为了确保视频播放的流畅性和画质的高清体验，开发者可以将 WiFi 网络置于最高优先级。当设备同时接入 WiFi 和蜂窝网络时，应用会毫不犹豫地选择 WiFi 进行数据传输，让用户尽情享受高清视频带来的视觉盛宴；一旦 WiFi 信号出现波动或中断，应用能够迅速切换到蜂窝网络，保证视频播放的连续性，就像一位无缝切换的魔术师，让用户几乎察觉不到网络的变化。&lt;br&gt; 网络质量评估功能则如同一位敏锐的网络侦探，实时监测网络的各项关键指标，如网络延迟、带宽等。在在线游戏这个对网络要求极高的场景中，这一功能发挥着至关重要的作用。通过实时获取网络延迟信息，游戏开发者可以根据网络状况动态调整游戏画面质量，当网络状况良好时，为玩家呈现精美绝伦的高清画面；当网络延迟较高时，适当降低画面质量，优先保证游戏的流畅性，避免玩家因卡顿而影响游戏体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二）网络状态检测与响应机制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;为了使应用能够与网络状态的变化保持同步，HarmonyOS NEXT 提供了一套高效的网络状态检测机制，并支持订阅丰富多样的网络状态变化事件。&lt;/span&gt;&lt;br&gt; &lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;hasDefaultNet()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法宛如一位网络状态的侦察兵，快速检查默认数据网络是否处于激活状态，为应用提供设备网络连接的基本信息。在应用启动的瞬间，通过这个方法可以迅速判断设备是否已准备好与外界进行网络通信。如果检测到设备未连接网络，应用可以立即弹出温馨提示，引导用户检查网络设置，确保用户能够顺利使用应用的各项功能。&lt;/span&gt;&lt;br&gt; &lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getDefaultNet()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;和&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getAllNets()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;方法则像是网络信息的探索者，帮助开发者深入了解网络的详细情况。&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getDefaultNet()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;能够精准获取默认网络的关键信息，如网络 ID 等；&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;getAllNets()&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;则更进一步，返回所有处于连接状态的网络信息列表。在多网络环境下，这对于应用根据不同网络类型和能力进行智能决策非常有帮助。例如，在文件传输应用中，根据不同网络的带宽情况，合理分配传输任务，充分利用网络资源，提高传输效率。&lt;br&gt; 通过订阅&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;netAvailable&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;、&lt;/span&gt;&lt;span style="color:#128b4e"&gt;&lt;span style="background-color:#e7f3ed"&gt;netUnavailable&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;等事件，应用能够在网络状态发生变化的第一时间得到通知，并迅速做出响应。就像在即时通讯应用中，当设备从无网络状态突然恢复网络连接时，应用可以立即自动重新连接服务器，获取最新的消息，让用户不错过任何重要信息，始终保持与好友的紧密联系。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三）示例代码展示实战技巧&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;以下是一段简洁而实用的示例代码，生动展示了如何在实际应用中巧妙运用网络连接管理和状态检测功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 检查默认网络状态&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//5e191dd4825a18264c782d074c30b5d0.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;2. 获取默认网络信息&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//100946914ec629fb77c4ff1d990db591.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;3. 订阅网络状态变化事件&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//1e7652f32263e09819aa3cbe9f754b06.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;三、支持的网络请求方法与常见传输模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//18678d376e4086444d79590d0a7e8af6.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;四、提高数据传输效率的建议&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（一） 数据传输优化策略&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 减少不必要的数据传输&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;在设计应用与服务器之间的数据交互时，精准确定所需数据，避免传输多余信息。例如，在一个天气应用中，如果只需要显示当前城市的天气状况，就不要请求服务器返回全球天气数据，减少网络带宽占用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 采用增量更新&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;对于频繁更新的数据，仅传输变化的部分，而非整个数据块。以文档协作应用为例，当多个用户同时编辑一个文档时，每次保存只发送修改的段落或字符，而不是整个文档，降低数据传输量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（二） 网络优化技巧&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 智能网络切换&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;利用 HarmonyOS NEXT 的网络连接管理功能，根据网络状况自动切换最佳网络连接。比如，在视频会议应用中，当 WiFi 信号弱时，自动切换到蜂窝网络，确保会议的连续性，同时在 WiFi 信号恢复良好时，又能及时切换回来，节省流量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 网络缓存利用&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;合理利用浏览器缓存或应用内缓存机制，对于重复请求的数据，直接从缓存中获取。例如，在一个新闻资讯应用中，用户多次访问同一新闻页面时，从缓存读取内容，减少服务器请求次数，加快页面加载速度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;（三） 服务器端优化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;1. 数据压缩与优化&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;在服务器端对响应数据进行压缩处理，如使用 gzip 或 deflate 等压缩算法，减少数据传输大小。同时，优化数据库查询语句和服务器端代码逻辑，提高数据获取和处理效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;2. 启用 HTTP/2 协议&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;span style="color:#333333"&gt;如果服务器支持，启用 HTTP/2 协议，它允许多个请求复用同一个 TCP 连接，减少连接建立和销毁的开销，提高并发请求处理能力，提升整体性能。&lt;br&gt; 通过对 HarmonyOS NEXT 分布式管理中网络服务和数据传输功能的全面深入剖析，我们清晰地看到了其强大之处和潜在的优化方向。在实际开发过程中，开发者们应充分发挥这些功能的优势，灵活运用各种优化策略，为用户打造出更加高效、稳定、流畅的分布式应用体验。同时，不断关注技术的发展和用户需求的变化，持续探索和创新，让分布式应用在 HarmonyOS NEXT 的生态中绽放更加绚烂的光彩。如果在开发过程中遇到问题或有新的见解，欢迎大家积极在技术社区中交流分享，共同推动分布式技术的进步！哈哈，相信大家在 HarmonyOS NEXT 的分布式开发之路上会越走越顺，创造出更多令人惊叹的应用！加油哦，各位开发者小伙伴们！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;（转载自 51CTO，作者：SameX）&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//4d3859eba3a1c56d322fa0a4c7c366e5.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371808</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371808</guid>
      <pubDate>Fri, 12 Sep 2025 07:56:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>鸿蒙安全控件之位置控件简介</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span style="color:#000000"&gt;踏入鸿蒙世界的敲门砖，标志着您在技术征途上的全新起点，提升就业竞争力，获得行业认可，点亮职业成长先机，快人一步抢占未来应用开发赛道！https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-infoq&amp;amp;ha_sourceId=89000233&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;位置控件使用直观且易懂的通用标识，让用户明确地知道这是一个获取位置信息的按钮。这满足了授权场景需要匹配用户真实意图的需求。只有当用户主观愿意，并且明确了解使用场景后点击位置控件，应用才会获得临时的授权，获取位置信息并完成相应的服务功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;一旦应用集成了位置控件，用户点击该控件后，无论应用是否已经申请过或被授予精准定位权限，都会在本次前台期间获得精准定位的授权，可以调用位置服务获取精准定位。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;对于不是强位置关联应用（例如导航、运动健康等）的应用，只在部分前台场景需要使用位置信息（例如定位城市、打卡、分享位置等）。如果需要长时间使用或是在后台使用位置信息，建议申请位置权限。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;位置控件效果如图所示。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//930084778adb1ad7e611907101d3e887.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;约束与限制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;当用户首次点击应用中的位置控件，系统将弹窗请求用户授权。如果用户点击「取消」，弹窗消失，应用无授权，用户再次点击位置控件时，将会重新弹窗；如果用户点击「允许」，弹窗消失，应用将被授予临时位置权限，此后点击该应用的位置控件将不会弹窗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;精准定位的临时授权会持续到灭屏、应用切后台、应用退出等任一情况发生，然后恢复到临时授权之前的授权状态（授予/未授予/未申请）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;应用在授权期间没有调用次数限制。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;·&lt;span style="color:#333333"&gt;为了保障用户的隐私不被恶意应用获取，应用需确保安全控件是可见的且用户能够识别的。开发者需要合理的配置控件的尺寸、颜色等属性，避免视觉混淆的情况，如果发生因控件的样式不合法导致授权失败的情况，请检查设备错误日志。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;开发步骤&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;以在聊天界面发送实时定位信息为例。在当前场景下，应用仅需要在前台期间，短暂地访问当前位置，不需要长时间使用。此时，可以直接使用安全控件中的位置控件，免去权限申请和权限请求等环节，获得临时授权，满足权限最小化，提升用户的隐私体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;参考以下步骤，实现效果：点击控件「当前位置」获取临时精准定位授权，获取授权后，弹窗提示具体位置信息，效果图请见上文。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;1. 引入位置服务依赖。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//067c8890e69af9585a6337b48ec0a0f6.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;添加位置控件和获取当前位置信息。&lt;br&gt; 安全控件是由图标、文本、背景组成的类似 Button 的按钮，其中图标、文本两者至少有其一，背景是必选的。图标和文本不支持自定义，仅支持在已有的选项中选择。应用申明安全控件的接口时，分为传参和不传参两种，不传参默认创建图标+文字+背景的按钮，传参根据传入的参数创建，不包含没有配置的元素。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;当前示例使用默认参数，具体请参见 LocationButton 控件。此外，所有安全控件都继承安全控件通用属性，可用于定制样式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;在 LocationButton 的 onClick() 回调中通过调用 geoLocationManager 模块提供的方法获取当前位置信息。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//e4f11a690ca1946c865776128ae3c0ef.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//eb5b7cf9924f68956bd9495bd67399b8.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;（转载自 51CTO，作者：龙儿筝）&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//dafc4b45d0a54f54412c2767ab3f7895.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371807</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371807</guid>
      <pubDate>Fri, 12 Sep 2025 07:56:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>开源鸿蒙技术大会 2025 即将启幕，共绘数字底座新蓝图</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:justify"&gt;当前，数字经济已成为驱动全球经济增长的重要力量，在这一进程中，操作系统作为数字基础设施的关键组成部分，其发展水平与生态建设直接关系到众多行业数字化转型的进程。作为智能终端操作系统的开源根社区，开源鸿蒙依托其先进的技术架构与持续的智能化升级，正在为培育新质生产力提供重要支撑，并积极助力数字中国建设向纵深推进。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;在万物智联从概念走向实践的关键阶段，开源操作系统如何突破技术瓶颈、构建成熟生态、赋能千行百业转型？&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;答案，即将于 9 月 27 日在长沙国际会议中心揭开——由开源鸿蒙项目群技术指导委员会（TSC,Technial Steering Committe）主办，华为承办，深开鸿、开鸿智谷、鸿湖万联、润开鸿、九联开鸿、中软国际、诚迈科技、北理工、中科鸿略、中国南方电网、中国科学院软件研究所、证通、国开鸿等合作单位支持举办的开源鸿蒙技术大会 2025 年度盛会，将面向全球开源操作系统领域，以更大规模、更高规格，迎接开源领袖、前沿实践专家、高校学者及生态伙伴，为全球开源从业者呈现一场兼具战略高度与实践深度的技术盛宴。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="e73a250ea248c531e395ced0ae1954cd.jpg" height="338" src="https://oscimg.oschina.net/oscnet//3b4bd434a677f25acf926bb323dcd224.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;&lt;strong&gt;以核心突破，锚定操作系统技术演进新航向&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;作为大会的主场，主论坛将聚焦开源鸿蒙技术的年度核心进展，通过权威发声与重磅发布，勾勒智能终端操作系统全场景适配与技术深化的清晰路径。主论坛将邀请政府、产业界、学术界、开源界技术专家和权威代表，解读开源鸿蒙在数字基础设施建设中的核心价值。同时，应用生态伙伴与高校代表也将分享前沿实践成果，展现产学研用协同创新的生动实践，为开发者与企业伙伴提供可落地的技术方法论。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;值得关注的是，本次主论坛将正式发布开源鸿蒙 6.0 Release 版本，该版本进一步增强了系统能力，提升了系统整体可用性与开发效率，生态适配更友好。此外，大会还将举办开源鸿蒙跨平台框架 PMC（筹）成立仪式，标志着开源鸿蒙在跨平台开发领域的重要布局，不断完善开源鸿蒙技术生态版图。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;同时，本届大会共设置 21 场分论坛，无论在数量规模上，还是在领域覆盖广度上，均实现了近年来的新突破，展现出更全面的议题布局。分论坛将重点围绕开源鸿蒙相关技术垂域、行业与应用生态、教育及人才培养等多维度关键方向展开，全面覆盖从底层核心技术突破到前沿应用场景的全链条。大会旨在通过深入攻坚当前操作系统的核心技术难题、前瞻探索未来演进路径，并精准对接学术界研究、产业界应用与开发者实践需求，切实推动技术创新成为驱动产业转型升级的核心动力。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;&lt;strong&gt;交流区全景呈现生态成果，见证开源协同五年发展收获&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;开源鸿蒙开源五年多以来，在全球开发者、生态伙伴的持续贡献下，生态不断繁荣。截至 2025 年 8 月 31 日，社区已汇聚超过 9200 名贡献者，累计贡献代码量超过 1.3 亿行，汇聚超 480 家伙伴参与共建，累计超 1300+款产品通过兼容性测评，覆盖金融、超高清、航天、教育、商显、工业、警务、城市、交通、医疗、电力等多个领域。基于这一丰硕的生态共建成果，大会同步设置的 6+N 板块互动交流区，将集中展示基于"Powered by OpenHarmony"开源鸿蒙生态产品的创新成果与商业进展。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;作为这一繁荣生态的集中缩影，开源鸿蒙项目群技术指导委员会（TSC）交流区将呈现其在开源鸿蒙技术生态领域的阶段性创新成果；开源鸿蒙社区公共交流区全面展现开源鸿蒙在千行百业的最佳实践与开源生态的繁荣；华为终端将首次与众多生态伙伴联袂亮相，共同展示基于开源鸿蒙的实践与创新成果；三方社区交流区则将呈现更广泛更多维的商业生态和落地部署情况。同时，&lt;span&gt;仓颉编程语言&amp;amp;毕昇编译器&lt;/span&gt;&lt;span&gt;以及应用生态开源技术等关键基础软件与工具链的集中展出，也将进一步凸显开源鸿蒙的产业落地价值，助力参会者清晰感知从技术创新到千行百业赋能的扎实路径，切身感受到开源鸿蒙在不同领域的应用实践与商业价值。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;&lt;strong&gt;以致谢授牌，致敬贡献者，凝聚开源生态新合力&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;开源生态的繁荣，离不开每一位共建者的坚守与付出。本次大会将延续对贡献者的致敬传统，通过多场致谢与授牌仪式为社区力量加冕：通过对 TSG、开源鸿蒙技术俱乐部的致谢授牌，肯定其在人才培育与技术推广中的杰出贡献；重磅发布开源鸿蒙年度课题，并为优秀技术课题成果授牌；开源鸿蒙项目群捐赠人授牌仪式，感谢生态伙伴为社区蓬勃发展所付出的努力；开源鸿蒙竞赛训练营颁奖，则将致敬在技术实践中表现卓越的开发者，进一步凝聚产学研用协同共进的开源生态新合力。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:justify"&gt;从底层技术突破到生态场景落地，从人才培养到全球协作，开源鸿蒙技术大会 2025 既是对过去一年技术进步与生态进展的盘点，更旨在展望以开源推动生态繁荣、以技术赋能产业转型的新未来。我们诚挚邀请全球技术领袖、高校学者、企业伙伴与开发者，于 9 月 27 日相聚长沙，在这场思想与技术创新交汇的盛会中共享成果、共探方向、共筑未来！&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372008</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372008</guid>
      <pubDate>Fri, 12 Sep 2025 07:48:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
  </channel>
</rss>
