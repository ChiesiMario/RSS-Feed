<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 07 Aug 2024 14:56:26 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>面壁智能开源 MiniCPM-V 2.6 模型，端侧能力全面对标 GPT-4V</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;面壁智能宣布「小钢炮」 MiniCPM-V 2.6 模型重磅上新——仅 8B 参数，取得 20B 以下单图、多图、视频理解 3 SOTA 成绩，一举将端侧 AI 多模态能力拉升至全面对标 GPT-4V 水平。&lt;/p&gt; 
&lt;p&gt;面壁智能表示，MiniCPM-V 2.6 模型将实时视频理解、多图联合理解、多图 ICL 等能力首次搬上端侧多模态模型，更接近充斥着复杂、模糊、连续实时视觉信息的多模态真实世界，更能充分发挥端侧 AI 传感器富集、贴近用户的优势。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7f7d6531007eb998612fd3cae2c10e5c5a5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dca497b63985fc1fd6c87de80639c037ed3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;MiniCPM-V 2.6 开源地址：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub:&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenBMB%2FMiniCPM-V&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenBMB/MiniCPM-V&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HuggingFace:&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fopenbmb%2FMiniCPM-V-2_6&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/openbmb/MiniCPM-V-2_6&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305880</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305880</guid>
            <pubDate>Wed, 07 Aug 2024 10:56:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>开源日报 | 「苹果牌 AI」提示词；Python 霸权地位；零一万物完成数亿美元融资；开源垃圾是怎么来的？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.7&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/305853/apple-intelligence-prompt-macos-15-1-sequoia-beta&quot;&gt;「苹果牌 AI」提示词就这？&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;苹果拥有全球最优秀的编程人才和强大的研发实力，然而它在 Apple Intelligence 针对各种智能应用设计的提示词却给人一种 「草台班子」 的味道。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;近日，网友在 macOS 15.1 Beta 1 中发现了 Apple Intelligence 后端使用的 Prompt。从下图可以看到，苹果解决 LLM 幻觉问题是在提示词里面加一句 「Do not hallucinate」（不要产生幻觉）—— 非常 amazing！&lt;/p&gt; 
   &lt;blockquote&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-176c817efa91fe30a39ca372e1f7e551003.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;/blockquote&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/305832/tiobe-index-202408&quot;&gt;TIOBE 8 月榜单：Python 霸权地位已无可争议&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;本月，Python 的份额首次超过 18%。而上一次超过 18% 的语言是 2016 年 11 月的 Java，Java 也是有史以来排名最高的语言：2001 年 6 月为 26.49%。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，排名第二的 C++ 现在正好落后 Python 8%。纵观以往的数据，第一名和第二名之间的最大差距出现在 2016 年 11 月，当时 Java 领先 C 语言 9.55%。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE CEO Paul Jansen 点评称，「总而言之，Python 的霸权地位已无可争议。下一步，Python 很有可能成为有史以来最流行的编程语言。是否有任何新语言有望很快接近 Python？有可能的竞争者 Rust 和 Kotlin 正在迅速接近 TIOBE 指数前 10 名，但它们还需要很长时间才能真正威胁到 Python。」&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/305750&quot;&gt;李开复旗下 AI 公司「零一万物」完成数亿美元融资&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2894555774769792&quot; target=&quot;_blank&quot;&gt;根据 36 氪的独家报道&lt;/a&gt;，，李开复创办的 AI 大模型独角兽公司「零一万物」已经完成新一轮融资，金额达数亿美元。知情人士表示，此轮融资参与方包括某国际战投、东南亚财团等多家机构。&lt;/p&gt; 
    &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;「零一万物」成立于 2023 年 5 月，由创新工场董事长、前微软全球副总裁李开复创立。核心团队成员来自谷歌、微软、IBM、百度等公司。&lt;/p&gt; 
    &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;如今的 「大模型六小虎」（智谱 AI、零一万物、百川智能、MiniMax、月之暗面、阶跃星辰），正以惊人的速度，跨过 200 亿元的估值大关。&lt;/p&gt; 
    &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;2024 年 8 月 5 日，据彭博社报道，月之暗面刚交割一轮超过 3 亿美元的融资，投后估值高达 33 亿美元。前不久，王小川创立的百川智能，正在以 200 亿元的估值，寻求 B 轮融资。&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/305746/windows-11-crosses-30-market-share-for-the-first-time&quot;&gt;Windows 11 市场份额首次突破三成&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;2024 年 7 月，Windows 11 达到了一个重要里程碑：自 2021 年 10 月发布以来，其市场份额首次突破了三成。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgs.statcounter.com%2Fos-version-market-share%2Fwindows%2Fdesktop%2Fworldwide&quot; target=&quot;_blank&quot;&gt;根据 Statcounter 的统计&lt;/a&gt;，2024 年 7 月的 Windows 桌面操作系统中，&lt;strong&gt;Windows 11 的比例达到了 30.82%&lt;/strong&gt;，一个月内增长了 1.08%，比去年 7 月增长 7.17%。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0807/095528_ekt6_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1655747731%2FOr9VRyfAO&quot; target=&quot;_blank&quot;&gt;开源垃圾就是这么来的&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt;
   &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-90737b9fc84f65a73baf70ac9eb40419e51.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;有个梨 GPT&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1706699904%2FOr8Eq16fQ&quot; target=&quot;_blank&quot;&gt;贾扬清的 Lepton AI 推出了针对开源 LLM 的实时语音生成&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;传统方法的集成语音功能涉及将文本发送到 LLM，等待响应，然后通过文本转语音（TTS）服务进行处理。传统方法会有明显的延迟、音频错位或不自然的停顿等用户体验问题。&lt;/p&gt; 
     &lt;p&gt;&amp;nbsp;Lepton AI 的解决方案将 LLM 和 TTS 功能集成到一个统一的服务中，主要特点：&lt;/p&gt; 
     &lt;p&gt;- 与任何主要开源 LLM 无缝集成，包括 Llama3.1-8B、70B 和 405B&lt;br&gt; - 以高达 10 倍的 TTFA（首次音频时间）速度超越传统方法&lt;br&gt; - 流畅、可定制的对话，几乎没有停顿&lt;/p&gt; 
     &lt;p&gt;介绍链接：https://blog.lepton.ai/voice-mode-comes-to-lepton-llm-apis-a5ff3db8c7bf&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;&lt;span&gt;i 陆三金&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F3894431038%2FOr2KPxs0f&quot; target=&quot;_blank&quot;&gt;面壁刚刚开源了最强端侧多模态 LLM：MiniCPM-V 2.6&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;8B 参数，在单图像、多图像和视频理解方面超越了 GPT-4V，支持在 iPad 等终端设备上进行实时视频理解&lt;/p&gt; 
     &lt;p&gt;特点：&lt;br&gt; 1、性能： 在单图像理解方面超越 Gemini 1.5 Pro 和 GPT-4o mini（OpenCompass 上），在多图像理解方面超越 GPT-4V（Mantis-Eval 上），在视频理解方面达到端侧 SOTA，超越 GPT-4V（Video-MME 上）&lt;/p&gt; 
     &lt;p&gt;2、多模态输入： 支持图像、视频和文本等多种输入，提供高质量的文本输出&lt;/p&gt; 
     &lt;p&gt;3、具有较强的 OCR 能力、可信行为、多语言支持和端侧部署能力，并通过高效的 token 密度提升了推理速度、首 token 延迟、内存使用和功耗&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;AIGCLINK&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1219795431%2FOr3ckhpLW&quot; target=&quot;_blank&quot;&gt;今天两条重要信息，可以放在一起解读&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     今天两条重要信息，可以放在一起解读。因为这两项重要进展凸显了一个共同趋向：个人用户的手机和电脑，可以开始拥有媲美云端的图片-视频的理解和生成能力。关键词是端侧、开源、多模态。而且可喜的是，取得进展的是两家国内企业。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;胡延平 EarthRambler&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FesRn2f6US8_vzl83xKJPeQ&quot; target=&quot;_blank&quot;&gt;「有关 Arm 和 X86 的一些讨论，是错误的」&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     换句话说：无论是 x86 还是 ARM ISA，实现市场期望的功能和性能都有‘典型成本’。因此，如果增加复杂性会降低任何 ISA 的功耗，那么就变成了一场争夺哪组设计选择能够产生最佳性能/功耗/面积 (PPA) 以满足消费者期望的战斗。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   - 微信&amp;nbsp;
   &lt;strong&gt;半导体行业观察&lt;/strong&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn811801649%3FserialId%3Df4991c90339779ab2924d8327e221e48&quot; target=&quot;_blank&quot;&gt;「去年投 AI，今年投简历」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span&gt;尽管 AI 技术被广泛认为是未来的关键驱动力，但现实情况是，许多 AI 创业项目并没有解决市场的真正痛点，导致资金供应与项目需求之间出现了不匹配。投资者开始更加理性地评估 AI 项目的市场潜力和实际应用价值。与此同时，大模型项目因其技术壁垒和广泛的应用前景而更易获得资本青睐。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;融中财经&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Froll%2F2024-08-06%2Fdoc-inchthwu7829160.shtml&quot; target=&quot;_blank&quot;&gt;OpenAI「偷录」YouTube 视频训练 AI？一百多名创作者决定集体起诉&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;当地时间 8 月 2 日，一位 YouTube 主播代表在美国加利福尼亚州北区地方法院正式递交了集体诉讼文件，指控 OpenAI 擅自转录了数百万个 YouTube 视频来训练大模型，目前有超过 100 人参与该集体诉讼。截至发稿，OpenAI 对该集体诉讼没有发表回应。&lt;/p&gt; 
  &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;起诉书写道，创作者们拥有 YouTube 视频的所有权，OpenAI 的行为违反了 YouTube 的平台条款，并且从创作者们的损失中获得了不正当利益，要求 OpenAI 赔偿超过 500 万美元。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;21 世纪经济报道&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.myzaker.com%2Farticle%2F66b2d5cf8e9f0939a0622e5c&quot; target=&quot;_blank&quot;&gt;头部银行谨慎推进大模型，新一代核心系统还在攻坚期&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#303030&quot;&gt;目前，大模型在金融业的应用，基本上是代码开发、运维、交互式数据分析、营销工具、保险报价等。因为应用场景有限，一位大模型厂商负责人表示：&quot; 没想到代码助手在银行变得如此突出。&quot;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#303030&quot;&gt;除了大行，从金融体系的步伐看，一些城商行或合资银行与大行不通，节奏要更快一点。&quot; 投入几百万元，就能解决一个实际问题。&quot;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;数智前线&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Ftech%2Froll%2F2024-08-07%2Fdoc-inchuuya7154995.shtml&quot; target=&quot;_blank&quot;&gt;李飞飞亲自撰文，数十名科学家签署联名信，反对加州 AI 限制法案&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在创新的热土硅谷，李飞飞、吴恩达等 AI 科学家正在与监管部门展开一场关于安全与创新的拉锯战。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这场拉锯战的核心是一个名叫 SB-1047 的法案。该法案的全称是「Safe and Secure Innovation for Frontier Artificial Intelligence Act（《前沿人工智能模型安全创新法案》）」，试图为高风险的 AI 模型建立明确的安全标准，以防止其被滥用或引发灾难性后果&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;机器之心 Pro&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8bqrJFEqewW&quot; target=&quot;_blank&quot;&gt;无一大模型及格！北大、通研院提出超难基准，专门评估长文本理解生成&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;北大联合北京通用人工智能研究院提出了一个新基准数据集：LooGLE，专门用于测试和评估大语言模型（LLMs）长上下文理解能力。该数据集既能够评估 LLMs 对长文本的处理和检索能力，又可以评估其对文本长程依赖的建模和理解能力。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;结果不评不知道，一评估发现这些模型在复杂的长依赖任务中的多信息检索、时间重排序、计算、理解推理能力表现均不乐观。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span&gt;量子位&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.huanqiu.com%2Farticle%2F4IvOL4OYR2a&quot; target=&quot;_blank&quot;&gt;面壁智能宣布开源 MiniCPM-V 2.6 模型，端侧 AI 多模态能力增强&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#383838&quot;&gt;MiniCPM-V 2.6 模型在多项功能上实现了首次在端侧的部署，包括实时视频理解、多图联合理解、多图 ICL（上下文少样本学习）视觉类比学习、多图 OCR 等。这些功能的加入，使得端侧模型能够更贴近复杂的真实世界场景，充分发挥其传感器富集、贴近用户的优势。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;环球网&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MDE3OTA5NA%3D%3D%26mid%3D2247590328%26idx%3D1%26sn%3D7e5234f8d40b96a74a322ffc96096cc7%26chksm%3Dced1ef0f6d98895d29b1a7c0ed814271ba39293670d6e64d668c332232bac1b7a1b3afbe51d8%23rd&quot; target=&quot;_blank&quot;&gt;欧洲版 OpenAI CEO：开源模型没有任何风险，我只看到了好处&lt;/a&gt;&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Mensch 表示，开源模型没有任何风险，他只看到了好处；&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;开源模型是一个中立的工具，可以被用来做任何事情；&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;人们没有因为你可以用 C 语言制作恶意软件就禁止使用 C 语言；&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;从某种意义上说，AI 并没有改变软件的任何东西，只是定义软件的一种更抽象的方式；&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;用于构建这些应用程序的技术并不是唯一可以被监管的东西，控制投放市场的应用程序的质量非常重要；&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;从某种意义上说，大模型可以被看作是一种更抽象的编程语言，将改变我们未来 10 年的工作方式；&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Mistral AI 在开源上并没有改变，但也一直希望在开源领域拥有领先的模型，同时也有一些只有通过货币化服务才能获得的高级功能。&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;学术头条&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frapiz1%2Frathole&quot; target=&quot;_blank&quot;&gt;rapiz1/rathole&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img height=&quot;195&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8a1ee478c246a1b800e7f577c085a42f1f6.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frapiz1%2Frathole&quot; target=&quot;_blank&quot;&gt;https://github.com/rapiz1/rathole&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#24292f; margin-left:0; margin-right:0; text-align:start&quot;&gt;安全、稳定、高性能的内网穿透工具，用 Rust 语言编写。rathole，类似于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffatedier%2Ffrp&quot; target=&quot;_blank&quot;&gt;frp&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Finconshreveable%2Fngrok&quot; target=&quot;_blank&quot;&gt;ngrok&lt;/a&gt;，可以让 NAT 后的设备上的服务通过具有公网 IP 的服务器暴露在公网上。&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5359019/blog/15053065&quot; target=&quot;_blank&quot;&gt;58 HBase 云原生探索与实践&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;58 大数据团队在计算方面的在离线混部项目已经取得了很好的效果，后续规划将大数据组件与云技术进行逐步的融合，同时在过去几年，58 大数据团队已经实施了很多高效的降本增效策略（数据 EC、高效压缩、治理优化等等），也取得了不错的成果，2024 上半年考虑结合云技术对 HBase 集群进行云化改造，进一步降低业务成本，减少运营维护成本。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;306&quot; src=&quot;https://oscimg.oschina.net/oscnet/3c722a57-863e-4f21-b793-01d2e1e1f324.png&quot; width=&quot;473&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkVbUMEPOAr4m687q0QmXIA&quot; target=&quot;_blank&quot;&gt;这款开源 PHP 应用服务器看着有点新潮了：采用 Go 编写、支持 Early Hints&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：嗯，我用了快 1 年多了，提交了几次贡献。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：php 的全部完全用 go 写，好意思用吗&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：能比 workerman 快吗？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：那为啥不直接用 Go，语法还更简单&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：PHP 积累了很多项目。比如 cms 内容管理系统。在 go 下没有特别出名的&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：Caddy 妙啊&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fs8g5gFEV7z_K1izpJrCMpw&quot; target=&quot;_blank&quot;&gt;人人影视创始人致歉：重获自由一个月、机房硬盘等设备将出售&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：没版权，还搞会员制提供服务，离谱&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：会员制是不行，广告估计还不至于给抓&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：800 多万注册用户，牛啊！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：很早就知道有个叫「人人影视」的平台，但是没想到他们会以这种方式收场&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：作为程序员来考虑：也就是领导安排一个非法的技术需求，我完成了；我也跟着犯法了？是这个意思吗？谁给普一下法&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：字幕组是字幕组，和后期做 app 并盈利的人人影视是两回事，贩卖盗版获利被起诉定罪不是必然的么，谁也用不着可怜他&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：赚点流量，带货咯，先糊口。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：设备哪里可以买&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/news/305584/jquery-ui-1-14-0-released&quot; target=&quot;_blank&quot;&gt;jQuery UI 1.14.0 稳定版发布&lt;/a&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：jquery 牛皮&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：还有人用么？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：我就使用啊，直接操作 dom 还是 jq 好用，例如，写 tampermonkey 脚本，jq 就是最好的存在&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：厉害，还在更新中。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：现在的前端基于 Vue 的各种花里胡哨的框架太多了，除了提供更精细化的就业岗位没觉得有啥优势！现在什么项目都要前后端分离，杀鸡焉用牛刀！我们以前都是自己前后端一起做现在的程序员就是前端就只会前端，后端就完全不会前端&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305553&quot; target=&quot;_blank&quot;&gt;deepinV23 适配 Intel Ultra&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：适配了会贡献给上游么 ？ 还是上游适配了，更新了最新内核？ 说的不清不楚的，越来越失望&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：V23 是直接基于 linux 内核开发的独立上游，自己当然会贡献给自己&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：赶紧用上，Windows 装 VirtualBox，再装 Deepin&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305865</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305865</guid>
            <pubDate>Wed, 07 Aug 2024 10:03:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>「苹果牌 AI」提示词就这？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;苹果拥有全球最优秀的编程人才和强大的研发实力，然而它在 Apple Intelligence 针对各种智能应用设计的提示词却给人一种「草台班子」的味道。&lt;/p&gt; 
&lt;p&gt;近日，网友在 macOS 15.1 Beta 1 中发现了 Apple Intelligence 后端使用的 Prompt。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;980&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0807/163929_kbNB_2720166.png&quot; width=&quot;1628&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;via&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2FMacOSBeta%2Fcomments%2F1ehivcp%2Fmacos_151_beta_1_apple_intelligence_backend%2F&quot; target=&quot;_blank&quot;&gt;https://www.reddit.com/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;据介绍，这些提示词作为 JSON 系统文件被保存在「/System/Library/AssetsV2/com_apple_MobileAsset_UAF_FM_GenerativeModels」目录下。&lt;/p&gt; 
&lt;p&gt;下图是帮你回复邮件中问题的 Smart Reply 功能的提示词：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2861b983518a0c5bb614a7c6259dce14755.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;你是一个有用的邮件助理，可以帮助从给定的邮件中识别相关问题并提供简短的回复片段。给定一封邮件和回复片段，提出邮件中明确提出的相关问题。这些问题的答案将由收件人选择，这将有助于减少起草回复时的生成错误信息。请输出主要问题以及每个问题的一组可能的答案/选项。不要问由回复片段回答的问题。问题应简短，不超过 8 个单词。答案也应简短，大约 2 个单词。以 json 格式呈现你的输出，包含问题和答案作为键的字典列表。如果邮件中没有提问，则输出一个空列表 []。仅输出有效的 json，不包含其他内容。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;这是一个简单的 CoT，先找出邮件中的提问，然后就每个问题给出简单答复，返回 JSON 格式方便程序解析，如果没有提问，就返回空数组。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-176c817efa91fe30a39ca372e1f7e551003.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;从上图可以看到，苹果解决 LLM 幻觉问题是在提示词里面加一句 「Do not hallucinate」（不要产生幻觉）——非常 amazing！&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;再看下面用于生成 Apple Photos 中「回忆」视频的提示词：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9cddf524f07337e4543607d9db88cee9315.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&amp;gt;`{{ specialToken.chat.role.system }}`这是用户请求从照片中创作故事和创意写作助理回应的对话&lt;br&gt; &amp;gt;&lt;br&gt; &amp;gt; 以 JSON 格式响应，按以下顺序键值：&lt;br&gt; &amp;gt; - traits: 字符串列表，从照片中选择的视觉主题&lt;br&gt; &amp;gt; - story: 章节列表，定义如下&lt;br&gt; &amp;gt; - cover: 字符串，描述标题卡的照片说明&lt;br&gt; &amp;gt; - title: 字符串，故事标题&lt;br&gt; &amp;gt; - subtitle: 字符串，标题的安全版本&lt;br&gt; &amp;gt;&lt;br&gt; &amp;gt; 每章是一个包含以下键值的 JSON:&lt;br&gt; &amp;gt; - chapter: 字符串，章节标题&lt;br&gt; &amp;gt; - fallback: 字符串，总结章节主题的通用照片说明&lt;br&gt; &amp;gt; - shots: 字符串列表，章节中的照片说明&lt;br&gt; &amp;gt;&lt;br&gt; &amp;gt; 以下是你必须遵守的故事指南：&lt;br&gt; &amp;gt; - 故事应关于用户的意图&lt;br&gt; &amp;gt; - 故事应包含明确的弧线&lt;br&gt; &amp;gt; - 故事应多样化，即不要过分集中在一个非常具体的主题或特征上&lt;br&gt; &amp;gt; - 不要写宗教、政治、有害、暴力、色情、肮脏或任何负面、悲伤或挑衅的故事&lt;br&gt; &amp;gt;&lt;br&gt; &amp;gt; 以下是你必须遵守的照片说明列表指南如下：&lt;br&gt; &amp;gt; - 你可以...&lt;/p&gt; 
 &lt;p&gt;非常详细和具体，返回 JSON 格式，并提供了字段的说明，另外特别强调了「不要写宗教、政治、有害、暴力、色情、肮脏或任何负面、悲伤或挑衅的故事」！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;你觉得这个 Prompt 写得怎么样？&lt;/p&gt; 
&lt;p&gt;参考链接&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fsimonw%2Fstatus%2F1820680449976615297&quot; target=&quot;_blank&quot;&gt;https://x.com/simonw/status/1820680449976615297&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Femollick%2Fstatus%2F1820651505046704517&quot; target=&quot;_blank&quot;&gt;https://x.com/emollick/status/1820651505046704517&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FOqZJsvGbL&quot; target=&quot;_blank&quot;&gt;https://weibo.com/1727858283/OqZJsvGbL&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305853/apple-intelligence-prompt-macos-15-1-sequoia-beta</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305853/apple-intelligence-prompt-macos-15-1-sequoia-beta</guid>
            <pubDate>Wed, 07 Aug 2024 09:00:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>58HBase 云原生探索与实践</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;一、背景介绍&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;58 大数据团队在计算方面的在离线混部项目已经取得了很好的效果，后续规划将大数据组件与云技术进行逐步的融合，同时在过去几年，58 大数据团队已经实施了很多高效的降本增效策略（数据 EC、高效压缩、治理优化等等），也取得了不错的成果，2024 上半年考虑结合云技术对 HBase 集群进行云化改造，进一步降低业务成本，减少运营维护成本。&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;1.1 HBase 云化背景&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   在 58 的业务场景中，HBase 扮演重要角色。例如帖子信息、用户信息等公司基础信息会定期离线同步到 HBase 中，为各个业务线提供随机查询及更深层次的数据分析。同时各个业务线可以将自己的数据存储在 HBase 中进行批量查询，可用于用户画像、趋势分析、推荐业务、搜索业务、时序数据存储等场景。整体架构如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013826&quot; data-ratio=&quot;0.647&quot; src=&quot;https://oscimg.oschina.net/oscnet/3c722a57-863e-4f21-b793-01d2e1e1f324.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 473px;height: 306px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   随着业务不断的增多，HBase 集群在长期的运营过程中，发现了很多问题，主要有 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   1.）业务类型多样，但是整体规格统一， 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;无法最大化利用资源，&lt;/span&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(245, 34, 45);&quot;&gt;资源浪费。&amp;nbsp;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;2.）&lt;/span&gt;业务集群较多，业务分组混乱，维护和管控复杂， 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(245, 34, 45);cursor: default;&quot;&gt;运营成本高，扩展性差。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;3.）&lt;/span&gt;集群升级版本迭代比较麻烦，涉及到环节较多， 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(245, 34, 45);cursor: default;&quot;&gt;迭代和维护成本高。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;结合以上问题，考虑可通过云化部署，整体容器化，提升计算资源利用率，减少用户成本。&lt;/span&gt;Hbase 云化整体目标如下几个方面： 
 &lt;/section&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     原有 HBase 物理集群 
    &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;全部云化&lt;/span&gt;，所有 Hbase 业务均迁移到云上。 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     整体 
    &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;降本 30%&lt;/span&gt;，保持和物理集群相同的读写性能。 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     开发运维一体化，收敛整体运营能力，降低 
    &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;运营维护成本&lt;/span&gt;，支持高效迭代。 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt; 
    &lt;br&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;二、HBase 云集群建设&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;2.1 HBase 架构介绍&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   HBase 是一个高可靠性、高性能、面向列、可伸缩的分布式 KV 存储系统，利用 HBase 技术可在廉价 PC Server 上搭建起大规模结构化存储集群。HBase 体系结构是典型的 Master-Slave 模型。系统中有一个管理集群的 Master 节点以及大量实际服务用户读写的 RegionServer 节点。HBase 中所有数据最终都存储在 HDFS 系统中，系统中还有一个 ZooKeeper 节点，协助 Master 服务对集群进行管理。整体如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013829&quot; data-ratio=&quot;0.55&quot; src=&quot;https://oscimg.oschina.net/oscnet/3430ebc7-5750-4964-bfcc-59acd8349b59.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;width: 502px;height: 276px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   架构特点：Master 是中心节点，负责维护元数据和集群管理，RegionServer 是数据存储节点，Master 和 RegionServer 服务均部署在单独的服务器上，通过 zookeeper 进行交互，业务直接访问 RegionServer 服务读写数据。RegionServer 数据节点可以横向扩展，同时可以按照业务划分 rsgroup，支持多租户，支持完善的权限管理等安全机制。综上，我们看到 Hbase 原生架构很多方面可以很好地适配云平台的一些特性。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;2.2 58 云平台介绍&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   58 云平台是为用户打造的一站式云化解决方案，集成了业务开发中常用的云、服务治理平台、中间件、存储等基础平台与组件。58 云平台整合了基础架构方面所能提供的所有能力，以集群管理、中间件和存储三个大的维度进行划分。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013825&quot; data-ratio=&quot;0.348&quot; src=&quot;https://oscimg.oschina.net/oscnet/c39a509d-63e2-4f46-997e-722d46b62d7f.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 509px;height: 177px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   58 云平台上提供了镜像管理、上线发布、配置管理、容器管理、自动化扩缩容、分组管理、回滚降级、权限配额、资源池管理、日志管理、监控管理等集群管理相关的能力。 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;58 云平台支持云原生建设的所有相关能力&lt;/span&gt;，整体相关的技术概念如下图所示，主要包含微服务架构模式、相关的容器技术、运维开发一体化能力，容器技术包含 Docker 容器、K8S 调度和编排、声明式 API、不可变基础设施等。HBase 云化可以借助云平台上这些集群管理能力实现自动化集群部署、升级等运维工作，实现运维开发一体化，同时利用云上资源弹性的特点，进行成本优化。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013827&quot; data-ratio=&quot;0.437&quot; src=&quot;https://oscimg.oschina.net/oscnet/2a22984e-da57-4d7e-a78e-a9fcae2e85a9.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;width: 489px;height: 214px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/h2&gt; 
 &lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;strong&gt;2.3 集群建设&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   整体 HBase 云集群的建设思路是 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;&quot;&gt;主要利用 Hbase 本身易扩展、高可用等特性，同时借助 58 云平台的集成、维护和管理能力，快速集成和云化，保证业务稳定的情况下，进行业务成本优化。相关核心工作主要有适配 hadoop 高版本、适配和集成 58 云平台基础能力、稳定性保障相关能力开发、运营维护相关能力开发、资源优化相关工作。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013828&quot; data-ratio=&quot;0.546&quot; src=&quot;https://oscimg.oschina.net/oscnet/83c68a26-daba-4c08-ab13-89fc8d62ab9f.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 473px;height: 258px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;架构介绍：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     采用独立 master 云集群+独立 regionserver 云集群+独立 regionserver 云集群上多个云分组的架构。 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;list-style-type: square;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
      独立的 Master 云集群主要负责维护 master 服务，可以横向扩展，每个分组部署两个 master 服务，实现高 HA 架构，实现服务快速恢复能力。 
    &lt;/section&gt;&lt;/li&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
      独立 regionserver 云集群上的每个云分组对应物理集群上的一个 RsGroup，利用云平台集群分组的能力，可实现不同业务 RsGroup 配置维护和管理。每个独立 regionserver 云集群上的云分组理论上可以无限扩展云分组，每个云分组上可以横向扩容云容器节点，hbase 原生的 rsgroup 分组模式以及 regionserver 横向扩展能力可以无缝适配。 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.6em;&quot;&gt;
     根据业务特点，设置不同的业务类型，按需配置不同的容器规格，利用云平台高效的调度机制进行资源利用率最大化。 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.6em;&quot;&gt;
     适配 Hadoop3 版本，统一底层存储架构，提升服务稳定性以及减少运维成本。 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     充分利用 58 云平台运维、升级、管理等自动化能力，减少运维成本。 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     运营能力增强，业务一键接入，自动化扩缩容，表认领和交接能力等等。 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;建设 1：演进云集群架构&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;为了适配云平台的集群部署模式，衍生了两种集群架构，第一种是多集群架构，master、regionserver 云集群单独部署，每个 regionserver 云集群对应物理集群上的每个业务分组，每个 regionserver 云集群对应一个 master 云集群，master、regionserver 云集群都可以横向扩展集群，每个 RegionServer 云集群也可以横向扩展容器节点数量。详细如下图所示：&lt;/p&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013830&quot; data-ratio=&quot;0.635&quot; src=&quot;https://oscimg.oschina.net/oscnet/88e975fb-0995-4bda-a80d-12e26b5e2937.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 489px;height: 311px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   这种架构优势为易扩展和易适配，每个集群可以很方便应用定制化的配置，不需要额外的适配开发工作。但是维护比较复杂，维护过多集群，zookeeper 集群请求压力较大，同时也浪费资源，和整体云化目标背道而驰。然后衍生出了第二种架构，一集群多分组架构，master、regionserver 云集群还是单独部署（因为服务进程和类型不同，所以尽量独立），master、regionserver 云集群各只有一套，regionserver 云集群里每个云分组对应物理集群上不同的业务分组（RsGroup），云集群上可以横向扩展业务分组，master 云集群上的云分组也可以根据集群负载情况进行扩展新的 master 云分组。然后 RegionServer 云集群每个分组也可以横向扩展容器节点，这种架构优势是方便维护，节约云化成本。但是需要集成单集群多分组的定制化配置管理等，有一定的开发适配成本。我们主要选择了以集群多分组架构，在这个架构基础上进行完善和优化，逐步达到集群云化目标。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013834&quot; data-ratio=&quot;0.61&quot; src=&quot;https://oscimg.oschina.net/oscnet/aa7b982a-9316-4e24-8449-11653d5d6fe9.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default !important;width: 473px;height: 289px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;font-size: 16px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;建设 2：&lt;/span&gt;适配云平台-完善基础能力&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   适配云平台集群维护相关的能力，主要包含集成部署、配置管理监控告警、故障处理、日志管理等，同时支持定制化资源调度，容灾故障等，保障集群稳定性情况下进行成本优化。详细如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013832&quot; data-ratio=&quot;0.482&quot; src=&quot;https://oscimg.oschina.net/oscnet/75acf24b-4c4e-45b7-a812-d11f489047b7.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 455px;height: 219px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;span id=&quot;OSC_h3_9&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;建设 3：集群能力演进&lt;/span&gt;&lt;/h3&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   为了更好的适配云平台和迁移，我们同步做了相关集群底层架构和能力的演进，主要包含如下三个方面，涉及底层存储架构统一、HBase 迁移能力完善、路由接口服务升级。详细如下: 
 &lt;/section&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     适配高版本 hadoop 集群，统一架构----&amp;gt;提升集群稳定性和维护效率 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013831&quot; data-ratio=&quot;0.437&quot; src=&quot;https://oscimg.oschina.net/oscnet/cd2b4dc0-2f09-4c8b-944f-7aaf8be045aa.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 465px;height: 203px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt; 
   &lt;section style=&quot;line-height: 1.6em;&quot;&gt;
     HBase replication 能力支持，支持在线场景迁移----&amp;gt;支持所有业务场景稳定迁移，提升迁移透明度 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013833&quot; data-ratio=&quot;0.4&quot; src=&quot;https://oscimg.oschina.net/oscnet/07f94e41-624f-4b17-91fe-7d8b8ba7f977.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 461px;height: 184px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt; 
   &lt;section style=&quot;line-height: 1.6em;&quot;&gt;
     路由接口服务架构升级，适配云平台，同时审计增强----&amp;gt;支持对所有调用者透明迁移 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013836&quot; data-ratio=&quot;0.313&quot; src=&quot;https://oscimg.oschina.net/oscnet/1bf874f1-72fb-4233-aade-e145fab7c93a.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 453px;height: 142px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;span id=&quot;OSC_h3_10&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;建设 4：运营管理适配云平台、能力增强&lt;/span&gt;&lt;/h3&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;
   为了支持集群云化，需要对集群运营管理能力进行适配云平台的全新模式，同时需要对相关能力进行增强，提高业务接入效率，提升平台运营能力。主要包含如下几个方面： 
 &lt;/section&gt; 
 &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;line-height: 1.6em;&quot;&gt;
     规范化运营流程：补全工单扩缩容等----&amp;gt;提升运营效率，提升服务安全性 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.6em;&quot;&gt;
     优化接入流程：实现一键接入，补全元数据认领、交接能力等----&amp;gt;提升业务接入效率，提升使用便捷性 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013840&quot; data-ratio=&quot;0.382&quot; src=&quot;https://oscimg.oschina.net/oscnet/47136690-9a06-4439-bda9-ae81b65e4b0e.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;width: 454px;height: 173px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt;&lt;/h2&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/h2&gt; 
 &lt;span id=&quot;OSC_h2_11&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;strong&gt;2.4 核心问题&amp;amp;解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;（1）容器进程（RegionServer）频繁驱逐问题&lt;/span&gt;：在云平台中，传统的资源调度策略是基于容器实际内存使用量进行动态调整，这种策略可能导致物理节点上的容器超额分配，尤其是在处理如 HBase RegionServer 这类内存需求波动较大的服务时。HBase RegionServer 的内存消耗受用户读写请求量和数据压缩任务等因素影响，呈现出显著的波动性，这不仅使得物理集群的内存利用率不稳定，还可能频繁触发过载迁移机制，导致整个云集群出现节点频繁漂移的现象，严重影响 HBase 集群的稳定性和性能。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013839&quot; data-ratio=&quot;0.691&quot; src=&quot;https://oscimg.oschina.net/oscnet/c112ccad-ca70-4819-a35e-6f22ac9bd419.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 448px;height: 310px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案&lt;/span&gt;：为解决这一问题，建议采用基于容器规格的调度策略。在这种策略下，创建容器时即明确指定其资源规格，调度器据此进行资源分配，从而有效避免物理机器上的超分现象。这种预定义的资源分配方式有助于实现更均衡的资源利用，减少因内存波动引起的调度不稳定性，进而提升整个 HBase 集群的运行稳定性和效率。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013838&quot; data-ratio=&quot;0.59&quot; src=&quot;https://oscimg.oschina.net/oscnet/33b2749e-cf20-4798-a3f9-7ae97d5b91c6.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 458px;height: 270px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;（2）分组节点迁移&lt;/span&gt;：在传统物理机环境中，部署 HBase RegionServer 服务时，可以通过手动操作将节点加入到特定的 HBase RsGroup 中。然而，在云环境中，由于节点的动态扩缩容特性以及 IP 地址的不确定性和漂移现象，手动管理节点分组变得极为繁琐且不切实际。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013837&quot; data-ratio=&quot;0.519&quot; src=&quot;https://oscimg.oschina.net/oscnet/dbf9a04d-07f9-4a4c-a979-b1307c3723a9.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;width: 443px;height: 230px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案&lt;/span&gt;：为应对这一挑战，实施一种自动化策略，即在容器节点启动时集成自动分组迁移逻辑。具体而言，当容器节点在云环境中启动时，系统应能够识别其所属的云分组，并自动调用 HBase 的 API 或命令行工具，执行相应的分组移动操作，将容器节点自动迁移至预设的目标 RsGroup。这种自动化机制不仅减轻了运维负担，还确保了 HBase 集群的动态适应性和高效管理。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013844&quot; data-ratio=&quot;0.684&quot; src=&quot;https://oscimg.oschina.net/oscnet/9b77643a-79ad-4edd-8c2a-732c195dc73a.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;width: 437px;height: 299px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;（3）服务故障恢复问题：&lt;/span&gt;在传统物理集群上，一台 RegionServer 服务挂掉后，会自动把相关 region 数据移动到 RsGroup 上其他服务节点上，需要等待对应节点上的服务恢复。对应上云后如果严格限制容器使用固定 IP，不预留 buffer，在容器故障恢复过程中需要等待分组上的固定 IP 可用后才能继续启动容器进程，会有一定的时间损耗，严重情况下会长时间 hang 住，导致长时间无法恢复问题，影响分组服务的稳定性。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案&lt;/span&gt;：线上云集群我们为每个分组会预留一些容器 IP，采用非严格限制，允许容器进程重启用不同的 IP，在容器进程故障恢复中会从分组 IP 资源池中获取空闲的可用 IP，实现整体快速恢复。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013843&quot; data-ratio=&quot;0.548&quot; src=&quot;https://oscimg.oschina.net/oscnet/5dffa70e-65ca-4cd8-b9ad-610434c7c753.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default !important;width: 442px;height: 242px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;（4）配置管理：&lt;/span&gt;当前物理环境的 HBase 配置采用 puppet 进行配置的管理，实现配置的维护和动态刷新，但这依赖于已知机器的 ip。在云原生环境，容器的 ip 是不确定的，此外启动 puppet agent 服务也占用额外的系统资源。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案&lt;/span&gt;：容器启动时拉取配置文件的逻辑，每次容器重启即可获取到最新的配置。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;（5）zgc 内存统计&lt;/span&gt;：HBase 使用了 ZGC，服务上云后，由于 ZGC 使用系统 shmem(共享内存) 的机制，导致申请的内存，虽只使用了很少一点，但仍被系统算做全部占用，这导致使用 top 命令查看进程内存占用时，进程内存被重复计算。此外，云平台在进行容器内存使用统计的时候，只采集了 RSS，未计算 shmem 部分。这导致从监控上看，容器的内存利用率很低，但实际的内存使用已处于较高水平。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案&lt;/span&gt;：一方面 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(23, 43, 77);&quot;&gt;在&lt;/span&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;内核启动参数&lt;/span&gt;中增加 「&amp;nbsp; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;file_zeropage=1&lt;/span&gt;&amp;nbsp;」 来启用 file_zeropage 配置，解决 top 命令内存统计不准的问题；另一方面容器的实际内存统计采用 RSS+部分 shmem（根据物理节点上实际分配的容器节点数按比例统计），解决云平台监控容器内存使用率不准的问题。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;（6）节点平滑重启&lt;/span&gt;：云容器节点重启或关闭会直接销毁容器，这会导致容器上的 RegionServer 服务被直接关闭，类似于物理机的宕机。这时候由于客户端无法感知 RS 服务是否正常，会不停地重试，并且在重试的时候由于 hbase 访问的本地的 meta cache，所以会一直访问挂掉的节点，直到超过重试次数或者超时，线上 HBase 服务稳定性受到较大影响。在集群升级或者节点故障迁移的时候，这种销毁容器导致的性能波动对业务来说是无法容忍的。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013842&quot; data-ratio=&quot;0.648&quot; src=&quot;https://oscimg.oschina.net/oscnet/27f19bb1-cf26-4090-be41-d6f4cf312ae2.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 460px;height: 298px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案&lt;/span&gt;：针对这个问题，我们将 HBase 的平滑关闭脚本进行了改造，并集成到容器的关闭逻辑中。具体来说，在容器销毁之前会执行 HBase 的平滑关闭脚本，首先关闭集群的自动负载均衡，然后对当前节点的 Region 进行驱逐，驱逐完毕后打开自动负载均衡。在等待关闭脚本执行完毕或者超过指定时间后进行容器销毁。因为是重启之前主动触发 Region 的移动，Regino 移动后 master 会通知 client 更新本地 meta cache 中 regino 的位置，最大程度减少因容器节点重启或关闭对业务的影响。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013845&quot; data-ratio=&quot;0.866&quot; src=&quot;https://oscimg.oschina.net/oscnet/a6a3d00e-c9f8-4226-94a5-4192b4844433.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 456px;height: 395px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h1_12&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;三、HBase 业务迁移&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h2_13&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;3.1 迁移方案&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   迁移方案主要有三种不同模式，每种模式都有不同的场景和特点，主要包括离线模式、路由双写模式、replication 双写模式。下边分别介绍下每种模式。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;（1）离线模式：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   第一种为离线模式，主要针对离线写入（导入）的场景，需要避开写入任务运行的时间进行迁移，详细如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013841&quot; data-ratio=&quot;0.378&quot; src=&quot;https://oscimg.oschina.net/oscnet/8eaf18d5-b8dd-4c36-8592-8b6443ffc5d3.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 450px;height: 170px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;（2） 路由双写模式：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   第二种为路由双写模式，主要针对路由接口写入的场景，整体由平台侧操作，对业务透明，详细如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013847&quot; data-ratio=&quot;0.273&quot; src=&quot;https://oscimg.oschina.net/oscnet/996241b1-e3d5-403f-b050-3898287a0c64.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 476px;height: 130px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;（3）replication 双写模式：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   第三种为 replication 双写模式，支持在线迁移场景（hbase api、路由接口实时写入），可以保障整体对业务透明，可以保障数据的安全性，详细如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013846&quot; data-ratio=&quot;0.254&quot; src=&quot;https://oscimg.oschina.net/oscnet/49a69cd2-bc7b-41c6-ae11-4d92d1cf6f2c.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 436px;height: 111px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/h2&gt; 
 &lt;span id=&quot;OSC_h2_14&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;3.2 迁移相关问题和处理&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;（1）迁移过程中对集群的压力增大，影响云集群稳定性的问题&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;具体问题：&lt;/span&gt;数据量较大的表在做数据拷贝过程中，占用了较高的网络和磁盘 IO 资源，导致对线上业务的读写产生了影响。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;解决方案：&lt;/span&gt;增加拷贝数据的限流，降低迁移对在线业务的影响，减少资源竞争。同时分步、分批次进行迁移，优先保证服务质量。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;（2）业务访问效率降低问题&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;具体问题：&lt;/span&gt;大表在迁移后会有一段时间无法命中缓存（no cache）导致访问延迟较高的问题。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案：&lt;/span&gt;提前对热数据进行缓存预热，缓慢透明迁移调用者减少访问量。根据访问数据 p99 来进行判断是否可以切换下一个调用者，迁移完成后业务基本无感知。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;（3）路由调用者迁移不完善问题&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;具体问题：&lt;/span&gt;审计能力较弱，无法准确确定相互应用和重复使用的调用情况，产生了迁移后有关联的调用遗漏问题，导致业务报错。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;解决方案：&lt;/span&gt;做了审计增强，同时调用 DAG 算法计算迁移组，这样确保了迁移过去的表和调用者不会出现无法访问的问题。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;（4）大数据量表做 major compact 资源风险问题&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;&quot;&gt;具体问题：&lt;/span&gt;大表做 major compact 一般需要消耗较多系统资源，由于原来在物理节点上，平时会有一些资源空闲，这样运行 major compact 对集群压力整体可控，但是迁移到云上后，每台容器节点资源使用较高，空闲较少，整体做 major compact 对服务稳定性会产生很大隐患。 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;解决方案：&lt;/span&gt;按表类型周期做 major compact 时增加按照 regionserver.table 粒度执行，这样对整体分组的影响可控，同时结合对 major compact 操作的并发和资源限制，保障集群整体稳定性。 
 &lt;/section&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h1_15&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;四、云原生总结&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h2_16&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;4.1 项目收益：&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   项目收益主要体现在三个方面，第一个是 HBase 业务云化带来的成本优化、资源利用提高等，然后是是运营维护提效方面，实现运维自动化，运营优化。最后是底层架构迭代方面，完成了 hadoop 版本的统一。详细收益如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013848&quot; data-ratio=&quot;0.765&quot; src=&quot;https://oscimg.oschina.net/oscnet/49b376bb-bc37-4899-929e-5f2384109e6d.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;width: 440px;height: 337px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h2_17&quot;&gt;&lt;/span&gt; 
 &lt;h2 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;strong&gt;4.2 后续规划：&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   后续规划主要在能力增强和成本优化两个方面，比如适用云平台配置中间件、提升诊断能力等，详细规划如下图所示： 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100013849&quot; data-ratio=&quot;0.313&quot; src=&quot;https://oscimg.oschina.net/oscnet/f54a4967-0b70-4f8d-9db5-381192100666.png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: s-resize;width: 460px;height: 144px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h1_18&quot;&gt;&lt;/span&gt; 
 &lt;h1 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 2em;margin-top: 10px;margin-bottom: 10px;color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;letter-spacing: normal;text-align: start;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;五、作者简介&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑体, 宋体, sans-serif;font-size: 15px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);cursor: default;line-height: 1.6em;&quot;&gt;
   李营， 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(24, 27, 31);&quot;&gt;樊乐&lt;/span&gt;， 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(24, 27, 31);cursor: default;&quot;&gt;沈晨航&lt;/span&gt;，数据架构部存储方向研发， 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;最后感谢云平台团队和运维团队的大力支持。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;line-height: 1.6em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - 58 技术（architects_58）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5359019/blog/15053065</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5359019/blog/15053065</guid>
            <pubDate>Wed, 07 Aug 2024 08:43:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>TIOBE 8 月榜单：Python 霸权地位已无可争议</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 公布了 2024&amp;nbsp;年 8 月的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot;&gt;编程语言排行榜&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;66&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-057baaf894c8990d46f6ad1a2ce14423c46.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;本月，Python 的份额首次超过 18%。而上一次超过 18% 的语言是 2016 年 11 月的 Java，Java 也是有史以来排名最高的语言：2001 年 6 月为 26.49%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，排名第二的 C++ 现在正好落后 Python 8%。纵观以往的数据，第一名和第二名之间的最大差距出现在 2016 年 11 月，当时 Java 领先 C 语言 9.55%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE CEO Paul Jansen 点评称，「总而言之，Python 的霸权地位已无可争议。下一步，Python 很有可能成为有史以来最流行的编程语言。是否有任何新语言有望很快接近 Python？有可能的竞争者 Rust 和 Kotlin 正在迅速接近 TIOBE 指数前 10 名，但它们还需要很长时间才能真正威胁到 Python。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;TIOBE 8 月 TOP 20 编程语言&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;409&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-60a3a822f0be0c38d6c7024228dbdb12be6.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;相较&lt;/span&gt;上月&lt;span style=&quot;color:#000000&quot;&gt;，榜单中的一些变动具体包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;SQL&amp;nbsp;的排名从 10 升至 7&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Go 的排名从 7 跌至 9&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Fortan 的排名从&amp;nbsp;8 跌至 10&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;MATLAB&amp;nbsp;&lt;span style=&quot;color:#000000&quot;&gt;的排名从&amp;nbsp;12 升至 11&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Delphi/Object Pascal&amp;nbsp;排名从&amp;nbsp;11 跌至 12&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;PHP&amp;nbsp;的排名从&amp;nbsp;16 升至 13&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Rust&amp;nbsp;的排名从&amp;nbsp;13&amp;nbsp;跌至 14&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Ruby&amp;nbsp;的排名从&amp;nbsp;14 跌至 15&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Swift&amp;nbsp;的排名从&amp;nbsp;17&amp;nbsp;升至 16&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Assembly language&amp;nbsp;的排名从 18&amp;nbsp;升至 17&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;Kotlin&amp;nbsp;&lt;span style=&quot;color:#000000&quot;&gt;的排名从&amp;nbsp;20&amp;nbsp;升至 18&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;R 语言&lt;span style=&quot;color:#000000&quot;&gt;的排名从 22 升至 19&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Scratch&amp;nbsp;的排名从 15&amp;nbsp;跌至 20&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;COBOL 则跌出 Top 20 榜单（19→21）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;TOP 10 编程语言 TIOBE 指数走势（2002-2024）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;224&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9ef5b14104627ea26492807b3f414d26731.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;第 21-50 名编程语言排行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;422&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-91710c816fcd55ddc278730a50ecd01c09f.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;第 51-100 名如下，由于它们之间的数值差异较小，仅以文本形式列出（按字母排序）：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;4th Dimension/4D, ABC, ActionScript, Algol, Apex, APL, AutoLISP, Caml, CFML, CHILL, CLIPS, Clojure, Crystal, Curl, DiBOL, Elm, Erlang, F#, Forth, Groovy, Hack, Icon, Inform, Io, J, JScript, LabVIEW, Ladder Logic, Maple, Modula-2, Mojo, NATURAL, Nim, OCaml, Occam, OpenCL, OpenEdge ABL, PILOT, PL/I, PostScript, Q, Racket, Ring, S, Scheme, Smalltalk, SPARK, Stata, VHDL, X++&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 编程社区指数（The TIOBE Programming Community index）是一个衡量编程语言受欢迎程度的指标，该指数每月更新一次。评判的依据来自世界范围内的工程师、课程和第三方供应商，包括流行的搜索引擎，如 Google、必应、雅虎、维基百科、亚马逊、YouTube 和百度都被用于指数计算。值得注意的是，TIOBE 指数并不代表编程语言的好坏或编写代码的多少。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;该指数可以用来检查你的编程技能是否还能跟上时代的步伐，或者在开始建立一个新的软件系统时，基于指数对采用何种编程语言做出决策。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2Fprogramminglanguages_definition%2F&quot; target=&quot;_blank&quot;&gt;TIOBE 指数&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;的定义方式，以及详细榜单信息&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot; target=&quot;_blank&quot;&gt;均可查看官网&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305832/tiobe-index-202408</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305832/tiobe-index-202408</guid>
            <pubDate>Wed, 07 Aug 2024 08:17:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Kimi 开放平台：上下文缓存 Cache 存储费用降价 50%</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;月之暗面宣布，Kimi 开放平台的上下文缓存 Cache 存储费用降价 50%，Cache 存储费用由 10 元/1Mtokens/min 降低至 5 元/1Mtokens/min。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;价格生效时间：2024 年 8 月 7 日 00:00:00（00:00:00 后计费的 cache 存储费用将按照新价格计算 ）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;394&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b9bdb23d6849a33255c231dcaa3b882ddc8.webp&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305807</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305807</guid>
            <pubDate>Wed, 07 Aug 2024 06:45:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>macOS 官方共三年更新支持，但你知道苹果给固件提供多久的支持吗？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;众所周知，Apple 支持每个版本的 macOS 整整一年的更新，然后再提供两年的安全更新。但它对每个型号的固件支持多长时间？现在更新 Mac 固件的唯一方法是安装 macOS 更新，这会如何影响支持期？本文试图回答这些问题，并在此过程中揭开这长达十多年的谜团。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#171617&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Apple 不会发布任何有关固件版本或更新的信息，甚至很少在安全更新的发布说明中提及它们。幸运的是，自从七年前 High Sierra 发布以来，我一直在跟踪每种型号的固件版本，因此我有自己的记录，这些记录来自 macOS 更新中包含的版本。我将这些记录与 Ian Page 的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmactracker.ca%2F&quot; target=&quot;_blank&quot;&gt;Mactracker 数据库&lt;/a&gt;中给出的型号推出和停产日期进行了匹配，并在此总结了结果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#171617&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;更新的工作原理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;每次 macOS 更新都可能带来固件更新，尽管在支持的第一年，纯安全补丁带来的更新往往较少。通常同时发布的三个 macOS 更新中的固件更新都是相同的。因此，最近更新到 14.6 带来的更新与 13.6.8 和 12.7.5 中的更新相同，适用于各自支持的型号，但每次更新只会安装其支持的型号的更新。借助示例，这一点变得更加清晰，这些示例也揭示了这些更新的内在奥秘。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2020 年 7 月 15 日，主要更新带来了 macOS 10.15.6，以及针对 macOS 10.13 和 10.14 的安全更新 (SU)。其中包括以下 EFI 固件版本：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;适用于 iMac12,1 版本 87.0.0.0.0（2019 年 6 月 14 日）&lt;/li&gt; 
 &lt;li&gt;适用于 iMac13,1 版本 292.0.0.0.0，发布日期：2020 年 6 月 10 日&lt;/li&gt; 
 &lt;li&gt;适用于 MacBookPro8,1 版本 87.0.0.0.0（2019 年 6 月 13 日）&lt;/li&gt; 
 &lt;li&gt;适用于 MacBookPro9,1 版本 233.0.0.0.0，发布日期为 2020 年 6 月 10 日。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这两个适用于 iMac12,1 和 MacBookPro8,1 的固件版本均为 2019 年，当时已经有一年的历史了，因为 Apple 已于 2019 年 6 月停止为这两款型号发布新固件版本。但是，如果 iMac13,1 和 MacBookPro9,1 型号安装了 macOS 10.15.6 或任一安全更新，则会收到新版本的固件。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一年后，即 2021 年 7 月 21 日，Apple 发布了 macOS 11.5 更新，并发布了 Mojave SU 2021-005。由于 iMac12,1 和 MacBookPro8,1 不再能够运行受支持的 macOS 版本，因此它们都没有固件更新，只能运行 2019 年 6 月的版本。随后，两款较新的型号进行了以下更新：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;适用于 iMac13,1 版本 422.0.0.0.0，2021 年 6 月 4 日&lt;/li&gt; 
 &lt;li&gt;适用于 MacBookPro9,1 版本 422.0.0.0.0，发布日期：2021 年 6 月 4 日。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;又过了一年，即 2022 年 7 月 20 日，这两款型号仍可运行受支持的 macOS，并在 Catalina SU 2022-005 中进行了以下固件更新：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;适用于 iMac13,1 版本 429.0.0.0.0，发布日期：2022 年 3 月 18 日&lt;/li&gt; 
 &lt;li&gt;适用于 MacBookPro9,1 版本 429.0.0.0.0，发布日期：2022 年 3 月 18 日。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但这些并不是该 SU 中的新功能，因为那时这两种型号的固件更新已经停止，而在 2023 年 5 月 18 日的 Big Sur 11.7.7 中，这两种型号都没有任何可用的固件，因为它们不再受仍在接收更新的 macOS 版本的支持。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这个例子揭示了一个鲜明的事实：&lt;strong&gt;对于相隔一年多发布的 iMac 和 MacBook Pro 的连续型号，上次发布的固件更新却相隔了近三年的时间：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;对于 iMac12，1 最新发布于 2019 年 6 月，对于 iMac13，1 最新发布于 2022 年 3 月&lt;/li&gt; 
 &lt;li&gt;对于 MacBookPro8,1 来说，最新发布于 2019 年 6 月，对于 MacBookPro9,1 来说，最新发布于 2022 年 3 月。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#171617&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多久？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因此，我收集了 2009 年 10 月至今推出的 40 款未配备 T2 芯片的英特尔 Mac 的数据，每款产品显然都已通过了最终固件更新。这不包括目前仍在接收固件更新的少数型号。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;1272&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0807/143145_CfpH_3820517.png&quot; width=&quot;1634&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此图表按型号推出日期显示了每个型号的最后一次固件更新日期。2012 年之前推出的大量 Mac 于 2019 年 6 月收到了最后一次固件更新，之后近两年的时间里，所有后续型号都收到了进一步的固件更新，之后的下一批旧型号（这次是 2012-13 年推出的）才收到了最终更新。右上角可见一个异常值，即 2019 年 3 月推出的 iMac19,1，但似乎在 2024 年 2 月进行了最后一次更新，非常早。虽然此后没有收到任何固件更新，但将来可能会收到更多固件更新。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;1274&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0807/143205_aj5H_3820517.png&quot; width=&quot;1638&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此图表显示了该型号推出之日起固件支持的总长度（以年为单位）。有三个不同的组：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2012 年之前的模型，在左侧形成一条陡峭的线，支持时间从不到 8 年到近 10 年不等；&lt;/li&gt; 
 &lt;li&gt;更新的模型，形成不太密集的散点，支持时间从不到 7.5 年到近 10 年；&lt;/li&gt; 
 &lt;li&gt;右下角是 iMac19,1 异常值，其支持时间极短，约为 5 年。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;1254&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0807/143227_GnwB_3820517.png&quot; width=&quot;1630&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这是同一张图表，但叠加了标签，标明了每种型号的名称。型号范围（例如 iMac）和支持期限之间似乎没有任何关联。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因此，对于自 2009 年以来推出的大多数不带 T2 芯片的英特尔型号，固件更新支持已延长至推出以来至少 8 年。由于型号的推出和停产之间的时间差异很大，因此在以停产日期表示时，分散性较大。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#171617&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;差距&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有几个可能的原因可以解释 2012 年之前推出的 Mac 与最近推出的 Mac 之间的差异。这些包括：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2011-12 年推出的 Mac 电脑从 Sandy Bridge 过渡到 Ivy Bridge；&lt;/li&gt; 
 &lt;li&gt;在推出 Apple 硅片型号期间，Intel Mac 预计会保持一段稳定期；&lt;/li&gt; 
 &lt;li&gt;苹果选择在 Covid 大流行期间不停止固件支持，尽管我不记得曾经明确表示过这一点；&lt;/li&gt; 
 &lt;li&gt;苹果固件支持政策的任意改变。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我赞成不再使用 Sandy Bridge，因为众所周知，Sandy Bridge 存在一些问题，可能导致固件支持比预期更早地结束。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;值得注意的是，这种差距并不意味着在此期间没有发布固件更新，而只是意味着在此期间仍在更新的型号会继续更新，并且不会终止任何更新。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#171617&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;T2 和 Apple 芯片&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这些较新的型号从 2017 年开始推出，完全改变了固件更新。所有配备 T2 芯片的 Mac 都会收到看似相同的固件更新。尽管 Mac 仍受 macOS 更新支持，但后续更新仍被放弃（在某些情况下会发生这种情况），但 T2 固件更新似乎只有在型号不再受 macOS 更新支持时才会停止。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3d3e40&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;由于 Apple 完全拥有 Apple Silicon Mac 的硬件和操作系统，因此可以决定对每款产品的支持期限。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style=&quot;margin-left:.75em; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#171617&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;对于大多数未配备 T2 芯片的 Intel Mac，Apple 在该型号推出后至少 8 年内都提供了固件更新。对于许多型号，在它们无法运行受支持的 macOS 版本之前，就已经进行了固件更新。&lt;/li&gt; 
 &lt;li&gt;2012 年之前推出的一些 Mac 搭载了 Sandy Bridge 芯片组，其固件支持早早被取消。原因尚不清楚，但可能与芯片组有关。&lt;/li&gt; 
 &lt;li&gt;T2 和 Apple Silicon Mac 将会有所不同。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;原文链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Feclecticlight.co%2F2024%2F08%2F06%2Fhow-long-does-apple-support-mac-firmware%2F&quot; target=&quot;_blank&quot;&gt;https://eclecticlight.co/2024/08/06/how-long-does-apple-support-mac-firmware&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305802/how-long-does-apple-support-mac-firmware</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305802/how-long-does-apple-support-mac-firmware</guid>
            <pubDate>Wed, 07 Aug 2024 06:35:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Russ Cox 引退以及他的新项目 Oscar</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;Go 第一代技术领导人 Rob Pike, 近两年已经隐居澳大利亚。&lt;/p&gt; 
 &lt;p&gt;Go 第二代技术领导人 Russ Cox 2024 年 8 月 2 日宣布卸任，转战 AI 项目，聚焦 Oscar 项目。&lt;/p&gt; 
 &lt;p&gt;Go 第三代技术领导人 Austin Clements，同样和 Russ Cox 一样毕业于美国的一个计算机技术比较出名的一个学院，算是 Russ Cox 的师弟，Austin 是 Go 语言运行时系统和垃圾收集器的主要贡献者之一，在运行时和内存管理等底层系统方面有深入的专长&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Russ Cox 他在网上的 ID 是 rsc，他是麻省理工学院 MIT 2008 届的博士毕业生，他本科和研究生都是在哈佛大学就读的，Go team 里的又一个学神。他所在的项目组是隶属于 MIT 计算机科学与人工智能实验室的并行与分布式操作系统组，据网上的资料 Austin Clements 也是在这个实验室这个组。&lt;/p&gt; 
&lt;p&gt;Russ 在哈佛大学就读期间就在 Bell Labs 贝尔实验室里实习（Russ 出生成长的家就在贝尔实验室附近，所以他从高中时期就一直在贝尔实验室的计算机科学部门泡着，所以大佬们是不是关注一下学区房，自己做不到也要为下一代考虑下 ：）），那时候他和 Rob Pike 一起开发贝尔实验室的分布式操作系统 Plan 9 (上世纪 80 年代末由贝尔实验室的 Ken Thompson 和 Rob Pike 等人发起并领导的项目)，后来他去 MIT 攻读博士学位期间顺便去了 Google 实习，就在他博士快毕业的时候，Rob Pike 和 Ken Thompson 一起和他介绍了他们正在设计的一门新语言 Go，并大概是这么对他说的：「嘿，我们正试图把我们以前在 Plan 9 开发软件时非常喜欢的所有东西用在那些我们想在 Google 里写的软件里，你想过来帮忙一起搞吗？」，然后 Russ 就这样被这两位传奇程序员拉拢进来，事实上 Russ 一直都认为他能在博士毕业以后直接加入 Go 团队是发生在他人生中最幸运的事之一，他说仿佛自己过去十年所学的一切东西就是为了这一刻而准备的。&lt;/p&gt; 
&lt;p&gt;他加入团队之后就接手了编译器和 Runtime 这两大核心模块，并协助一起开发了标准库，之后依靠这些先前的经验，他和其他人一起完成了标准库后续的所有重构和优化，这就是为什么当你去看 Go 语言的源码的时候会发现 Russ 的名字几乎无处不在，到处都是他的 commits。&lt;/p&gt; 
&lt;p&gt;在整个 Go 代码仓库中，Russ Cox 提交的代码量是最多的。（请注意，下图中的人物都是大佬，三代领导人都在里面，包括两巨头和 Ian）&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;470&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6535db3f202eb59da551a8a09ec85f763cc.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;考虑到 Russ Cox 在 Go 项目中的资历和地位以及大学的经历，他可能在某些方面扮演了 Austin Clements 的导师角色,但这只是推测。我同样推测 Russ Cox 和 Rob Pike 之间也有类似的师承关系。只不过国外可能没有咱们中国这种拜师的礼仪，没有磕头敬过酒。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;从 Russ Cox 的信中，可以看到实际他领导 Go 项目已经 12 年，从曾经充满理想、热情澎湃的有志青年，已经进入到经历沧桑的中年，他也在思考自己的职业规划。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;尤其最近几位知名 Gopher 大佬对他的批评，不知道是否导致他引退的导火索呢？或许大佬内心受伤了，心灰意冷了。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;作为一个绝顶聪明，学历和资历都是金字塔的技术大牛，正处于正当打的年纪，你猜 Ross Cox 下一步会做些什么？&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;当然是结合当前炙热的 AI 技术，再结合 Go 的经验，做一点有意义的事情，说不定又会发展为一个明星的项目。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;这个项目叫 Oscar （奥斯卡），一个开源的贡献者 Agent 架构。事实上前几天 Russ Cox 已经透露了它的第一个原型：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgabyhelp&quot; target=&quot;_blank&quot;&gt;gabyhelp&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;Oscar 旨在通过创建用于开源维护的&amp;nbsp;&lt;code&gt;自动化帮助&lt;/code&gt;&amp;nbsp;或&amp;nbsp;&lt;code&gt;Agent&lt;/code&gt;&amp;nbsp;来改进开源软件开发。我们相信有很多机会可以减少维护大型和小型开源项目所涉及的辛苦。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;这句话已经完全说明这个项目的远景了。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;大型语言模型 (LLMs) 能够对自然语言 (如问题报告或维护者指令) 进行语义分析,并在自然语言指令和程序代码之间进行转换,这为代理与人更顺畅地交互创造了新的机会。LLMs 可能最终只是整个图景中小小的 (但关键的!) 一部分; Agent 的大部分行为将是执行标准的、确定性的代码。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;Oscar 与许多以开发为中心的 LLMs 使用方式不同,它完全不试图增强或取代编码过程。毕竟,编写代码是开发软件中最有趣的部分。相反,这个想法是专注于那些不那么有趣的部分,比如处理新提交的问题、将问题与现有文档匹配等。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;奥斯卡在很大程度上是一个实验。其实 Russ Cox 目前也还不知道它最终会去哪里。即便如此，他们的第一个原型，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgabyhelp&quot; target=&quot;_blank&quot;&gt;即 @gabyhelp&lt;/a&gt;&amp;nbsp;机器人，已经在&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fissues%3Fq%3Dlabel%253Agabywins&quot; target=&quot;_blank&quot;&gt;Go 问题跟踪器中进行了许多成功的交互&lt;/a&gt;。这也许是让 Russ Cox 兴奋准备大干一场的动力吧。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;目前，Oscar 是在 Go 项目的主持下开发的。在未来的某个时候，它可能会（也可能不会）被分拆成一个单独的项目。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;Oscar 项目的具体目标是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;减少维护人员解决问题的工作量 [请注意，解决并不总是意味着修复]&lt;/li&gt; 
 &lt;li&gt;减少维护人员解决更改列表 （CL） 或拉取请求 （PR） 的工作量 [请注意，解决并不总是意味着提交/合并]&lt;/li&gt; 
 &lt;li&gt;减少维护者解决论坛问题的工作量&lt;/li&gt; 
 &lt;li&gt;让更多人成为高效的维护者&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;和 Copilot 等工具不同，自动化编码不是 Oscar 目标。相反，我们专注于&lt;strong&gt;自动化维护人员的工作&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;维护者的辛苦并不是 Go 项目所独有的，因此 Oscar 的目标是构建一个任何软件项目都可以重用和扩展的架构，构建他们自己的 Agent，根据项目的需求进行定制。因此 Oscar 是：&lt;em&gt;开源贡献者代理架构&lt;/em&gt;。等他们完成额差不多，国内的头部互联网也就会推出类似的产品了。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;到目前为止， Russ Cox 已经确定了三项能力，它们将成为奥斯卡的重要组成部分：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;在贡献者交互期间&lt;strong&gt;索引和显示相关的项目上下文&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;使用&lt;strong&gt;自然语言来控制确定性工具&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;分析问题报告和 CL/PR&lt;/strong&gt;，以帮助在提交期间或提交后不久实时改进它们，并适当地标记和路由它们&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;具体的方法 Russ Cox 也在下面这篇文档中描述清楚了，大家可以进一步的了解。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.googlesource.com%2Foscar%2F%2B%2Frefs%2Fheads%2Fmaster%2FREADME.md&quot; target=&quot;_blank&quot;&gt;Oscar，一个开源的贡献者代理架构&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;参考资料：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FYF6WGHpY3LYOamG6KmasFg&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/YF6WGHpY3LYOamG6KmasFg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgolang.design%2Fhistory%2Fcn.html&quot; target=&quot;_blank&quot;&gt;https://golang.design/history/cn.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstrikefreedom.top%2Farchives%2Fmy-trip-to-san-diego-for-go-contributor-summit-2023&quot; target=&quot;_blank&quot;&gt;https://strikefreedom.top/archives/my-trip-to-san-diego-for-go-contributor-summit-2023&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgroups.google.com%2Fg%2Fgolang-dev%2Fc%2F0OqBkS2RzWw&quot; target=&quot;_blank&quot;&gt;https://groups.google.com/g/golang-dev/c/0OqBkS2RzWw&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.googlesource.com%2Foscar%2F%2B%2Frefs%2Fheads%2Fmaster%2FREADME.md&quot; target=&quot;_blank&quot;&gt;https://go.googlesource.com/oscar/+/refs/heads/master/README.md&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;稿源：&lt;/strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcolobu.com%2F2024%2F08%2F02%2FRuss-Cox-and-his-Oscar%2F&quot; target=&quot;_blank&quot;&gt;https://colobu.com/2024/08/02/Russ-Cox-and-his-Oscar/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305790</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305790</guid>
            <pubDate>Wed, 07 Aug 2024 06:01:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>智谱开源清影模型 CogVideoX</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;7 月 26 日，智谱发布 AI 生视频「清影」并上线智谱清言 APP，30 秒将任意文图生成视频。现在，智谱宣布正式开源清影模型 CogVideoX。&lt;/p&gt; 
&lt;p&gt;CogVideoX 开源模型包含多个不同尺寸大小的模型，此次开源的是 CogVideoX-2B，它在 FP-16 精度下的推理仅需 18GB 显存，微调则只需要 40GB 显存，这意味着单张 4090 显卡即可进行推理，而单张 A6000 显卡即可完成微调。&lt;/p&gt; 
&lt;p&gt;CogVideoX-2B 的提示词上限为 226 个 token，视频长度为 6 秒，帧率为 8 帧/秒，视频分辨率为 720*480。「我们为视频质量的提升预留了广阔的空间，期待开发者们在提示词优化、视频长度、帧率、分辨率、场景微调以及围绕视频的各类功能开发上贡献开源力量。」&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#4b4b4b&quot;&gt;模型下载：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FTHUDM%2FCogVideoX-2b&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/THUDM/CogVideoX-2b&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;286&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9f900b7b09bc3fd126f771a988c97fef0e8.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;性能&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;为了评估文本到视频生成的质量，智谱方面使用了 VBench 中的多个指标，如人类动作、场景、动态程度等。还使用了两个额外的视频评估工具：Devil 中的 Dynamic Quality 和 Chrono-Magic 中的 GPT4o-MT Score，这些工具专注于视频的动态特性。如下表所示：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;287&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-eabf12acd83e7b7e61df1053b07840a549d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305771</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305771</guid>
            <pubDate>Wed, 07 Aug 2024 03:44:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>原生的来了！OpenAI 在 API 中引入 JSON 结构化输出功能</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 在其 API 中引入了结构化输出功能，这意味着模型的输出可以可靠地遵循开发人员提供的 JSON 模式。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;948&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0807/110803_5yYf_3820517.png&quot; width=&quot;1522&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;span style=&quot;color:#999999&quot;&gt;对复杂 JSON 模式进行评估时，具有结构化输出的新模型 gpt-4o-2024-08-06 得分为 100%。相比之下，gpt-4-0613 得分不到 40%。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;这一功能包括两种形式：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;函数调用：&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;通过在函数定义中设置 &lt;/span&gt;&lt;code&gt;strict: true&lt;/code&gt;可以使用工具的结构化输出。此功能适用于支持工具的所有型号大模型，包括所有型号 gpt-4-0613 和 gpt-3.5-turbo-0613 及更高版本。启用结构化输出后，模型输出将与提供的工具定义匹配。&lt;/li&gt; 
 &lt;li&gt;&amp;nbsp;&lt;code&gt;response_format&lt;/code&gt;参数新选项：&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;开发人员现在可以使用新参数 JSON 模式&lt;/span&gt;&lt;code&gt;json_schema&lt;/code&gt;&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;。此功能适用于最新的 GPT-4o 模型：&lt;/span&gt;&lt;code&gt;gpt-4o-2024-08-06&lt;/code&gt;&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;、&lt;/span&gt;&lt;code&gt;gpt-4o-mini-2024-07-18&lt;/code&gt;&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;。当&lt;/span&gt;&lt;code&gt;response_format&lt;/code&gt;&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;设定&lt;/span&gt;&lt;code&gt;strict: true&lt;/code&gt;&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;，模型输出将与提供的模式匹配。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;函数调用通过在函数定义中设置结构化输出，使模型输出与提供的工具定义相匹配，适用于所有支持工具的模型。参数&amp;nbsp;&lt;code&gt;response_format&lt;/code&gt;&amp;nbsp;允许开发人员通过提供 JSON 模式来约束模型的响应格式，适用于最新的 GPT-4o 模型。此外，新的结构化输出功能遵循 OpenAI 的安全政策，允许模型拒绝不安全的请求，并通过新的字符串值&amp;nbsp;&lt;code&gt;refusal&lt;/code&gt;&amp;nbsp;在 API 响应中允许开发人员以编程方式检测模型的拒绝。&lt;/p&gt; 
&lt;p&gt;同时 OpenAI 还提供了原生 SDK 支持结构化输出，包括 Python 和 Node SDK，简化了开发过程。结构化输出还支持从非结构化数据中提取结构化数据，如会议记录中的待办事项和截止日期。为了实现这一功能，OpenAI 采用了基于上下文无关语法 (CFG) 的受限解码方法，而不是传统的有限状态机 (FSM) 或正则表达式，以处理更复杂的嵌套或递归数据结构。具体原理可以查看官方博客深入了解：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fintroducing-structured-outputs-in-the-api%2F&quot; target=&quot;_blank&quot;&gt;https://openai.com/index/introducing-structured-outputs-in-the-api&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;结构化输出目前已在 API 中正式推出，支持所有支持函数调用的模型，包括 GPT-4o 和 GPT-4o-mini 系列，以及之后的所有模型。此功能还与视觉输入兼容，并且可以在&amp;nbsp;chat.completion&amp;nbsp;&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;API、助手 API 和批处理 API 上使用。结构化输出的引入有助于开发人员构建更可靠的 AI 应用程序，并且可以节省输入输出费用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;简单看一下示例：&lt;/p&gt; 
&lt;p&gt;1、Function Calling:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;POST /v1/chat/completions
{
  &quot;model&quot;: &quot;gpt-4o-2024-08-06&quot;,
  &quot;messages&quot;: [
    {
      &quot;role&quot;: &quot;system&quot;,
      &quot;content&quot;: &quot;You are a helpful assistant. The current date is August 6, 2024. You help users query for the data they are looking for by calling the query function.&quot;
    },
    {
      &quot;role&quot;: &quot;user&quot;,
      &quot;content&quot;: &quot;look up all my orders in may of last year that were fulfilled but not delivered on time&quot;
    }
  ],
  &quot;tools&quot;: [
    {
      &quot;type&quot;: &quot;function&quot;,
      &quot;function&quot;: {
        &quot;name&quot;: &quot;query&quot;,
        &quot;description&quot;: &quot;Execute a query.&quot;,
        &quot;strict&quot;: true,
        &quot;parameters&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;table_name&quot;: {
              &quot;type&quot;: &quot;string&quot;,
              &quot;enum&quot;: [&quot;orders&quot;]
            },
            &quot;columns&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;string&quot;,
                &quot;enum&quot;: [
                  &quot;id&quot;,
                  &quot;status&quot;,
                  &quot;expected_delivery_date&quot;,
                  &quot;delivered_at&quot;,
                  &quot;shipped_at&quot;,
                  &quot;ordered_at&quot;,
                  &quot;canceled_at&quot;
                ]
              }
            },
            &quot;conditions&quot;: {
              &quot;type&quot;: &quot;array&quot;,
              &quot;items&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                  &quot;column&quot;: {
                    &quot;type&quot;: &quot;string&quot;
                  },
                  &quot;operator&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;enum&quot;: [&quot;=&quot;, &quot;&amp;gt;&quot;, &quot;&amp;lt;&quot;, &quot;&amp;gt;=&quot;, &quot;&amp;lt;=&quot;, &quot;!=&quot;]
                  },
                  &quot;value&quot;: {
                    &quot;anyOf&quot;: [
                      {
                        &quot;type&quot;: &quot;string&quot;
                      },
                      {
                        &quot;type&quot;: &quot;number&quot;
                      },
                      {
                        &quot;type&quot;: &quot;object&quot;,
                        &quot;properties&quot;: {
                          &quot;column_name&quot;: {
                            &quot;type&quot;: &quot;string&quot;
                          }
                        },
                        &quot;required&quot;: [&quot;column_name&quot;],
                        &quot;additionalProperties&quot;: false
                      }
                    ]
                  }
                },
                &quot;required&quot;: [&quot;column&quot;, &quot;operator&quot;, &quot;value&quot;],
                &quot;additionalProperties&quot;: false
              }
            },
            &quot;order_by&quot;: {
              &quot;type&quot;: &quot;string&quot;,
              &quot;enum&quot;: [&quot;asc&quot;, &quot;desc&quot;]
            }
          },
          &quot;required&quot;: [&quot;table_name&quot;, &quot;columns&quot;, &quot;conditions&quot;, &quot;order_by&quot;],
          &quot;additionalProperties&quot;: false
        }
      }
    }
  ]
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;格式化输出：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
  &quot;table_name&quot;: &quot;orders&quot;,
  &quot;columns&quot;: [&quot;id&quot;, &quot;status&quot;, &quot;expected_delivery_date&quot;, &quot;delivered_at&quot;],
  &quot;conditions&quot;: [
    {
      &quot;column&quot;: &quot;status&quot;,
      &quot;operator&quot;: &quot;=&quot;,
      &quot;value&quot;: &quot;fulfilled&quot;
    },
    {
      &quot;column&quot;: &quot;ordered_at&quot;,
      &quot;operator&quot;: &quot;&amp;gt;=&quot;,
      &quot;value&quot;: &quot;2023-05-01&quot;
    },
    {
      &quot;column&quot;: &quot;ordered_at&quot;,
      &quot;operator&quot;: &quot;&amp;lt;&quot;,
      &quot;value&quot;: &quot;2023-06-01&quot;
    },
    {
      &quot;column&quot;: &quot;delivered_at&quot;,
      &quot;operator&quot;: &quot;&amp;gt;&quot;,
      &quot;value&quot;: {
        &quot;column_name&quot;: &quot;expected_delivery_date&quot;
      }
    }
  ],
  &quot;order_by&quot;: &quot;asc&quot;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;2、&lt;code&gt;response_format&lt;/code&gt;参数方式：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;POST /v1/chat/completions
{
  &quot;model&quot;: &quot;gpt-4o-2024-08-06&quot;,
  &quot;messages&quot;: [
    {
      &quot;role&quot;: &quot;system&quot;,
      &quot;content&quot;: &quot;You are a helpful math tutor.&quot;
    },
    {
      &quot;role&quot;: &quot;user&quot;,
      &quot;content&quot;: &quot;solve 8x + 31 = 2&quot;
    }
  ],
  &quot;response_format&quot;: {
    &quot;type&quot;: &quot;json_schema&quot;,
    &quot;json_schema&quot;: {
      &quot;name&quot;: &quot;math_response&quot;,
      &quot;strict&quot;: true,
      &quot;schema&quot;: {
        &quot;type&quot;: &quot;object&quot;,
        &quot;properties&quot;: {
          &quot;steps&quot;: {
            &quot;type&quot;: &quot;array&quot;,
            &quot;items&quot;: {
              &quot;type&quot;: &quot;object&quot;,
              &quot;properties&quot;: {
                &quot;explanation&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;output&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                }
              },
              &quot;required&quot;: [&quot;explanation&quot;, &quot;output&quot;],
              &quot;additionalProperties&quot;: false
            }
          },
          &quot;final_answer&quot;: {
            &quot;type&quot;: &quot;string&quot;
          }
        },
        &quot;required&quot;: [&quot;steps&quot;, &quot;final_answer&quot;],
        &quot;additionalProperties&quot;: false
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;格式化输出：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
  &quot;steps&quot;: [
    {
      &quot;explanation&quot;: &quot;Subtract 31 from both sides to isolate the term with x.&quot;,
      &quot;output&quot;: &quot;8x + 31 - 31 = 2 - 31&quot;
    },
    {
      &quot;explanation&quot;: &quot;This simplifies to 8x = -29.&quot;,
      &quot;output&quot;: &quot;8x = -29&quot;
    },
    {
      &quot;explanation&quot;: &quot;Divide both sides by 8 to solve for x.&quot;,
      &quot;output&quot;: &quot;x = -29 / 8&quot;
    }
  ],
  &quot;final_answer&quot;: &quot;x = -29 / 8&quot;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;最后再来看一下当前世面上的一些格式化输出框架：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.boundaryml.com%2Fblog%2Fstructured-output-from-llms&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;1658&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0807/111700_cDpY_3820517.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305764/structured-outputs-in-the-api-openai</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305764/structured-outputs-in-the-api-openai</guid>
            <pubDate>Wed, 07 Aug 2024 03:17:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>李开复旗下 AI 公司「零一万物」完成数亿美元融资</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2894555774769792&quot; target=&quot;_blank&quot;&gt;根据 36 氪的独家报道&lt;/a&gt;，，李开复创办的 AI 大模型独角兽公司「零一万物」已经完成新一轮融资，金额达数亿美元。&lt;/p&gt; 
&lt;p&gt;知情人士表示，此轮融资参与方包括某国际战投、东南亚财团等多家机构。&lt;/p&gt; 
&lt;p&gt;「零一万物」成立于 2023 年 5 月，由创新工场董事长、前微软全球副总裁李开复创立。核心团队成员来自谷歌、微软、IBM、百度等公司。消息称近期来自谷歌、微软等多位负责技术、产品管线的 AI 高阶人才，已经加盟了零一万物。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0807/101632_4OWZ_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;如今的「大模型六小虎」（智谱 AI、零一万物、百川智能、MiniMax、月之暗面、阶跃星辰），正以惊人的速度，跨过 200 亿元的估值大关。&lt;/p&gt; 
&lt;p&gt;2024 年 8 月 5 日，据彭博社报道，月之暗面刚交割一轮超过 3 亿美元的融资，投后估值高达 33 亿美元。&lt;/p&gt; 
&lt;p&gt;前不久，王小川创立的百川智能，正在以 200 亿元的估值，寻求 B 轮融资。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸阅读&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/304037&quot; target=&quot;news&quot;&gt;百川智能完成 50 亿元融资，国内第三家估值 200 亿元大模型独角兽&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/293421&quot; target=&quot;news&quot;&gt;月之暗面新一轮估值达 30 亿美金，继阿里后腾讯也入局&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305750</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305750</guid>
            <pubDate>Wed, 07 Aug 2024 02:14:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Windows 11 市场份额首次突破三成</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;随着 Windows 10 即将于 2025 年 10 月&lt;a href=&quot;https://www.oschina.net/news/269897&quot; target=&quot;_blank&quot;&gt;终止支持&lt;/a&gt;，越来越多的用户开始转向 Windows 11。2024 年 7 月，Windows 11 达到了一个重要里程碑：自 2021 年 10 月发布以来，其市场份额首次突破了三成。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgs.statcounter.com%2Fos-version-market-share%2Fwindows%2Fdesktop%2Fworldwide&quot; target=&quot;_blank&quot;&gt;根据 Statcounter 的统计&lt;/a&gt;，2024 年 7 月的 Windows 桌面操作系统中，&lt;strong&gt;Windows 11 的比例达到了 30.82%&lt;/strong&gt;，一个月内增长了 1.08%，比去年 7 月增长 7.17%。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0807/095528_ekt6_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Windows 10 的份额仍然稳居第一占 65%，较上个月下降 1.06%，比去年同期下降 11.15%。&lt;/p&gt; 
&lt;p&gt;在其它停止支持的 Windows 版本中，Win7 3.04%，Win8.1 0.42%，WinXP 0.38%，Win8 0.24%。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸阅读&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/290852/windows-10-reaches-70-market-share-as-windows-11-keeps-declining&quot; target=&quot;_blank&quot;&gt;Windows 10 市场份额达 70%，Windows 11 持续下滑&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305746/windows-11-crosses-30-market-share-for-the-first-time</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305746/windows-11-crosses-30-market-share-for-the-first-time</guid>
            <pubDate>Wed, 07 Aug 2024 02:00:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | 英伟达 Cosmos 数据全靠偷；OpenAI 内忧外患；Groq 估值翻倍；大模型安全问题得靠大模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.6&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/305626/openai-john-schulman-anthropic&quot; target=&quot;_blank&quot;&gt;OpenAI 又一联合创始人转投 Anthropic，Brockman 休长假&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;OpenAI 联合创始人之一 John Schulman 已离开该公司，跳槽到由前 OpenAI 研究人员成立的的竞争对手公司 Anthropic。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;此外，OpenAI 证实，该公司联合创始人之一兼总裁 Greg Brockman 在公司工作了九年后，将延长休假至今年年底，以 「放松和充电」。去年加入该公司的产品负责人 Peter Deng 也已离职。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;299&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bee73f8b3b89031d89773f6e031b3e615b4.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h3 style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305572/elon-musk-revives-lawsuit-openai-sam-altman&quot; target=&quot;_blank&quot;&gt;马斯克重启对 OpenAI 及 Sam Altman 的诉讼&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 6 月份因不明原因撤回诉讼后，马斯克再次对 OpenAI 及其首席执行官 Sam Altman 提起了新的诉讼，声称 OpenAI 将利润和商业利益置于公众利益之上，还违背了免费共享或开源公司技术的承诺，选择向微软提供技术的独家许可。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;马斯克主张的核心在于，他认为自己被 Altman 和现任 OpenAI 总裁 Greg Brockman 「引诱和欺骗」，以非营利组织为由共同创立了该 AI 公司。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;诉讼称，在马斯克加入并投资数百万美元后 「被 Altman 及其同伙背叛」，因为他们与微软一起 「建立了一个不透明的营利性 OpenAI 附属网络，从事猖獗的自私交易...... 这种背信弃义和欺骗达到了莎士比亚笔下的程度。」&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn811518044%3FserialId%3Da174a21c2a28646369e226788b5412ac&quot; target=&quot;_blank&quot;&gt;英伟达神秘视频基础模型「Cosmos」曝光，数据全靠偷&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;为了这个视频模型，英伟达每天正在疯狂地爬取相当于 80 年时长的视频数据。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;今天，一则关于英伟达要下场做视频模型的消息引爆了 Reddit。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;消息源出自外媒 404 Media，据它获得的 Slack 聊天（英伟达的内部聊天平台）、电子邮件和文件显示，英伟达正在从 Youtube 和其他几个来源抓取视频，收集用于其 AI 产品的训练数据。&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;img height=&quot;178&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cd9cf66b95c663a19b79feab5fd7b97fefe.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305553&quot; target=&quot;_blank&quot;&gt;deepinV23 适配 Intel Ultra&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;deepin V23 Release 版本将于 8 月 15 日正式上线，新版本将支持 Intel 最新的 Ultra 平台，这使得 deepin V23 有望成为当前市场最适合 AIPC 的操作系统之一。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;deepin V23 与 Intel Ultra 的成功适配，不仅提升了系统的整体性能，还带来了丰富的 AI 应用场景。通过 CPU、NPU、GPU 的协同运算，deepin V23 能够胜任各种实用性的 AI 应用，特别是本地推理能力。GPU 的高吞吐和图形处理能力、NPU 的低功耗专用 AI 算法能力以及 CPU 的低延迟逻辑运算能力，共同构成了 deepin V23 强大的 AI 计算能力。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305584/jquery-ui-1-14-0-released&quot; target=&quot;_blank&quot;&gt;jQuery UI 1.14.0 稳定版发布&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;jQuery UI 1.14 最终放弃了对所有版本的 Internet Explorer 和 Edge Legacy 的支持。仅正式支持最新版本的 Chrome、Firefox、Safari 和 Edge，且支持不受支持的浏览器的代码已被删除。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;已不再支持 jQuery 1.7-1.11、2.0-2.1 和 3.0-3.5。此版本已针对 jQuery 1.12.4、2.2.4、3.6.4 和 3.7.1 进行了测试。由于 jQuery 遵循 semver，因此每个主要版本行中的较新 jQuery &amp;lt;4 版本通常也可以正常工作。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;jQuery UI 1.14 在针对 jQuery 3.7.1 和 jQuery Migrate 3.5.2（即此发布时的最新版本）运行其测试套件时不会触发 jQuery Migrate 警告。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;strong&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6013229652%2FOqV8i6UZE%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;英特尔前员工：美国制造衰落是体制原因，回不去了，英特尔也会完犊子&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Intel 逐渐崩盘的开始点在于 10nm 的难产，从那以后就没有再好过，只有一蟹不如一蟹。病发于工厂 (Fab)，根子则是美国制造不行了。一个前美国同事告诉我，美国人丢失了「CAN DO」的精神，只能做高端的设计、娱乐、金融这种营生，苦哈哈的制造不愿意干了，逼着干也干不了。&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;前 HR 本人&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5648162302%2FOqZT2fXq6%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;Flux &lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;的架构图，值得收藏&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Flux 是由 Stability AI 原来 Stable diffusion 的创始成员离职后打造的，其生成图像的质量与 midjourney 不相上下，甚至更好！且有 2 个模型是开源的！&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong style=&quot;color:#333333&quot;&gt;黄建同学&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F7886398516%2FOqSIP95Ge%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;推荐三个安卓用户必备的软件商店&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Aurora Store 不需要谷歌服务的谷歌商店，特别推荐给华为的用户&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Droid-ify 能下所有免费开源的软件&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Optainium 这个厉害了，支持添加 TG、GitHub 等来源下载更新软件&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong style=&quot;color:#333333&quot;&gt;酱紫表&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5638232153%2FOqX9k5qF2%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;啥？AI 已经可以自己组网不带人类玩了？&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;通过提出类似互联网的框架，IoA（Internet of Agents）解决了现有多代理系统在集成多样化第三方代理和模拟分布式环境方面的挑战，实现了 LLM（大型语言模型）的灵活和可扩展的多代理协作平台。&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;微博&amp;nbsp;&lt;strong&gt;Simon 的白日梦&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2210485915%2FOqUHY5Fiz%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;Base 协议的编辑风格指南全面开源&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Base 协议的核心负责人 Jesse Pollak 在 X 平台上正式宣布，该协议已将其编辑风格指南（Editorial Style Guide）全面开源。这一举措意味着，任何在 Base 平台上进行开发的开发者都可以参考这份香港风格的指南，并鼓励大家提供宝贵的反馈意见，以便不断优化和完善。Jesse Pollak 强调，通过以通俗易懂的方式阐述链上经济，Base 旨在降低参与门槛，让更多人能够轻松理解、参与、再分享并共同推动这一领域的扩展。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong style=&quot;color:#333333&quot;&gt;加密货币达人&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cls.cn%2Fdetail%2F1754989&quot; target=&quot;_blank&quot;&gt;还记得「比英伟达 GPU 快 10 倍」的芯片吗？这家公司的估值翻倍了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;美国人工智能（AI）芯片初创公司 Groq 在最新的一轮融资中筹集了 6.4 亿美元，公司估值也达到了 28 亿美元，是其 2021 年上一次融资时 11 亿美元的两倍多。另外，Meta 首席 AI 科学家、图灵奖得主 Yann LeCun 将成为 Groq 的技术顾问；前惠普和英特尔高管 Stuart Pann 也将加入 Groq，担任首席运营官。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;财联社&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_7502149876_1bf29b8f4001019wy8.html&quot; target=&quot;_blank&quot;&gt;从石油到 AI：中东经济转型的雄心&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;在全球能源转型的宏观背景下，中东各国，正在经历一场改头换面的经济变革。在过去，石油为这片地域带来丰裕富饶，也带来诸多产业停滞不前的资源诅咒。近几十年，中东地区餍足于石油租金，缠斗于地缘纷争，错失了工业化转型与经济全球化浪潮的发展红利。而 5G+AI，正在引领新一轮的全球化数智变革，这一次，中东诸国机不容失。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;霞光社&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.10jqka.com.cn%2Fpid_375077658.shtml&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;中国 AI 长卷（三）：算法生根&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#303030&quot;&gt;回顾深度学习的十多年历程，或许某一种具体的算法会被更新更好的算法所取代，但这个雨打风吹、反复更替的过程，也让中国 AI 在时光中变得愈发坚韧，积蓄了经验、汇聚了人才、释放了信心。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#303030&quot;&gt;只要根深蒂固，任尔东西南北风，中国 AI 都能在每一次技术趋势中，生长出新的枝丫，结出产业期待的果实。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;脑极体&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn811368426%3FserialId%3D28c08c0002edeecdd6377c3c08101e60&quot; target=&quot;_blank&quot;&gt;GDP 冲击 3 万亿！武汉软件产业驶入快车道&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#262626&quot;&gt;当前，具有高成长性、高附加值、高带动性等特点的软件产业成为武汉市 GDP 从两万亿元跃升至三万亿元的重要抓手。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;21 财闻汇&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn811555662%3FserialId%3Dc9752f8896aca1629881805d7d772568&quot; target=&quot;_blank&quot;&gt;人工智能成本在下降，但仍无法解决根本问题&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;尽管人工智能（AI）承诺帮助企业削减成本，但其自身的高昂成本却一直是一个大问题。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于一项承诺能帮助企业削减成本的技术来说，人工智能本身的成本一直是个大问题。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;金融界&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Froll%2F2024-08-06%2Fdoc-inchsmtk0186037.shtml&quot; target=&quot;_blank&quot;&gt;对话 360 周鸿祎：魔法对付魔法，大模型安全问题得靠大模型&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;他指出，得用魔法对付魔法，用大模型来解决大模型的安全问题，这是「AI+安全」的出发点。当下，360 正积极布局安全大模型与「搜索+大模型」两条业务主线，为中小企业以及个人用户提供免费服务，建设免费的安全大模型。周鸿祎在接受采访时表示，360 并不打算直接卷入超级大模型的激烈竞争，而选择专注于安全大模型的研发与应用。360 将通过与国内 15 家顶尖大模型公司合作，开放自身场景，推动大模型的普及与应用。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;网易新闻&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn811550614%3FserialId%3D66f964feea25e0979a9b17cc4256fd06&quot; target=&quot;_blank&quot;&gt;京深软件名城产业对话将启，合作洽谈共促新质生产力&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;8 月 13 日，2024 年深圳软件和人工智能新质生产力高质量发展大会暨京深产业合作洽谈会将在北京举行。该活动由深圳市工业和信息化局主办，深圳市投资促进局联合主办，福田、罗湖、南山、宝安、龙岗、龙华、光明、大鹏新区等区软件产业主管部门、深圳湾科技发展有限公司协办，深圳市软件行业协会承办，是深圳 2024 年软件和人工智能产业首场市区联合举办的高规格专项交流合作活动。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;21 世纪经济报道&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1806563645224363078&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;看不见的大模型，看得见的生产力&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;在大模型领域，智源是全球唯一没有背靠大厂的非企业研究机构，也是国内最早系统布局大模型技术研发、开源生态建设、人才培养和企业培育的新型研究机构。「过去每次科技平权都能催生重大产业机会」，既有企业从业经验又有研究机构背景的新任智源院长王仲远，对科技赋能产业的体会更深。国家对人工智能的定义也更加具体：人工智能是发展新质生产力的重要引擎。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;北京商报&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fclickvisual%2Fclickvisual&quot; target=&quot;_blank&quot;&gt;clickvisual/clickvisual&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img height=&quot;256&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c9091357e7aae010b000ea386d488bd5c25.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fclickvisual%2Fclickvisual&quot; target=&quot;_blank&quot;&gt;https://github.com/clickvisual/clickvisual&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;ClickVisual 是一个轻量级的基于浏览器的日志分析和查询平台，底层数据存储采用 ClickHouse。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4939618/blog/15169406&quot; target=&quot;_blank&quot;&gt;读友好的缓存淘汰算法&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span&gt;广告检索系统的性能长尾影响 KPI，间接影响收入，极致优化成本和性能一直是检索端工程团队的重要工作。随着基于 SSD 分级存储在商业场景规模应用，在部分访盘量高的场景，为控制性能长尾退化，我们尝试引入缓存对标系统 PageCache 来解决。在引入过程，我们对业界经典的缓存算法，进行了针对性测评，将测评效果与大家分享，诚邀对存储和缓存技术有兴趣的伙伴们一起探讨。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;图片&quot; height=&quot;183&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-12fcd310c5f9456d5ec27ae628124b5f3a5.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fw1tM2b28335HuRRNwxgPnQ&quot; target=&quot;_blank&quot;&gt;美国国防部建议将 C 代码转换为 Rust&lt;span&gt;——&lt;/span&gt;而且是用 AI&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：以我带的学生用 gpt 写代码的经验来看，你们就用吧用吧&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：你恐怕不知道专门训练的编程大模型如何超越专家水平。&lt;/span&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：每天都在用 ChatGPT 4o 的告诉你，我经常问它 rust 的代码，贴过来连编译都通不过，啥都不知道最好别说话&lt;/span&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：鬼画符的语言，一个好的编程语言是面向人类的，不是面向计算机的！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：我感觉 Rust 还是挺简单的，设计的非常合理，比如：理解了 Trait，几乎就理解了一切，不得不说，这就是人与人之间的差距，Rust 就是能拉开差距的语言。没有 GC 又内存安全，又并发安全，Rust 是唯一了。那些有 GC 的语言，也没做到并发安全&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：语言神，启动！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：问题是人家用的 Ada 语言&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：DARPA 鼓吹 ada 多少年，也没有看到什么根本的好转，现在改鼓吹 RUST 了？总有一种国男足的气质，都是别人的错，虽然总是失败，但是论见识我天下第一。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：「用 AI 生成的 Rust 代码取代 C 代码」，很好的想法。我只有一个问题：代码谁来维护？出了问题谁来解决？AI 吗？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：都有 kpi 的，你以为他们是为了代码安全和提高效率，其实不过是为了给上级汇报时候 ppt 好看点&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：用 ai 把代码转成 rust，还不如直接让 ai 修正可能出 bug 的代码，除非说 C 或 C++无法通过某些限制写出不存在 bug 的代码。AI 都来了，还革新什么程序语言，直接让 AI 监控 bug，辅助编程，规避掉不规范，可能产生 bug 的写法不就行了。革新 AI，让 AI 对代码功能更完善，健全，甚至能对编译进行进一步针对性的优化不是一劳永逸？纠结更新，更现代的编程语言实在没什么意义。本来就是工具，与其创造个新工具，更好用的斧头，不如创造个可以用工具的工具，没准它还可以办到更多的事&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点:12：ai 不是数理逻辑很差吗？这重写能写出个什么屎山&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 13：我觉得我们国家也应该出台类似的政策。但是我觉得应该是人力转写而非 AI 转写。这样才能带来更多的 Rust 就业岗位。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 14：为了 rust 而 rust，没有更多产值，不会创造新内容。美国推 rust，咱们推咱们自己的就行。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305458&quot; target=&quot;_blank&quot;&gt;WPS 宣布推出基于 deepinV23 的个人版&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：支持 deepin 成为国内标准 Linux 桌面&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：今天刚把自己的小米笔记本拿出来看看装了好久没用的 deepin，本来想着看看有什么新玩意，更新一下 update，然后，然后，风扇狂转，然后，然后，电脑死机了，按开机键盘死活没反应。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：额，我笔记本是荣耀 AMD 的 14 寸本子，从 22 年用到现在挺好的，从 20.9 换到 V23 RC2，不过有两个问题，一个是合上盖子待机，电脑会变得巨烫，这个问题说是解决的，但是还是有点（虽然发热，不过待机时长又还行）。另一个问题是双屏办公的时候，桌面放的文件随着 HDMI 线的拔插，总是会被打乱，插上线它又还原成正常排序了······&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：你这个图标乱的问题是分辨率的问题一般插投影仪也会遇到&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：看过 WPS AI 展示， 5 秒生成大纲+PPT 也太屌了，没想到这么快进入 Linux&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：AI 功能，收费的吗&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305681</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305681</guid>
            <pubDate>Tue, 06 Aug 2024 10:07:05 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>倪光南院士将出席 2024 全球开源技术峰会</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style=&quot;text-align:left&quot;&gt;8 月 15 日至 16 日，GOTC 2024 将于上海张江科学会堂盛大开启。&lt;strong&gt;中国工程院院士倪光南将亲临大会，并发表主题演讲。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;GOTC 2024 与上海浦东软件园联合举办，结合了 「GOTC（全球开源技术峰会）」 与 「GOGC（全球开源极客嘉年华）」 两大活动品牌。大会由一个主论坛领航，两大高峰论坛以及六大专题论坛并行，全面深入探讨 AI、数据库、云原生等前沿技术领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;https://radio.seu.edu.cn/_upload/article/images/2c/d7/cee3fea94e2aa6799c55b7c204e1/a41667be-11de-43c5-9c13-72ab7f433954.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;倪光南院士是我国计算机领域的杰出代表，长期致力于计算机系统结构研究，为我国计算机事业作出了巨大贡献，&lt;span style=&quot;background-color:#ffffff; color:#444444&quot;&gt;1994 年被遴选为中国工程院首批院士，2015 年获得中国计算机学会终身成就奖。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;近年来，&lt;/span&gt;倪光南院士&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;致力于在中国推进开放源代码的 Linux 操作系统，以及基于国产 CPU 和 Linux 的网络计算机等有自主核心技术的产品。&lt;/span&gt;为推动我国开源事业的发展发挥了积极作用。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;他在开源技术领域具有很高的声誉，曾多次出席国内外重要开源会议。&lt;strong&gt;在去年的全球开源技术峰会上，&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;倪光南院士就曾指出&lt;/strong&gt;，开源对全球科技经济结构产生了重大影响，科技治理需要全球参与，中国需要贡献智慧，并呼吁我们国家大力支持开源发展，参与全球科技治理，建设全球科技共同体。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此次大会将集结全球范围内对开源技术充满热情的开发者、社区成员、创业者、企业领袖、媒体人，以及各开源项目应用场景的产业精英、跨界才俊与年轻力量。通过主题演讲、圆桌讨论、创新集市、人才集市、黑客松、技术展示和互动工作坊等形式，与会者将有机会交流实践经验、探索前沿技术，共同激发创新活力、展示开源魅力、促进跨领域合作。大会官网：&lt;/span&gt;&lt;a href=&quot;https://gotc.oschina.net/&quot;&gt;https://gotc.oschina.net/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;GOTC 2024 报名通道现已开启，诚邀全球开源技术爱好者齐聚上海，限时免费获取 499 元专业票，仅限 50 张：&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqaxb95n3g50.feishu.cn%2Fshare%2Fbase%2Fform%2FshrcntXjImLZ2L4HsDtd976XXmh&quot;&gt;https://qaxb95n3g50.feishu.cn/share/base/form/shrcntXjImLZ2L4HsDtd976XXmh&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;400&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2491601a489fe283473a2d4fd7f2e322e15.jpg&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3859945/blog/15174574</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/15174574</guid>
            <pubDate>Tue, 06 Aug 2024 09:41:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>读友好的缓存淘汰算法</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a4a134a2ce6c279520f2962510e4c3f6b1e.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;作者 | 小 y&lt;/p&gt; 
 &lt;p&gt;导读&lt;/p&gt; 
 &lt;p&gt;广告检索系统的性能长尾影响 KPI，间接影响收入，极致优化成本和性能一直是检索端工程团队的重要工作。随着基于 SSD 分级存储在商业场景规模应用，在部分访盘量高的场景，为控制性能长尾退化，我们尝试引入缓存对标系统 PageCache 来解决。在引入过程，我们对业界经典的缓存算法，进行了针对性测评，将测评效果与大家分享，诚邀对存储和缓存技术有兴趣的伙伴们一起探讨。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;全文 12113 字，预计阅读时间 31 分钟。&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;01 缓存的业务必要性&lt;/h1&gt; 
&lt;p&gt;缓存是一种系统优化的「万金油」，多被应用在数据密集场景中。当目标服务的访问性能远远差于缓存服务，且访问模式具有显著局部性时[1,2]，缓存则作为一种临时存储数据的手段，通过减轻访问目标服务的频率，显著提高了数据检索速度，从而加速了业务处理过程。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-12fcd310c5f9456d5ec27ae628124b5f3a5.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△Berkery Interactive Version of Jeff Dean Latency Number&lt;/p&gt; 
&lt;p&gt;在前一篇《极致优化 SSD 并行读调度》[3]，我们提到，广告检索服务因为严苛的 KPI，长期以来采用内存检索，业务发展需要更大存储空间，需求量远超过内存可承受。广告检索 KPI 直接关系收入，检索过程引入基于 NVMe SSD 的分级存储，长尾控制尤其关键。然而，业界常见访盘优化手段，都以优化吞吐为目标，未能控制读长尾。过去几年持续涌现面向长尾控制的新硬件，但新硬件的引入、适配、推广周期较长。业务需求无法等待，需要先把检索池的存量 NVMe 用起来。广告检索业务有如下特点：读多写少，读 SLA 十分敏感。结合广告检索业务随机读顺序写的访盘特点，我们系统性评测了检索池占比 90+% 的 NVMe 盘，得到每种盘的最佳读写负载理论配比。并以此为理论基础构建 SsdEngine。&lt;/p&gt; 
&lt;p&gt;为了规避系统缓存的干扰，我们采用 DIO 访盘，直接控制硬件访问，实现了长尾控制。叠加极致优化读调度，对於单 PV 访盘有限的场景，SsdEngine 基本打平了带系统缓存性能。但访盘较多的场景，单次长尾影响较大，SsdEngine 性能退化较可观，这时候就需要缓存技术，大幅降低访盘频率。&lt;/p&gt; 
&lt;h1&gt;02 缓存算法的本质是淘汰顺序&lt;/h1&gt; 
&lt;p&gt;缓存大小通常是有限的，为此，缓存应尽力保留未来访问概率最高的键，也就是淘汰未来不会访问或访问概率最低的键。可惜缓存无法预测未来，缓存通过定义淘汰顺序（或驱逐策略）来模拟/推理未来。比如假设通常访问模式不会突然发生很大变化，可能再次请求的键是最近经常请求的键，LRU 甚至把它简化为最近请求的键。&lt;/p&gt; 
&lt;h2&gt;2.1 LRU - 「最近最少使用」&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-d6c03b2bd0d86b13ba3021c6851ce38013a.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△LRU Cache 示意图&lt;/p&gt; 
&lt;p&gt;LRU 通过维护访问历史记录，淘汰最近最少使用的数据。LRU 的不足之处在于它无法很好地适应访问分布不均匀的情况。可能因为业务上突发的稀疏访问，导致频繁使用的数据误被提前淘汰。一般情况下，会通过增加 LRU 的容量，足以容忍一定程度的突发情况，来规避这类问题。&lt;/p&gt; 
&lt;p&gt;从淘汰顺序视角，LRU 的典型实现方式是采用 std::list﻿来维护数据的访问时间序。当调用﻿get(key)﻿方法时，如果该数据存在于缓存中，就将该数据移至最近使用的位置（move_to_head）。当调用﻿put(key, value)﻿方法时，如果该数据已存在于缓存中，就更新其值，并将数据移至最近使用的位置。如果数据不存在，就检查缓存是否已满。若缓存已满，则淘汰最近未使用的数据（最后一个元素），然后添加新数据，并将其置于最近使用的位置。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;get(int key) {
    // 找到 list 中的位置，如果不存在则返回
    auto list_it = ...cache_it-&amp;gt;second;
    // 数据存在，将其移到最前，并返回值
    list.splice(list.begin(), list, list_it); 
}

put(int key, int value) {
    // 找到 cache 中的位置
    if (cache_it != cache_map.end()) { // 数据已存在，更新值，并移到最前（同上）
        ... 
    } else {// 数据不存在，检查缓存是否已满
        if (_size &amp;gt;= _capacity) {
            // 缓存已满，淘汰最久未使用的数据
            list.pop_back();
        }

        // 添加新数据，并移到最前
        list.emplace_front(...);
        cache_map.put(key, list.begin());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;为了 LRU 能够工作，一般还会配备 std::unordered_map 来实现 O(1) 查找。在 list 中，每个元素是 value。unordered_map 用于存储每个 key 对应在 list 中的迭代器，从而实现在 O(1) 时间内查找和移动元素。&lt;/p&gt; 
&lt;p&gt;LRU 为了记录「最近」访问的淘汰顺序，需要不断的「move_to_head」。这给高性能实现带来挑战，操作链表中间元素，会显著提升无锁链表的实现复杂度。为此一般的 LRU 都是通过锁保护。&lt;/p&gt; 
&lt;h2&gt;2.2 LFU - 「最不经常使用」&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e3546b5b3e795012bdeaae8fe3d6bf58f31.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△LFU Cache 示意图&lt;/p&gt; 
&lt;p&gt;LFU 则根据数据被访问的频率，淘汰使用频率最低的数据，当记录全量数据时，相当于获得了「数据分布」。LFU 的不足之处，一方面是保存全量数据频率的高昂存储成本，另一方面是无法适应突发的数据访问模式变化，表现为：一个元素过去被频繁访问，但从某个时刻起已经不再被访问，却持续保留在缓存中，新晋热点无法胜出。一般情况下，会采用定期衰减的方法规避这个问题。&lt;/p&gt; 
&lt;p&gt;从淘汰顺序视角，LFU 需要维护的数据结构更复杂，兼顾了频率和时间序。数据结构包括数据频率和频率桶，频率桶代表一组相同访问频率的数据。当有新数据插入时，LFU 算法将新数据插入到频率为 1 的桶中。当缓存已满时，LFU 算法会淘汰访问频率最低的数据。每次数据被访问，就会更新其访问频率，并转到对应的频率桶。由于每次访问会换桶，换桶时候插头，淘汰时候除尾，所以整体是既考虑了频率顺序，也考虑了时间顺序。&lt;/p&gt; 
&lt;p&gt;典型的 LFU 实现，采用 std::map 组织频率桶，或者采用 std::priority_heap 组织数据。下面列的实现参考了 2010 年发表的 LFU 实现 [14]。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;get(int key) {
    // 找到 cache 中的位置，如果不存在则返回
    auto list_it = ...cache_it-&amp;gt;second;
    frenquency = list_it-&amp;gt;second;    
    frenquency_bucket = list_it-&amp;gt;parent;

    if (frenquency_bucket-&amp;gt;next-&amp;gt;freq == frenquency + 1) {// 下一个频率桶存在，则移动过去
       ...
    } else {// 否则构建下一个频率桶，再移动进去
       ...
    }
}

put(int key, int value) {
    // 找到 cache 中的位置
    if (cache_it != cache_map.end()) { // 数据已存在，更新值，并移到最前（同上）
        ...
    } else {
        // 数据不存在，检查缓存是否已满
        if (_size &amp;gt;= _capacity) {
            // 缓存已满，淘汰最久未使用的数据
            pop_back(head-&amp;gt;next);
        }
        // 如果没有频率为 1 的桶，则增加
        if (head-&amp;gt;next-&amp;gt;freq != 1) {
            ...
        }
        // 添加新数据，并将其置于频率为 1 的桶中
        push_front(head-&amp;gt;next, {value, 1});
        cache_map.put(key, head-&amp;gt;next-&amp;gt;begin());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;为了 LFU 能够工作，也会配备 std::unordered_map 来实现 O(1) 查找。在频率桶 list 中，每个元素是一个 std::pair，其中 first 存储 value，second 存储 frequency。unordered_map 用于存储每个 key 对应在 list 中的迭代器，从而实现在 O(1) 时间内查找和移动元素。&lt;/p&gt; 
&lt;p&gt;LFU 较 LRU 显然更复杂，对每个频率都独立维护了 List，List 还会操作中间节点，这对高性能实现带来更多挑战。它的理论优势是，在较大的、没有显著局部性的动态负载下，LRU 需要更多的空间来保持和 LFU 一样的缓存命中率。&lt;/p&gt; 
&lt;h2&gt;2.3 Redis LRU - 「近似」&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-dfdb0a4a9ee4dfd5d9631abf46f2d4325c8.jpg&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△Redis Approx LRU 近似效果评测&lt;/p&gt; 
&lt;p&gt;Redis 起初并没有引入缓存，当业务需要引入缓存时候，Redis 慎重考量了两点：(1）缓存数据结构，带来内存容量；(2）move_to_head 操作的复杂度，增加性能损耗。为此 Redis 采用了近似的算法[3]，具体来说，Redis 采用 bit field 的方式，从已有的对象 robj 腾挪出 24bit 空间，用于记录访问时间。当对象被访问时候，更新被访问对象的访问时间（robj.lru）。在需要淘汰对象的时候，&lt;strong&gt;采样若干个对象，淘汰其中空闲时间最久的&lt;/strong&gt;。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;typedef struct redisObject {
    unsigned type:4;
    unsigned encoding:4;
    unsigned lru:LRU_BITS; /* LRU time (relative to global lru_clock) or
                            * LFU data (least significant 8 bits frequency
                            * and most significant 16 bits access time). */
    int refcount;
    void *ptr;
} robj;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;当系统需要淘汰一个键时：准备一个容量为 M 的「死亡候选池」，候选池按空闲时间升序排列，也就是最右侧是需要被淘汰的。遍历每个 DB，对每个 DB 随机选择 N 个键，尝试按序加入「候选池」。当池子有空间时候，候选键直接加入，或者候选键大于池中键的空闲时间，才能被加入，并淘汰空闲时间最小的键。如果候选键不能被加入候选池，则说明这个候选键不被淘汰。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;freeMemoryIfNeeded:
    // 以下是淘汰一个 key 的算法
    // 候选池，池子按照空闲时间升序排列
    struct evictionPoolEntry *pool = ...
    // 遍历所有 db，构成全局的候选池
    for (i = 0; i &amp;lt; server.dbnum; i++) {
        // 加入 pool：1）池子有空间，2）空闲时间更久
        evictionPoolPopulate(i, ..., pool);
    }
    // 从后往前遍历，淘汰一个 key
    for (k = EVPOOL_SIZE-1; k &amp;gt;= 0; k--) {
    ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Redis LRU 算法，没有引入额外的链表，也不需要在访问过程加锁操作。通过随机选择 N 和候选池 M，兼顾全局视角和操作复杂度。实际上，Redis 不仅实现了近似的 LRU 算法，还用类似的方法实现了 LFU：（1）8 位记录频次 counter，16 位记录时间 timer，其中，timer 是为了周期性地衰减，感知业务访问模式变化；（2）淘汰时候，按频率的补，作为空闲时间排序。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;void updateLFU(robj *val) {
    // 周期性地衰减
    unsigned long counter = LFUDecrAndReturn(val);
    counter = LFULogIncr(counter);
    // 更新 timer 和 counter
    val-&amp;gt;lru = (LFUGetTimeInMinutes()&amp;lt;&amp;lt;8) | counter;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.4 操作系统 PageCache&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;操作系统缓存的页面淘汰策略核心是 Double Clock 算法&lt;/strong&gt;[5]。数据结构由两个列表构成，分别代表活跃列表和非活跃列表，活跃列表包含了最近经常使用的页面，非活跃列表包含了最近不使用页面。它们都采用 FIFO（先进先出）的形式。新页面（Freshly Faulted）添加到非活跃链表的头部，随着页面被回收，非活跃链表中间的元素逐渐向链表的尾部移动。如果页面在非活跃列表，又被访问过一次，该页面会被升级到活跃列表，并清空页面的访问标记。当活跃列表满了，需要从尾部淘汰到非活跃列表。也就是说，DoubleClock 并不是严格按照时间顺序来淘汰数据，而选择了是否访问过，从而降低了操作复杂度。具体来说是一组标记&amp;lt;is_active, is_referenced&amp;gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-272c5cb20b2e92bbcf09ee7738fab0164f7.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△Linux DoubleClock PageCache&lt;/p&gt; 
&lt;p&gt;显而易见，非活跃列表配额设置足够长，则给于充分时间积累访问。一个页面被首次访问时（Fresh Fault），加入到非活跃列表的尾部，如果非活跃列表的额度不足，在等到再次访问前，该页面会因为没有访问被回收掉（ReFault）。这种情况叫作抖动（thrashing）。&lt;/p&gt; 
&lt;p&gt;Linux3 时加入 Refault Distance 算法[11]，解决抖动问题。假设非活跃链表足够长，一个页面第二次访问（Refault）和首次访问（Fault）之间的页面数，叫作 Refault Distance。Refault Distance 可以被看成是一种衡量标准，把非活跃链表延长多少就可以避免抖动。如果它比总大小还长，那说明这个 Refault 是不可避免的，否则可以做策略。操作系统采用的策略是，把这个页面加入到活跃链表，避免后面持续 Fault。&lt;/p&gt; 
&lt;p&gt;当 Linux 引入 Refault 算法时候，有一句这样的评论：「How well all of this works is not yet clear」。这份工作理论上不错，但实际未经过充分数据论证。我们通过实际 benchmark，发现 SsdEngine PageCache 引入 Refault 算法并未带来实际提升。我们后续准备探索 mysql 已应用的 LIRS 算法。&lt;/p&gt; 
&lt;h1&gt;03 解决方案&lt;/h1&gt; 
&lt;p&gt;如在业务背景中所述，广告检索业务读 SLA 十分敏感，为此我们不在检索线程中规避竞争区。SsdEngine 在整体设计上，结合广告检索业务的特点，通过简化的 RCU 的方式实现面向读者友好的数据读写安全。在已有工作的基础上引入缓存，缓存的&lt;strong&gt;设计也要以面向读者友好作为第一原则&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4732db0468d4f738cc02a7c09d3fb1d5b09.jpg&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△SsdEngine 整体架构&lt;/p&gt; 
&lt;h2&gt;3.1&amp;nbsp; 分层缓存&lt;/h2&gt; 
&lt;p&gt;从缓存算法章节可见，缓存本质是淘汰顺序，必然涉及到数据结构的调整。然而现代 CPU 往往是多核的，每个核心都有自己的高速缓存（L1、L2、甚至 L3），线程同步带来损耗，无法发挥硬件优势，为此，&lt;strong&gt;我们整体架构上引入分层缓存&lt;/strong&gt;。大部分情况下，检索线程从 TLS 缓存中获取页面，极少情况下穿透到中心缓存区。TLS 和中心缓存的协作过程，概述是这样的：读盘时，优先读取 TLS 缓存。如果 TLS 缓存未命中，再去中心缓存获取，如果获取到页面，则把该页面计入 TLS，并返回取得页面。如果以上两级缓存都未命中，则发起读盘，并在 TLS 中记录本次读盘，我们把这一步叫做 Flying。最终，多个线程可能同步获取同一页框对应的页面，这些线程把获取到的页面更新 put 到中心缓存，并清空 Flying。中心缓存对同一页框收到若干页面，只记录 CAS 成功的一个，其他的页面被释放。随中心缓存淘汰算法运行，页面被清理时，也会对每个 TLS 缓存发起清空。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a0d7d8554d632b90facbc90ce5d13e6f531.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△缓存工作流程&lt;/p&gt; 
&lt;p&gt;TLS 缓存按照文件组织，也叫做 TLS FilePageTable。由于检索线程数较多，该层采用更加内存友好的数据结构，否则会随检索线程的增加，内存线性地放大。&lt;strong&gt;TLS 缓存采用了前缀树 Radix-Tree，并更进一步地，采用了更内存友好的 ART&lt;/strong&gt;[6,7]。前缀树的路由采用文件中的 offset，限定最大 3bytes。大家都知道，ART 需要通过定期合并 compaction，来减少「变形」带来的操作损耗和控制内存，我们定义了一组参数（树大小、树利用率、频次）等控制合并损耗。&lt;/p&gt; 
&lt;p&gt;中心缓存用于线程在各自的 TLS 查不到的时候，穿透来访问。它的存储只和文件数相关，内存损耗相对可控，&lt;strong&gt;中心缓存的数据组织采用竞争更加打散的 Array&lt;/strong&gt;，通过 CAS 操作页框实现线程间同步。特别说明：（1）除非在新建/删除文件操作环节有锁，其它 put/get 页面都是无锁的；（2）上面描述多个线程更新同一页框时，CAS 修改页框确保不丢失写，也不丢失冲突记录，否则会发生内存泄漏。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-3c3b12cd9bec8605829057549ef24ebdc47.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△存存储结构&lt;/p&gt; 
&lt;h2&gt;3.2&amp;nbsp; Flying&lt;/h2&gt; 
&lt;p&gt;接下来详细介绍 Flying，一次 pv 中，多次访问可能落在同一个页面，&lt;strong&gt;Flying PointerSwizzling 可减少单个线程对同一页面的重复拉取&lt;/strong&gt;。具体来说，第一个 key 访问时，申请页面，并把 PointerSwizzling 后的页面地址填在 SsdTable TLS 页表。其它 key 访问时，看到正在拉取，不会重复拉取。当 poll 到页面拉取结束后，通过 PointerSwizzling，可以识别哪些是拉取到的页面，只把这些页加到中心页表。&lt;/p&gt; 
&lt;p&gt;高扇出服务必然遇到扇出带来的长尾，SSD 也是如此。评测发现，异步 IO 时随着读页面的增加，wait 耗时也会增加。对于小业务对象，Flying 可显著降低访盘的页面数，在凤巢物料服务，我们通过 Flying 减少了 60% 的访盘 QPS。这是个有趣的优化方向，后续可以按缓存反应出的业务热点，按照热点重新组织数据，进一步提升 Flying 比例和降低访盘量。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;fetch_page:
    // 没有查到缓存，分配新内存页面，返回给 scheduler 拉取
    page = _page_manager-&amp;gt;alloc_page();
    // mark the in-flight page for later to add fifo, see fetch_page_done
    local_page_table-&amp;gt;insert(
        pageidx_key, reinterpret_cast&amp;lt;const char*&amp;gt;(reinterpret_cast&amp;lt;uintptr_t&amp;gt;(page) | 1));
    return std::make_pair(page, true /* newpage */);

fetch_page_done:
    const char* page = local_page_table-&amp;gt;find(pageidx_key);
    if (!(reinterpret_cast&amp;lt;uintptr_t&amp;gt;(page) &amp;amp; 1)) { // in-flight page
        return 0;
    }
    local_page_table-&amp;gt;remove(pageidx_key);
    page = reinterpret_cast&amp;lt;const char*&amp;gt;(reinterpret_cast&amp;lt;uintptr_t&amp;gt;(page) &amp;amp; (~1));
    // 加入到中心缓存
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3.3 ARC&lt;/h2&gt; 
&lt;p&gt;ARC[15]论文应用量高达 1300 次。在我们实现好整体框架和适配业务的时候，遇到的实际问题是，业务大部分情况下不知道如何划分初始队列和保护队列的比例。单纯地按照给足够大的非保护队列，积累多次访问概率，会导致保护队列的局部性无法发挥效果。ARC 论文虽然定位是解决动态流量下调参难的问题，但也恰好帮我们解惑了业务落地问题。&lt;/p&gt; 
&lt;p&gt;ARC 的核心原理是通过保留一倍数量的影子记录，帮助决策当前如何划分两段队列 p。具体来说，假定两段队列分别为 T1 和 T2，他们的影子队列分别为 B1 和 B2，如果查询请求命中了 B1，意味着我们应当把这次命中当作命中了 T1 来看，并且暗示了 |T1| 可能小了，没能将这次命中的数据存起来，此时就要调整 p。p 的调整是累计 (0, 1]浮点数控制波动。原理非常直观。&lt;/p&gt; 
&lt;p&gt;若完全复现 ARC，则要打破缓存整体结构，初始队列和受保护队列直接淘汰到 DELETE，且带来影子存储的额外管理开销。为此我们实现的自适应版本是：优先受保护队列，在受保护队列未填满内存时候，允许初始队列增长。但值得注意的是，初始队列不能被过分挤压，否则无法累积请求。为此，我们额外设置初始队列的低水位，受保护队列的增长不能超过该水位。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-fb4c26bc278d080011ded95223ac12ff41c.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△ARC 控制示例&lt;/p&gt; 
&lt;h2&gt;3.4 业务隔离&lt;/h2&gt; 
&lt;p&gt;一个业务进程拥有多个存储对象，页面缓存在存储对象级别独立配置。这里的业务对象，可以是一组表格、或者一组文件，以正排服务为例，正排服务实例中有多组存储对象：（1）广告换血的表格；（2）广告检索的表格组；（3）数据流的文件组等等。由于数据局部性和业务应用场景有别，不同业务存储对象一般采用不同的缓存配置。此时可以把它们拆分独立的 TableEnv/FileEnv，针对这些 Env 对象做独立缓存配置。关于 Env 的组织，请参见上面 SsdEngine 整体架构图。&lt;/p&gt; 
&lt;p&gt;一个存储对象，在启用缓存配置的模式下，也会有避让缓存的场景，以避免污染缓存。因此 Table/File 还提供了 read_disk 接口，可直接绕过缓存读盘。这一般用于优先级低的后台线程，比如加载线程、DUMP 线程、GC 线程等等。&lt;/p&gt; 
&lt;p&gt;业务切换缓存配置的过程，代码是自适应的。切换缓存配置主要影响的是业务 Buffer 如何引用内存页面 Page。使用 Buffer ReadOnly 模式，在打开缓存的情况下，引用方式使用页面，较操作系统的内核空间-用户空间的多次拷贝，有显著性能优化。在禁用掉缓存后，自动切换为 Buffer Owned 模式，拷贝数据到 Buffer 中。&lt;/p&gt; 
&lt;h2&gt;3.5 逼近最优淘汰顺序&lt;/h2&gt; 
&lt;p&gt;页面淘汰决策发生在中心缓存，下图是中心缓存淘汰算法的整体架构。我们整体上按照两段式的方式，初始链表是高性能的 TLS FIFO，受保护链表（protected）按不同算法采用不同数据结构，&lt;strong&gt;用于不同业务场景切换缓存算法&lt;/strong&gt;。访盘得到的页面 CAS put 到 TLS 初始链表，页面一旦进入到初始链表，接下来被访问时候，记录该页面被访问过「SALVAGE」。当初始链表按照 FIFO 顺序准备被淘汰页面时，如果该页面被标记了 SALVAGE，则捞回到受保护队列，此处会根据缓存算法进入不同的缓存。受保护链表有不同的实现形式，比如轻量的 DoubleClock（=FIFO+FIFO），2Q（=FIFO+LRU），TinyLFU（=FIFO Doorman+TinyLFU）等。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-2f283def1f6259437dd246c0949762bf797.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△中心缓存淘汰算法整体架构&lt;/p&gt; 
&lt;h2&gt;3.6 DoubleClock&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-52af3ff27024860a016823fb59b633a13d9.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△DoubleClock 算法整体架构&lt;/p&gt; 
&lt;p&gt;标准的 DoubleClock 算法通过活跃链表和非活跃链表，组合考虑了页面的&amp;lt;is_active, is_referenced&amp;gt;，近似实现 LRU。我们的缓存实现是类似的：当页面按照 FIFO 顺序从初始链表准备被淘汰的时候，首先，根据内存配额判断必须要淘汰的页面数量，接下来，一直弹出直到淘汰足够多的页面或者链表被清空。在弹出的过程，如果页面被访问过 SALVAGE，则加入到受保护区，等待按受保护区 FIFO 的淘汰算法再处理。&lt;/p&gt; 
&lt;p&gt;该缓存算法的优势是操作简单，劣势是几乎只通过「访问过」识别顺序。这样的话，无法区分出轮流访问的页面和访问局部性的页面。在局部性很强的场景下，缓存淘汰较 LRU 差比较多。&lt;/p&gt; 
&lt;h2&gt;3.7 2Q&#39;&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-ac6fbc965b2905b46031d7f79da31cea785.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△2Q 算法整体结构&lt;/p&gt; 
&lt;p&gt;标准 2Q 算法有两个缓存队列，一个是 FIFO 队列，一个是 LRU 队列。当数据第一次访问时，2Q 算法将数据缓存在 FIFO 队列里面，当数据第二次被访问时，则将数据从 FIFO 队列移到 LRU 队列里面，两个队列各自按照自己的方法淘汰数据。我们的实现中，初始链表可以看做 2Q 算法中的 FIFO 队列，LRU 受保护链表作为 2Q 算法中的 LRU 队列。&lt;/p&gt; 
&lt;p&gt;LRU 缓存引入了访问时间序，根据访问时间更加准确淘汰。这个好处带来了额外成本，LRU move_to_head 操作复杂，一般用锁来保护 LRU 的操作。为了减少竞争区，我们的 LRU 实现采用了异步做法，在检索线程仅仅记录 TLS getevent，在后台线程扫描所有线程的 TLS getevent，批量操作 LRU。&lt;/p&gt; 
&lt;h2&gt;3.8 TinyLFU&#39;&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7302b49a297a2fab6c9b51448ff3d0d19f7.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△TinyLFU 算法整体结构&lt;/p&gt; 
&lt;p&gt;在仅仅按时间序淘汰的 LRU 之外，我们还参考了 TinyLFU[10]，引入了基于频率准入的 LRU 增强，这样兼顾了时间和频次。我们通过如下两点得以实现对全量数据（而不只是 LRU 存储数据）的统计。第一点，直觉上好像有了 FIFO+SALVAGE 的方式，并不需要 Doorkeerper，实际不然。这是因为 SALVAGE 也在不断淘汰，没有足够信息识别全量 SALVAGE 数据，为此继续保留 Doorkeeper，和 Count-Min Sketch 配合以近似的方式刻画全量数据，并通过重置（reset) 方法保持数据新鲜度。第二点，对于突发流量的频次积累，我们通过 FIFO 来实现 get 事件的积累，无需引入更复杂的 W-TinyLFU，从 LRU 的视角来看，插入要保护在内存的新页面时候，对于来自 SALVAGE 的 new，与超额要淘汰的 victim，根据 TinyLFU 判定是否保留。&lt;/p&gt; 
&lt;h1&gt;04 效果评估&lt;/h1&gt; 
&lt;p&gt;缓存的核心评价指标是命中率（Hit Ratio）。当一个数据项被访问时，如果它已经出现在缓存中，记为一次缓存命中。缓存命中的次数和数据访问的总次数之间的比率被称为命中率。因此，如果保存在缓存中的项能够「准确」预测未来的访问模式，那么缓存命中率会很高。&lt;/p&gt; 
&lt;h2&gt;4.1 评测环境&lt;/h2&gt; 
&lt;p&gt;评测运行环境机型是 CPU Intel(R) Xeon(R) Gold 5118 CPU @ 2.30GHz，L1d cache: 32K，L1i cache32K，L2 cache 1024K，L3 cache 16896K，内核是 64 位 3.10 系。&lt;/p&gt; 
&lt;p&gt;SsdEngine 引擎集成在单机 RocksDB 中，编译器是 GCC12，编译优化选项是 -O2。&lt;/p&gt; 
&lt;h2&gt;4.2 评测内容&lt;/h2&gt; 
&lt;p&gt;为了充分验证缓存效果，先导入一批数据（1000 万键空间），每条数据平均占 2 个页面，再按照分布要求读取这些数据。我们针对这三种缓存算法，评测了局部访问和轮流访问这两种典型的数据访问分布。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;场景一：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;局部访问（zipfian）：在 Zipfian 分布中，数据项的选择概率与它们的排名成反比关系。具体来说，第 i 个数据项的选择概率与 i 的倒数成正比。这意味着排名靠前的数据项具有更高的选择概率，而排名靠后的数据项具有较低的选择概率。换句话说，Zipfian 分布中的数据项呈现出「头重脚轻」的特点，即少数数据项被频繁选择，而大多数数据项被相对较少地选择，数据分布具备很强的「局部性」和「长尾性」。Zipfian 幂指数参数 s 控制分布的陡峭程度。当 s 增大时，分布的头部会变得更加突出，即少数事件的频率会显著高于其他事件。在这种数据分布下，LRU 较 DoubleClock 有优势，但缓存内存足够大的时候优势减弱。&lt;/p&gt; 
&lt;p&gt;分布是 zipfan s=0.6，缓存大小分别为 4G、6G、8G、10G、12G 的缓存命中率：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-0ead582f04866b124c8e9792ff1b1937d8a.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△cache hit: zipfian0.6&amp;nbsp; LRU vs DoubleClock&lt;/p&gt; 
&lt;p&gt;分布是 zipfan s=0.9，缓存大小分别是 4G、6G、8G、10G、12G 的缓存命中率：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-087e9158157440433ed265a3669af425100.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△cache hit: zipfian0.9&amp;nbsp; LRU vs DoubleClock&lt;/p&gt; 
&lt;p&gt;同时我们看到，由于缓存命中率提升，LRU 较 DoubleClock 在长尾访问上优势明显，以下是 9999 分位性能（单位 us）：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-67e33695b096427762ee652e71c9a4137b3.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△9999 分位性能&amp;nbsp; LRU vs DoubleClock&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;场景二：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;轮流访问（uniform）：每个数据项都具有相等的概率被选择。在这种数据分布下，LRU 较 DoubleClock 并没有优势，徒有算法的复杂性。&lt;/p&gt; 
&lt;p&gt;分布是 uniform，缓存大小分别是 4G、6G、8G、10G、12G 的缓存命中率：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b0d1a7599ee81a0b0a8254d380e64a8fd43.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△ cache hit: uniform&amp;nbsp; LRU vs DoubleClock&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;场景三：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;TinyLFU 和 LRU：TinyLFU 以少量的内存增长，在任何分布下，都一定程度上提升了 LRU 的表现。下图择取的 zipfan 分布下的表现，可以看到，在缓存量相对 Key 空间较小的情况下，TinyLFU 由于考虑了时间和频次，具有明显优势，但是随着缓存大小的上涨，TinyLFU 和 LRU 缓存效果趋于相近。同时我们还发现 TinyLFU 要花更久的时间才能积累到缓存效果。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-ed3b368dede8fe6a2dd7df487dff80e1822.png&quot; alt=&quot;图片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△cache hit: zipfian0.6&amp;nbsp; LRU vs DoubleClock &amp;amp; TinyLFU&lt;/p&gt; 
&lt;h1&gt;05 业务应用和后续计划&lt;/h1&gt; 
&lt;p&gt;SsdEngine 已在商业意图场景上线，通过对读写模式的控制，又引入缓存减少读盘并发，稳定住长尾性能，打破 SSD 独占成本和检索性能的折衷。当下的设计，已打开了对于不同「数据分布」场景下缓存算法的探索空间（Adaptive Cache Management）。随着应用范围扩大，我们会再深度挖掘更多更合适的缓存算法。&lt;/p&gt; 
&lt;p&gt;——————END——————&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;[1].&amp;nbsp;Software Engineering Advice fromBuilding Large-Scale Distributed Systems,2002&lt;/p&gt; 
&lt;p&gt;[2].&amp;nbsp;Berkeley Interactive Version Latency Number&lt;/p&gt; 
&lt;p&gt;[3].&amp;nbsp;极致优化 SSD 并行读调度&lt;/p&gt; 
&lt;p&gt;[4]. Random notes on improving the Redis LRU algorithm&lt;/p&gt; 
&lt;p&gt;[5]. A Lockless Pagecache in Linux—Introduction,Progress, Performance,2006&lt;/p&gt; 
&lt;p&gt;[6]. Page Cache eviction and page reclaim&lt;/p&gt; 
&lt;p&gt;[7]. The Adaptive Radix Tree: ARTful Indexing for Main-Memory Databases,2013&lt;/p&gt; 
&lt;p&gt;[8]. 凤巢倒排服务的优化&lt;/p&gt; 
&lt;p&gt;[9]. 2Q: &amp;nbsp;A Low Overhead High Performance BufferManagement Replacement Algorithm,1994&lt;/p&gt; 
&lt;p&gt;[10]. TinyLFU: A Highly Efficient Cache Admission Policy, 2017&lt;/p&gt; 
&lt;p&gt;[11]. Better active/inactive list balancing, 2012&lt;/p&gt; 
&lt;p&gt;[12]. Linux Spin Lock Cas Implementation&lt;/p&gt; 
&lt;p&gt;[13]. LevelDB sharded LRU Implementation&lt;/p&gt; 
&lt;p&gt;[14]. An O(1) algorithm for implementing the LFU cache eviction scheme, 2010&lt;/p&gt; 
&lt;p&gt;[15]. ARC: A Self-Tuning, Low Overhead Replacement Cache,2003&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;推荐阅读：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592618%26idx%3D1%26sn%3D61740f39ea744e00280c70b638622b91%26chksm%3Dc03f5ad6f748d3c02b964f5f2d5c1b716c38c98c630d4741f4b687821c33d52f16b2cc8de612%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;如何定量分析 Llama 3，大模型系统工程师视角的 Transformer 架构&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592237%26idx%3D1%26sn%3D99dff8b8971f210c69ee50fa7383b9ee%26chksm%3Dc03f5951f748d0470163cdd13a5ce7d591a2054840fe8278ef7d5f4ba8ce7c374813ba823daf%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;微服务架构革新：百度 Jarvis2.0 与云原生技术的力量&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247591996%26idx%3D1%26sn%3Dc5b5f19bf8f26d43b923c953273fe8cf%26chksm%3Dc03f5840f748d156881e820c037d719ae43b8c5387a89f44300692dc0de9ad6d93b04a108dd2%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;技术路线速通！用飞桨让京剧人物照片动起来&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247591982%26idx%3D1%26sn%3D33db28d92148841f38b91779f2469101%26chksm%3Dc03f5852f748d1444e421bafb73dbe22f27614bf98131dd39091e53f9b7c3170dea0a39b1349%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;无需业务改造，一套数据库满足 OLTP 和 OLAP，GaiaDB 发布并行查询能力&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247591946%26idx%3D1%26sn%3D336008e4df2440378e5ff178e8699133%26chksm%3Dc03f5876f748d160fdd0de52b8ee4e433084dfd3d6eb2fbc25ba5ca98ac6898b34392b550dde%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;Tensor 索引的使用指南及学习心得&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4939618/blog/15169406</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4939618/blog/15169406</guid>
            <pubDate>Tue, 06 Aug 2024 08:39:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>OpenAI 又一联合创始人转投 Anthropic，Brockman 休长假</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenAI 联合创始人之一 John Schulman 已离开该公司，跳槽到由前 OpenAI 研究人员成立的的竞争对手公司 Anthropic。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年 5 月份，OpenAI 原安全主管、超级对齐（Superalignment）团队负责人 &lt;a href=&quot;https://www.oschina.net/news/294779/janleike-anthropic&quot;&gt;Jan Leike&lt;/a&gt; 宣布从 OpenAI 离职，并公开发文抨击了该公司的安全性问题；此后又加入了 Anthropic 公司，领导一个新的「超级对齐」团队。而在 Leike 离职后，Schulman 成为了&amp;nbsp;OpenAI 对齐科学工作的负责人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前尚不清楚谁将接替担任这一职务。&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Schulman&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fjohnschulman2%2Fstatus%2F1820610863499509855&quot; target=&quot;_blank&quot;&gt;发文&lt;/a&gt;表示，自己做出这个选择源于希望深入研究人工智能对齐（AI alignment），重返实际技术工作。并为&amp;nbsp;OpenAI 进行了解释，称离开不是因为 OpenAI 内部缺乏支持，这一选择属于个人决定。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「我决定在 Anthropic 追求这一目标，我相信我可以获得新的视角，并与深入研究我最感兴趣的主题的人一起进行研究。需要明确的是，我离开并不是因为 OpenAI 缺乏对对齐研究的支持。相反，公司领导一直致力于在这一领域进行投资。我的决定是个人决定，基于我希望在职业生涯的下一个阶段如何集中精力......我相信，即使没有我，OpenAI 和我所在的团队也会继续蓬勃发展。」&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;299&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bee73f8b3b89031d89773f6e031b3e615b4.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，OpenAI 证实，该公司联合创始人之一兼总裁 Greg Brockman 在公司工作了九年后，将延长休假至今年年底，以「放松和充电」。去年加入该公司的产品负责人 Peter Deng 也已离职。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;另外，OpenAI 最近将另一位安全负责人 Aleksander Madry 重新分配到了新的职位。前首席科学家 &lt;a href=&quot;https://www.oschina.net/news/292485/ilyasut-leave-openai&quot;&gt;Ilya Sutskever&lt;/a&gt; 在离职后也成立了一家初创公司；另一位二月份离职的联合创始人 Andrej Karpathy 则创办了一家教育初创公司。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，OpenAI 的 11 位原始创始人中只剩下三位：OpenAI 首席执行官 Sam Altman、Brockman 和语言与代码生成负责人 Wojciech Zaremba。Altman 也&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fsama%2Fstatus%2F1820617107354083611&quot; target=&quot;_blank&quot;&gt;发文&lt;/a&gt;对&amp;nbsp;Schulman 的贡献表达了感谢。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;321&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-26929cfa73d0143446204f79bec3d636d09.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305626/openai-john-schulman-anthropic</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305626/openai-john-schulman-anthropic</guid>
            <pubDate>Tue, 06 Aug 2024 07:05:08 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>马斯克重启对 OpenAI 及 Sam Altman 的诉讼</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 6 月份因不明原因撤回诉讼后，马斯克再次对 OpenAI 及其首席执行官 Sam Altman 提起了新的诉讼，声称 OpenAI 将利润和商业利益置于公众利益之上，还违背了免费共享或开源公司技术的承诺，选择向微软提供技术的独家许可。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;马斯克主张的核心在于，他认为自己被 Altman 和现任 OpenAI 总裁 Greg Brockman「引诱和欺骗」，以非营利组织为由共同创立了该 AI 公司。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;诉讼称，在马斯克加入并投资数百万美元后「被 Altman 及其同伙背叛」，因为他们与微软一起「建立了一个不透明的营利性 OpenAI 附属网络，从事猖獗的自私交易......这种背信弃义和欺骗达到了莎士比亚笔下的程度。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「Altman 向马斯克保证，非盈利组织结构保证中立，注重安全和开放，造福人类，而不是股东利益。但事实证明，这都是空谈慈善，也是 Altman 长期骗局的诱因。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;254&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ff7c01b3a92a9654e1440123f7fe7d7306a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;诉讼还称，微软也参与其中。OpenAI 是一家没有股东的非营利组织，微软「试图通过其他方式获得影响力，例如诱使 OpenAI 公司使用微软的云计算系统并对其产生不可分割的依赖......虽然马斯克表示喜欢微软首席执行官 Satya Nadella......但该公司和 OpenAI 公司的价值观并不一致。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;马斯请求法院对 OpenAI 涉嫌欺诈、违约、虚假广告、被视为不公平竞争的行为和其他违法行为判处最高赔偿金。还要求法院宣布 OpenAI 对微软的独家授权无效，否则就裁定 &quot;GPT-4、GPT-4T、GPT-4o 和其他 OpenAI 下一代大型语言模型是否构成 AGI，从而被排除在微软的授权之外&quot;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「马斯克为启动和维持 OpenAI 公司贡献了大量资金和资源，但条件是该公司必须是非营利组织，致力于与公众公开分享其技术，避免将权力集中在少数人手中。例如： GPT-4、GPT-4T 和 GPT-4o 都是闭源的，处于保密状态，而被告却积极致力于将非营利组织转变为彻底的商业企业。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/281047/elon-musk-sues-openai-over-ai-threat&quot; target=&quot;_blank&quot;&gt;马斯克起诉 OpenAI 及其 CEO 奥特曼，要求公司恢复开源状态&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/281710/openai-response-elon-musk-lawsuit&quot; target=&quot;_blank&quot;&gt;OpenAI 回应被起诉：马斯克曾意图获得公司 「绝对控制权」&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305572/elon-musk-revives-lawsuit-openai-sam-altman</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305572/elon-musk-revives-lawsuit-openai-sam-altman</guid>
            <pubDate>Tue, 06 Aug 2024 02:35:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>openKylin 技术委员会例会召开，2.0 版本最新进展汇报！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;8 月 2 日，openKylin 社区技术委员会例会采取线上+线下形式召开，由 openKylin 社区技术委员会委员余杰主持。技术委员会主任吴庆波、副主任魏立峰等全体成员参加，围绕社区 openKylin 2.0 版本进展与后续版本规划展开讨论。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;523&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e4b3d9bf3315d421775c63e3da7d533d32a.png&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;会上，openKylin 技术委员会委员李剑峰就&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;openKylin 2.0 版本进展与后续版本规划&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;与各参会人员进行总结汇报。openKylin 2.0 开发阶段累计在社区发布 5 个中间版本，完成了 180+重点基础库组件自主选型升级，包括内核、运行库、编译工具链、底层服务等，保障了 openKylin 2.0 系统在编译&amp;amp;运行性能、音视频处理能力、文件读写能力、图像显示能力等各方面保持在最新领先水平。同时，还为社区用户带来包括麒麟 AI 助手、不可变系统、开明软件包格式等在内的众多创新特性的提前体验，并举办公测活动等积极收集解决用户反馈的使用问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;随后，各参会人员围绕&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;社区版本 LTS 发行策略、增加多架构支持&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;等多个重要议题展开了深入探讨。openKylin 技术委员会作为社区管理机构，将持续审视社区 SIG 组的运作、版本演进方向和技术发展等工作，致力于营造良好社区技术环境。同时，通过本次会议，希望能为各 SIG 组在开展社区工作时提供更加清晰的方向，推动社区繁荣发展。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305561</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305561</guid>
            <pubDate>Tue, 06 Aug 2024 02:21:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>deepinV23 适配 Intel Ultra，最适合 AIPC 的操作系统来啦</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepinv23-adapts-to-intel-ultra%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;近日获悉，deepin V23 Release 版本将于 8 月 15 日正式上线，新版本将支持 Intel 最新的 Ultra 平台，这使得 deepin V23 有望成为当前市场最适合 AIPC 的操作系统之一。&lt;/p&gt; 
&lt;p&gt;作为一款基于 Linux 的开源桌面操作系统，deepin 以其美观易用、安全可靠的特点深受全球用户的喜爱。在即将发布的新版本中，deepin V23 更是在用户体验、智能化应用及系统维护方面实现了质的飞跃，为全球开源爱好者及普通用户带来了前所未有的惊喜。&lt;/p&gt; 
&lt;p&gt;Ultra 是 Intel 推出的新一代处理器品牌，也就是大家熟知的 Meteor Lake，升级全新的 Intel 4 制造工艺、分离式模块化架构、全新的 CPU/GPU 架构，更在能耗比上取得了显著提升，为 Meteor Lake 处理器带来了前所未有的能效表现，为高性能计算奠定了坚实基础。&lt;/p&gt; 
&lt;p&gt;据了解，双方合作由来已久，自加入 deepin 社区以来，Intel 迅速成立了 Intel SIG 小组，专注于为 deepin 社区提供 Intel 平台的技术支持、适配和集成服务。Intel SIG 不仅支持了最新的 Meteor Lake 平台，还积极参与 deepin 社区的技术支持和活动，确保 deepin 用户能够享受到 Intel 平台的最佳体验。&lt;/p&gt; 
&lt;p&gt;Meteor Lake 平台作为 Intel Ultra 平台的重要组成部分，为 deepin 带来了前所未有的性能提升和丰富的功能支持。Intel SIG 针对 Meteor Lake 平台进行了深入适配，涵盖了从基础 firmware、电源管理、性能优化到音频、图形、蓝牙、5G、Wi-Fi 等多个模块，确保 deepin V23 能够充分发挥 Meteor Lake 平台的优势。&lt;/p&gt; 
&lt;p&gt;deepin V23 与 Intel Ultra 的成功适配，不仅提升了系统的整体性能，还带来了丰富的 AI 应用场景。通过 CPU、NPU、GPU 的协同运算，deepin V23 能够胜任各种实用性的 AI 应用，特别是本地推理能力。GPU 的高吞吐和图形处理能力、NPU 的低功耗专用 AI 算法能力以及 CPU 的低延迟逻辑运算能力，共同构成了 deepin V23 强大的 AI 计算能力。&lt;/p&gt; 
&lt;p&gt;deepin V23 与 Intel Ultra 的强强联合，是双方在推动 AI 技术与操作系统融合方面的重要里程碑。这一合作不仅提升了 deepin 的 AI 能力，也为用户带来了更加高效、智能的 PC 使用体验。未来，随着双方合作的深入和技术的不断进化，deepin 有望成为最适合 AIPC 的操作系统之一，为用户带来更加丰富多彩的 AI 生活。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;附录：&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 全版本镜像（含 deepin V15）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeveloper-community%2Fplanning%2F&quot; target=&quot;_blank&quot;&gt;deepin 深度操作系统版本规划&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305553</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305553</guid>
            <pubDate>Tue, 06 Aug 2024 02:13:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | AI 工具自动将 C 代码转换为 Rust；谷歌收购 C.AI 核心团队；「价格屠夫」DeepSeek；被低估的 AI 芯片强国</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.5&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305418/darpa-c-to-rust&quot; target=&quot;_blank&quot;&gt;美国国防部建议使用 AI 自动将 C 代码转换为 Rust&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;为了加快向内存安全编程语言的过渡，美国国防部高级研究计划局（DARPA）正在推动程序代码转换工具 TRACTOR 的开发。TRACTOR 是 TRanslating All C TO Rust 的缩写，该项目旨在开发机器学习工具，自动将旧 C 代码转换为 Rust 代码。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;「你可以访问任何一个 LLM 网站，开始与其中一个 AI 聊天机器人聊天，你只需要说 &#39; 这里有一些 C 代码，请把它翻译成安全的惯用 Rust 代码 &#39;，然后剪切、粘贴，就会有结果，而且通常效果很好...... 研究的挑战在于大幅提高从 C 到 Rust 的自动转换能力，特别是对于最相关的程序构造。」&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/6150560/blog/15154212&quot; target=&quot;news&quot;&gt;字节跳动开源 Linux 内核网络抓包工具 netcap&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;与 tcpdump 工具只能作用于内核网络协议栈准备发包和收包的固定点相比，netcap 可以几乎跟踪整个内核网络协议栈（有 skb 作为参数的函数）。字节跳动 STE 团队使用 tcpdump 语法作为过滤条件，以 skb（socket buffer）为上下文，可以轻松掌握整个报文在内核网络协议栈的完整踪迹，从而帮助开发者大大提高内核网络丢包问题的定位效率。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;img height=&quot;192&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5a5ea683895581dfe988119545ee75b31b1.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/walang/blog/15113279&quot; target=&quot;_blank&quot;&gt;凹语言开源 2 周年&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;凹语言项目于 2019 年初立项，2020 年第一次开发组会议确立了 &quot;不做玩具车&quot; 的目标，2022 年 7 月底正式开源，至今开源 2 周年。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;总体而言，在 2023 年的下半年的时候，通过实现 FC 红白机模拟器验证了凹语言用于工业开发的能力，完成了最初立项时 &quot;不做玩具车&quot; 的目标。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;289&quot; src=&quot;https://oscimg.oschina.net/oscnet/st0045-01.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305458&quot; target=&quot;_blank&quot;&gt;WPS 宣布推出基于 deepinV23 的个人版&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;国民级办公应用 WPS 宣布，即将发布基于国际知名开源操作系统 deepin V23 的 WPS Office For Linux 个人版。该版本基于玲珑包格式，与 deepin V23 的智能化特色深度融合，面向国内及全球用户提供更流畅、智能的先进生产力工具。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;WPS Office For Linux 个人版使用全新的视觉设计，新版本界面延续了 WPS 设计风格的同时，通过调整布局、模块化设计等方式，在视觉效果、使用逻辑方面进行了深度优化，帮助用户以更低的学习成本快速掌握使用技巧。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;与旧版本相比，本次更新增如 PDF 转换、稻壳等增值服务功能，直击用户办公痛点，提高用户办公效率。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;strong&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1706699904%2FOqAKCadJd%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;关于谷歌收购 C.AI 核心团队，谈点个人主观看法&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;big tech 短期内还是会以模型为主，应用为辅，他们会在本身的业务中持续加入 AIGC 相关的内容，但可能不太会颠覆产品形态；中小公司，可能就需要尽快转向应用，利用开源基础模型，做一些 post-training，尽快找到 PMF。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;简单总结，OpenAI、Anthropic 会继续模型+应用双轮驱动，其他家则需要做出取舍；科技大厂，在格局未定之前，还要再冲击一下基础模型；中小公司、创业公司，需要尽快转向 AI 应用。&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;i 陆三金&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1912085257%2FOqKkosdLm%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;Gemma2 2B 才刚掀起了端侧模型热，端侧 RAG 就来了！&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;C 语言实现，基于 SQLite 插件的「最快⚡」端侧向量数据库 sqlite-vec 开源。&lt;/span&gt;&lt;/p&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;处理 50 万个 960 维向量仅 41 毫秒&lt;/span&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;支持 JS/Rust，支持 Llama.cpp 离线 Embedding 和在线 Embedding &lt;/span&gt;&lt;/li&gt; 
     &lt;/ul&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;&lt;span&gt;斌叔 OKmath&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6736174439%2FOqxc6Emlj%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;字跳开源的多云多集群管理引擎 KubeAdmiral 正式发布了 1.0 版本&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前在字跳生产环境管理着超过 21 万台机器、超过 1000 万 Pod。KubeAdmiral 命名引申自 Admiral（读音[ˈædm(ə)rəl]），本意为舰队司令，加上 Kube(rnetes) 前缀，寓意该工具具有强大的 Kubernetes 多集群编排调度能力。&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;蚁工厂&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5648162302%2FOqON9uvjJ%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;开源版的 Claude Artifacts 出来了&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该应用程序是 Anthropic 的 Claude 聊天应用程序中 Artifacts UI 的开源版本。&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此应用程序使用 E2B（e2b.dev/docs）的代码解释器 SDK（github.com/e2b-dev/code-interpreter）和 Core SDK（github.com/e2b-dev/e2b）来执行 AI 代码。E2B 提供了一个云沙箱来安全地运行 AI 生成的代码，并且可以处理安装库、运行 shell 命令、运行 Python、JavaScript、R 和 Nextjs 应用程序等。&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;微博&amp;nbsp;&lt;strong&gt;黄建同学&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1948301550%2FOqwmOFRVL%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;100 行代码构建开源版 AI 搜索引擎&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;nanoPerplexityAI 是一个简易的开源实现，模仿了 perplexity.ai，通过 Google 搜索引擎和大语言模型 (LLM) 生成带引用的信息回答。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;摇摆时间线 ZHLMI&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn810842442%3FserialId%3D50555940bd5bbee69b1698085c7ef8a5&quot; target=&quot;_blank&quot;&gt;美欧加快人工智能监管合作&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span&gt;在群城逐鹿的人工智能新赛道，京沪深由于在产业基础、科技水平、人才密度等方面的优势，已牢牢占据领先位置。「北京做的是从 0 到 1 的事情，上海做的是从 1 到 10 的事情，深圳则是做从 10 到 100 的事情。」谈及三座城市在人工智能领域的差异化定位问题，一名深耕行业多年的业内人士分析，三座城市在布局人工智能方面各有特点，应根据各自的资源禀赋和产业优势，因地制宜构建人工智能产业高地。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;经济日报&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn810959234%3FserialId%3D13d85181578011530a2042f5aa3137c9&quot; target=&quot;_blank&quot;&gt;Character.AI 投靠谷歌：为什么 AI 情感陪伴赛道龙头，仍难独立发展？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;通过吸纳核心团队、资助原公司的方式，硅谷巨头变相完成了对科技初创公司的「收购」。它能巧妙地避开监管，却又拿走了初创公司的核心资产。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;这似乎成了目前硅谷人工智能初创公司的普遍归宿。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;极客公园&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_1650111241_625ab309020019lxm.html&quot; target=&quot;_blank&quot;&gt;中国算力进入低成本时代，贵州打造国产算力资源强省&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#303030&quot;&gt;目前，贵阳正在搭建开源模型的训练平台，这一模型能够提供低门槛、低成本的训练。「为了降低模型的训练成本，我们专门搭建了这样的公共服务，提供开源的基础模型和优惠的算力，集成各种优秀的算法为大模型企业提供模型的预训练及调优推理，支持大模型一站式训练、推理、部署和运维，缩短行业模型的培育和应用的建设周期。」马宁宇说。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;中国经营报&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5ODIzNTc2MA%3D%3D%26mid%3D2661032352%26idx%3D1%26sn%3D839138a85e4111a95ad1770ba982c4cc%26chksm%3Dbda55abf8ad2d3a9d1b4ab5406b4c4396ead5434a670e2f6703be61781c58cc354e1c0f45173%23rd&quot; target=&quot;_blank&quot;&gt;「AI 教母」李飞飞：Sora 仍是二维图像，只有三维空间智能才能实现 AGI&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#262626&quot;&gt;有着「AI 教母」之称的斯坦福大学教授李飞飞对钛媒体 App 独家表示，尽管美国 OpenAI 公司的 Sora 模型可以文生视频，但就本质而言，它仍属平面二维模型，没有三维立体理解能力，只有「空间智能」才是 AGI 未来方向。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;钛媒体&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fmoney%2Ffund%2Fjjzl%2F2024-08-05%2Fdoc-inchqhuk1142570.shtml&quot; target=&quot;_blank&quot;&gt;120 人的 A 轮公司，卖了 20 亿&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#1a1a1a; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;澳大利亚超级独角兽 Canva 宣布收购图像生成初创公司 Leonardo.ai，这是其今年的第二笔收购。就在几个月前，Canva 刚刚宣传以数亿英镑的价格，收购了深受苹果用户喜爱的 Affinity 软件套件。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;投中网&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_6192937794_17120bb4202002a7og.html&quot; target=&quot;_blank&quot;&gt;「价格屠夫」DeepSeek 再掀大模型价格战，这次会有人跟进吗？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;与首轮降价所不同，面对此次 DeepSeek 发起的价格战，目前一众大模型公司尚未有跟进动作，也少有发表相关评论。但再次降价表明大模型的普惠时代正在到来，垂直应用生态有望进一步繁荣。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;界面&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcjrb.cjn.cn%2Fhtml%2F2024-08%2F03%2Fcontent_151729_1123874.htm&quot; target=&quot;_blank&quot;&gt;8 天落地两大「开源中心」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;7 月 18 日，鸿蒙生态（武汉）创新中心落地武汉软件新城。7 月 26 日，武汉 RISC-V 生态创新中心在武汉光谷正式揭牌。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;相距仅 8 天，带有「开源基因」的两大中心先后亮相武汉，见证了武汉软件产业打造开源生态的「加速度」。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;长江日报&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_1641561812_61d83ed4020017tie.html&quot; target=&quot;_blank&quot;&gt;AI 需要新故事&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;生成式 AI 所基于的开放创新精神不会过期。相反，对于开源、开放的信仰一定会引领人类在 AI 技术革命的进程中最终走到柳暗花明的那一刻，但在此之前，我们可能还需要保持更多的耐心和信心。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;经济观察报&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4 style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg2NDgzNTQ4MA%3D%3D%26mid%3D2247748524%26idx%3D1%26sn%3D40797dd01e24a2d1a06590ee5b43922a%26scene%3D0&quot; target=&quot;_blank&quot;&gt;被低估的 AI 芯片强国&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;美国专攻芯片设计，中国台湾专攻制造，韩国专攻内存芯片，日本专攻设备和零部件的惯例现在已成为过去。在美国补贴的支持下，英特尔正在大举进军芯片制造，而日本正与台湾联手提升其制造能力。韩国也在 AI 战略下，一改只有存储的局面，韩国 AI 芯片产业形成了以三星、海力士为代表的巨头企业，与众多初创企业共同发展的生态系统。这种多元化的生态系统，不仅促进了技术创新，也为韩国 AI 产业的长期发展提供了有力保障。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;半导体行业观察&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredis%2Frueidis&quot; target=&quot;_blank&quot;&gt;redis/rueidis&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img height=&quot;333&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-42617f9929e96b25a4acf73c9395eb7b3ac.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredis%2Frueidis&quot; target=&quot;_blank&quot;&gt;https://github.com/redis/rueidis&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;rueidis 是一个高性能的 Go 语言的 Redis RESP3 客户端开发包，支持客户端缓存和自动流水线。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/15052655&quot; target=&quot;_blank&quot;&gt;淘宝测试环境治理实践&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span&gt;去年之前，阿里巴巴的淘天集团测试环境是以领域方式运作：不局限测试环境治理本身，从测试模式方法论及用好测试环境思路引领集团测试环境治理。领域运作最难的是 「统一思想」。业务进一步细分调整后，测试环境治理策略理应由业务方自行决策，领域尽可能多的提供更好用的工具产品供业务方使用。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;测试环境产品得很稳定，让用户相信环境是可靠的，其次环境部署需要高效，二者缺一不可。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;275&quot; src=&quot;https://oscimg.oschina.net/oscnet/46320f70-7afa-4935-9fc0-32db410b6704.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FvbsIl4HrlGSR4ZKrZIvmfg&quot; target=&quot;_blank&quot;&gt;Go 团队「话事人」Russ Cox 宣布卸任，还 cue 了一下曾经是「BDFL」的龟叔&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：早该退了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：龟叔🐢确实太仁慈了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：笑点解析：Go 确实不是单个 BDFL，是整个 Google 开发组在当 BDFL&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：有一说一，rsc 老哥确实太保守了，Go 泛型足足迟到了 10 年&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：问题来了，那个备受吐槽但 rsc 强推的 range-over-functions 特性还会正常发布吗？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：已经发了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：漂亮，新官上任三把火 go 是不是要迎来大动静&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：rsc 卸任后会不会把 9vx 更新一下呐&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：可以把 range over function 砍掉吗？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：不要人云亦云，看见国外几个抨击的文章就说它不好，你觉得不好不用不就行了？你觉得不需要的别人不一定不需要&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/305153&quot; target=&quot;_blank&quot;&gt;DeepSeek 启用硬盘缓存技术，大模型价格再降一个数量级&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：缓存就相当于博客了，就没意思了。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：那就是明着说保存你记录了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：这个功能是非常有用的，可以复用 input 的提示词&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：那就不看上下文了呗？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：挺好的，降低成本 50 快钱我用了几个月了&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/304989/vs-code-1-92-released&quot; target=&quot;_blank&quot;&gt;Visual Studio Code 1.92 发布&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：旧版本怎么升级&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：程序员还不会升级吃饭的家伙，这水平说出去让人笑话&lt;/span&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：我不会开关机会被笑话吗，因为公司的电脑从来不关，入职的时候就是开着的&lt;/span&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：code 左下角设置按钮，检查更新。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/305464</link>
            <guid isPermaLink="false">https://www.oschina.net/news/305464</guid>
            <pubDate>Mon, 05 Aug 2024 10:12:17 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>