<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-综合资讯</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-综合资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 26 Feb 2025 02:35:57 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>宇树科技 G1 人形机器人展示武打动作</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;昨日，宇树科技&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1818617132%2FPfVTPwcFT&quot; target=&quot;_blank&quot;&gt;发布视频&lt;/a&gt;&lt;/u&gt;展示了旗下 G1 人形机器人最新更新。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a3bcf2e1605d912f524016b7bd99e7c90ca.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;视频中，宇树 G1 人形机器人在镜头前展示了「武打动作」的实操，其能够依靠自身完成单脚飞腿加 360° 转身动作。&lt;/p&gt; 
&lt;p&gt;据宇树科技官方介绍，宇树 G1 机器人算法继续升级，现在已经支持「任意动作任意学」。视频显示，G1 机器人完成了连续武打动作，并能够保持平衡。&lt;/p&gt; 
&lt;p&gt;宇树 G1 人形机器人于 2024 年 5 月发布，定价 9.9 万元起，官方称其为「人形智能体、AI 化身」，支持模仿&amp;amp;强化学习驱动。外观设计方面，该机器人体重约 35kg、身高约 127cm，拥有 23~43 个关节电机，关节最大扭矩 120N・m。&lt;/p&gt; 
&lt;p&gt;近期，宇树科技还公布了宇树 G1 舞蹈视频，视频中机器人动作自然流畅，受到外力干扰依然能够完成舞蹈动作，不受外界影响。&lt;/p&gt; 
&lt;p&gt;此前，在 2025 年央视春晚中，著名电影导演张艺谋携手杭州宇树科技、新疆艺术学院带来了一个名为《秧 BOT》的节目，而其中表演的机器人基于宇树 Unitree H1 人形机器人打造，宇树 G1 和宇树 Go 系列机器狗也一同登台。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335780</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335780</guid>
            <pubDate>Wed, 26 Feb 2025 02:30:54 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>DeepSeek 开源周第三日：开源 DeepGEMM</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;DeepSeek 开源周第三日宣布推出 DeepGEMM，一个支持密集和 MoE GEMM 的 FP8 GEMM 库，为 V3/R1 训练和推理提供支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;该库采用 CUDA 编写，在安装过程中无需编译，通过使用轻量级的即时编译（JIT）模块在运行时编译所有内核。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;511&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-671a532b18c34cce2c70603de74b6366ac2.jpg&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335425/deepseek-flashmla&quot; target=&quot;_blank&quot;&gt;「DeepSeek 开源周」 首发项目：FlashMLA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/335624&quot; target=&quot;_blank&quot;&gt;DeepSeek 开源周第二日：开源 DeepEP 通信库&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335779/deepseek-deepgemm</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335779/deepseek-deepgemm</guid>
            <pubDate>Wed, 26 Feb 2025 02:26:54 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>DeepSeek R2 将提前推出</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;据路透社援引三位知情人士的&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Ftechnology%2Fartificial-intelligence%2Fdeepseek-rushes-launch-new-ai-model-china-goes-all-2025-02-25%2F&quot; target=&quot;_blank&quot;&gt;消息称&lt;/a&gt;&lt;/u&gt;，DeepSeek 正在加速推出 1 月发布的 R1 模型升级版 — DeepSeek R2。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0226/101542_Mkzx_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;其中两位知情人士表示，&lt;strong&gt;DeepSeek 原计划在 5 月初发布 R2，但现在希望尽早推出&lt;/strong&gt;，具体时间尚未透露。该公司表示，希望新模型在编程能力上表现更佳，并能够支持英语以外的多种语言进行推理。&lt;/p&gt; 
&lt;p&gt;此外，DeepSeek 在同日&lt;a href=&quot;https://www.oschina.net/news/335661&quot;&gt;重新开放了 API 充值入口&lt;/a&gt;，此前因资源紧张，其曾一度关闭充值入口。目前 deepseek-chat 模型优惠期结束，调用价格已变更为每百万输入 tokens 2 元，每百万输出 tokens 8 元。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;路透社的独家报道：&lt;/p&gt; 
&lt;p&gt;- DeepSeek 原计划在 5 月初发布新一代 R2 模型，但已经开始考虑提前发布，这段时间 Grok 3、Claude 3.7、Qwen 2.5-Max 等竞品接连推出，还是有影响的；&lt;/p&gt; 
&lt;p&gt;- 梁文锋在距离清华、北大两所高校步行可达的地段设立了北京办公室，非常乐于和实习生以及应届生一起工作和讨论问题，而且从不鼓励加班；&lt;/p&gt; 
&lt;p&gt;- 采访中一名已经离职的研究员依然对前老板赞不绝口，「他把我们视为专家，不断提问，一起学习，而且愿意下放管理权，普通员工也能参与核心技术，这很让人兴奋」；&lt;/p&gt; 
&lt;p&gt;- 梁文锋在幻方量化时就以薪酬慷慨著称，他会给数据科学家开出 150 万的年薪，而同行给的数字一般不会超过 80 万；&lt;/p&gt; 
&lt;p&gt;- 在创办 DeepSeek 前，幻方量化就制定了把 70% 对可支配收入投入到 AI 研究上的战略，从 2020 年到 2021 年，幻方量化花了 12 亿买卡训练模型；&lt;/p&gt; 
&lt;p&gt;- 这样的异常支出让幻方量化受到了证券监管部门的注意，但最终没有做出干预，这对后来 DeepSeek 的问世至关重要，因为 2022 年开始，中国企业就不太能够合规买到 A100 了；&lt;/p&gt; 
&lt;p&gt;- DeepSeek-R1 爆火之后，梁文锋被建议不要和媒体接触，因为担心过度炒作会引起不必要的争议，尤其是在地缘政治的风口浪尖，苟住再说；&lt;/p&gt; 
&lt;p&gt;- 另有前员工表示，DeepSeek 不缺算力，能够进行大规模训练，但梁文锋对更具经济成本的模型架构非常关注，这决定了 DeepSeek 的发展路线以及后来的巨大成功；&lt;/p&gt; 
&lt;p&gt;- 全球的 AI 大厂至今都还在消化 DeepSeek-R1 造成的影响，也都盯着 R2 的时间表，它的发布会是今年 AI 行业的又一个关键时刻。&lt;/p&gt; 
&lt;p&gt;——转载自「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1560906700%2F5138215416104782&quot; target=&quot;_blank&quot;&gt;阑夕&lt;/a&gt;」微博&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;阅读更多&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335624&quot; target=&quot;news&quot;&gt;DeepSeek 开源周第二日：开源 DeepEP 通信库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335425/deepseek-flashmla&quot; target=&quot;news&quot;&gt;「DeepSeek 开源周」首发项目：FlashMLA&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335778/deepseek-rushes-launch-new-ai-model</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335778/deepseek-rushes-launch-new-ai-model</guid>
            <pubDate>Wed, 26 Feb 2025 02:17:54 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>阿里开源新一代 AI 视频模型通义万相 Wan2.1</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;阿里巴巴宣布全面开源旗下视频生成模型万相 2.1 模型，采用 Apache2.0 协议。此次开源的两个参数版本模型：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;14B 版本万相模型在指令遵循、复杂运动生成、物理建模、文字视频生成等方面表现突出，在权威评测集 Vbench 中，万相 2.1 以总分 86.22% 大幅超越 Sora、Luma、Pika 等国内外模型，稳居榜首位置。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;1.3B 版本万相模型不仅超过了更大尺寸的开源模型，甚至还和一些闭源的模型结果接近，同时能在消费级显卡运行，仅需 8.2GB 显存就可以生成 480P 视频，适用于二次模型开发和学术研究。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据介绍，本次开源的 Wan2.1 在处理复杂运动、还原真实物理规律、提升影视质感以及优化指令遵循方面具有显著的优势，无论是创作者、开发者还是企业用户，都可以根据自己的需求选择合适的模型和功能，轻松实现高质量的视频生成。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同时，万相还支持业内领先的中英文文字特效生成，满足广告、短视频等领域的创意需求。在权威评测集 VBench 中，万相以总分 86.22% 的成绩登上榜首位置，大幅领先了 Sora、Minimax、Luma、Gen3、Pika 等国内外视频生成模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;246&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9615e1f458e5844f6acaf6771c609b63a80.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;294&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a089f7a00ad59e58257cca5822b066df814.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;基于主流的 DiT 和线性噪声轨迹 Flow Matching 范式，万相大模型通过一系列技术创新实现了生成能力的重大进步。包括自研高效的 3D 因果 VAE、可扩展的预训练策略、大规模数据链路构建以及自动化评估指标。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335777</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335777</guid>
            <pubDate>Wed, 26 Feb 2025 02:10:54 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>ChatGPT 现已可用作 Safari 默认搜索引擎</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.macrumors.com%2F2025%2F02%2F24%2Fchatgpt-safari-search-extension%2F&quot; target=&quot;_blank&quot;&gt;据 Macrumors 报道&lt;/a&gt;&lt;/u&gt;，OpenAI 今天更新了 ChatGPT 应用程序，添加了一个新的 Safari 扩展，允许将 ChatGPT 用作通过 Safari 搜索栏进行搜索时的默认搜索引擎。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e8702663a83430f6d7607f657f1fdf88d30.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;更新到最新版本的 ChatGPT 应用程序后，用户可在设置应用程序的 Safari 部分启用 ChatGPT 搜索扩展。打开后，在 Safari 搜索栏中输入的所有查询都会指向 ChatGPT 搜索，而不是谷歌或任何默认设置的搜索引擎。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0225/194253_LjLU_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;该扩展需要获得访问 Google.com 或你的默认搜索引擎网站的许可，但一旦获得许可，用户输入的任何搜索都会重定向到 ChatGPT 的搜索功能，而不是通过 Safari 设置中的默认设置。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335717/chatgpt-safari-search-extension</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335717/chatgpt-safari-search-extension</guid>
            <pubDate>Sat, 22 Feb 2025 11:43:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>特斯拉 FSD 部分能力在中国已推送，命名为「FSD 智能辅助驾驶功能」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;特斯拉官网显示，&lt;strong&gt;FSD 驾驶套件被更名为「FSD 智能辅助驾驶功能」&lt;/strong&gt;，并重新描述其具有的能力，售价仍是 6.4 万元。此前 FSD 功能被直译为「完全自动驾驶能力」。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1010&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0225/185751_YZtN_2720166.png&quot; width=&quot;780&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;另据澎湃新闻报道，特斯拉方面相关人士透露，&lt;strong&gt;公司已将 FSD 的中文表述定为「智能辅助驾驶功能」或「智能辅助驾驶系统」&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1310&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0225/185847_aWQi_2720166.png&quot; width=&quot;2310&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;不过目前看来，这相比特斯拉官网给出的名字少了其中的「FSD」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335712</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335712</guid>
            <pubDate>Sat, 22 Feb 2025 10:59:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>OpenHands —— AI 驱动的软件开发代理平台</title>
            <description>OpenHands 代理可以执行人类开发人员可以执行的任何操作：修改代码、运行命令、浏览网页、调用 API，甚至从 StackOverflow 复制代码片段。</description>
            <link/>
            <guid isPermaLink="false">OpenHands —— AI 驱动的软件开发代理平台</guid>
            <pubDate>Sat, 22 Feb 2025 10:40:00 GMT</pubDate>
        </item>
        <item>
            <title>英国《金融时报》：中国「非常值得投资」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;新华社伦敦 2 月 24 日电（记者郑博非）英国《金融时报》24 日发表文章，尽管面临挑战，中国经济基本面没有发生根本变化。越来越多投资者意识到，中国非常值得投资。文章摘要如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;中国股市今年开始反弹，全球投资者都在问：中国是否具备投资价值？答案是肯定的，而且一直都是如此。将全球第二大市场视为不可投资是错误的。投资者——尤其是外国投资者——现在正在重新发现中国，中国能够在某些特定领域带来巨大的创新和机遇。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;文章说，目前，中国市值超过 10 亿美元且自由现金流收益率超过 10% 的公司有 250 多家，而美国却不到 150 家。在这 250 多家中国上市公司中，多数属于非科技行业，因此投资机会不仅限于互联网和人工智能领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;大盘股在中国上市公司中所占比例仍然较小，给新入市者留下很多空间。在 11 个主要行业中，有 7 个行业的大盘股在中国的集中度低于美国。这意味着每个行业中，市值排名前五企业所占比例更小。此外，中国科技行业的集中度也要比美国低得多，这意味着像深度求索（DeepSeek）这样的私营初创企业可以在不被巨头主导的环境中兴起。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335708</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335708</guid>
            <pubDate>Sat, 22 Feb 2025 10:38:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Trivy：Go 语言编写的开源安全扫描工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Trivy 是 Aqua Security 开发的开源安全扫描工具，专注于检测容器镜像、文件系统、代码仓库等场景中的安全漏洞、配置错误及敏感信息泄露问题。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0225/182528_qWAW_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;GitHub 地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faquasecurity%2Ftrivy&quot; target=&quot;_blank&quot;&gt;https://github.com/aquasecurity/trivy&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Trivy 凭借其全面的检测能力、易用性和开源特性，成为容器安全领域的核心工具。核心功能多场景覆盖：&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;支持扫描容器镜像、文件系统、Kubernetes 集群、Git 仓库及云环境，识别操作系统包（如 Alpine、Debian）和语言依赖项（如 npm、PyPI）的已知漏洞（CVE）；&lt;/li&gt; 
 &lt;li&gt;高精度匹配：内置实时更新的漏洞数据库（如 NVD、Red Hat），提供漏洞描述、修复建议及影响范围分析；&lt;/li&gt; 
 &lt;li&gt;配置错误检查：基础设施即代码（IaC）扫描：检测 Terraform、Kubernetes 等 IaC 文件的配置错误，例如权限过大或敏感端口暴露；&lt;/li&gt; 
 &lt;li&gt;敏感信息泄露检测：自动扫描代码中的密钥、密码等敏感数据；&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;软件物料清单生成：自动生成符合 CycloneDX 或 SPDX 标准的 SBOM&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.oschina.net/uploads/space/2019/0519/084011_8jse_12.gif&quot; width=&quot;600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-89a60262258f1b0d8ed08fff7f4797000fe.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335706</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335706</guid>
            <pubDate>Sat, 22 Feb 2025 10:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>AI 生成文章，作者是 AI？文本数据原作者？提问用户？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;无限猴子与结构蜘蛛&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;假设有一只猴子，它会一直随机地在打字机上敲击键盘。那么只要给它的足够长的时间，它就几乎肯定可以敲出人类任何一本已有图书的内容，例如莎士比亚的全集。从数学上讲，在无限次尝试中，猴子可以敲打出任何一部作品的概率都无限趋近于 1。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;这就是著名的无限猴子定理，它是「荒诞」的。就像如果把一杯水倒入大海中，在之后的某个时刻，我们刚刚好可以打捞出一杯一模一样的水一般。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;但是现在我们已经完全不需要畅想无限猴子了。在自然语言处理（NLP）和文本生成领域，要模仿特定的风格生成文本，如果结合大规模预训练模型、风格特征提取、文本生成调优等技术方法，就可以做到「以假乱真」。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:auto !important; margin-right:auto !important; text-align:justify&quot;&gt;&lt;img height=&quot;1288&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0225/180621_6eOp_3820517.png&quot; width=&quot;1266&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;一种关于 AI 的新型自指罗素悖论：由 AI 写作的一篇「我坚决不看任何 AI 写的东西」&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;这就是同样基于概率的 deepseek 晚近「震惊人类」的创作，它生成的文本几乎无法分辨是不是人写的，并能够模拟任何风格与作者的文本。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;AI 眼中的「文学风格」是什么样的？&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;如果说类似网文、公文等因其程式化、商业化的文体特征，既没有什么独一无二的「作者性」，也没有什么高明的文学性，很容易找到它们「批量生成方式」的话，那我们不妨直接摆上人类整个文学史上最高段的作家之一——三岛由纪夫为例，让 AI 生成一段三岛式的文段：&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;暴雨中的剑道场弥漫着铁锈与朽木的气息，汗水顺着少年绷紧的脊梁滑落，在榻榻米上洇出深色图腾。竹刀相击的脆响里，他看见师父眼角的皱纹藏着江户时代某场未竟的复仇。当狂风掀开纸门，携来山茶花的残瓣黏在汗湿的胸膛时，他恍然领悟肉体不过是盛装耻辱的陶器，唯有在彻底粉碎的瞬间，方能窥见永恒澄明的月光。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;三岛的文风「汪洋恣肆，波云诡谲」，比喻惊世骇俗，往往「语不惊人死不休」，令人拍案叫绝，难以名状。而 Deepseek 交出的答卷，即使还不能说已经足够「以假乱真」，但文风的确已经相当有极具辨识度的三岛韵味了。那么 AI 是怎么做到的呢？&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;当我们说「三岛由纪夫式的段落」时，我们首先在表达的，是一种极度抽象、模糊的文本特征，亦即一种经过后人总结与概括出的美学风格。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;相信很少有人可以否认，三岛由纪夫的核心风格至少是包括以下几个方面的：&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;极端美学：三岛强调死亡之美、肉体之美、秩序与毁灭的共存。他的文字往往冷峻、华丽，带有仪式感。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;日本传统与西方现代性的交融：他擅长描绘日本传统武士道精神、神道教意象，同时又深受西方文学影响（如尼采、波德莱尔）。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;强烈的视觉意象：他的描写极富画面感，常用光影、色彩、质感等细节来增强感官刺激。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;短促有力的句子与复杂华美的句群交替：他能够在冷静、简洁的描述和繁复的抒情段落之间切换自如。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;有美与毁灭的共存、个人意志与时代洪流、武士道精神的绝对化等思想冲突：「唯有被烈焰吞噬的建筑，才能显现其真正的轮廓」「他宁愿让自己的信仰碎裂成光辉四溅的玻璃，也不愿在时代的尘埃中沉默」「肉体不过是意志的器皿，若器皿已破，则意志亦得解放」等。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;不仅如此，嗜读三岛的人们也很容易就可以总结出三岛有以下这些鲜明的修辞风格，甚至可以说风格鲜明到了若是不如此，就根本「不像」三岛作品的程度：&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;对自然的高度拟人化：如「秋日的阳光像一柄锐利的匕首，斜斜地刺入庭院，那金色的光芒在枯叶上燃烧，宛如即将自焚的舞姬。」&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;对肉体的极端关注：如「他脱下衬衫，背肌绷紧，皮肤因寒冷而泛起淡淡的青白色，像是刀刃轻抚过的瓷器。」&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;华丽的比喻与象征：「在夜色中，寺庙的影子倒映在水面，仿佛一匹黑色的战马正在湖心饮水。」&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;而以上三岛核心美学特点与修辞特点的描述正是 AI 自己的「体会」，已经非常准确与出色了，与专家精心编撰的文学史教材中对三岛风格的概括可以说具有几乎同样准确的知识深度。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;上述这些在人类看来是美学风格的东西，在进行过语料库构建与风格学习的机器眼中，却全然是另一番景象。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;机器在收集足够的三岛由纪夫文本后，会首先进行预处理。三岛由纪夫的作品会被机器进行分句、分词，处理日语/中文/翻译英文版本等，并「确保数据格式一致」。此后，机器会采用 TF-IDF、BERTembeddings 等方法分析三岛文本的常见词汇与独特短语，比如他偏好使用的比喻、色彩词、身体意象等。有了上述准备工作，机器就可以对文本进行句法分析，从而识别出三岛句子的结构模式，比如：&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;·修饰性强的长句（多层定语、隐喻、插入语）&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;·简短有力的断句（刀锋般的短句，强调死亡、决绝）。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;其后，机器就可以训练风格分类器（Style Classifier），用以区分三岛文本与其他作家的文本，并让模型学习他的词汇分布、句法模式、修辞风格，从中提取独特的风格特征了。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;AI 是怎么生成特定风格的文本的？&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;当模型根据人类给定的条件来调整输出，并生成特定风格、主题或情感的文字时，比如生成三岛由纪夫风格的文字，就叫做「受控文本生成」。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;大模型会限制输出自己句子的平均长度、从句嵌套深度、比喻使用率等，使其符合三岛的句法特点，并优先使用「死亡、美、毁灭、身体、宗教」等高频词，以保持风格一致性。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;而且如果降低温度（Temperature），就可以控制词汇分布、减少生成随机性，使生成文本更符合训练数据风格，并更具连贯性，不至于过于发散。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;人类也很容易训练一个句法转换模型（Syntax Transfer Model）和比喻生成器（Metaphor Generator），用以将普通文本转换成三岛风格，比如：&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;·普通句子：「落叶在风中飘零」「他的手指微微颤抖」&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;·三岛风格：「秋风撕裂枝头，枯叶如烧尽的诗篇，沉默地坠落」「他的指尖如风中残烛，颤抖着，仿佛即将熄灭」&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;甚至还可以结合情感分析模型（Sentiment Analysis），调整文本的情绪参数，让生成更具三岛式的「悲壮美感」或「压抑感」。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;最后是大模型的评估与优化环节，机器可以自己计算三岛文本与生成文本的困惑度。（Perplexity），评估其可读性与风格一致性，并使用 BERTScore（计算生成文本与参考文本之间单词片段的重复率）、BLEU（衡量生成文本覆盖了多少原文的关键内容）、ROUGE（将文本转化为上下文语义向量，计算生成文本与原文在深层语义上的相似度）等方式，衡量生成文本与三岛原文的相似度。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;再加上人类「专家」的最后的评估与调优，机器就可以把文学、美学风格转化为数据、概率，并由此模拟任何人的写作风格。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;作者应该是 AI 本身，还是「原作者」，亦或是问问题的用户？&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;卡夫卡在临终前给了好友布洛德一份遗嘱，要求他死后销毁所有未发表的手稿，其中包括《城堡》、《审判》等公认最伟大的文学作品。卡夫卡此前就多次表达过类似的意愿，并甚至亲手销毁过自己的手稿，但布洛德选择了&quot;背叛&quot;他最好朋友的遗愿。他不但没有销毁这些手稿，反而倾尽毕生精力整理、编辑并出版了它们。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;米兰·昆德拉正是以这个故事展开他的著名的文论作品《被背叛的遗嘱》的，而且恐怕没有人会对此抱有异议：布洛德救赎了文学，即使他背叛了作家本人的意愿与友谊，他还是干得漂亮，他做得太对了！&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;然而如果我们思考昆德拉在这本书中提出的另一个有趣的问题，答案似乎就不如此黑白鲜明了。斯特拉文斯基坚持认为，演奏者必须严格按照自己乐谱演奏，他反对任何形式的擅自改动。即使在有些时候，经过改动后的乐谱演出效果更好。那么这种有悖于作曲家或艺术家原意的「更好」的改动，是可以被允许的吗？昆德拉借题发挥道：&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;毫无疑问，人们完全可能把《追忆逝水年华》中的某个句子写得更好些。但上哪儿去找这么个愿意读一本修改后的普鲁斯特作品的疯子呢？&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;即使在实质意义上，被改动后的文本是比原来的文本「更好」的，这种改动也是不被允许的。这个问题在昆德拉这里之所以是不证自明的，根本原因在于他认为作者的作品是一个有机的整体，任何改动都可能破坏其内在的逻辑和意义。后人首先应该尊重作者的创作意图，并尽量理解和还原作者想要表达的思想和情感。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;所以昆德拉并没有在这个问题上更进一步，这个被改动了个别词句的，甚至已经改变了作者原意的「文本」，他的作者，到底应该是普鲁斯特，还是应该是普鲁斯特以及改动了这段文本的那个人两人合著呢？&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;而昆德拉之所以没有考虑这个问题，主因或许是印刷时代的纸质图书生成方式，被其他人改动了个别字句的《追忆似水年华》因为没有人愿意看的「市场性」原因根本没有被印出来的价值，而且著作权也不允许这样的著作被印出来。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;所以文本的作者是普鲁斯特与一个没有经过普鲁斯特允许的改写者的情况是不可能发生的。在信息的生产与流通并不依赖纸质图书的印刷、出版的数字时代，一般出现这种偷偷改动原文个别字句并据为己用的情况，自然会被判定为洗稿。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;但如果这段文本的创作者是具有生成能力的大语言模型呢？尤其是大语言模型生成的文本是在它学习了原作者的大量文本后，利用上述手段生成了在人类可以识别的「风格」上完全相同的新的文本。如果 AI 生成文本的风格与原作还有差距，那也只是 AI「还」不能出色地完成仿写任务，而不是 AI「不能」完成这个任务。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;那么 AI 通过仿写生成的文本，他的「作者」到底应该是 AI 本身，是原始文本数据的提供者「原作者」，还是那个通过提问词一步步引导 AI 生产出了这段文本的用户？&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;很多人认为 AI 生成的内容应视为「委托作品」，著作权归属于终端用户。但另一种观点认为，AI 生成的内容缺乏人类创作者的直接参与，不应视为作品，因而不受著作权法保护。纯粹由 AI 生成的艺术作品不应该获得版权保护，因为 AI 提示本身不足以使用户成为作品的作者。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;而 AI 在生成内容时，未经授权使用他人作品进行训练，已经出现过实际的侵权案例。例如，Thomson Reuters 在与 Ross Intelligence 的诉讼中，法院裁定 Ross 未经授权复制其内容用于 AI 训练，侵犯了其版权。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:auto !important; margin-right:auto !important; text-align:justify&quot;&gt;&lt;img height=&quot;216&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0225/180643_5zwk_3820517.png&quot; width=&quot;1236&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;不过美国的版权所有者态度与法律尺度比其他国家更为严苛。据传，几乎所有的著名 AI 公司都曾向数字图书馆安娜的档案提出过合作邀约，但最后美国公司都因为对于版权问题的担忧而最终放弃了合作。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;随着 AI 技术的不断进步，AI 生成内容的著作权归属和相关法律伦理问题只会更加复杂。具有推理与文本生成能力的 AI 技术将为人类社会的方方面面的格局都带来无比重大的改变，版权的概念与相关的法律条文概莫能外。&lt;/p&gt; 
&lt;p style=&quot;color:#2b2b2b; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;em&gt;原文标题：AI 生成的文本，版权应该属于谁？&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;原文链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fculture.ifeng.com%2Fc%2F8h7hfSZDQgO&quot; target=&quot;_blank&quot;&gt;https://culture.ifeng.com/c/8h7hfSZDQgO&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335702/who-is-the-author-of-aigc</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335702/who-is-the-author-of-aigc</guid>
            <pubDate>Sat, 22 Feb 2025 10:12:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>🔥 用 solon-ai 写个简单的 deepseek 程序（构建全国产 ai 智能体应用）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;用国产应用开发框架（及生态），对接国产 ai。构建全国产 ai 智能体应用。&lt;/p&gt; 
&lt;h3&gt;1、先要申请个 apiKey&lt;/h3&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;打开&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepseek.com%2F&quot; target=&quot;_blank&quot;&gt;https://www.deepseek.com&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;官网，申请个 apiKey 。（一万字略过）&lt;/p&gt; 
&lt;h3&gt;2、试试：Hello deepseek&lt;/h3&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;用 solon-initializr (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Fstart%2F&quot; target=&quot;_blank&quot;&gt;https://solon.noear.org/start/&lt;/a&gt;)，生成一个 solon-web 模板项目。之后:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在应用属性里添加配置（app.yml）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span style=&quot;color:#986801&quot;&gt;solon.ai.chat:&lt;/span&gt;
  &lt;span style=&quot;color:#986801&quot;&gt;deepseek:&lt;/span&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;apiUrl:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;https://api.deepseek.com/v1/chat/completions&quot;&lt;/span&gt; &lt;em&gt;# 使用完整地址（而不是 api_base）&lt;/em&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;apiKey:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;sk-9f4415ddc57049658189************&quot;&lt;/span&gt;  &lt;em&gt;# 填写自己申请的 apiKey&lt;/em&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;model:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;deepseek-chat&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;用配置器类构建通用聊天模型&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Configuration&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DeepseekConfig&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Bean&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; ChatModel &lt;span style=&quot;color:#4078f2&quot;&gt;chatModel&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#4078f2&quot;&gt;@Inject(&quot;${solon.ai.chat.deepseek}&quot;)&lt;/span&gt; ChatConfig config)&lt;/span&gt; {
        &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; ChatModel.of(config).build();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加测试用的控制器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Controller&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DemoController&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Inject&lt;/span&gt;
    ChatModel chatModel;

    &lt;span style=&quot;color:#4078f2&quot;&gt;@Mapping(&quot;hello&quot;)&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; String &lt;span style=&quot;color:#4078f2&quot;&gt;hello&lt;/span&gt;&lt;span&gt;(String message)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; chatModel.prompt(message).call().getMessage().getContent();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;测试一下&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;启动项目。打开浏览器地址：&lt;code&gt;http://localhost:8080/hello?message=hello&lt;/code&gt;。效果良好：&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//f0e9c394da0efba47e22276823f509c5.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3、尝试把输出改成 sse，方便打字效果的聊天窗口开发&lt;/h3&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;这里需要添加两个插件依赖，协助流式输出 sse 数据。&lt;/p&gt; 
&lt;table cellspacing=&quot;0&quot; style=&quot;-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;插件&lt;/th&gt; 
   &lt;th&gt;作用&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;code&gt;org.noear:solon-web-rx&lt;/code&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;提供响应式输出（就是流式输出）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;code&gt;org.noear:solon-web-sse&lt;/code&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;提供 sse 渲染支持&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;加好依赖后，只需要改进下控制器的几行代码：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Controller&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DemoController&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Inject&lt;/span&gt;
    ChatModel chatModel;

    &lt;span style=&quot;color:#4078f2&quot;&gt;@Produces(MimeType.TEXT_EVENT_STREAM_UTF8_VALUE)&lt;/span&gt; &lt;em&gt;//这个很重要，申明用 sse 格式渲染&lt;/em&gt;
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Mapping(&quot;hello&quot;)&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; Flux&amp;lt;String&amp;gt; &lt;span style=&quot;color:#4078f2&quot;&gt;hello&lt;/span&gt;&lt;span&gt;(String message)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; Flux.from(chatModel.prompt(message).stream())
                .filter(resp -&amp;gt; resp.hasChoices())
                .map(resp -&amp;gt; resp.getMessage().getContent());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;测试一下&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;启动项目。再次打开浏览器地址：&lt;code&gt;http://localhost:8080/hello?message=hello&lt;/code&gt;。效果良好：&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//e5203586a3b8b8af6b4163714088004d.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;4、现在开始 RAG，以 「联网搜索」 作为知识库&lt;/h3&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;这里把「联网搜索」，做为一个知识库使用（内部是动态搜索的）。用它作为 RAG 的外部检索支持。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;应用属性加一块配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span style=&quot;color:#986801&quot;&gt;solon.ai.chat:&lt;/span&gt;
  &lt;span style=&quot;color:#986801&quot;&gt;deepseek:&lt;/span&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;apiUrl:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;https://api.deepseek.com/v1/chat/completions&quot;&lt;/span&gt; &lt;em&gt;# 使用完整地址（而不是 api_base）&lt;/em&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;apiKey:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;sk-9f4415ddc57049658189************&quot;&lt;/span&gt;  &lt;em&gt;# 填写自己申明的 apiKey&lt;/em&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;model:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;deepseek-chat&quot;&lt;/span&gt;
    
&lt;span style=&quot;color:#986801&quot;&gt;solon.ai.repo:&lt;/span&gt;
  &lt;span style=&quot;color:#986801&quot;&gt;websearch:&lt;/span&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;apiUrl:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;https://api.bochaai.com/v1/web-search&quot;&lt;/span&gt; &lt;em&gt;# 使用完整地址（而不是 api_base）&lt;/em&gt;
    &lt;span style=&quot;color:#986801&quot;&gt;apiKey:&lt;/span&gt; &lt;span style=&quot;color:#50a14f&quot;&gt;&quot;sk-demo...&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;配置器类也调整下&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Configuration&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DeepseekConfig&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Bean&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; ChatModel &lt;span style=&quot;color:#4078f2&quot;&gt;chatModel&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#4078f2&quot;&gt;@Inject(&quot;${solon.ai.chat.deepseek}&quot;)&lt;/span&gt; ChatConfig config)&lt;/span&gt; {
        &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; ChatModel.of(config).build();
    }
    
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Bean&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; Repository &lt;span style=&quot;color:#4078f2&quot;&gt;repository&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#4078f2&quot;&gt;@Inject(&quot;${solon.ai.repo.websearch}&quot;)&lt;/span&gt; AiConfig config)&lt;/span&gt; {
        &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;WebSearchRepository&lt;/span&gt;(&lt;span style=&quot;color:#0184bb&quot;&gt;null&lt;/span&gt;, config);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;再改改控制器（输出重新写回简单的方式，不然不好截图）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#4078f2&quot;&gt;@Controller&lt;/span&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DemoController&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Inject&lt;/span&gt;
    ChatModel chatModel;

    &lt;span style=&quot;color:#4078f2&quot;&gt;@Inject&lt;/span&gt;
    Repository repository;

    &lt;span style=&quot;color:#4078f2&quot;&gt;@Mapping(&quot;hello&quot;)&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; String &lt;span style=&quot;color:#4078f2&quot;&gt;hello&lt;/span&gt;&lt;span&gt;(String message)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; IOException {
        &lt;em&gt;//检索&lt;/em&gt;
        List&amp;lt;Document&amp;gt; context = repository.search(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;QueryCondition&lt;/span&gt;(message).limit(&lt;span style=&quot;color:#986801&quot;&gt;4&lt;/span&gt;));

        &lt;em&gt;//消息增强&lt;/em&gt;
        &lt;span style=&quot;color:#986801&quot;&gt;ChatMessage&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;chatMessage&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; UserMessage.augment(message, context);

        &lt;em&gt;//提交大模型并简单返回（不然，截图不好截）&lt;/em&gt;
        &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; chatModel.prompt(chatMessage).call().getMessage().getContent();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;测试一下&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;启动项目。打开浏览器地址：&lt;code&gt;http://localhost:8080/hello?message=solon%20%E6%98%AF%E8%B0%81%E5%BC%80%E5%8F%91%E7%9A%84%EF%BC%9F&lt;/code&gt;。效果良好：&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//18bfae28a4f48b983dcc7a867cdd6ddc.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335701</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335701</guid>
            <pubDate>Sat, 22 Feb 2025 10:04:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>大模型选型攻略，限免！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;赠书啦，欢迎大家在评论区聊聊「大模型选型那些事」，畅所欲言&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;我们将在评论区随机选出 3 名 OSCer，赠送&lt;span style=&quot;color:#007aaa&quot;&gt;&lt;strong&gt;《AI 赋能：大模型概念、技术及企业级项目应用&lt;/strong&gt;&lt;strong&gt;》&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2c3e50&quot;&gt;一本&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#2c3e50&quot;&gt;活动截止时间：2 月 28 日 18:00&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;面对市场上众多的大模型选择，如何进行科学的选型也成为了企业面临的一个重要问题。根据笔者的实践经验总结，我们会从&lt;/span&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;&lt;strong&gt;大模型基础信息评估、大模型性能评估&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;和&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;大模型的备案信息评估&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;三个维度来进行大模型的选型。&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;大模型基础信息评估&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型基础信息评估作为选型的第一步，显得尤为关键。下面我们将从参数量、数据规模和维度、模型架构、模型能力应用领域、供应商企业特征以及社区支持与生态系统等六个角度，详细阐述大模型基础信息评估。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;1.参数量&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;参数量是衡量大模型复杂度的重要指标，它直接影响到模型的表达能力和学习能力。根据大模型的缩放定律和涌现能力，参数量越大，模型的学习能力和表达能力通常越强。然而，参数量的增加也会带来计算资源的消耗和训练难度的提升。这也会影响到项目执行中的微调策略，以及上线运行时的计算资源。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;因此，根据企业的计算资源和业务需求，选择适当参数量的模型。对于资源有限的企业，可以选择参数量适中的模型以平衡性能和资源消耗。避免盲目追求大参数量，要结合实际应用场景来评估模型的性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;2.模型数据规模和维度&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;数据是训练大模型的基础，数据规模和维度的选择直接影响到模型的训练效果和性能。大而全的数据集有助于模型学习更广泛的知识，提高泛化能力，而特定领域的数据集则能使模型在特定任务上表现更出色。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;因此，优先选择与企业所在行业、领域相关的数据集训练的模型，以确保模型对特定领域有深入的理解。同时，考虑数据的丰富性和多样性，以提高模型的泛化能力和适应性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;3.模型架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;模型架构决定了大模型的学习方式和性能上限。&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前主流的大模型架构大多基于 Transformer，但不同模型在架构上可能有所创新和优化，以适应不同的应用场景。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;因此&lt;/span&gt;&lt;span style=&quot;color:#ff0000&quot;&gt;，&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;在实际项目中，要关注模型架构的创新性和优化点，了解其在提升性能、降低计算复杂度等方面的改进，选择经过验证、性能稳定的模型架构，以降低实际应用中的风险。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;4.模型能力应用领域&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;不同的大模型可能针对特定领域进行了优化，或者其底层训练数据决定了其应用能力。因此，在选择大模型时，需要根据企业的实际需求来确定模型的应用领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;5.供应商企业特征&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;供应商的企业特征也是选型时需要考虑的因素之一。包括供应商的信誉、技术实力、服务质量等都会影响到模型的使用体验和后续支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;6.&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;社区支持与生态系统&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;一个活跃的社区和丰富的生态系统意味着更多的资源和支持，有助于企业在使用过程中解决问题和优化模型。社区的活跃度和生态系统的完善程度也是评估大模型价值的重要因素。&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;大模型性能评估&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型性能评估是选定基础信息后的关键环节，它旨在全面衡量大模型在实际应用中的表现。在项目实操中，我们从两个主要方面来评价大模型的性能：&lt;/span&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;&lt;strong&gt;大模型通用模型能力&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;和&lt;/span&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;&lt;strong&gt;场景适应能力&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;。对于通用模型能力，我们会综合考察备选大模型在基础能力、智商能力、情商能力和工具提效能力等各方面的表现，以此来判断其是否具备类似于人的通用智能。而场景适应能力评估则更为具体，我们会根据项目的实际需求设计验证性问题，通过大模型对这些问题的回答和处理情况来检验其是否真正符合项目的特定要求。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;img height=&quot;401&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e8bff27e462a46054d55333b18902f01043.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;表 1.大模型通用能力评估方法问题量表&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;435&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-27d3432a05284e47bcb989e67234f71529a.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;图 1.&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;大模型通用测试评估示例&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;455&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-81d3dc57c57a1493421ccf78a888fdd8100.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;图 2.&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;大模型提示词优化后的特定场景评估示例&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;457&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6c36432f534adb2fa1fe6b94fa1bbdfd1da.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;图 3.&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;大模型微调后的场景能力测试评估示例&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;&lt;strong&gt;大模型备案信息评估&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前虽然没有明确要求企业在构建私有大模型时只能应用备案过的大模型，但是完成备案的大模型都经过了严格的能力审查，在模型性能和安全性上有较强的优势，因此建议企业优先选用通过备案的大模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;1. 大模型备案概述&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型备案，即生成式人工智能（大语言模型）上线备案，是网信部门针对生成合成（深度合成）类算法的特定管理流程。这一制度的设立，旨在确保大模型在上线运行前已经通过了严格的能力审查和安全评估，从而保障其在模型性能和安全性方面达到一定的标准。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在这里，「生成式人工智能技术」特指那些具备文本、图片、音频、视频等内容生成能力的模型及相关技术。而「深度合成技术」则涵盖了利用深度学习、虚拟现实等手段制作文本、图像、音频、视频等网络信息的技术。这些技术包括文本生成与风格转换、问答对话，以及人脸生成与替换、人物属性编辑等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（1）大模型备案的主体&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据《生成式人工智能服务管理暂行办法》的规定，具有舆论属性或社会动员能力的生成式人工智能服务提供者，需按照国家相关规定开展安全评估并进行备案。这些服务提供者主要分为两类：平台运营方和技术支持方。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（2）大模型备案流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;如下图所示，大模型备案流程的重要节点如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;678&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6d05f943e3d30a4d32010089051cbabd587.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;图 4.&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;大模型备案流程&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（3）大模型备案所需材料&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在进行大模型备案时，服务提供者需要准备以下材料：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型上线备案申请表：详细填写模型的基本信息、开发团队情况、应用场景等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;附件 1：安全自评估报告：对模型的安全性进行全面评估，包括数据安全性、算法安全性、系统安全性等方面。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;附件 2：模型服务协议：明确服务提供者与用户之间的权利义务关系，保障双方合法权益。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;附件 3：语料标注规则：详细说明模型在训练过程中使用的语料标注规则和方法。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;附件 4：关键词拦截列表：列出可能被模型识别并拦截的关键词或敏感词汇。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;附件 5：评估测试题集：提供一套用于评估模型性能和准确性的测试题集。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;综上所述，大模型备案制度的确立和实施对于规范我国人工智能技术的发展具有重要意义。通过严格的备案流程和材料审核，可以确保大模型在合法性、安全性和性能方面达到高标准，从而推动我国人工智能产业的健康、可持续发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;2. 企业对备案信息审查评估&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型在备案时会提交详细的应用场景、安全自评估报告、模型的预料标注规则、关键词和敏感词拦截信息以及测试集信息等。这对企业全面了解和评估大模型的能力和应用，确定供应商是否具备本项目的实施能力至关重要。以下是我们在项目实践中的常用方法。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（1）明确评估目标与标准&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在开始评估前，企业应首先明确自身的业务需求、技术要求和安全标准。这有助于企业在后续的评估过程中，更加针对性地审查相关信息，确保所选大模型能够满足企业的安全需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（2）审查应用场景&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;企业需仔细阅读大模型备案中提供的应用场景描述，了解模型的主要用途、使用环境和预期效果。通过对比企业的实际需求，判断该模型是否适用于本企业的业务场景。同时，关注应用场景中可能存在的风险点和挑战，以便在后续合作中制定相应的应对措施。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;（3）分析安全自评估报告&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;安全是企业在选择大模型时不可忽视的重要因素。企业应详细审查安全自评估报告，了解模型在数据安全、算法安全和系统安全等方面的设计和实施情况。特别关注报告中提到的安全漏洞和应对措施，确保模型在实际应用中能够保障企业数据的安全性和完整性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（4）核查预料标注规则&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;预料标注规则直接影响大模型对数据的理解和处理能力。企业应核查这些规则是否科学、合理，并符合企业的数据处理需求。通过对比不同模型的标注规则，选择那些能够更准确地反映企业数据特征和处理逻辑的模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（5）检查关键词和敏感词拦截信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;关键词和敏感词拦截功能对于保障信息安全和遵守法律法规至关重要。企业应检查备案信息中提供的关键词和敏感词列表，确保其全面且符合企业的合规要求。同时，测试模型的拦截功能是否有效，以避免在实际应用中出现不当内容或敏感信息的泄露。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;（6）评估测试集信息与模型性能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;测试集信息是评估大模型性能的重要依据。企业应审查测试集的设计是否合理、数据是否丰富多样，并了解测试过程中的评估指标和方法。通过对比不同模型的测试结果，选择那些在准确率、召回率等关键指标上表现优异的模型。此外，企业还可以自行设计测试用例，对模型进行进一步的性能测试。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;综上所述，企业对大模型备案信息的审查评估是一个系统而细致的过程。通过明确评估目标、审查应用场景、分析安全报告、核查标注规则、检查关键词拦截信息以及评估测试集信息与模型性能等具体步骤，企业可以更加全面地了解大模型的能力和应用情况，从而做出更加明智的选择。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;以上内容节选自《AI 赋能：大模型概念、技术及企业级项目应用》&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;作者：田野，张建伟&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;436&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-111c957c954945b1bd502ae1abb3549868e.png&quot; width=&quot;372&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;&lt;strong&gt;《AI 赋能：大模型概念、技术及企业级项目应用&lt;/strong&gt;&lt;strong&gt;》&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;田野，张建伟&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:8px; margin-right:8px&quot;&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;京东「计算机与互联网」图书销量榜 TOP1！&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:8px; margin-right:8px&quot;&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;三一集团副总裁、三一商用车智造公司总经理吴盛楠、徐工集团工程机械股份有限公司副总裁闫君，倾情作序。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:8px; margin-right:8px&quot;&gt;&lt;span style=&quot;color:#007aaa&quot;&gt;联想方案服务业务集团大模型与智能体项目实践经验总结，全景式展现大模型产品生态圈及技术原理，提出大模型选型和建设标准及项目实施方法，企业建设、部署、应用大模型的实用指南。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;本书聚焦于大模型技术在企业中的实际应用，帮助读者应用大模型为企业降本增效。全书共 6 章：初识大模型、大模型产品生态圈、大模型的技术原理、企业如何部署和应用大模型、企业大模型项目的实施方法、大模型企业应用实践。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;本书提供了详细的大模型选型和建设标准，旨在为企业提供一份清晰的大模型建设指南，帮助读者了解如何建设、部署和应用大模型。本书详细介绍了企业大模型项目的实施方法，从项目规划到工程化部署，并通过具体的企业应用实践案例，展示了大模型在基座型基础设施、企业知识中台、业务知识库、智能体及个人办公智能辅助工具中的强大应用潜力，帮助读者在实践中掌握应用大模型的关键技术和管理能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;本书的读者对象为人工智能、机器学习和数据分析等领域的从业人员，对企业数字化转型和智能化应用感兴趣的企业管理者和决策者，希望通过大模型技术和实施方法增强自身技能的技术研究者和开发者，以及对大模型技术感兴趣并希望深入了解和探索这一前沿科技及其应用场景的读者。&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/4489239/blog/17766917</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4489239/blog/17766917</guid>
            <pubDate>Sat, 22 Feb 2025 09:41:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>MongoDB 以 2.2 亿美元收购 Voyage AI</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;数据库引擎开发商 MongoDB &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mongodb.com%2Fblog%2Fpost%2Fredefining-database-ai-why-mongodb-acquired-voyage-ai&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;收购 Voyage AI，以帮助企业减少人工智能应用程序中的幻觉。&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-02-24%2Fmongodb-buys-voyage-ai-for-220-million-to-bolster-ai-search&quot; target=&quot;_blank&quot;&gt;彭博社&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;报道称，此次交易价值为 2.2 亿美元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;MongoDB 总裁兼首席执行官 Dev Ittycheria 在文章中表示，Voyage AI 与 MongoDB 的集成将确保开发人员不再需要管理外部嵌入 API、独立向量存储或复杂的搜索管道。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Voyage AI 的嵌入模型是 Hugging Face 社区中评价最高的零样本模型。「通过将 Voyage AI 的检索功能集成到 MongoDB 中，我们可以帮助组织更轻松地构建更准确、更可靠的 AI 应用程序，而不会产生不必要的复杂性。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;287&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-14213f38f7dfc97a97bc1d60c537f25afe2.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Voyage AI 与 MongoDB 集成将分三个阶段进行，第一阶段，Voyage AI 的文本嵌入、多模式嵌入和重新排名模型将通过 Voyage AI 当前的 API 以及 AWS 和 Azure 市场广泛提供。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其次，MongoDB 将把 Voyage AI 的功能嵌入到 MongoDB Atlas 中，首先是针对 Vector Search 的自动嵌入服务，该服务将自动处理嵌入生成。最后，MongoDB 将添加先进的 AI 检索功能并增强多模式功能。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335684/mongodb-acquires-voyage-ai</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335684/mongodb-acquires-voyage-ai</guid>
            <pubDate>Sat, 22 Feb 2025 08:36:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>豆包小范围内测深度思考模型，接入的不是 DeepSeek</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;2 月 25 日，网友发现与字节跳动旗下的豆包聊天机器人对话时，会显示推理过程的思维链。豆包相关负责人回应称，&lt;strong&gt;豆包正小范围测试深度思考模型的不同实验版本&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6781d7f32bfccb0ddae5e6e6c7fb9302f67.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;699&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0225/161846_8Q1Y_2720166.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;根据网友提供的截图，目前豆包对话页面暂未显示「深度思考」功能的入口，但被灰度到的用户在询问不同问题后，豆包生成的答复中会显示思维链。&lt;/p&gt; 
&lt;p&gt;据了解，&lt;strong&gt;豆包测试的推理模型为字节跳动自研&lt;/strong&gt;。1 月中旬曾有消息显示，字节跳动开发团队基于豆包 1.5 基座模型，通过 RL（强化学习）算法的突破和工程优化，在未使用其他模型数据的情况下，研发豆包深度思考模型。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335677</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335677</guid>
            <pubDate>Sat, 22 Feb 2025 08:23:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>行云前端重构之路：从单体应用到 Monorepo 的血泪史</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
 &lt;h2 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;一、行云 2.0 的开篇&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;话说天下大势，合久必分，分久必合。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;在行云 2.0 时代，一个原本平平无奇的业务工程，宛如一颗迅速膨胀的种子，短短两三个月，便摇身一变，成为容纳百十来个子应用的庞大「生态系统」。这些子应用来自五湖四海，各自施展浑身解数，为 JDer 们提供琳琅满目的产品功能，无论是与产研紧密相关，还是关联性稍弱的功能，皆涵盖其中。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;作为基于 Vue 搭建的平台，不仅能够跨技术栈加载非 Vue 技术栈的应用，对于 vue 技术栈的应用还无私地奉献出了全局共享的 Vue 实例、router、vuex 等等，同时连带全局组件库以及 axios 实例的分发，为依赖 Vue 技术栈的子应用提供全方位的支持，尽心哺育着有全局依赖需要的子子孙孙们。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
 &lt;h2 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;二、回溯往昔：架构困境初现&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;不过，不管您用没用过这些出色的产品工具们，咱今天都不打算讨论子应用们，而是转回头审视行云前端工程最初的架构模样，着实还是有些惨不忍睹的。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;惨在何处呢，我们粗略地说来：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;代码结构混沌：平台与业务代码纠葛不清&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;虽设有&lt;code&gt;/modules&lt;/code&gt;目录用以存放不同业务域的代码，然而，文件夹之间组件引用关系错综复杂。以实际场景为例，在 A 业务模块开发过程中，开发人员可能因便捷性，直接引用了 B 业务模块中的某个组件，但并未遵循清晰的业务分层或模块划分原则。如此一来，当 B 业务模块进行调整时，极有可能影响到 A 业务模块的正常运行，使得代码的依赖关系犹如一团乱麻，难以梳理清晰。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;以下是一个简化的模块依赖关系图，可以看出来此时复杂依赖情况：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100028378&quot; data-ratio=&quot;0.5824074074074074&quot; src=&quot;https://oscimg.oschina.net/oscnet/42432734-24bf-43f9-bab1-b1613880ddad.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;span style=&quot;font-size: 16px;height: 0px;color: transparent;outline: none;&quot; data-slate-spacer=&quot;true&quot;&gt;﻿&lt;/span&gt;﻿实线箭头表示确定的依赖关系，虚线箭头表示可能存在的相互依赖或引用。实际情况也许更糟糕。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;2. 业务杂糅：单体应用的沉重负担&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;这个单体应用身兼数职，既承担平台基础功能搭建，又涉足协作域业务开发，甚至还包含一些并非严格意义上子应用，却拥有顶级路由的特殊页面，如开放平台、开发者后台、应用商店等。不同业务逻辑在同一代码库中交织缠绕，业务之间耦合度极高。任何一处业务逻辑的修改，都可能像推倒多米诺骨牌一样，引发一系列难以预估的问题，极大增加了代码维护与扩展的难度。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;3. 频繁发版之殇：全量构建的弊端&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;协作域作为业务迭代的「主战场」，业务更新极为频繁，每两到三周便可能经历多次发版。但当时采用的全量构建方式，虽操作相对简单，却存在严重弊端。每次发版时，不仅协作域代码会更新，连平台业务也会被一并更新。此时最可怕的事情莫过于听到的是：行云，又双叒叕白屏了……&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;4. 商业化困境：业务切割难题凸显&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;当行云迈向商业化进程，业务切割不清的问题愈发棘手。客户需求千差万别，例如有些客户只希望购买平台上的代码库，明确表示不要协作域功能，仅保留工作台，同时又要求配备开放平台和帮助中心。面对此类需求，开发团队由于原有代码结构缺乏清晰的业务边界划分，只能通过大量的手动删改代码来满足客户要求。这一过程不仅耗时费力，而且极易因人为失误引入新的问题，OMG…只能一把鼻涕一把泪地删删改改日日到天明。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;5. 内部迭代困境：新旧代码鸿沟难越&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;随着行云内部不断迭代新功能，交付团队面临着巨大挑战。新功能开发过程中，技术栈逐渐演进，从 JS 到 TypeScript 的变革、Vue 版本从 2.6 升级到 2.7，这期间代码兼容性出现诸多问题，简单的代码拷贝已无法实现。同时，包依赖也发生了显著变化，以前交付的标品工程结构已经逐渐演变为多个 multi - repo，与内部迭代的版本相差甚远。这些因素叠加，使得新功能迁移到现有工程变得异常艰难。开发人员需要深入研究不同版本之间的差异，解决各种依赖冲突，其难度不亚于完成一项高难度的拼图任务。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;6. 静态资源臃肿：公共依赖的枷锁&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;平台积累了大量臃肿的静态资源，尽管进行了代码分割，能够做到非必要业务不加载，但作为支撑 Vue 子应用的平台，必要的公共依赖无法轻易翦除。而且平台自身的架构也对这些公共设施有依赖需求，导致静态资源占用空间始终居高不下，影响应用的加载性能。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;7. 废弃组件堆积：代码库的隐形负担&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;在数年的开发过程中，虽然沉淀了不少全局复用的组件，但随着业务迭代，部分组件已被废弃，或者虽在 UI 层面不再使用，但仍在一些边角业务中少量存在。这些废弃组件依旧躺在代码库的 components 目录里，白白占据代码体积，增加了代码维护的复杂性。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;8. 原子样式乱象：无序使用的代价&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;行云前端很早就实践了原子样式，在摸索阶段，由于缺乏统一的使用规范，不同同学采用不同的使用姿势。例如，对于同样的样式效果，有人用 w-24px，有人用 w-6。同时，有些开发者在组件中既采用 BEM 命名风格设置样式，又在各个 class 里使用@apply 引入原子样式，这种做法既无法享受原子样式无需费劲命名 class 的优势，又不能有效重用 class 以减少构建体积，还浪费了构建时的资源。直到有一天我们发现，windicss 停止维护了。。。这是上天给我们悔过的机会啊，是时候把乱象丛生的杂草整顿干净了。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;9. 新业务扩展难题：平衡之术的挑战&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;当计划开展新业务时，面临着诸多挑战。一方面要保证新业务与现有业务在 UI 风格、交互方式以及与后端 API 交流方式等方面保持一致；另一方面，要确保新业务的加入不会增加现有业务的构建时间（当时构建时间动辄八分钟），且不会引入更复杂的依赖关系。简单来说，就是要实现工程的易扩展性，同时满足开闭原则，这对工程架构提出了极高的要求。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;10. 构建方式单一：Vue CLI 的局限性&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;整个工程所有业务均统一采用 Vue CLI 进行构建。Vue CLI 虽具有上手容易、配置简单等优点，但随着业务规模的不断扩大和复杂度的提升，启动慢、构建慢、构建过程中也会有不必要地编译和打包一些无需更新的代码，延长了构建时间，降低了开发效率。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
 &lt;h2 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;三、困境中的挣扎与坚持&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;对于一个服务上万 JDer 研发的业务而言，产品迭代如同奔腾不息的河流，不能有片刻停滞。业务在飞跑，我们如何停下来好好思考呢？可以的，不要停，一边跑一边搞。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;我们幸运的（苦涩地🤷‍♀️）迎来了一个完美的契机：&lt;/span&gt;&lt;/p&gt; 
 &lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;14&quot; data-source-title=&quot;&quot;&gt; 
  &lt;section class=&quot;js_blockquote_digest&quot;&gt; 
   &lt;section&gt;
     给你个机会实现一下内外同源。 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;于是，故事就从这里开始了。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;故事开始前再唠叨两句掏心窝子的废话……本段可以跳过。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;为什么说是血泪史呢？对于一个服务着上万 JDer 研发的业务来说，产品迭代不能停，人力资源有限，寥寥三五个小可爱，还有同学是兼职来共建的，再加上，这是一个揹负着十多万行代码的仓库，想要短时间内完成治理几乎可以说是天方夜谭。哪怕是在我们确定了改造方向并且开始实施到中途时，都无数次的怀疑过自己，怀疑过是否决策正确，无数次的质疑过这样的努力是否真的是有价值的，痛苦的日子真的想过还是放弃算了。是的，真的很难。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;但是现在回想起来，只要我们在做正确的事情，那就是值得的。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
 &lt;h2 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;四、内外同源：破局的曙光&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;废话不多说，我们几个老可爱加上小可爱经过了多次头脑风暴（反复折腾和分析），确定了几个改造重点方向（主要是解决以上问题），确定了改造原则（模块化实践原则），盘了我们能动用的人力和投入的资源配比，制定了&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;《内外同源绞杀计划》&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;，该计划将分步骤将任务分别拆分到几个不同的迭代内完成，改造任务和业务 story 的迭代人力资源配比大概是 1:3，保障功能迭代稳健推进。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
 &lt;h3 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;「绞杀者模式」的启示&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;为什么叫绞杀计划呢？这个 idea 源于老司机一次聊天时提到的&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;绞杀者模式&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&quot;。概括来说就是：&lt;/span&gt;&lt;/p&gt; 
 &lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;92&quot; data-source-title=&quot;&quot;&gt; 
  &lt;section class=&quot;js_blockquote_digest&quot;&gt; 
   &lt;section&gt;
     绞杀者模式是一种软件设计模式，用于逐步替换现有的大型系统或应用，通过新系统逐渐接管旧系统的功能，最终完全取代旧系统，而无需一次性完成整个系统的重写。这种方式可以减少风险，确保平稳过渡。 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;这在当时一筹莫展、选择艰难的我看来，仿佛醍醐灌顶一般看到了曙光。&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_6&quot;&gt;&lt;/span&gt; 
 &lt;h3 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;改造的主要目标&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;在这个绞杀计划里，主要目标在于：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;1. 模块切割：把平台和业务代码分家，公共依赖和业务应用实现分离。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;2. 构建瘦身：避免全量构建了，发布哪个应用就只构建这个应用相关的依赖，平台别再背锅白屏了。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;3. 代码断舍离：废弃组件、冗余代码，统统清理掉。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;4. tw 样式规范：原子样式别再乱写了，按照同一份选择实践。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;5. 扩展性与可维护性升级：采用分层架构，保持良好的独立性和可扩展性。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;6. 绞杀者模式上线：制定详细的过渡计划，分阶段逐步替换旧系统的功能模块。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;总之，既要让行云前端轻装上阵，又要让它跑得更快、更稳、更优雅！&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
 &lt;h2 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;五、架构演进路线&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;基于以上目标，我们制定了以下具体的改造路线：&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
 &lt;h3 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;strong&gt;阶段 1：主工程准备（基于 pnpm workspace 把现有工程改造为 monorepo）&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;创建目录结构&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;工具引入：pnpm workspace, nx&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;更新 CI/CD 配置&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-indent: 2em;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;详情请移步：&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 109, 217);background-color: transparent;font-size: 16px;letter-spacing: normal;&quot;&gt;行云前端重构之路-Monorepo 实践篇&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_9&quot;&gt;&lt;/span&gt; 
 &lt;h3 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;strong&gt;阶段 2：monorepo 架构实施&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;业务模块分离：划分几个相对独立的，有自己的路由、状态管理的子应用，均可独立开发运行和发布，放在 apps/下&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;▪&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;轻量的新平台实现：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;color: rgb(140, 140, 140);&quot; data-w-e-reserve=&quot;true&quot;&gt;▪&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140);font-size: 16px;letter-spacing: normal;&quot;&gt;Radix vue 在 vue3 中的实践（待完善，文章在路上）&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;color: rgb(9, 109, 217);&quot; data-w-e-reserve=&quot;true&quot;&gt;▪&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 109, 217);font-size: 16px;letter-spacing: normal;&quot;&gt;延伸阅读请移步这里：&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 109, 217);font-size: 16px;letter-spacing: normal;&quot;&gt;Shadcn UI + React Hook Form + Zod 在行云工程中的实践&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;▪&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;使用 JModule 快速实现宿主平台&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;移除 Windi CSS，全工程迁移到 Tailwind CSS，集中管理 Tailwind CSS 配置&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;▪&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;详情请移步：&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 109, 217);background-color: transparent;font-size: 16px;letter-spacing: normal;&quot;&gt;Tailwind CSS 在 Monorepo 中的实践&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;公共 pkg 抽离：common/common-service/utils/tailwind-config/components&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;color: rgb(140, 140, 140);&quot; data-w-e-reserve=&quot;true&quot;&gt;▪&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140);font-size: 16px;letter-spacing: normal;&quot;&gt;搭建一个 vue-ts ui 组件库总共分几步（待完善，文章在路上）&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;color: rgb(140, 140, 140);&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;color: rgb(140, 140, 140);font-size: 16px;letter-spacing: normal;&quot;&gt;缓存策略优化（待完善，文章在路上）&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_10&quot;&gt;&lt;/span&gt; 
 &lt;h3 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;strong&gt;阶段 3：自动化构建流程&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;构建方案和工具的选用：&lt;strong&gt;业务工程使用 vue-cli/vite；基建 pkg 使用 vite/tsup&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;构建流程优化：依赖关系处理，哪些包需要前置构建等&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;发布脚本&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;六、改造后的工程新面貌&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_11&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;主业务的新依赖关系图&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100028377&quot; data-ratio=&quot;0.3101851851851852&quot; src=&quot;https://oscimg.oschina.net/oscnet/e12f8365-23d5-4df4-b690-0f2657f64987.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;span style=&quot;font-size: 16px;height: 0px;color: transparent;outline: none;&quot; data-slate-spacer=&quot;true&quot;&gt;﻿&lt;/span&gt;﻿工程结构对比（图）&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100028379&quot; data-ratio=&quot;1.0287037037037037&quot; src=&quot;https://oscimg.oschina.net/oscnet/e7c5c450-d24c-4196-b5cf-c9173176818c.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;span style=&quot;font-size: 16px;height: 0px;color: transparent;outline: none;&quot; data-slate-spacer=&quot;true&quot;&gt;﻿&lt;/span&gt;﻿在新的工程结构中，主要包含以下部分：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;apps/: 包含多个独立的应用&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;admin/: 管理后台应用，用于系统管理和配置&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;ai-assistant/: AI 助手应用，提供智能交互和辅助功能&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;jacp/: 主要的协作域应用，包含核心业务逻辑&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;open/: 开放平台应用，用于对外提供开放平台、文档等功能&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;platform/: 平台应用，用于统一管理和集成其他应用&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;packages/: 包含可复用的模块和库&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;common/: 提供 vue 共享的环境和资源&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;common-service/: 通用服务，如 API 调用、数据处理等&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;components/: 可复用的 UI 组件&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;tailwind-config/: Tailwind CSS 配置，用于统一样式&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;utils/: 工具函数集合&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;◦&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;xingyun-elements/: 存放 web-component 组件&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_12&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;技术栈&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;前端框架：Vue.js&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;Monorepo 管理工具：Nx (提供工作区管理、依赖图分析、增量构建等功能)&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;包管理器：pnpm&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;UI 框架：自定义组件库 + Tailwind CSS&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;类型检查和代码质量工具：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;构建工具：Vue CLI/Vite (用于 Vue 应用的开发和构建)&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_13&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;架构设计原则&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;模块化：通过 packages 目录中的不同模块实现代码复用和关注点分离。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;微前端：多个独立应用可以独立开发、部署和扩展。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;组件驱动开发：首先关注于创建和完善单个组件，然后将这些组件组合成更复杂的结构，最终形成完整的用户界面。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;主题定制：使用 Tailwind CSS 实现灵活的样式定制。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;5.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;增量构建：利用 Nx 的依赖图分析，只构建产生变化的部分，提高开发效率。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;6.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;代码质量保证：使用 TypeScript 和 ESLint 确保代码质量和一致性。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_14&quot;&gt;&lt;/span&gt; 
 &lt;h4 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;模块职责&lt;/span&gt;&lt;/h4&gt; 
 &lt;span id=&quot;OSC_h5_15&quot;&gt;&lt;/span&gt; 
 &lt;h5 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;应用模块 (apps/)&lt;/span&gt;&lt;/h5&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;每个应用模块都是相对独立的，有自己的路由、状态管理和 UI 组件，均可独立开发运行和发布。它们可以共享 packages 中的代码。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;jacp: 核心业务应用，实现主要的协作域业务逻辑。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;platform: 独立的平台应用，用于加载其他子应用，提供统一平台入口。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;admin: 负责系统配置、用户管理等后台管理功能。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;open: 负责行云开放平台及应用商店、开发者后台、文档管理等业务功能。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;ai-assistant:提供调用 (Autobots)AI-Chat 的用户交互界面，在平台中使用 iframe 加载其页面。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h5_16&quot;&gt;&lt;/span&gt; 
 &lt;h5 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;共享模块 (packages/)&lt;/span&gt;&lt;/h5&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;共享模块提供了可以在多个应用中复用的功能和组件。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;common: 为共享 vue 实例的子应用导入并配置了必要的依赖，提供了一个共享的环境和资源（这个 pkg 只为兼容历史发展中与平台有紧密联系的部分子应用，在未来计划逐步改造为可独立管理独立运行的模块）&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;common-service: 封装通用的后端服务调用和数据处理逻辑。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;components: 包含可在多个应用中使用的 UI 组件，可独立安装使用。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;tailwind-config: 集中管理 Tailwind CSS 配置，确保样式的一致性。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;utils: 提供各种通用的工具函数。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;xingyun-elements: 存放 web-component 组件。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h5_17&quot;&gt;&lt;/span&gt; 
 &lt;h5 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;模块化开发原则与代码结构&lt;/span&gt;&lt;/h5&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;模块化开发原则：构建高内聚低耦合的独立模块，确保单一职责、清晰接口和可复用性，以提升代码的可维护性、可测试性和可扩展性。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;从 monolith repo 到 monorepo：重构带来的代码结构优化。monorepo 实现了更好的代码共享、版本一致性和构建效率，同时保持了清晰的模块边界。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;开发体验优化：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;部分项目迁移到 Vite，利用其快速的开发服务器和构建能力。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;利用缓存提高启动速度，减少资源消耗，以提高开发效率。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;构建配置添加并行处理以提高构建速度。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;Webpack 构建的应用使用硬件缓存。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;减少低频变化包的构建：此处有坑。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;•&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;微前端小工具：进一步简化子应用的调试步骤。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h5_18&quot;&gt;&lt;/span&gt; 
 &lt;h5 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;云端构建优化与缓存策略&lt;/span&gt;&lt;/h5&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;代码分割：部分业务应用使用 Vue 的异步组件和 Webpack 的动态导入实现按需加载。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;缓存优化：通过利用 Webpack 的文件级缓存和 Nx 的缓存和增量构建功能提高构建速度。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;在行云部署缓存实现：行云部署的缓存基于构建镜像存储，通过将源码拷贝到缓存目录下，可以显著提高缓存读取效率。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;Monorepo 的结构：应用独立化后，可按需构建，提高单个应用构建速度和资源利用率。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h5_19&quot;&gt;&lt;/span&gt; 
 &lt;h5 style=&quot;text-align: left;margin-bottom: 8px;&quot; data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;扩展性&lt;/span&gt;&lt;/h5&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;添加新应用：在 apps/目录下创建新的应用目录，配置 Nx 工作区。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;添加新共享模块：在 packages/目录下创建新的模块，并在需要使用的应用中引入。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;margin-right: 0.5em;&quot; data-w-e-reserve=&quot;true&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;扩展现有模块：遵循开闭原则，通过扩展现有类或组件来添加新功能。&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_20&quot;&gt;&lt;/span&gt; 
 &lt;h2 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;﻿&lt;br&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;span id=&quot;OSC_h2_21&quot;&gt;&lt;/span&gt; 
 &lt;h2 data-slate-node=&quot;element&quot; data-slate-inline=&quot;false&quot; style=&quot;margin-bottom: 8px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;行云前端工程从单体应用发展到微前端架构的过程中，虽实现功能集成但面临诸多困境。通过 「内外同源」 的契机，秉持模块化实践原则，制定 「内外同源绞杀计划」 进行改造。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;改造前，工程存在平台与业务代码混淆、业务混杂、构建不合理、业务切割困难、代码臃肿、样式混乱、扩展艰难等问题。改造聚焦模块切割、构建瘦身、代码清理、样式规范、提升扩展性与可维护性等目标。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;改造后的工程采用 monorepo 框架，借助 Nx 与 pnpm 管理，遵循模块化、微前端等原则，明确 apps/ 应用模块与 packages/ 共享模块职责。在开发体验优化上，部分项目迁移至 Vite，利用缓存提升效率；云端构建通过代码分割、缓存优化等提高构建速度与资源利用率，整体具备良好扩展性，为业务发展提供更坚实的架构支撑。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;这次改造，我们实现了模块化、微前端、组件驱动开发和主题定制等架构设计原则，使得行云前端小工程更加轻量化、可扩展性和易于维护。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;写这篇文章是为了分享我们的经验和教训，希望能帮助其他人在面对类似问题时有所启发。同时，这也是一次自我反思和总结的过程，帮助我们更好地理解和改进我们的工作流程和技术选择。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 8px;&quot;&gt;&lt;br&gt;&lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;text-align: center;margin-bottom: 8px;&quot;&gt; 
  &lt;span style=&quot;font-size: 16px;letter-spacing: normal;&quot;&gt;&lt;img alt=&quot;图片&quot; class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100028381&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/090b01a9-edd1-46bb-b233-5a37fc2b96f3.png&quot; data-type=&quot;webp&quot; data-w=&quot;396&quot; style=&quot;pointer-events: initial;width: 185px !important;visibility: visible !important;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt; 
  &lt;span style=&quot;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box;overflow-wrap: break-word !important;font-size: 16px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);letter-spacing: normal;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;text-align: center;margin-bottom: 8px;&quot;&gt; 
  &lt;span style=&quot;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box;overflow-wrap: break-word !important;font-size: 16px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);letter-spacing: normal;&quot;&gt;扫一扫，加入技术交流群&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - 京东云开发者（JDT_Developers）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/4090830/blog/17659438</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/17659438</guid>
            <pubDate>Sat, 22 Feb 2025 07:52:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>报道称 Anthropic 下一轮融资金额将增至 35 亿美元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《华尔街日报》报道称，开发人工智能聊天机器人 Claude 的 Anthropic 即将完成一轮 35 亿美元的融资，估值达到 615 亿美元。最初，Anthropic 仅计划融资 20 亿美元，但投资者现在同意增加融资额。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;261&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fd059194bf4e56d6858605f30b842ee6a5e.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;据称，Lightspeed Venture Partners、General Catalyst、Bessemer Venture Partners 和总部位于阿布扎比的投资公司 MGX 正在洽谈参与下一轮融资。如果融资额达到 35 亿美元，Anthropic 的总融资额将达到 180 亿美元左右。该公司打算将下一轮融资所得用于开发更强大的 AI 技术。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;与此同时 ，Anthropic 本周刚发布了一款新的旗舰 AI 模型 &lt;a href=&quot;https://www.oschina.net/news/335602/claude-3-7-sonnet&quot;&gt;Claude 3.7 Sonnet&lt;/a&gt;。该公司近期年收入达到约 12 亿美元，但仍处于亏损状态。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335662/anthropic-next-funding-round-3-5b</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335662/anthropic-next-funding-round-3-5b</guid>
            <pubDate>Sat, 22 Feb 2025 07:12:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>DeepSeek 重新开放 API 充值</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;DeepSeek API 开放平台页面显示，目前已重新开放 API 充值。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1362470555b68ddf8e1fb299c26f4421e10.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在「用量信息」页面上的公告显示：「deepseek-chat 模型优惠期结束，调用价格已变更为每百万输入 tokens 2 元，每百万输出 tokens 8 元。」&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Token 是模型用来表示自然语言文本的的最小单位，可以是一个词、一个数字或一个标点符号等，DeepSeek 将根据模型输入和输出的总 token 数进行计量计费。 &amp;nbsp;扣减费用= token 消耗量 x 模型单价，对应的费用将直接从充值余额或赠送余额中进行扣减，当充值余额与赠送余额同时存在时，优先扣减赠送余额。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;此前因服务器资源紧张，DeepSeek 一度停止 API 充值功能。2 月 6 日，DeepSeek 平台显示，其 API 服务充值按钮显示灰色不可用状态。彼时平台声明称：「当前服务器资源紧张，为避免对您造成业务影响，我们已暂停 API 服务充值。存量充值金额可继续调用，敬请谅解！」&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335661</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335661</guid>
            <pubDate>Sat, 22 Feb 2025 06:58:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>AI 搜索引擎 Perplexity 将开发「代理搜索」 Web 浏览器 Comet</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2025%2F02%2F24%2Fperplexity-teases-a-web-browser-called-comet%2F&quot; target=&quot;_blank&quot;&gt;据 TechCrunch 报道&lt;/a&gt;，AI 搜索引擎开发商 Perplexity AI 计划自&lt;strong&gt;己打造一款名为「Comet」的&amp;nbsp;&lt;/strong&gt;&lt;span style=&quot;font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif&quot;&gt;&lt;strong&gt;Web 浏览器&lt;/strong&gt;。&lt;/span&gt;该公司去年十月份表示，其搜索引擎每周处理超过 1 亿次查询。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0225/143229_nEFj_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.perplexity.ai%2Fcomet&quot; target=&quot;_blank&quot;&gt;https://www.perplexity.ai/comet&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Perplexity 发言人通过电子邮件告诉 TechCrunch：&lt;em&gt;就像 Perplexity 重新发明了搜索一样，我们也在重新发明浏览器。请继续关注最新消息&lt;/em&gt;。&lt;/p&gt; 
&lt;p&gt;目前关于 Comet 浏览器的信息非常有限，Perplexity AI 在 X 上透露称，Comet 专为&lt;strong&gt;「代理搜索」(Agentic Search)&lt;/strong&gt;设计。所谓「代理搜索」，可以看作是传统搜索引擎与 AI 的结合——不仅能够寻找用户所需信息，还能理解复杂指令、执行任务，甚至做出自主决策。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335658/perplexity-teases-a-web-browser-called-comet</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335658/perplexity-teases-a-web-browser-called-comet</guid>
            <pubDate>Sat, 22 Feb 2025 06:38:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>智元机器人推出大型仿真框架 AgiBot Digital World</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;智元机器人宣布推出自主研发的大型仿真框架 AgiBot Digital World，为机器人操作提供仿真数据生成方案、预训练的大规模仿真数据和模型评测标准，同步开源海量仿真数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AgiBot Digital World 基于 NVIDIA Isaac-Sim 仿真平台开发，提供高度逼真的视觉渲染和精确的物理模拟，并引入多模态大模型，支持基于资产库自动生成操作任务，以及基于指定任务自动生成操作场景和物体布局。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;具体来说，凭借丰富多样的物体、场景和机器人模型所构建的大规模、高精度的三维资产库，结合高度逼真的视觉渲染和精确的物理模拟，以及任务与场景的自动化生成，AgiBot Digital World 可以惟妙惟肖地模拟各种机器人训练场景。同时，仿真框架打造的多种专家轨迹生成策略，配合域随机化、数据增强等手段，能够自动生成多样、鲁棒的大规模专家轨迹数据，并且建立了贯穿专家轨迹生成、模型训练、基准测试、部署验证的完整评估流程。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;279&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-29195a9c00d299665cd4ec98b922a151dba.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-899306c8d4ca28fcdcee23a33a678950fda.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2210baed75eaea7918ae0a8329423a556ba.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同时，智元机器人还宣布开源上线海量规模的仿真数据集 AgiBot Digital World Dataset，涵盖 5 大类场景、180+品类具体物品、9 种常见材质、12 种核心技能，具有质量高、泛化快、任务多样、应用灵活的特点。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335651</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335651</guid>
            <pubDate>Sat, 22 Feb 2025 06:07:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>深圳：支持鸿蒙原生应用发展</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;深圳市七届人大六次会议于今日召开，深圳市市长覃伟中作政府工作报告。报告指出，2025 年深圳将高水平打造中国软件名城，加快国产核心软件规模化推广应用，支持开源软件、鸿蒙原生应用发展，建成深圳工业软件园。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;政府工作报告相关数据显示，2024 年深圳全社会研发投入 2236.6 亿元、增长 18.9%，连续 9 年保持两位数增长，总量跃居全国城市第二，占地区生产总值比重提升至 6.46%。2024 年，深圳企业研发投入占全社会研发投入比重 93.3%、总量居全国城市第一。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;创新创业人才加速集聚，新增高层次人才 2000 人、高技能人才 5.2 万人。920 名深圳学者入选全球前 2% 顶尖科学家榜单，207 人入选全球「高被引科学家」名单。研究与试验发展人员全时当量达 46.1 万人年、居全国城市首位。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其他数据包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;全市地区生产总值达 3.68 万亿元、增长 5.8%，增速居国内大中城市前列&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;国家高新技术企业突破 2.5 万家&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;新能源汽车产量增长 69.2%、占全国 22.3%；汽车产量跃居全国城市首位&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;载货无人机飞行架次增长 15%、规模居全国第一&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;集成电路、工业机器人、智能手机产量分别占全国 14.8%、24.1%、23.4%，等等&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;2908&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7c5140ed7590c0940575380f8a241fcafba.webp&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335649</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335649</guid>
            <pubDate>Sat, 22 Feb 2025 05:57:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>