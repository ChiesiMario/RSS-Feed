<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 04 Sep 2025 12:42:44 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>我拒绝用 AI 生成的合并请求</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;资深计算机科学家 Stuart Spence &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.stuartspence.ca%2F2025-08-declining-ai-slop-mr.html" target="_blank"&gt;在个人博客发文&lt;/a&gt;，解释了他为何会直接拒绝由 AI 生成的低质量代码合并请求（Merge Request, MR）。他将这类低质产出称为 「AI slop」，认为其不仅浪费审查者时间，还可能破坏项目质量。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0904/191709_9Slv_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Spence 总结了六种典型情境下他会拒绝审查：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;冗余或应删除却未删除的代码（本应删除但未删，让审查者白白多费心）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;提交者缺乏语言基础知识（AI 辅助无助于提升作者能力）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;AI 生成的大量「文档垃圾」（未经人工筛选的冗余文档，给 reviewer 增加负担）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;引入与项目风格不一致的代码或测试（引入新框架或日志、测试风格杂乱无章，冲击一致性和认知负担）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;对边界条件过度处理，反而制造 bug（可能掩盖真正问题，造成更多 bug）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;无意义或已弃用的依赖，且提交者无法解释原因（无法解释原因，最终会借口说是「AI 的错」）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;不过，Spence 并非完全否定 AI。他表示，若代码属于一次性分析逻辑、功能边缘化，或提交者清晰说明了 AI 的使用与验证过程，他仍会考虑审查。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370325</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370325</guid>
      <pubDate>Thu, 04 Sep 2025 11:20:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>蚂蚁集团入股多家芯片企业，加速布局 AI 算力基础设施</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;蚂蚁集团日前通过旗下投资实体上海云玡企业管理咨询有限公司，一周内完成对昕原半导体、烨知芯科技、云合智网三家芯片企业的投资及增持，加速布局 AI 算力基础设施。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d6ac6d1cfaa16f01eafd85468a2855ca2d3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1270" src="https://static.oschina.net/uploads/space/2025/0904/190214_s0P2_2720166.jpg" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0904/190233_TsO9_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;这并非蚂蚁首次投资芯片领域。据了解，蚂蚁集团自 2023 年确立「AI First」战略后，持续加码芯片领域投资，覆盖存储、端侧算力、网络传输等环节，旨在构建自主可控的 AI 技术生态。此次密集投资凸显其从单一技术布局转向「基础设施+前沿技术+应用场景」的全链条覆盖逻辑，应对 AI 时代算力竞争。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370323</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370323</guid>
      <pubDate>Thu, 04 Sep 2025 11:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>开源代码编辑器 Zed 集成 Claude Code</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Zed &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzed.dev%2Fblog%2Fclaude-code-via-acp" target="_blank"&gt;宣布&lt;/a&gt;集成 Claude Code 支持，目前处于公开测试阶段。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0904/185151_seqh_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;基于该功能，用户无需再依赖命令行，即可在编辑器内直观使用 Claude Code。通过 Zed 的多缓冲区界面，开发者可以实时查看 AI 跨文件的代码修改过程，逐个选择接受或拒绝改动，并将 Claude Code 生成的任务列表固定在侧边栏中。同时，还能利用自定义 Slash 命令加速常用开发流程。&lt;/p&gt; 
&lt;p&gt;Zed 集成 Claude Code&amp;nbsp; 基于开放协议&amp;nbsp;&lt;a href="https://www.oschina.net/p/agent-client-protocol" target="_blank"&gt;Agent Client Protocol (ACP)&lt;/a&gt;&amp;nbsp;实现&amp;nbsp;，该协议允许任何 AI agent 与编辑器无缝对接。Zed 团队为 Claude Code 编写了 ACP 适配器，把 Claude Code 的 SDK 调用转换成 ACP 的 JSON RPC 格式。&lt;/p&gt; 
&lt;p&gt;Zed 表示，未来希望通过 ACP 打造一个「带任何 AI agent 到 Zed」的生态。目前 Claude Code 的 Plan 模式和部分命令尚未支持，但随着 SDK 功能扩展，更多能力将陆续上线。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370317/zed-claude-code-via-acp</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370317/zed-claude-code-via-acp</guid>
      <pubDate>Thu, 04 Sep 2025 10:54:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Mago - 全面的 PHP 工具链</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;&lt;strong style="color:#1f2328"&gt;Mago&amp;nbsp;&lt;/strong&gt;是一套全面的 PHP 工具链，旨在帮助开发者编写更优质的代码。Mago 的设计灵感源自 Rust 生态系统，能够为各种规模的 PHP 项目带来速度、可靠性和卓越的开发者体验。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;特性：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;极快：内置 Rust 以实现最佳性能。&lt;/li&gt;
&lt;li&gt;Lint：使用可自定义的规则识别代码库中的问题。&lt;/li&gt;
&lt;li&gt;静态分析：对代码库进行深入分析，以捕获潜在的类型错误和缺陷。&lt;/li&gt;
&lt;li&gt;自动修复：自动修复许多 lint 问题。&lt;/li&gt;
&lt;li&gt;格式化：自动格式化您的代码以遵守最佳实践和样式指南。&lt;/li&gt;
&lt;li&gt;语义检查：通过强大的语义分析确保代码的正确性。&lt;/li&gt;
&lt;li&gt;AST 可视化：使用抽象语法树 (AST) 解析探索代码的结构。&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/mago</link>
      <guid isPermaLink="false">https://www.oschina.net/p/mago</guid>
      <pubDate>Thu, 04 Sep 2025 10:20:00 GMT</pubDate>
    </item>
    <item>
      <title>华为鸿蒙 HarmonyOS 5 终端设备数突破 1400 万</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;华为常务董事、终端 BG 董事长余承东宣布，搭载 HarmonyOS 5 的终端设备数量正式突破 1400 万。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0904/180202_lRfF_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在不久前的 8 月 25 日，鸿蒙终端设备&lt;a href="https://www.oschina.net/news/368493" target="_blank"&gt;宣布&lt;/a&gt;突破 1200 万。&lt;/p&gt; 
&lt;p&gt;余承东此前在接受采访时透露，在鸿蒙生态这个领域，感谢中国整个科技产业的集体冲锋，把不可能变成了可能。华为存量几个亿用户的手机也会陆陆续续开放升级到鸿蒙 5.0，升级之后会更流畅，体验更丝滑。&lt;/p&gt; 
&lt;p&gt;余承东表示，鸿蒙生态的高速发展，是每一位开发者、伙伴和消费者的共同托举，让鸿蒙生态走向正循环。 &amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370305</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370305</guid>
      <pubDate>Thu, 04 Sep 2025 10:03:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>消息称 DeepSeek 计划年底前发布 AI 智能体</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;据知情人士透露，&lt;/span&gt;&lt;span style="background-color:#ffffff"&gt;DeepSeek 计划在 2025 年底前正式发布 AI 智能体（AI Agent），以抢占下一代人机交互入口。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="286" src="https://oscimg.oschina.net/oscnet/up-6a17297a6406662c352e57ce6bf95d0661d.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;消息人士表示，DeepSeek 正在构建的新型 AI 模型具备强大的自主执行能力，能够在用户提供极少指示的情况下，代表用户完成复杂的多步骤操作。更为重要的是，该系统还具备学习能力，能够根据先前的操作经验进行自我优化和改进。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;DeepSeek 创始人梁文锋正在亲自督导研发工作，并要求团队在今年第四季度正式发布这款突破性软件产品。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;目前 DeepSeek 公司暂无回应。AI 智能体被视为继大模型之后的重点赛道，具备自主决策、任务拆解与跨应用协同能力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370304</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370304</guid>
      <pubDate>Thu, 04 Sep 2025 10:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Firefox 延长支持 Win7/8/8.1 系统至 2026 年 3 月</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Mozilla 今天在官方发布日历中&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwhattrainisitnow.com%2Frelease%2F%3Fversion%3Desr" target="_blank"&gt;更新公告&lt;/a&gt;，再次将 Firefox ESR 115 对 Windows 7、8、8.1 以及 macOS 10.12-10.14 的安全更新支持期延长，最终截止日由 2025 年 9 月推迟至 2026 年 3 月。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;我们决定仅延长对 Windows 7~8.1 和 macOS 10.12~10.14 上 ESR 115 的支持至 2026 年 3 月。&lt;/p&gt; 
 &lt;p&gt;我们将在 2026 年 2 月重新评估这一决定，并在那时宣布关于 ESR 115 生命周期结束的任何更新。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-871f7e9840c6d75f58131183dad267b9f4b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Mozilla 表示会在 2026 年 2 月重新评估该决定，并届时公布是否进一步延长或正式结束支持。&lt;/p&gt; 
&lt;p&gt;Firefox 是唯一一款仍在获取 Windows 7、8 和 8.1 安全更新的主流浏览器，这些系统已于 2023 年 1 月停止支持。主流 Windows 10 支持将在一个月后结束，制造商和开发者已经在规划终止驱动程序和软件支持的策略。与此同时，Mozilla 仍在为 Windows 7 上的 Firefox 115 ESR 发布更新。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;2024 年末，Mozilla 的一位工程师表示，由于 Windows 7 市场份额极小，支持它并非免费，而且「随着时间的推移，由于用户群体的差异，支持会变得越来越痛苦」。&lt;/p&gt; 
&lt;p&gt;然而，该浏览器仍然拥有足够多的 Windows 7 用户，足以证明将安全更新反向移植到 Firefox 115 ESR 的成本是合理的。 &amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370298</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370298</guid>
      <pubDate>Thu, 04 Sep 2025 09:51:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>花椒直播首次开源推流器组件 HJpusher</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;花椒直播开源其自主研发的直播推流器「HJpusher」，并上线 OpenHarmony 三方库中心仓。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;根据&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F-a0-_N3T-2Ysk-ZRUyT2Iw" target="_blank"&gt;介绍&lt;/a&gt;，作为鸿蒙生态音视频推流领域的重要开源项目，HJPusher 是由伙伴共建开源的第一个鸿蒙应用推流器。该工具基于花椒直播自主通用多媒体框架 HJMedia 打造而来，采用创新的通用多媒体框架设计，以高度模块化、可扩展的插件化架构，极大提升了音视频功能开发效率与整体的资源利用率，为开发者提供高性能、低耦合的推流解决方案。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="289" src="https://oscimg.oschina.net/oscnet/up-72a0c87d11f35a3eb7301a879c92c8d2572.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;HJpusher 核心架构将采集、编码、推流、录制、前处理等功能封装为标准插件，统一标准数据接口通信，实现真正意义上的模块解耦。各插件之间通过 Graph 编排支持以「搭积木」方式自由组合，实现串联、并联及混合编排，开发者可按需构建出面向直播、录屏、特效渲染等多种场景的解决方案，既降低开发门槛，又显著提升资源利用率与扩展灵活性。例如，开发者可在推流流程中通过动态插入美颜、礼物叠加等视频过滤插件，也可并行实现推流与录制功能，共享音视频流以降低资源占用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;在功能层面，HJpusher 支持横竖屏多视角推流与预览，适配 H.264/H.265 硬编，具备多分辨率、多码率自定义能力；支持音频实时重采样与声道转换；推流过程中可随时开启/关闭⼩视频录制，⽆需额外调⽤第三⽅⼯具，实现"推流+录制"⼀体化操作；依托离屏渲染实现多路并行输出，可同时处理预览、推流、录制等多种任务且参数独立可控。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;在弱网环境下，HJpusher 引入「实时带宽探测 + 智能丢帧 + 码率阶梯调整」的三重机制，提升画面流畅度；即使在断网状态下，HJpusher 也能凭借「智能重连+本地缓存续传」功能，在断⽹后可⾃动尝试重连，保障连接成功率和内容连续性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;此外，该推流器还支持动态叠加礼物动画、水印、弹幕等实时渲染特效，可自定义配置渲染层级，满足多样化视觉效果需求。同时具备丰富的业务消息通知与打点机制，支持开发者监控帧率、码率、丢包等关键指标，并可通过回调机制实现定制化处理与扩展。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370296</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370296</guid>
      <pubDate>Thu, 04 Sep 2025 09:45:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Microsoft Graph CLI 即将退役</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;微软&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fmicrosoft365dev%2Fmicrosoft-graph-cli-retirement%2F" target="_blank"&gt;宣布&lt;/a&gt;将停用 Microsoft Graph CLI，&lt;/span&gt;&lt;span style="color:#242424"&gt;自 2025 年 9 月 1 日开始进入弃用阶段，并计划于 2026 年 8 月 28 日全面退役。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;「Microsoft Graph CLI 一直以来都是开发人员和 IT 专业人员通过简单的终端命令与 Microsoft Graph 交互的强大工具，可实现自动化、脚本编写以及对 Microsoft 365 数据和服务的简化访问。随着我们不断发展开发人员工具策略，我们将重点转向 PowerShell 中更集成、更现代化的体验。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;img height="263" src="https://oscimg.oschina.net/oscnet/up-8837d763198dab6094748bc9e0a23ea3ac0.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;在弃用阶段，微软不会添加任何新功能，只会解决严重漏洞；同时，CLI 将保持开源，但将不再得到积极的维护或支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;官方建议用户开始切换到 Microsoft Graph PowerShell SDK，它提供广泛的 API 覆盖和定期更新、与脚本和自动化工作流的集成、社区和文档支持以及对 Microsoft 服务承诺的长期支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;该公司解释称，他们最初推出&amp;nbsp;Microsoft Graph CLI 是旨在提供一个轻量级的跨平台工具，用于与 Microsoft Graph API 交互。然而，CLI 有限的可扩展性、较窄的生态系统以及与更强大的替代方案的重叠，导致其使用率下降。客户越来越青睐能够与自动化环境更深入集成、更广泛的社区支持以及更丰富的可扩展性的工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;为了持续简化 Microsoft Graph 开发者体验，其正在整合围绕 PowerShell 的体验。「PowerShell 是一种能够为用户带来显著价值和灵活性的替代方案。此次整合使我们能够专注于在支持的 SDK 和工具中提供更强大、更一致的体验。」&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370292/microsoft-graph-cli-retirement</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370292/microsoft-graph-cli-retirement</guid>
      <pubDate>Thu, 04 Sep 2025 09:26:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>搭建基于 Solon AI 的 Streamable MCP 服务并部署至阿里云百炼</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;一、快速搭建 Solon 项目，引入 Solon AI&lt;/h2&gt; 
&lt;h3&gt;1. 开发环境准备&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;JDK 8 或以上版本。&lt;/li&gt; 
 &lt;li&gt;Maven 3.8.6 或以上版本。&lt;/li&gt; 
 &lt;li&gt;通义千问 API Key（用于模型调用）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. 创建名为 mcp-server-demo 的项目&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;创建时选择 Archetype 为 Solon AI（可以减少些活），会自动添加 Solon AI、MCP 相关依赖。&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//2d8afb873f8096ca899f2ee4d4fb4465.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;创建后可以再简化下&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span style="color:#4078f2"&gt;&amp;lt;?xml version=&lt;span style="color:#50a14f"&gt;"1.0"&lt;/span&gt; encoding=&lt;span style="color:#50a14f"&gt;"UTF-8"&lt;/span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;project&lt;/span&gt; &lt;span style="color:#986801"&gt;xmlns&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"http://maven.apache.org/POM/4.0.0"&lt;/span&gt;
         &lt;span style="color:#986801"&gt;xmlns:xsi&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt;
         &lt;span style="color:#986801"&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-parent&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.5.1&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;relativePath&lt;/span&gt; /&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.example&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-bailian-mcp-workflow-server&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;jar&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;packaging&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;Demo project for Solon&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;properties&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;java.version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.8&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;java.version&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;properties&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-web&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
        
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-ai-mcp&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
        
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-logging-logback&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
        
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.projectlombok&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;lombok&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;provided&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-test&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;test&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;

    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;finalName&lt;/span&gt;&amp;gt;&lt;/span&gt;${project.artifactId}&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;finalName&lt;/span&gt;&amp;gt;&lt;/span&gt;

        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
                &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-maven-plugin&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;build&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;project&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;二、添加 Mcp Server 并添加两个工具&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@McpServerEndpoint&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;注解，就像 MVC 开发一样简单。name 为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mcp-server-demo&lt;/code&gt;（可以按需设定），channel 使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;McpChannel.STREAMABLE&lt;/code&gt;（表示用 streamable 传输方式），mcpEndpoint 为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/mcp&lt;/code&gt;（可以按需设定）。&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;支持多个端点。就像 MVC 开发有多个控制器，每个控制器可以有自己的前缀地址。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.Utils;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.annotation.ToolMapping;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.chat.ChatModel;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.chat.message.ChatMessage;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.McpChannel;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.server.annotation.McpServerEndpoint;

&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.util.List;

&lt;em&gt;//工具，会再调用 dashscope 的模型。&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;@McpServerEndpoint(name = "mcp-server-demo", channel = McpChannel.STREAMABLE, mcpEndpoint = "/mcp")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;McpToolServer&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@ToolMapping(description = "批量生成标题")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span style="color:#4078f2"&gt;BatchGenerateTitles&lt;/span&gt;&lt;span&gt;(String title)&lt;/span&gt; {
        &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;SystemPrompt&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"# 角色\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"你是一位专业的批量生成标题助手，擅长根据用户提供的提示快速生成高质量的标题。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"## 技能\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 1：理解用户需求\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 仔细阅读并理解用户提供的提示和要求。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 根据用户的输入，确定标题的主题、风格和目标受众。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 2：创意标题生成\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 能够在短时间内生成多个具有吸引力和多样性的标题。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 确保每个标题都符合用户的需求，并且能够吸引目标受众的注意力。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 3：标题优化\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 对生成的标题进行优化，确保它们简洁明了、易于理解。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 考虑到 SEO 优化，合理嵌入关键词以提高标题的可发现性。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 4：多样化风格\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 能够生成不同风格的标题，如新闻报道式、故事敍述式、疑问式等。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 根据不同的使用场景（如博客文章、社交媒体帖子、新闻报道等）调整标题的风格和长度。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"## 限制\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 生成的标题数量为 20 个。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 每个标题应简洁明了，不超过 20 个字。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 所有标题必须与用户提供的提示和要求一致。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 避免使用过于复杂或难以理解的语言。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 如果需要特定领域的专业知识，可以通过调用搜索工具或查询知识库来获取相关信息。"&lt;/span&gt;;
        &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;UserPrompt&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"用户输入内容如下："&lt;/span&gt; + title;
        &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;reTitle&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#0184bb"&gt;null&lt;/span&gt;;
        &lt;span style="color:#a626a4"&gt;try&lt;/span&gt; {
            reTitle = callWithMessage(SystemPrompt, UserPrompt);
        } &lt;span style="color:#a626a4"&gt;catch&lt;/span&gt; (Exception e) {
            &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; Utils.asList(&lt;span style="color:#50a14f"&gt;"错误："&lt;/span&gt; + e.getMessage());
        }
        &lt;span style="color:#a626a4"&gt;if&lt;/span&gt; (reTitle == &lt;span style="color:#0184bb"&gt;null&lt;/span&gt;) {
            &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; Utils.asList(&lt;span style="color:#50a14f"&gt;"错误：生成标题失败"&lt;/span&gt;);
        }
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; Utils.asList(reTitle);
    }

    &lt;span style="color:#4078f2"&gt;@ToolMapping(description = "文章润色")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; List&amp;lt;String&amp;gt; &lt;span style="color:#4078f2"&gt;polishTheArticle&lt;/span&gt;&lt;span&gt;(String content)&lt;/span&gt; {
        &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;SystemPrompt&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"# 角色\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"你是一位专业的文章润色助手，擅长提升文章的语言表达、逻辑结构和整体流畅性。你的任务是根据用户提供的原始文本，进行细致的润色，使文章更加清晰、生动和有说服力。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"## 技能\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 1: 语言润色\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 优化文章中的词汇选择，使其更加精准和生动。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 调整句子结构，使文章更加流畅自然。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 修正语法错误和拼写错误，确保文章的专业性和准确性。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 2: 逻辑结构优化\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 重新组织段落顺序，使文章的逻辑更加清晰。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 添加或删除内容，以增强文章的连贯性和一致性。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 提供适当的过渡句，使各部分之间的衔接更加自然。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 3: 内容丰富与精简\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 根据需要添加更多细节，使文章内容更加丰富和具体。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 删除冗余信息，使文章更加简洁明了。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 保持文章的主题和核心思想不变，同时提升其吸引力和可读性。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"### 技能 4: 风格调整\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 根据用户的指示调整文章的风格，如正式、幽默、轻松等。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 确保文章的风格与目标受众相匹配。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 保持一致的语气和语调，增强文章的整体效果。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"## 限制\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 只对用户提供的一篇文章进行润色，不涉及其他文档。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 润色过程中保持原文的核心内容和意图不变。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 不得添加或删除与文章主题无关的内容。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 如果用户提供了特定的风格要求，请严格遵循这些要求进行润色。\n"&lt;/span&gt; +
                &lt;span style="color:#50a14f"&gt;"- 在润色时，注意保留用户的个人风格和声音，避免过度修改。"&lt;/span&gt;;
        &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;UserPrompt&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"原始文本内容如下："&lt;/span&gt; + content;
        &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;ReContent&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#0184bb"&gt;null&lt;/span&gt;;
        &lt;span style="color:#a626a4"&gt;try&lt;/span&gt; {
            ReContent = callWithMessage(SystemPrompt, UserPrompt);
        } &lt;span style="color:#a626a4"&gt;catch&lt;/span&gt; (Exception e) {
            &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; Utils.asList(&lt;span style="color:#50a14f"&gt;"错误："&lt;/span&gt; + e.getMessage());
        }
        &lt;span style="color:#a626a4"&gt;if&lt;/span&gt; (ReContent == &lt;span style="color:#0184bb"&gt;null&lt;/span&gt;) {
            &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; Utils.asList(&lt;span style="color:#50a14f"&gt;"错误：文章润色失败"&lt;/span&gt;);
        }
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; Utils.asList(ReContent);
    }

    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; String &lt;span style="color:#4078f2"&gt;callWithMessage&lt;/span&gt;&lt;span&gt;(String systemPrompt, String userPrompt)&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; Exception {
        &lt;span style="color:#986801"&gt;ChatModel&lt;/span&gt; &lt;span style="color:#986801"&gt;chatModel&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; ChatModel.of(&lt;span style="color:#50a14f"&gt;"https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions"&lt;/span&gt;)
                .apiKey(System.getenv(&lt;span style="color:#50a14f"&gt;"DASHSCOPE_API_KEY"&lt;/span&gt;))
                .model(&lt;span style="color:#50a14f"&gt;"qwen-plus"&lt;/span&gt;)
                .build();

        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; chatModel.prompt(ChatMessage.ofSystem(systemPrompt), ChatMessage.ofUser(userPrompt))
                .call()
                .getContent();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;提示：不需要别的配置或注册了。&lt;/p&gt; 
&lt;h2&gt;三、添加测试类，简单试下效果&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;通过测试注解&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@SolonTest(App.class)&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;启动服务端，通过 McpClientProvider 连接服务端并获取所有工具。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.example.mcp_server.App;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; lombok.extern.slf4j.Slf4j;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.junit.jupiter.api.Test;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.chat.tool.FunctionTool;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.McpChannel;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.ai.mcp.client.McpClientProvider;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.test.SolonTest;

&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.util.Collection;

&lt;span style="color:#4078f2"&gt;@Slf4j&lt;/span&gt;
&lt;span style="color:#4078f2"&gt;@SolonTest(App.class)&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;McpClientTest&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Test&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;clientTest&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; {
        &lt;span style="color:#986801"&gt;McpClientProvider&lt;/span&gt; &lt;span style="color:#986801"&gt;clientProvider&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; McpClientProvider.builder()
                .url(&lt;span style="color:#50a14f"&gt;"http://localhost:8080/mcp"&lt;/span&gt;)
                .channel(McpChannel.STREAMABLE)
                .build();

        &lt;em&gt;//获取所有工具&lt;/em&gt;
        Collection&amp;lt;FunctionTool&amp;gt; tools = clientProvider.getTools();

        log.error(&lt;span style="color:#50a14f"&gt;"{}"&lt;/span&gt;, tools);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;单测运行效果：&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//a1bdb66b2d4af8fe8c58e4deae507fc5.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;四、项目打包并部署&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;打包，并生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mcp-server-demo.jar&lt;/code&gt;&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//b544e1c5a5a2f0a858a437db13b6ba88.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;发布到自己的服务器（可用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;java -jar mcp-server-demo.jar&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;运行）。或者，上传到阿里云函数（界面太多，略过...）&lt;/p&gt; 
&lt;h2&gt;五、将部署好的 Streamable MCP 集成到百炼当中&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;按照界面引导，添加配置（界面太多，略过...）。&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e4e308d4c2a9987461d29b5c6d4d37fe.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;后续，可以进一步创建智能体使用 Streamable MCP （界面太多，略过...）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370290</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370290</guid>
      <pubDate>Thu, 04 Sep 2025 09:12:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Alex 团队全员加入 OpenAI，并入 Codex 团队</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;AI 编程助手 Alex 团队&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.alexcodes.app%2Fblog%2Falex-team-joins-openai" target="_blank"&gt;宣布&lt;/a&gt;加入 OpenAI Codex 团队。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1362" src="https://static.oschina.net/uploads/space/2025/0904/164743_5ETB_2720166.png" width="1740" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Alex 原本是一款为 macOS 与 iOS 开发者打造的 Xcode AI 插件，被誉为「Xcode 缺失的侧边栏」，能够自动补全代码、修复错误并执行任务。今年 8 月刚完成 530 万美元种子轮融资。&lt;/p&gt; 
&lt;p&gt;随着此次并入，Alex 应用将于 10 月 1 日起停止新用户下载，但现有用户仍可继续使用，只是不再更新新功能。团队表示，此举将借助 OpenAI 的平台和资源，把他们在 Apple 开发生态积累的经验带给更广泛的开发者群体。&lt;/p&gt; 
&lt;p&gt;Alex 团队规模仅三人，创始人 Daniel Edrisian 曾三度获 Apple WWDC 学生奖学金，并在 Apple、Meta、Google 实习，技术背景深厚。未来，他和团队将在 OpenAI Codex 继续推动 AI 辅助编程的发展。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370280/alex-team-joins-openai</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370280/alex-team-joins-openai</guid>
      <pubDate>Thu, 04 Sep 2025 08:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>未经用户同意展示广告，谷歌被罚款 3.25 亿欧元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;法国数据保护部门周三表示，已对谷歌母公司 Alphabet 处以 3.25 亿欧元（约合 3.81 亿美元）的罚款，原因是该公司在未经谷歌账户用户同意的情况下，向 Gmail 用户不正当地展示广告，并使用 cookie。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="303" src="https://oscimg.oschina.net/oscnet/up-df1841c5edfb90ffe6194bb778539fdd529.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;法国国家信息和自由委员会（CNIL）还给谷歌 6 个月的时间，以确保在未经事先同意的情况下，Gmail 用户收件箱中的电子邮件之间不再显示广告，并确保用户对创建谷歌帐户以放置广告跟踪器给予有效同意。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;CNIL 在一份声明中表示，如果不能做到这一点，谷歌及其爱尔兰子公司将不得不支付每天 10 万欧元的罚款。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;谷歌的一位发言人表示，该公司正在审查这一决定，并表示用户一直能够控制他们在产品中看到的广告。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;该发言人说，在过去的两年里，谷歌已经进行了更新，以解决 CNIL 的担忧，包括在创建谷歌账户时拒绝个性化广告的简单方法，以及改变 Gmail 中的广告呈现方式。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370277</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370277</guid>
      <pubDate>Thu, 04 Sep 2025 08:46:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>工信部等发布重大行动方案，加强高性能 AI 服务器等技术攻关力度</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;9 月 4 日，工业和信息化部、市场监督管理总局对外发布《电子信息制造业 2025－2026 年稳增长行动方案》（以下简称《行动方案》）。&lt;/p&gt; 
&lt;p&gt;&lt;img height="500" src="https://static.oschina.net/uploads/space/2025/0904/161659_iDsm_2720166.png" width="994" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;行动方案明确提出&lt;strong&gt;加强 CPU、高性能人工智能服务器、软硬件协同等领域的技术攻关力度&lt;/strong&gt;，旨在提升计算性能、优化系统架构，为人工智能应用提供更强大的算力支持。&lt;/p&gt; 
&lt;p&gt;主要预期目标包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;规模以上计算机、通信和其他电子设备制造业增加值平均增速在 7% 左右&lt;/li&gt; 
 &lt;li&gt;加上锂电池、光伏及元器件制造等相关领域后电子信息制造业年均营收增速达到 5% 以上&lt;/li&gt; 
 &lt;li&gt;到 2026 年，预期实现营收规模和出口比例在 41 个工业大类中保持首位，5 个省份的电子信息制造业营收过万亿，服务器产业规模超过 4000 亿元&lt;/li&gt; 
 &lt;li&gt;75 英寸及以上彩色电视机国内市场渗透率超过 40%，个人计算机、手机向智能化、高端化迈进。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;em&gt;https://www.miit.gov.cn/jgsj/dzs/gzdt/art/2025/art_ee444034696c4a6ab3c341b00c80e494.html&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370269</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370269</guid>
      <pubDate>Thu, 04 Sep 2025 08:22:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>中信建投：AI 编程革命重塑软件开发生态</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;中信建投发布研报称，AICoding 通过大语言模型、检索增强生成等技术实现代码生成、补全、调试等自动化软件开发任务，显著提升效率、降低人工成本，并推动软件开发的普惠化，使非技术人员也能参与开发。&lt;/p&gt; 
&lt;p&gt;海外市场 AICoding 成为大模型订阅的主要需求方向，GitHubCopilot 最新用户超 2000 万，Cursor ARR 突破 5 亿美元。中国市场在人工智能政策支持下，头部厂商已在个人与企业用户订阅方面实现初步落地。&lt;/p&gt; 
&lt;p&gt;AICoding 市场加速发展，预计 2032 年市场规模增至 271.7 亿美元 (CAGR 23.8%)。未来，AICoding 将向多智能体协同、低代码平台结合及效果付费模式演进，但需克服数据安全与技术成熟度风险，最终从辅助工具转型为核心生产力，重塑全球软件生态。&lt;/p&gt; 
&lt;p&gt;中信建投主要观点如下：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AIC o ding 定义为利用人工智能技术辅助或自动完成软件开发任务的工具&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;涵盖代码生成、智能补全、逻辑理解、跨语言翻译、质量审查及性能优化等全流程环节。其核心技术以通用和代码专用大语言模型为基石，引入 RAG 技术缓解模型幻觉问题，确保生成代码的准确性和实时性。AICoding 驱动三大变革：优化研发流程，释放人力成本;降低编程门槛，加速中小企业数字化转型;内嵌质量管控，提升金融、医疗等高要求行业的系统稳定性，同时释放开发者创新潜力。AICoding 不仅提升效率，更重塑产业创新生态，为软件业提供可规模化复制的安全开发模式。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AICoding 的技术进展呈现分层演进态势&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;基础功能如代码补全和简单生成已高度成熟，复杂功能如跨文件协作和逻辑生成仍在迭代，模型在长上下文依赖和专业领域理解存在瓶颈。市场规模方面，2023 年全球达 39.7 亿美元，预计 2032 年增至 271.7 亿美元 (CAGR 23.8%)。市场格局方面，全球市场主要由科技巨头主导，海外市场 GitHub Copilot 用户超 2000 万，新兴工具 Curs or 实现 ARR 超 5 亿美元；国内市场阿里、字节、百度等也基于自身模型推出相应产品，在个人与企业订阅付费方面实现初步落地。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;展望 AICoding 未来发展&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;技术演进维度主要聚焦多智能体协同与个性化开发;应用场景维度扩展至低代码/无代码平台与代码迁移升级：商业模式维度多元化发展，从订阅制转向效果付费和私有化部署，适应企业安全需求。AICoding 仍在不断进化，有望作为核心生产力，重塑产业创新生态，推动从「人力驱动」向「智能驱动」转型。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;风险提示&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.数据安全与合规风险；2、技术成熟度风险；3、市场接受度与付费意愿；4、市场竞争加剧&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370268</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370268</guid>
      <pubDate>Thu, 04 Sep 2025 08:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>硅心科技（aiXcoder）发布领域化程序分析平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;硅心科技（aiXcoder）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FYXi3qpLWpOlNS1-npZk_Tg" target="_blank"&gt;宣布&lt;/a&gt;推出领域化程序分析平台，旨在通过上下文工程技术解决大模型在企业软件开发中的领域知识缺失问题。该平台可整合企业代码库、设计文档、API 规范等多源数据，通过动态工作流为模型提供精准上下文支持。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ecf01cb407fe2a741f6da9a5858b9510065.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;aiXcoder 领域化程序分析平台整体架构&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;当前企业部署大模型时常面临私有数据异构分散、语义检索不准等挑战。该平台结合抽象语法树、控制流图等程序分析工具，宣称可提升上下文构建质量与召回精度，帮助模型生成更符合企业业务逻辑的代码与方案。&lt;/p&gt; 
&lt;p&gt;aiXcoder 为北京大学软件工程研究所孵化企业，其解决方案已应用于金融、军工、通信等行业，支持私有化部署与领域化模型训练。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370266</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370266</guid>
      <pubDate>Thu, 04 Sep 2025 08:07:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软团队提出「模拟光学计算机」，显著提升 AI 推理速度</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微软英国剑桥研究院团队及其合作者提出了「模拟光学计算机」（Analog Optical Computer，AOC），相关论文已发表于《自然》（Nature）期刊 。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b8f135a4f691251e8e6128345ff302ce9db.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;论文链接：https://www.nature.com/articles/s41586-025-09430-z&lt;/p&gt; 
&lt;p&gt;据介绍，AOC 结合了模拟电子技术与三维光学技术，无需数字转换即可同时高效完成 AI 推理与组合优化任务，显著减少能耗。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d672b539d996f3aa3e30da9efa9a91f75d3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;AOC 架构与应用示意图&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;通过快速定点搜索方法，AOC 具备抗噪声能力，能够运行递归推理能力的新型神经模型，并采用梯度下降方法解决复杂优化问题。实验表明，AOC 在图像分类、非线性回归、金融交易结算等任务中展示了优越性能，其能效提升可达 100 倍 。&lt;/p&gt; 
&lt;p&gt;该研究由微软英国剑桥研究院团队主导，合作者包括来自其他机构的研究人员，论文作者之一为上海交大校友、微软英国剑桥研究院首席研究员褚嘉琦（Jiaqi Chu） 。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370262</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370262</guid>
      <pubDate>Thu, 04 Sep 2025 08:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>得物灵犀搜索推荐词分发平台演进 3.0</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;一、&amp;nbsp; 背景&lt;/h1&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;导购是指在购物过程中为消费者提供指引和帮助的人或系统，旨在协助用户做出更优的购买决策。在电商平台中，导购通过推荐热卖商品、促销活动或个性化内容，显著提升用户的购物体验，同时推动销售额的增长。其核心目标是通过精准的引导，满足用户需求并促进商业价值最大化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;词分发：导购的重要组成部分&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在电商导购体系中，词分发作为关键环节，主要聚焦于与关键词推荐相关的功能。这些功能包括但不限于下拉词、底纹词、热搜榜单、锦囊词以及风向标等。这些推荐词能够帮助用户快速定位感兴趣的商品或服务，降低搜索门槛，提高购物效率。例如，下拉词可以在用户输入搜索内容时提供智能提示，而热搜榜单则能引导用户关注平台上的热门趋势。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;词分发平台的价值与功能&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;为了进一步优化词推荐的效率与一致性，词分发平台应运而生。该平台致力于打造一个通用、高效的词推荐生态系统，通过集成多种算法、工具和通用服务接口，为公司内不同业务域提供灵活的词推荐支持。其主要优势包括以下几点：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;统一开发，降低成本&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：词分发平台通过提供标准化的服务和接口，避免了各业务域重复开发和维护词推荐功能的成本。不同团队无需从零开始构建推荐系统，只需调用平台提供的接口即可快速实现定制化的词推荐功能，大幅节省开发时间和资源。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;高灵活性，适应多场景&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：平台的模块化设计使其能够根据不同业务场景和需求进行快速调整。例如，针对促销活动、节假日特辑或特定品类推荐，平台可以动态调整推荐算法和词库，确保推荐内容的精准性和时效性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;支持业务扩展，提升效率&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：通过统一的词分发平台，各业务域能够更专注于核心业务逻辑的开发，而无需过多关注底层推荐系统的技术细节。这不仅提升了运营效率，还为业务的快速扩展提供了技术保障。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;优化用户体验：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;词分发平台通过整合先进的推荐算法和数据分析能力，能够为用户提供更精准、更个性化的搜索建议。例如，基于用户历史行为和实时趋势生成的推荐词，可以帮助用户更快找到目标商品，从而提升整体购物体验。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;二、已支持场景&lt;/h1&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#ffffff"&gt;已支持社区、交易、营销 30+导购场景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=NzRlZmQ4NDM0NWQyOWY4ZGE5ZDFlNmUwZjRkZjJjN2IsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#ffffff"&gt;个别场景示例&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MmMzOGFhYTMxYmU2NmU4NDhmYmUyYjk5MzZhZDRkYTcsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h1_3"&gt;&lt;/span&gt; 
&lt;h1&gt;三、整体架构&lt;/h1&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;业务架构&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ZDhmZmJjMTcyMDZlMzg4ZjAzZDNiMTgxMTdiNGZkOGUsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;平台架构&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;整体平台架构&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MGUzZDA5MGM2YmE4ZWYwODQ4ZGZjMzM1ZDY1YzJkNDQsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;平台+脚本化架构&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;脚本热部署功能在词分发搜索推荐引擎中发挥了重要作用，其主要目标是通过动态加载机制处理策略频繁变更的链路。实现这一功能的核心在于定义统一的抽象方法（具备相同出入参），将具体逻辑下放到 SDK 中，并通过后台打包、配置和推送流程，在线服务通过反射机制快速加载实现代码，再结合 AB 配置选择适用脚本。这种方法显著提升了策略调整的灵活性，同时减少了服务器重启的成本和时间。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在具体实施中，首先需要设计并实现统一的抽象方法，确保接口标准一致。随后，将具体的实现逻辑封装到 SDK 中，方便服务器端动态接收和加载。后台则负责提供打包、配置和推送功能，将实现代码整理为统一的包形式。当链路策略需要更新时，开发人员只需将新的实现代码上传至后台，完成打包、配置和推送操作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在线服务在检测到新推送后，利用反射机制加载具体实现，并根据 AB 配置选择适用的脚本运行。这种动态加载方式无需重启服务，即可实现策略的即时切换和优化。整体而言，这一方法不仅提高了系统对策略变更的响应速度，还降低了维护成本，同时增强了系统的可靠性和稳定性，为词分发搜索推荐引擎的持续优化提供了有力支持。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ZDYzMzQyZWVmZmNhNWQxZDBiYTVlNWYwYmY0ODg1NzcsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;主工程底座和脚本工程&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在业务迭代的代码编写中，通常分为两种类型：主工程底座和脚本工程。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;主工程底座&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;主要负责实现抽象和通用层的代码逻辑，注重提供稳定的基础框架和通用功能，确保系统的整体架构和扩展性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;相比之下，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;脚本工程&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;更贴近具体业务需求和定制化场景，专注于实现与业务逻辑密切相关的功能模块。通过这种分工，主工程提供通用的技术支持，而脚本工程则灵活应对多样化的业务需求，从而实现开发效率与业务适配性的平衡。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;脚本热部署架构的存在原因&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;脚本热部署架构的存在主要出于以下原因：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;灵活应对策略变更&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：通过动态加载脚本，系统能快速适应频繁更新的业务需求，无需重启服务。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;降低维护成本&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：统一抽象方法和 SDK 实现减少重复开发，后台打包推送简化更新流程。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;提升效率&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：反射机制和 AB 配置实现即时脚本切换，节省时间并优化资源使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;增强稳定性&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：动态调整策略而不中断服务，确保系统持续稳定运行。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MmQ4ZDc3MjUyYzg4MzllZWYyNTUyNjVkYjYyZjUxNTAsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h1_4"&gt;&lt;/span&gt; 
&lt;h1&gt;四、架构演进 3.0 之图化&lt;/h1&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;串行架构&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;之前词分发业务一般都可以抽象为「预处理-&amp;gt;召回-&amp;gt;融合-&amp;gt;粗排-&amp;gt;精排-&amp;gt;结果封装」等固定的几个阶段，每个阶段通常是有不同的算法或工程同学进行开发和维护。为了提升迭代效率，通过对推荐流程的抽象，将各阶段的逻辑抽象为「组件"+"配置」，整体的流程同样是一个配置，统一由「编排引擎」进行调度，同时提供统一的埋点/日志等。让工程或算法同学可以关注在自己的业务模块和对应的逻辑，而框架侧也可以做统一的优化和升级。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ZTZhOWQ3YzhhMGYxOTI2ZDNmNDUxYjk5NTI2YTVmZDAsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;图化引擎架构演进&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;那为什么要去做「图化」/「DAG」呢？其实要真正要回答的是: &amp;nbsp;如何应对上面看到的挑战？如何解决目前发展碰到的问题？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;从业界搜推领域可以看到不约而同地在推进「图化」/「DAG」。 从 TensorFlow 广泛采用之后，我们已经习惯把计算和数据通过采用算子（Operation）和数据（Tensor）的方式来表达，可以很好的表达搜索推荐的「召回/融合/粗排/精排/过滤」等逻辑，图化使得大家可以使用一套「模型」语言去描述业务逻辑。DAG 引擎也可以在不同的系统有具体不同的实现，处理业务定制支持或者性能优化等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;通过图（DAG）来描述我们的业务逻辑，也带来这些好处：为算法的开发提供统一的接口，采用算子级别的复用，减少相似算子的重复开发；通过图化的架构，达到流程的灵活定制；算子执行的并行化和异步化可降低 RT，提升性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=NDk3MTI1OWI5ZmNiZDgzMTk5NDk1ZWM3Y2NiZTFjM2EsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;图化是一种将业务逻辑抽象为有向无环图（DAG）的技术，其中节点代表算子，边表示数据流。不同的算子可以组合成子图，起到逻辑更高层封装的作用，子图的输出可供其他子图或算子引用。通过图化，策略同学的开发任务得以简化，转变为开发算子并抽象业务数据模型，而无需关注「并行化」或「异步化」等复杂逻辑，这些由 DAG 引擎负责调度。算子设计要求以较小粒度支持，通过数据流定义节点间的依赖关系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;图化引入了全新的业务编排框架，为策略同学提供了「新的开发模式」，可分为三部分：一是定义算子、图和子图的标准接口与协议，策略同学通过实现这些接口来构建业务逻辑图；二是 DAG 引擎，负责解析逻辑图、调度算子，确保系统的性能和稳定性；三是产品化支持，包括 DAG Debug 助手协助算子、图和子图的开发与调试，以及后台提供的可视化管理功能，用于管理算子、子图和图。整体架构可参考相关设计图。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=YjI4OWRjZTJjMTE3Zjk2ZDUyMDM4Y2Y3MDUyZmViZTcsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;图化核心设计和协议&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;节点‘算子’抽象封装——面向框架测&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;算子接口定义 IDagTaskNodeExecutor&amp;lt;O&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/**
&amp;nbsp;* dag 主节点注解
&amp;nbsp;*/
@Inherited
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
public&amp;nbsp;@interface&amp;nbsp;DagNodeMetaProcessor {
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;/**
&amp;nbsp; &amp;nbsp; &amp;nbsp;* 算子名字
&amp;nbsp; &amp;nbsp; &amp;nbsp;*&amp;nbsp;@return
&amp;nbsp; &amp;nbsp; &amp;nbsp;*/
&amp;nbsp; &amp;nbsp; String&amp;nbsp;name();
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;/**
&amp;nbsp; &amp;nbsp; &amp;nbsp;* 算子描述
&amp;nbsp; &amp;nbsp; &amp;nbsp;*&amp;nbsp;@return
&amp;nbsp; &amp;nbsp; &amp;nbsp;*/
&amp;nbsp; &amp;nbsp; String&amp;nbsp;desc()&amp;nbsp;default&amp;nbsp;"";
}&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;/**
&amp;nbsp;* 主工程节点任务-执行器
&amp;nbsp;*
&amp;nbsp;* @param &amp;lt;T&amp;gt;
&amp;nbsp;*/
public&amp;nbsp;interface&amp;nbsp;IDagTaskNodeExecutor&amp;lt;T&amp;gt; {
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;T&amp;nbsp;execute(DagStrategyContext dagStrategyContext);

&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;图配置文件——面向框架测（使用者无需关心）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;图分为图图，一个场景可以有多个图，可按实验制定不同的图；图定位为业务逻辑模版，可以将若干个独立算子组装为具有特定业务含义的「图」，图和算子一样可在场景大「图」中进行配置，即运行时可有多个「实例」，实现逻辑的复用和配置化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;面向业务使用者—如何配置&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;节点自动注册&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：面向使用者无需关心 JSON 复杂的配置化，完全可视化操作。节点有俩种类型分主节点和脚本节点（可视化区分），节点注册完成框架测实现。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;业务关心编排关系&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：业务只需要关心节点之间编排关系即可。编排关系也是完全可视化拖拽实现。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;线程池隔离&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：一个服务内，不同场景线程池是隔离的，一个场景内，不同并行节点线程池也可以做到隔离，来区分强弱依赖关系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;关联实验&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：一个场景有基础场景图，和实验图，实验图可以基于某个实验发布不同于场景的复杂实验图。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=NmE3YjM2ZGNhNDhiYTMxODhhN2FhMjM1ZWMxZTFjYzMsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h1_5"&gt;&lt;/span&gt; 
&lt;h1&gt;五、配套工具利器&lt;/h1&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;脚本化开发&amp;amp;灰度发布 CICD&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;自迭代流程图&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MTU1OGYxODkyMmZlNjM0YmQ2YjFjNjJhODU3M2U4OWQsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;去脚本化后台执行配置，首先选择对应环境的对应集群服务&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;(先预发验证，验证没问题，提 merge 给工程 cr，合并后操作线上集群)。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;脚本配置&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;如果是新加的脚步，选择配置，然后在配置页面对应类型的脚步后面选择新增，然后添加对应脚本类型的配置（一定要按类型添加，否则加载会失败），然后点击添加。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;脚本构建&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;配置完成后，选择 cicd，进入 cicd 页面，首先选择新增 cicd，然后会弹框，在弹框中选择你开发的分支，然后选择构建，这个时候构建记录会是打包中状态，然后等 1 到 3 分钟，刷新当前页面，查看状态是否为打包成功，如果为打包失败需要检查代码问题，如果是打包成功，操作栏会有同步操作；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;此次新增：在构建页面新增了构建日志和操作人两列信息。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=OWE4NWM1YjQzMTRjYWIzNWY2ZTZiOTdiYzM3N2YxMGMsMTc1Njk1NTgxNzMxMA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;构建日志：点击详情会跳转到 gitlab cicd 日志详情（此次新增功能）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;操作人：会记录此次操作的具体人员，有问题及时联系相应同学（此次新增功能）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;脚本发布&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;一次性全量发布（已有能力）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;当打包成功后，操作栏会有同步操作，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;点击同步&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;，将当前打包的版本同步到集群。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;cicd 同步成功后，回到集群管理页面，这时点击操作里的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;发布操作&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;，发布成功后，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;发布会变成同步，然后点击同步&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;，同步成功后，这是集群中就已经加载到集群中，这就需要去 ab 实验配置具体的脚本然后验证。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;灰度发布&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;1. 通过 cicd 页面，构建完 jar 包后，点击右侧【灰度发布】按钮。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ODdkYmM5OGM5YmJjMTA1YWM1YTkyN2M0ZjEwNDJjMTUsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;2. 跳转到灰度发布页面&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;基本信息如图显示，看图。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;发布间隔：第一批次 5%,二批次 30%,三批次 60%,四批次 100%; &amp;nbsp;当前流量 xxx%（白名单验证）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;发布时，可以填写第一批次灰度 IP 机器，可选。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;当发布到第几批的时候，页面显示&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;高亮&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;系统一共默认四批次，首次点击发布是第一批，默认第一批暂停，再次点击发布，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;后面三批自动发布（间隔 30s）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;如果发现异常变多或者 RT 变高，可马上回滚，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;点击回滚即可回滚上个版本&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;如果一切正常，第四批就是全部推全操作，灰度 jar 包覆盖基础 jar 包。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;发布过程中，灰度的流量可以进行观察相应的 QPS、RT、ERROR、和各个阶段召回、排序、打散等核心模块的性能和调用量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=NWRjOWFmN2U5MTEzYWMwZTU0MjQ2M2RjY2ViNDIzNjQsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;3. 灰度中的 jar 包，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;列表表格状态显示灰度流量&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MTMzMGQ5ZDk2ZjkwYjM3ZWNmN2I3MzI3N2U0NTdiZjgsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;4. 在集群维度，有俩个 jar,一个是灰度中的 jar, 另外一个是基础 base 的 jar。 表格显示如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=YzI5N2I3ZTg5YjdhMWJiMzkzMzBhYjkyYzEzNGU5ZjMsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;DIFF 评估平台&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;社区搜索评测平台&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;是面向于内部算法、产品、研发同学使用的评测系统，主要用于建设完善得物社区搜索 badcase 评估标准体系，致力于提升用户搜索体验和搜索算法问题发现及优化两方面，提供完善的评测解决方案。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;核心功能包含：&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;query 数据抽取、快照数据抓取、评测数据导出和评测标注结果效果统计分析。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=YmRjMDFhY2RiODM4NWQ5YWY2YTE3NjZhYjg0MDY1NTYsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=YTlhNjQ2MDZmYTFiYWUwYzgyOTQ0ZWZiOTBmMDliNzAsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=YjQ5MmI2NGYyMWVkMTkwMjg1NGExM2VjMThmMmZiMTksMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;干预平台&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;搜索底纹词、猜搜词、下拉词在搜索链路的前置环节出现，在用户没有明确的搜索需求时，对激发用户搜索需求有较大的作用，因此，这些场景既是资源位也需要严格把控出词质量。本需求计划在上述场景支持干预能力，支持在高热事件时干预强插，也支持干预下线某些不合适的词。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=YjI4MmUyNzk0ZGYwYjhhODBkM2FjNzA5YmUzOGMxOWYsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MmYxYWRmMzdjNjIxY2M2MGRjNWIyNWY5NTFhOWM2MDksMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;召回配置平台&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在现代的搜索引擎系统中，多路召回是一个非常重要的组件，其决定了搜索引擎的性能和准确性。因此，多路召回的配置和管理，对于搜索引擎系统的性能、稳定性和可维护性来说是至关重要的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在以前的词分发系统中，多路召回的配置是以 JSON 字符串的形式存在的。每次修改配置都需要对这个 JSON 进行手动的编辑，该过程非常耗费时间，随着召回路的增多，配置效率也会越来越低，而且这种方式容易出错。因此，我们需要一种更加高效、可视化的方法来管理和配置多路召回。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;为了提高多路召回的配置效率和准确性，我们需要一种可视化的后台工具来替代手动修改 JSON 字符串的方式。这样的后台工具可以将多路召回的配置以更加直观和可视化的方式展示出来，让配置人员能够直接在页面上进行配置和修改，从而减少手动编辑 JSON 字符串的错误和繁琐性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;通过使用可视化的后台工具，我们可以方便地管理和配置各种算法和策略，从而大大提高搜索引擎系统的性能和可维护性。可视化的后台工具对于提高搜索引擎的性能和可维护性非常重要，它可以大大简化配置人员的操作难度和减少错误，进一步提高搜索引擎系统的效率、可靠性和灵活性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MmFhZjE2MDMyOWQ0MDFlODkyYmM3MDNjMDRlN2NhYWEsMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#ffffff"&gt;单路配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ZWFhNGY1MmQyM2ExYzZkMmM1MGE5ZDAxNmRkM2U5ZjksMTc1Njk1NTgxNzMxMQ==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#ffffff"&gt;多路配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;当然还有其他基建和配套工具和基建服务支撑，这里不一一展开了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h1_6"&gt;&lt;/span&gt; 
&lt;h1&gt;六、未来规划&lt;/h1&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;词分发平台作为搜索引擎系统中的核心组成部分，负责管理和分配搜索词汇的处理与召回流程。其架构以灵活性和扩展性为核心，参考图示所示，平台通过模块化设计（如 Java 框架 Spring 容器、词分发平台主工程、依赖注入 Spring 容器、日志调试能力等）支持高效运行。为了适应市场需求的不断变化，未来词分发平台需从以下几个方面持续优化：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;平台建设&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：进一步完善灵犀平台功能，包括继承监控大盘，监控维度扩展，召回配置和脚本 cicd 建设，发布流水线接入等等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;基座框架代码和工具完善&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：脚本框架改造 2.0，无缝对接 spring 容器；构建可维护完善算字库。通过优化现有流程和算法，加速词汇处理与召回的速度，确保平台性能的持续提升。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;扩展场景&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;：快速接入更多新场景，如商详触达，小蓝词等等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;此外，未来平台将联合算法团队，打破词圈品与品圈词之间的数据孤岛，打通相关链路，从而全面提升词分发平台的智能化与功能性。这一战略将推动平台更好地服务多样化业务需求，为用户提供更精准、高效的搜索体验。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:24px; margin-right:24px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#ffffff"&gt;&lt;span style="background-color:#5caae9"&gt;往期回顾&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;1.&amp;nbsp;R8 疑难杂症分析实战：外联优化设计缺陷引起的崩溃｜得物技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;2.&amp;nbsp;可扩展系统设计的黄金法则与 Go 语言实践｜得物技术&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;3.&amp;nbsp;得物新商品审核链路建设分享&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;4.&amp;nbsp;营销会场预览直通车实践｜得物技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;5.&amp;nbsp;基于 TinyMce 富文本编辑器的客服自研知识库的技术探索和实践｜得物技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;文 / 子房&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;关注得物技术，每周更新技术干货&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18690593</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18690593</guid>
      <pubDate>Thu, 04 Sep 2025 08:00:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>WPS AIPPT 成首个支持运行 AI 大模型 HTML 代码的演示应用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#1a1a1a; text-align:justify"&gt;金山办公旗下 WPS 上线「HTML 素材」功能。作为业内首个支持该功能的办公软件，WPS 还支持用户在演示中直接插入并流畅运行各类 AI 大模型生成的 HTML 代码。&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;目前，「HTML 素材」功能已在 Web 端、PC 端的 WPS 演示在线文档中全量上线，用户可通过 「资源库+代码嵌入」两种模式调用 HTML 素材，可覆盖绝大多数应用场景。&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;&lt;img height="406" src="https://oscimg.oschina.net/oscnet/up-e1beb10c006ba005cf875a167726a9723a5.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;「此前推出的 WPS AIPPT 打破了传统 AI PPT 无法修改、内容不匹配的‘痛点’，用户通过与 AI 实时对话修改，即可轻松完成 PPT 创作。」WPS 演示产品负责人陆炜俊表示，「HTML 素材功能的上线，进一步拓展了用户演示的交互维度，无论在教学场景还是发布会场景，用户都可以一键插入 HTML 素材，大幅节省设计制作时间。」&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;在「HTML 素材」资源库模块，WPS 整合了海量教育场景专用互动素材，涵盖物理实验、化学分子模型、数学几何动画等多个学科领域，并按学段、学科进行清晰分类。教师无需从零开始设计制作，只需在 PPT 的 「插入」 菜单中点击 「HTML 素材」，即可快速筛选所需模板、一键插入，大幅简化设计流程。&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;另一大核心模块则聚焦灵活扩展能力：支持插入 HTML 代码，即便是无编程基础的用户，也能通过自然语言指令让 AI 生成点名器、抽奖转盘等个性化工具的 HTML 代码。代码插入后，无论是在演示编辑模式还是放映模式下，均可实时渲染互动效果，无需切换浏览器，所有操作均在演示内完成，显著降低了交互式演示内容的创作门槛。&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;陆炜俊表示，除线下教学场景外，该功能未来还将拓展至虚拟实验室、远程教学等场景——通过嵌入 3D 模型 HTML 素材，构建低成本、高安全性的虚拟实验模拟环境，让危险实验也能「放心演示」；结合在线协作工具，支持异地师生开展实时互动教学。&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;WPS AIPPT 已开创全新的 PPT 创作模式，用户可通过与 AI 对话实时修改 PPT 大纲与内容，还能自行选择模板和颜色，实现「所想即所改，所改即所得」，轻松生成符合需求的 PPT。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370258</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370258</guid>
      <pubDate>Thu, 04 Sep 2025 07:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>奋斗正青春，HarmonyOS 5 助音乐回归纯粹</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"&gt;在鸿蒙生态中，活跃着一群逐梦者，以无畏的勇气、创新的智慧与执着的坚守，重塑着青春的边界，定义着奋斗的模样，传承着五四精神。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;梁乔森，一名机械设计制造及自动化专业的大学生，刚满 18 岁的他，已然凭借自主研发的鸿蒙音乐软件，在社交媒体中崭露头角，同样也在鸿蒙生态中注入独属于他的一份生机。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;在梁乔森的生活中，听音乐的时间为他构筑起一方远离喧嚣的静谧天地，探索数字音乐领域的路上，他敏锐地洞察到音乐播放器市场的失衡现状：市场上的音乐应用大多追求「大而全」的架构，将在线曲库、社交属性、直播等多种功能过度堆砌，而本地音乐播放器的基础需求却一直被边缘化，让听音乐回归纯粹成为梁乔森心里前进的旗帜。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;兴趣为帆，青葱少年勇探鸿蒙新境&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;2019 年的暑假，刚结束初一课程学习的梁乔森熟练地浏览 3C 数码兴趣板块的资讯，HDC 的直播页面吸引到了少年的目光，鸿蒙系统独特的「分布式能力」在少年心中埋下了一粒种子，随着少年长大，种子萌芽，成长为青年的梁乔森也成了鸿蒙生态中最早一批的尝鲜者，作为开发者在鸿蒙生态中扎根生长。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;当看到 HarmonyOS NEXT Beta 版招募信息时，梁乔森便将设备升级，通过前期调研，他发现鸿蒙生态中本地音乐播放器应用领域还在初期发展阶段，正是大展拳脚的好时候。同样，鸿蒙安全特性也为开发旅程提供了基础保障，分布式架构通过端侧数据加密保障用户隐私，精细化权限管理帮助开发者简化了合规开发流程，开发者可以更专注于功能的实现。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;开发初期，梁乔森通过 HarmonyOS 开发者官网提供的文档、课程教程和社区经验专家答疑解惑，自学 ArkTS 开发语言和工具的使用，梁乔森说：「鸿蒙系统的开发套件完善且极易上手，对新手十分友好。其次，一系列插件辅助开发，显著提升了开发效率。」在鸿蒙开发中，梁乔森通过灵活使用鸿蒙控件如图片选择器、背景设置，在调用系统级功能时，仅需少量代码即可实现复杂需求，减少了开发成本。基于这样的前提，在短短的一个星期内，梁乔森便搓出溏心音乐第一个可以跑通业务逻辑的版本。&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//2a7b02816072b445a29a1895b5649500.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;溏心音乐的界面采用极简设计风格，应用页面聚焦展示音乐播放信息，将更多的功能设置隐藏到了二级菜单中。鸿蒙软硬件深度结合的特性支持高速的响应速度，一镜到底的丝滑动画曲线让进入溏心音乐变成一种享受，从视觉上将你拉进一个纯粹的音乐世界。溏心音乐同样支持高规格音乐格式、数据统计、悬浮歌词等能力，其中有意思的是「碰一碰」互传音乐功能——在双方都有溏心音乐 APP 的情况下，喜欢的歌单、歌曲都可以通过碰一碰实现即时互传。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;志同道合，开发伙伴互助创新功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;溏心音乐的开发旅程中，梁乔森一直在平台上同步自己的开发进度，从播放音乐的小 Demo，到最后正式上架应用市场，网友们的陪伴与支持始终是乔森心中温暖的力量。鸿蒙应用便单的开发者周道与文轩，也注意到了这名朝气蓬勃的开发者，以自身开发经验与梁乔森交流了开发心得，与乔森一起将原先不规范的代码全面重构，完善功能。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;碰撞的交流总是带来灵感的迸发，溏心音乐别具一格的实验室功能 「Party 模式」，便是在这样一次次灵感迸发的交流瞬间诞生的创意。「Party 模式」基于分布式能力，可以让用户在有多台鸿蒙设备的情况下快速组件多声道嗨起来。同样，溏心音乐初期的设计围绕梁乔森的使用习惯分布，如主界面左上角的 Button 设计为更改播放模式，但文轩体验后分享了用户无法找到二级菜单的使用感受，这也使梁乔森从用户视角出发，将 Button 改成了可自定义，将一键打开菜单或者切换播放模式的选择权交还给用户。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;未来，溏心音乐的优化之路已然清晰铺展。一方面，基于分布式文件系统实现跨设备音乐库无缝访问与播放接力，让音乐如影随性；另一方面，深度融入 HiCar 生态，支持车载场景的语音控制、驾驶模式适配及地理围栏歌单，为出行时光增添更多美妙旋律。同时，在系统对应能力完善后提供均衡器系统，为用户提供独一无二的听感体验；打造更多个性化体验，包括动态歌词可视化、AI 歌单生成及多设备主题同步，构建全场景智能音乐服务。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;在日益发展的鸿蒙生态里，奋斗青年们携手共进，逐梦青春，不负韶华。&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//b5000ba4cf46ad6861e07e3f9fa14884.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370253</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370253</guid>
      <pubDate>Thu, 04 Sep 2025 07:36:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
    <item>
      <title>奋斗正青春，与 HarmonyOS 5 创绘地图画布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"&gt;在鸿蒙生态中，活跃着一群逐梦者，以无畏的勇气、创新的智慧与执着的坚守，重塑着青春的边界，定义着奋斗的模样，传承着五四精神。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;王维杰，今年刚步入 30 岁的他身兼前后端工程师、设计、产品经理、贴心客服多种角色。一次与爱人的旅行经历，开启了他多种角色的创新之路。在旅行准备阶段，王维杰和妻子像大多年轻人一样在各个平台上试图寻找到一份尽可能全面的旅行攻略，但千篇一律的线性规划和碎片化的信息反而掩盖了很多旅行的亮点，让人在匆忙的混乱步调中错过沿途的风景。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;旅行的遗憾总让人在归程上怅然惦念，设计一款能自由绘制旅程的 APP 想法始终萦绕在王维杰心中，正当他反复构思时，老丈人的自驾旅行图让他眼前一亮。「我看到他在纸上模拟地图，标记好地点和方位，将点与点之间划线，写好距离与路线时间，这不就是我跟老婆想实现的功能吗？」&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;代码为墨，持之以恒勾勒旅程新想象&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;带着「让旅行计划如绘画般自由」的愿景，王维杰开启了开发之路。初期，受限于团队规模，他选择从小程序切入，2024 年 7 月，示路小程序正式上线。短短两个月吸引了超 2000 的自然用户，收获诸多建设性反馈。然而，小程序平台的 API 限制逐渐显现，复杂动效实现困难，拓展功能的诉求愈发强烈。恰逢 HarmonyOS 5 发布，其多设备无缝协同的理念与开放生态，为示路团队打开了新的可能。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;作为后端工程师转型全栈开发，王维杰便从官方文档入手，边学边练前端技能。HarmonyOS 开发者官网架构清晰、内容完善的文档，海量的开发工具都为这次扬帆起航的开发之旅吹响号角。以 ArkUI 为例，其声明式编程特性让状态管理与 UI 渲染深度绑定，只需通过@State 装饰变量，即可轻松实现上拉面板等复杂动效，大幅提升开发效率。路由、跳转、扫码、拍照等系统级能力的直接调用，让开发者可以专注于创意本身。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;示路以「地图即画布」为理念，地图的显示作为第一优先级。王维杰感叹：「Map Kit 创新能力提供了全球 3.2 亿的 POI，为海量的检索工作提供充分支持，还可以在地图中放置多元的组件，随心切换地图颜色主题等，让示路的地图界面兼具实用性与视觉张力。&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//40184822313ab91ff63103aa34ad86ce.jpeg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;为了让地图「活起来」，需在地图上拥有充分自由绘制的能力支持，但现有的鸿蒙 Map Kit 中，并没有让自定义组件常显在地图中的方法。王维杰并不打算放弃，在不断翻看开发文档的过程中，无意间发现开发文档中有一个很有意思的功能——给组件截图，这样在无限层级的组件嵌套和开发自由度上取得了一个折中方案，把显示的开发自由和创新自由充分交给了开发者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;基于多种功能的支持，&lt;span style="color:#333333"&gt;示路摒弃传统线性规划引擎，使用放射式路线引擎，让旅行计划随心而动，随遇而安。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;厚积薄发，聆听共鸣构建持续发展&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#333333"&gt;示路上架应用市场后，迎来了 13 万的曝光。为了倾听用户最初的声音，王维杰又亲自兼任 APP 的客服人员，一旦收到用户反馈，他总是立刻放下手中的事情，与用户一对一深度交流。用户们的支持与肯定是王维杰前进的动力，多样化的用户场景使用需求总能激发更多的开发创意。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;未来，示路团队规划了清晰的升级路径：优化地点展示与路线创建交互，引入大模型提升智能推荐能力，完善评价体系与界面细节，让 APP 成为用户更贴心的旅行助手；依托华为生态的多设备协同能力，实现手机、车机、平板间的位置记录无缝流转，探索车载场景的更多可能；商业模式上，在保持核心功能免费的基础上，通过会员制提供增值服务，并拓展景区门票、酒店预订、户外装备等交易板块，构建完整的旅行服务生态。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;在日益发展的鸿蒙生态里，奋斗青年们携手共进，逐梦青春，不负韶华。&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//034c9df29986a207a18b5a6570585140.jpeg" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370252</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370252</guid>
      <pubDate>Thu, 04 Sep 2025 07:35:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
  </channel>
</rss>
