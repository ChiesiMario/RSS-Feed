<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 简体中文</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 10 Jun 2025 12:41:24 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>微软开始测试 Windows 11 的新版「开始」菜单</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微软现在&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2025%2F06%2F09%2Fannouncing-windows-11-insider-preview-build-26200-5641-dev-channel%2F" target="_blank"&gt;允许&lt;/a&gt;&lt;/u&gt; Windows 11 测试人员试用全新、更大的「开始」菜单，该菜单包含可滚动的界面、新的视图和更多可自定义功能。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-133f02d0def812a3023b1918667ec4cbb4c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Windows Insider 团队解释说：「我们更新了可滚动的「开始」菜单，让您可以更轻松地启动应用。」 这个可滚动的「开始」菜单意味着所有应用现在都位于顶层，因此您无需导航到第二个页面即可找到应用。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-95c628f3783c80a5c0be69c6167b9d9f144.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;更新后的「开始」菜单有两个新视图可供选择&lt;/p&gt; 
&lt;p&gt;您还可以禁用推荐部分，以便查看更多应用，并选择两种新视图：类别视图和网格视图。默认类别视图按类别对应用进行分组，而网格视图则按字母顺序排列，更像传统的列表视图。&lt;/p&gt; 
&lt;p&gt;微软还根据设备或显示器的屏幕尺寸放大了「开始」菜单。Windows Insider 团队表示：「在较大的设备上，用户可以在「开始」菜单中看到 8 列固定应用、6 条推荐和 4 列类别。在较小的设备上，你将看到 6 列固定应用、4 条推荐和 3 列类别。」&lt;/p&gt; 
&lt;p&gt;开始菜单上还新增了一个移动设备按钮，可用于展开或折叠与开始菜单一起显示的「Phone Link」界面。微软还允许 Windows 11 用户选择显示哪些锁屏小部件，允许添加或删除小部件，并重新排列它们以适应锁屏。&lt;/p&gt; 
&lt;p&gt;最后，最新的 Dev Channel 版本还包含一个新的 Gamepad 键盘更新，可让您使用控制器通过 PIN 码登录 PC。这是微软改进 Windows 11 在手持游戏设备（例如最近发布的 ROG Xbox Ally 设备）上的运行效果的一部分。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354680/windows-11-new-start-menu-testing-dev-channel</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354680/windows-11-new-start-menu-testing-dev-channel</guid>
      <pubDate>Sun, 11 May 2025 11:23:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>美团发布 AI Coding Agent 工具「NoCode」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;美团&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FdByPiajMM7fX109GSotLVQ" target="_blank"&gt;上线&lt;/a&gt;了名为「NoCode」的&amp;nbsp;&lt;/span&gt;AI Coding Agent 工具&lt;span&gt;，用户通过自然语言对话即可生成网页、小程序等应用，并支持实时修改、一键部署。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;NoCode 是一款无需编程背景和经验，通过自然语言和对话形式，即可快速生成应用的平台。可帮助不同角色以"零代码"的方式创建个人提效工具、产品原型、可交互页面等，降低开发门槛，实现创意释放。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;NoCode&lt;/span&gt;功能亮点&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;自然语言编程&lt;/strong&gt;：使用自然语言描述想法，NoCode 自动解读并转化为完整功能，无需编程经验即可生成可用能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;实时预览效果&lt;/strong&gt;：根据对话内容即时渲染、呈现页面，可实时查看每次对话后的实际效果。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;局部定位修改&lt;/strong&gt;：使用 Visual Edit 功能，可针对定位内容进行局部修改及完善；同时支持版本间对比、回退，保障每一步都「有迹可循」。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;一键部署分享&lt;/strong&gt;：应用完成后，代码将自动上传到仓库，可直接分享链接给他人使用，简化发布流程。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;img height="450" src="https://static.oschina.net/uploads/space/2025/0610/184826_5IfE_2720166.png" width="750" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;体验地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnocode.cn%2F" target="_blank"&gt;https://nocode.cn/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354675/meituan-nocode</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354675/meituan-nocode</guid>
      <pubDate>Sun, 11 May 2025 10:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>法国 AI 初创公司 Mistral 将发布推理模型 Magistral</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbc.com%2F2025%2F06%2F10%2Fmicrosoft-backed-ai-lab-mistral-debuts-reasoning-model-to-rival-openai.html" target="_blank"&gt;根据 CNBC 的报道&lt;/a&gt;，法国 AI 初创公司 Mistral 将推出其首个推理模型 Magistral，加入与 OpenAI、DeepSeek 等全球领先企业的竞争。&lt;/p&gt; 
&lt;p&gt;&lt;img height="898" src="https://static.oschina.net/uploads/space/2025/0610/183614_pyVq_2720166.png" width="2104" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Mistral 首席执行官亚瑟・门施介绍道，Magistral 不仅擅长数学和编码，还能够实现欧洲语言的逻辑推理，突破了美国和中国模型的语言局限性。&lt;/p&gt; 
&lt;p&gt;今年 3 月，Mistral 已发布 240 亿参数的 Mistral Small 3.1 模型，该模型以低成本实现本地运行，部分性能甚至超越 OpenAI 的 GPT-4o mini。5 月，Mistral 进一步推出了 Medium 3 模型，这款中量级模型在保持前沿性能的同时，显著降低了企业使用成本，每百万 Token 输入仅需 0.4 美元。&lt;/p&gt; 
&lt;p&gt;Mistral 通过技术创新，正逐步提升其在全球 AI 市场的竞争力，并为多语言应用场景提供更优解决方案。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354673/mistral-debuts-reasoning-model-to-rival-openai</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354673/mistral-debuts-reasoning-model-to-rival-openai</guid>
      <pubDate>Sun, 11 May 2025 10:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>百度网盘、文库联合发布「AI 相机」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;6 月 10 日，在百度 AI Day 开放日上，百度网盘、文库联合发布行业首个「拍存管一体」的「AI 相机」，具备全模态输入、处理、输出的系统化完整交付 AI 能力。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-acb055f53ca9b3a5f087e132e834b1d7f25.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;AI 相机已在百度网盘 App 上线，并已接入百度文库 App。百度文库还宣布多智能体协作能力「GenFlow 超能搭子」全新升级为 2.0 版本，使其成为率先实现全场景满足、全链路覆盖的多智能体协作应用。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/183107_JyHR_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;GenFlow 超能搭子 2.0 依托于文库、网盘海量的公私域数据和用户记忆库，可完整交付更懂用户的个性化内容；它可以自主调用各种模型和工具，一次性并行生成多模态、多格式内容；它还支持后链路的编辑环节，在内容创作上灵活度更高。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354672</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354672</guid>
      <pubDate>Sun, 11 May 2025 10:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI 时代的「数据之困」，什么是 AI-Ready Data</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;人工智能（AI）无疑是当今科技领域最激动人心的变革力量，它横跨各个行业，展现出重塑未来的巨大潜力。从智能客服到精准医疗，从自动驾驶到个性化推荐，AI 的触角几乎无所不至。然而，在这股 AI 浪潮之下，一个普遍的困境也日益凸显：许多雄心勃勃的 AI 项目在起步后便步履维艰，难以实现预期的投资回报，甚至大量试点项目最终未能成功转化为生产力。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;这种「雷声大，雨点小」的现象，不禁让人深思：&lt;strong&gt;AI 的理想与现实之间，究竟横亘着怎样的鸿沟？&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;追根溯源，这一困境的核心往往直指 AI 的「食粮」——数据。数据是驱动 AI 系统洞察、预测和决策的燃料。然而，企业在将数据应用于 AI 时，普遍面临着一系列严峻挑战：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;数据质量参差不齐&lt;/strong&gt;：不准确、不完整、标签错误或充满噪声的数据是 AI 项目失败的常见元凶。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhida.zhihu.com%2Fsearch%3Fcontent_id%3D258754464%26content_type%3DArticle%26match_order%3D1%26q%3D%25E6%2595%25B0%25E6%258D%25AE%25E5%25AD%25A4%25E5%25B2%259B%26zhida_source%3Dentity" target="_blank"&gt;数据孤岛&lt;/a&gt;&lt;/span&gt;与集成难题&lt;/strong&gt;：数据往往散落在企业内部各个孤立的系统中，格式各异，难以有效整合和统一访问。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;缺乏标准化与有效治理&lt;/strong&gt;：数据格式不统一、元数据缺失、数据血缘关系不清晰以及&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhida.zhihu.com%2Fsearch%3Fcontent_id%3D258754464%26content_type%3DArticle%26match_order%3D1%26q%3D%25E6%2595%25B0%25E6%258D%25AE%25E6%25B2%25BB%25E7%2590%2586%26zhida_source%3Dentity" target="_blank"&gt;数据治理&lt;/a&gt;&lt;/span&gt;机制的薄弱，都为 AI 应用埋下了隐患。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;这些普遍存在的数据问题，实际上反映了许多企业在 AI 战略上的一个深层错位：即，&lt;strong&gt;对 AI 技术本身抱有极高期望，却忽视了构建坚实数据基础的重要性&lt;/strong&gt;。企业纷纷投入巨资采购先进的 AI 工具和算法，但如果供给这些「智能引擎」的是劣质「燃料」，那么再强大的算法也难以发挥其应有的效能。AI 的雄心壮志与薄弱的数据能力之间形成的巨大反差，正是导致众多 AI 项目折戟的关键。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;面对 AI 时代的「数据之困」，企业迫切需要一种能够有效解决上述问题、真正释放 AI 潜能的数据形态。于是，「AI-ready Data」 的概念应运而生。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;什么是 AI-ready Data？为何如此重要？&lt;/strong&gt;&lt;/h2&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//be5fce4d40a25157514e64dbd6664171.jpg" width="1024" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;AI-ready Data：超越数据的「数据」&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;AI-ready Data，顾名思义，是指那些经过精心准备、结构化处理和严格验证，能够以最佳效能服务于人工智能应用的数据。这类数据使得 AI 算法能够高效地学习模式、做出准确预测并生成有价值的洞察。它强调的不仅仅是拥有海量数据，更在于数据的质量、结构和相关性，确保数据能够被 AI 算法高效处理和分析。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;打个比方，如果说 AI 是一个高性能引擎，那么 AI-ready Data 就是为其量身定制的、经过提纯的高辛烷值燃料，确保引擎能够以巅峰状态持续运转。它不是原始、未经雕琢的「数据矿石」，而是经过精炼、可以直接投入 AI「熔炉」的「高品位原料」。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;AI-ready Data 不可或缺的价值&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;AI-ready Data 之所以关键，在于它能为 AI 的成功应用带来一系列实实在在的好处。高质量、准备充分的数据是训练出高精度、高可靠性 AI 模型的基础，直接决定了模型的准确性和有效性，正所谓「Garbage in, Garbage out」。通过大幅减少数据科学家在数据清洗和整理上耗费的巨量时间，AI-ready Data 能够显著加速 AI 项目的落地进程，使团队更专注于模型创新与优化。它是构建稳健、可扩展 AI 系统，使其能处理复杂任务并大规模有效运作的基石，最终通过驱动更明智决策、提升运营效率、降低成本和增强市场竞争力，为企业创造切实的商业价值。同时，清晰、可溯源且管理良好的数据还有助于企业遵守日益严格的数据法规与 AI 伦理规范，为 AI 系统的透明度和问责制提供保障。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;理解 AI-ready Data 的价值，更要认识到它并非一劳永逸的静态目标，而是一个持续演进的动态过程，需要随 AI 发展、业务变化及法规更新不断调整优化，其及时性、可扩展性和定期刷新的需求都印证了这是一项长期投入。追求 AI-ready Data 的本质，是将数据管理从单纯的「收集」提升到战略性的「策展」与「价值创造」层面，要求企业带着明确的 AI 应用目标有意识地准备数据，使数据管理从后端支持转变为驱动创新的核心环节。更深远地看，实现数据 AI 就绪的努力将催化组织在数据治理、数据素养和跨部门协作等方面的全面成熟，打破数据孤岛，提升整体数据能力，从而孕育出惠及企业全局的数据驱动文化，这其中，人的因素和流程优化与技术平台同等重要。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;不同领域的 AI-ready Data 特征上有什么区别？&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;尽管 AI-ready Data 的核心原则具有普适性，但在不同的 AI 细分领域，其具体的形态、准备的侧重点以及在模型训练和推理阶段的要求，都会呈现出显著的差异。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;机器学习中的 AI-ready Data&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;传统的机器学习是许多企业 AI 应用的起点，其对数据的要求相对成熟和明确。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;形态&lt;/strong&gt;：ML 模型的数据通常是结构化的表格数据，例如 CSV 文件或数据库中的表，其中每一行代表一个样本，每一列代表一个特征。对于监督学习任务，数据中还会包含一个目标列或标签列，用以指示模型需要预测的结果 。虽然 ML 也可以处理文本、图像等非结构化数据，但这往往需要通过复杂的特征工程将其转换为结构化的数值特征，才能被传统 ML 算法有效利用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;特征&lt;/strong&gt;：ML 模型的数据通常是结构化的表格数据，例如 CSV 文件或数据库中的表，其中每一行代表一个样本，每一列代表一个特征。对于监督学习任务，数据中还会包含一个目标列或标签列，用以指示模型需要预测的结果 。虽然 ML 也可以处理文本、图像等非结构化数据，但这往往需要通过复杂的特征工程将其转换为结构化的数值特征，才能被传统 ML 算法有效利用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：用于预测客户流失的数据集，可能包含客户的人口统计信息、消费行为、服务使用频率等特征；用于垃圾邮件检测的已标注邮件数据集。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//3911ebe7c46166407d1fad003e28b19d.jpg" width="600" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;深度学习中的 AI-ready Data&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;深度学习以其处理复杂模式和大规模数据的能力，在图像识别、自然语言处理等领域取得了革命性进展，其对数据的需求也更为「贪婪」。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;形态&lt;/strong&gt;：深度学习模型的训练通常依赖于大规模的非结构化以及多模态数据，如图像、音频、文本和视频。这些数据往往需要进行大量且精准的标注，例如物体检测任务中的边界框、图像分割的掩码、语音识别的文本转录等。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;特征&lt;/strong&gt;：数据的「量」和「多样性」是深度学习成功的关键。同时，标注的一致性和准确性对模型性能至关重要，高质量的数据集是实现准确语音识别等任务的基础。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：著名的 ImageNet 数据集包含数百万张标注图像；LibriSpeech 数据集包含数千小时的转录音频；维基百科的文本转储等大型文本语料库。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//22383fbb9f6e44994f6c4a867cb18fce.jpg" width="700" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhida.zhihu.com%2Fsearch%3Fcontent_id%3D258754464%26content_type%3DArticle%26match_order%3D1%26q%3D%25E7%2594%259F%25E6%2588%2590%25E5%25BC%258FAI%26zhida_source%3Dentity" target="_blank"&gt;生成式 AI&lt;/a&gt;&lt;/span&gt;与 RAG 系统中的 AI-Ready Data&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;具体到生成式 AI 领域，其对 AI-ready data 的需求首先体现在模型预训练和微调阶段。基础模型的构建依赖于规模宏大、内容多样甚至多模态的数据集，涵盖了从公开网页文本、专业书籍到代码、图像和音视频等广泛来源。而模型的微调则更侧重于特定领域内高质量、高相关性的专业数据集。贯穿始终的是对数据合规性、版权以及潜在偏见的严格审视与伦理考量，负责任的数据策略是实现 AI 价值的前提。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;在众多生成式 AI 应用中，检索增强生成（RAG）架构尤为依赖 AI-ready data 的精细化准备。RAG 通过引入外部知识源来提升模型输出的准确性、时效性和深度，其核心挑战在于如何将这些外部知识高效、准确地「喂」给 LLM。这一过程的关键瓶颈与优化焦点在于数据切片（Chunking）。当前主流的数据切片方法往往显得「粗糙」。许多系统简单地采用固定字符数、按句子或段落等规则进行切分，这种方式极易破坏文本原有的语义完整性，可能导致一个完整的逻辑思路或上下文联系在切分中断裂，进而影响大模型对信息的准确理解和答案生成的质量。同时，这些简单方法常常忽略文档的内在结构，如章节、标题、列表和表格等，而这些结构本身就承载着重要的语义信息。面对不同类型（如法律合同、技术手册、研究论文或代码）和复杂格式的文档，通用的「一刀切」切片策略往往难以达到理想效果。切片的大小也需精妙平衡：过小则可能上下文不足，难以支撑复杂问答；过大则可能引入过多噪声，稀释关键信息。此外，多数在数据预处理阶段完成的静态切片，也缺乏对用户动态查询意图的灵活适应性。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;因此，理想的 RAG 数据切片策略应向更智能化、语义驱动的方向演进。其核心目标是&lt;strong&gt;最大程度地保持语义单元的完整性&lt;/strong&gt;，切分点应尽可能选在自然的语义边界。同时，要充分感知并利用文档的固有结构信息，如将标题及其对应内容作为一个单元，或整体处理表格及其注释。为了保持切分后各知识块之间的上下文连贯，可以采用重叠切片技术，或构建具有内在联系的层级式块结构，并通过元数据明确记录它们之间的逻辑关系。针对不同内容特性，应采用内容自适应的切片逻辑。至关重要的是，每个切分后的数据块都应附带丰富的元数据，如原始文档出处、章节信息、主题标签等，这些元数据不仅能提升检索的精确度，还能为大模型提供更全面的背景知识，从而增强其输出内容的可信度和可溯源性。&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//f2fb964dde666532d21ce8a16e7310fe.jpg" width="1080" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhida.zhihu.com%2Fsearch%3Fcontent_id%3D258754464%26content_type%3DArticle%26match_order%3D1%26q%3DPhysical%2BAI%26zhida_source%3Dentity" target="_blank"&gt;Physical AI&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中的 AI-ready Data&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;Physicla AI，如机器人和自动驾驶系统，需要在复杂的物理世界中进行感知、决策和行动，其数据需求具有独特性和挑战性。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;训练数据&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;形态&lt;/strong&gt;：来自多种传感器的融合数据，包括激光雷达的点云数据、摄像头的图像/视频流、雷达信号、惯性测量单元数据、GPS 定位信息、触觉传感器数据等。此外，还包括机器人的关节状态、运动轨迹、与环境的交互数据，以及大量来自模拟环境的合成数据。这类数据通常是时间序列数据，需要精确的时间同步。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;特征&lt;/strong&gt;：要求数据能够高保真地复现真实世界的物理特性和动态变化，覆盖多样化的环境条件（如不同天气、光照）、复杂的交互场景和罕见的边缘案例。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;示例&lt;/strong&gt;：自动驾驶领域的&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhida.zhihu.com%2Fsearch%3Fcontent_id%3D258754464%26content_type%3DArticle%26match_order%3D1%26q%3DWaymo%2BOpen%2BDataset%26zhida_source%3Dentity" target="_blank"&gt;Waymo Open Dataset&lt;/a&gt;&lt;/span&gt;、&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhida.zhihu.com%2Fsearch%3Fcontent_id%3D258754464%26content_type%3DArticle%26match_order%3D1%26q%3DnuScenes%25E6%2595%25B0%25E6%258D%25AE%25E9%259B%2586%26zhida_source%3Dentity" target="_blank"&gt;nuScenes 数据集&lt;/a&gt;&lt;/span&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;推理数据&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;形态&lt;/strong&gt;：来自机器人或车辆上搭载的各种传感器的实时、连续的数据流。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;特征&lt;/strong&gt;：数据处理的低延迟性对于物理 AI 系统做出及时、安全的决策和行动至关重要。系统还需要对传感器噪声、数据丢失或遮挡等情况具有鲁棒性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//f6effd68cabc43be465afc81f71a66c4.jpg" width="1080" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;审视这四大 AI 领域对数据的需求演变，可以发现一个清晰的趋势：AI 模型对数据的「胃口」越来越大，要求的数据集规模日益庞大，多样性和复杂性也与日俱增。从机器学习对结构化数据的依赖，到深度学习对海量非结构化数据的渴求，再到生成式 AI 对网络规模多模态数据的吞噬，以及 Physical AI 对高维、多传感器融合数据的整合，无不体现了这一趋势。这种趋势意味着，数据的「AI 就绪」不仅关乎数据本身的质量和形态，也对底层的数据存储、处理和管理技术平台提出了更高的要求。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;打造 AI 的坚实基础：通往 AI-ready Data 之路&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;将原始数据转化为 AI-ready Data，是一项涉及多个步骤的持续性系统工程，而非一蹴而就的任务。这需要随着 AI 技术、业务需求和数据源的变化而不断演进和优化，是一个动态的、持续改进的过程。一个典型的数据准备流程始于数据收集与获取，即从多样化的内外部来源汇集原始数据，&lt;strong&gt;尤其值得强调的是，在 AI 时代，企业自身积累的、独特的内部数据是构建差异化竞争优势和深化护城河的核心战略资产，对其的有效盘活与利用是首要任务。&lt;/strong&gt;随后是数据清洗与预处理，旨在识别并修正原始数据中的错误、不一致、缺失值和重复项，以提升数据质量。接着进行数据转换与丰富，将数据转化为适合 AI 模型的格式，可能包括特征工程、数据聚合，并通过添加元数据等方式增强数据上下文。对于监督学习任务，准确的数据标注是不可或缺的一环。在数据投入训练之前，需进行严格的数据验证与质量保证。最后，贯穿整个数据生命周期的是数据治理与安全，要求企业建立清晰的管理政策，确保数据合规、安全。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;AI-ready Data 并非遥不可及的理想概念，而是成功且可靠的人工智能应用的坚实基石。正如高质量原材料是优质产品的先决条件，高质量的 AI-ready Data 是构建高性能 AI 模型的根本保障，&lt;strong&gt;特别是当这些数据源自企业内部，承载着特定业务洞察和运营经验时，其转化为 AI 洞察的能力，将直接赋能企业构建难以复制的竞争壁垒。&lt;/strong&gt;它能够显著提升模型的准确性和可靠性，加速 AI 应用的研发部署，并最终驱动商业价值和创新突破。因此，企业应将提升数据就绪水平，尤其是内部数据的「AI 就绪」水平，视为一项战略要务，而非项目启动后的被动补救。通往 AI 驱动的创新之路，很大程度上是由对自身独特数据资产的深度挖掘和高质量准备铺就的。&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"&gt;拥抱 AI-ready Data，意味着正视数据的挑战，投入必要资源，建立完善的流程和文化，核心目标在于充分释放企业内部沉淀数据的潜在价值。这无疑是一项艰巨的任务，但其回报——通过人工智能洞察自身运营、优化决策、创新产品与服务，从而在市场竞争中占据领先地位——将是无可估量的。生成式 AI 并非短暂趋势，而是一场深刻的变革，而适配这种变革的数据基础设施和数据就绪能力，&lt;strong&gt;特别是将企业独有的内部数据转化为驱动 AI 的优质燃料的能力，将是企业在这场变革中深化护城河、立于不败之地的关键。&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354670</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354670</guid>
      <pubDate>Sun, 11 May 2025 10:26:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>RWKV 2025 生态内容征集大赛 | 5 月投稿作品及评审结果</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;大家好，我们在 2024 年底推出了 「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FUeKemVw9HnTU6FBL1iM0bg" target="_blank"&gt;RWKV 2025 生态内容征集大赛&lt;/a&gt;」，公开征集 RWKV 相关的作品，包括但不限于 RWKV 相关的论文、讲解 RWKV 的教程，以及基于 RWKV 的应用等。&lt;/p&gt; 
&lt;p&gt;2025 年 5 月，活动共收到 RWKV 生态作品投稿 &lt;strong&gt;2 份&lt;/strong&gt;，包括 &lt;strong&gt;1 篇论文、1 个教程&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;本文将公布 2025 年 5 月的活动投稿作品及评审结果。&lt;/p&gt; 
&lt;h2&gt;评审结果&lt;/h2&gt; 
&lt;h3&gt;评审结果省流版&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;作品名称&lt;/th&gt; 
   &lt;th&gt;作品分类&lt;/th&gt; 
   &lt;th&gt;投稿人&lt;/th&gt; 
   &lt;th&gt;初评奖项&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Maximizing Asynchronicity in Event-based Neural Networks&lt;/td&gt; 
   &lt;td&gt;论文&lt;/td&gt; 
   &lt;td&gt;biomems&lt;/td&gt; 
   &lt;td&gt;银奖（2888 元）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RWKV-V7 模型解析与实战：架构原理、机制剖析及自定义微调模型效果展示&lt;/td&gt; 
   &lt;td&gt;教程&lt;/td&gt; 
   &lt;td&gt;坤&lt;/td&gt; 
   &lt;td&gt;参与奖&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;下面是「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FUeKemVw9HnTU6FBL1iM0bg" target="_blank"&gt;RWKV 2025 生态内容征集大赛&lt;/a&gt;」 5 月投稿获奖的作品介绍。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;论文类&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Maximizing Asynchronicity in Event-based Neural Networks&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;投稿链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2505.11165" target="_blank"&gt;https://arxiv.org/abs/2505.11165&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;投稿人：biomems&lt;/li&gt; 
   &lt;li&gt;获奖类型：银奖（2888 元）&lt;/li&gt; 
   &lt;li&gt;项目介绍：论文提出了一种新的异步到同步框架 EVA，用于实时事件相机数据处理&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;该框架基于 RWKV-6 构建了高效的异步编码器，实现了逐事件的表示更新，并采用自监督学习方法获得具有高度泛化能力的事件表示。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt="Maximizing Asynchronicity" src="https://oscimg.oschina.net/oscnet/up-3ca302b9d83762576c1d83a5c2add0e09c0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;教程类&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RWKV-V7 模型解析与实战：架构原理、机制剖析及自定义微调模型效果展示&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;投稿链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F1904346608985944244%3Fshare_code%3D1nLMwML5XPvsB%26utm_psn%3D1904552110802055283" target="_blank"&gt;https://zhuanlan.zhihu.com/p/1904346608985944244?share_code=1nLMwML5XPvsB&amp;amp;utm_psn=1904552110802055283&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;投稿人：坤&lt;/li&gt; 
   &lt;li&gt;获奖类型：参与奖&lt;/li&gt; 
   &lt;li&gt;项目介绍：从原理解析到微调实践的全流程教程&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;首先带领初学者一起初步理解 RWKV 架构，然后使用 RWKV-PEFT 微调仓库进行了全流程的微调并展示了微调效果，在学习原理的同时，微调属于自己的 RWKV。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt="RWKV-V7 模型解析与实战" src="https://oscimg.oschina.net/oscnet/up-0c74d7e4f003a4e0322e3aee4c8f3e90ec4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;奖品/奖金发放规则&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;实物奖品（RWKV 周边等）&lt;strong&gt;以&lt;/strong&gt;顺丰快递&lt;/strong&gt;方式发出&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;奖金&lt;/strong&gt;以&lt;strong&gt;转账或第三方线上平台&lt;/strong&gt;等方式发放&lt;/li&gt; 
 &lt;li&gt;同一投稿作品有&lt;strong&gt;多位作者&lt;/strong&gt;的情况下，由&lt;strong&gt;作品投稿人&lt;/strong&gt;领取奖金，团队内部&lt;strong&gt;自行协商分配奖金&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二次投稿与奖项升级&lt;/h2&gt; 
&lt;p&gt;所有投稿作品均会获得&lt;strong&gt;评审意见&lt;/strong&gt;。请根据评审意见优化你的作品，然后可&lt;strong&gt;再次投稿以升级奖项&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;奖项成功升级时，我们将补发&lt;strong&gt;前后两个奖金的差价&lt;/strong&gt;。例如投稿作品从铁奖（888 元）升级到银奖（2888 元），则补发 2888-888=2000 元奖金。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;附活动海报&lt;/strong&gt;，欢迎各位转发！&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-4e11c3df39730d4d504ca57e04f84ed60f8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;* 本活动最终解释权归元始智能所有。&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354657</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354657</guid>
      <pubDate>Sun, 11 May 2025 09:42:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>NJet Portal 应用门户管理介绍</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#252933"&gt;NGINX 向云原生演进，All in&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2F" target="_blank"&gt;OpenNJet&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#252933"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;1. 应用门户简介&lt;/p&gt; 
&lt;p&gt;NJet 应用引擎是基于 Nginx 的面向互联网和云原生应用提供的运行时组态服务程序，作为底层引擎，NJet 实现了 NGINX 云原生功能增强、安全加固和代码重构，利用动态加载机制可以实现不同的产品形态，如 Web 服务器、流媒体服务器、负载均衡、代理 (Proxy)、应用中间件、API 网关、消息队列等产品形态等等。NJet 使用现有的 API Gateway 及各动态配置模块提供的能力，实现了一个 Portal 管理模块。通过该模块，对外提供应用门户的功能，以此来简化应用的开发及部署过程。应用可以只专注于业务逻辑的实现，将通用的安装配置及权限认证功能统一交给 NJet 应用门户管理模块。逻辑架构如下图所示：&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;br&gt; &lt;img alt="" height="364" src="https://oscimg.oschina.net/oscnet/up-1f786429eefc649f1a786a4cf6d613b839d.png" width="589" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;2. 应用部署流程&lt;/h2&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;用户使用管理员账号登录 Portal 门户，上传应用，添加用户/组/角色，最后进行应用的授权。完成上述操作后，使用普通用户账号登录门户，即可使用应用。&lt;/p&gt; 
&lt;h3&gt;a. 管理员登录&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;在部署包含 Portal 管理模块的环境上，使用 api gateway 的管理员账号登录后，将显示 Portal 的管理界面，在该界面中可以进行应用的部署，及相关的授权。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;br&gt; &lt;img alt="" height="263" src="https://oscimg.oschina.net/oscnet/up-eb99b29a0f3b3cd23de5b461cd4a307898a.png" width="535" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img alt="" height="265" src="https://oscimg.oschina.net/oscnet/up-ab63854c3979c9c02e058a9e5b9632536ac.png" width="829" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;b. 上传应用&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;应用管理中点击「新增」，选择 Portal 应用的相应 npk 文件 (应用的结构在后续章节进行说明)。点击确认后，Portal 管理模块将自动创建应用需要的 Location/Upstream, 由于使用了 NJet 的动态配置功能，所有的改动将实时生效，不需要重启或重加载 NJet。&lt;img align="left" alt="" height="212" src="https://oscimg.oschina.net/oscnet/up-757c44ef7b8cf6030198b1761680d007b2a.png" width="829" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;应用如果需要连接第三方组件，门户管理模块也提供了通用组件的配置能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;&lt;img alt="" height="222" src="https://oscimg.oschina.net/oscnet/up-8a2148c2b01426d9fa293529473c654602d.png" width="830" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;c. 创建访问应用需要的用户/组/角色&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;应用门户使用 Api Gateway 提供的授权能力，其模型是「用户-&amp;gt;组-&amp;gt;角色」的授权模型，一个用户可以归属于不同的用户组，一个用户组可以分配多个角色，API 授权将授权到角色上。&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" height="494" src="https://oscimg.oschina.net/oscnet/up-f4fd4b50f510813d71234bbbc62275705b0.png" width="448" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;应用门户的 UI 上可以对用户/组/角色及相互间的关系进行维护。&lt;/span&gt;&lt;br&gt; &lt;img alt="" height="286" src="https://oscimg.oschina.net/oscnet/up-5f0951a26bee7f0cedc0e42d92883207860.png" width="829" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;d. 对应用进行授权&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;在应用管理中，选择应用授权，对应用不同的访问路径可以授予不同的角色。&lt;br&gt; &lt;img alt="" height="342" src="https://oscimg.oschina.net/oscnet/up-de990e0cca6a922521203b0b7babccfc768.png" width="831" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;e. 普通用户登录&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;使用普通用户账号登录后，将显示应用一览页面，在改列表页面中点击对应的图标，将跳转至具体的应用中。&lt;br&gt; &lt;img alt="" height="216" src="https://oscimg.oschina.net/oscnet/up-ad17ad389f138b2dff790b1ec2894dd5d56.png" width="828" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;3. Portal 应用结构&lt;/h2&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;使用 Portal 管理模块部署的应用，需要使用 Portal 模块可以识别的格式进行目录规划及应用打包，文件类型是 npk (NJet Package)。 典型的目录结构如下图所示：&lt;br&gt; &lt;img alt="" height="477" src="https://oscimg.oschina.net/oscnet/up-f5452ae3568b4853df0c59f8e64151432d3.png" width="397" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;META-INF 目录&lt;br&gt; manifest.json: 应用的基本信息，包括入口地址，配置地址，及 location / upstream 信息。&lt;br&gt; 图标文件: jpg 或 jpg 格式的文件&lt;br&gt; app_openapi.json: openapi 3.0 格式的文件，其中 path 支持，通配符*， 例如 /setting/*&lt;br&gt; app_schema.json: 应用需要的组件配置项 （可选，非必须）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;scripts 目录&lt;br&gt; 应用使用的脚本&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;static 目录&lt;br&gt; 静态页面，资源文件，javascript 脚本， css&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;manifest.json 示例&lt;br&gt; 该文件中定了入口地址（entry_point), 应用配置地址（cfg_url), 及应用需要的 location, upstream servers, \proxy_pass。Location 中可以直接配置属性（"__access_control": 「true」 ） 来标识该访问地址需要使用门户提供的用户授权功能。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
&amp;nbsp; "manifest_version": "1.0.0",
&amp;nbsp; "app": {
&amp;nbsp; &amp;nbsp; "name": "ollamaApp",
&amp;nbsp; &amp;nbsp; "version": "1.0.0",
&amp;nbsp; &amp;nbsp; "arch": "x86_64",
&amp;nbsp; &amp;nbsp; "description": "Ollma Chat application",
&amp;nbsp; &amp;nbsp; "icon_file": "ollama.jpg",
&amp;nbsp; &amp;nbsp; "api_file": "app_openapi.json" 
&amp;nbsp; },
&amp;nbsp; "deployment": {
&amp;nbsp; &amp;nbsp; "type": "location",
&amp;nbsp; &amp;nbsp; "server_name": "",
&amp;nbsp; &amp;nbsp; "entry_point": "/ollama-app/open/chat",
&amp;nbsp; &amp;nbsp; "cfg_url": "/ollama-app/open/config",
&amp;nbsp; &amp;nbsp; "locations": [
&amp;nbsp; &amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "path": "/ollama-app/conversation",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "properties": {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; " content_by_lua_file": "${APP_PREFIX}/scripts/chat_api.lua"
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; &amp;nbsp; },
&amp;nbsp; &amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "path": "/ollama-app/setting",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "properties": {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "__access_control": "true", 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; " content_by_lua_file": "${APP_PREFIX}/scripts/chat_api.lua"
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; &amp;nbsp; },
&amp;nbsp; &amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "path": "/ollama-app/chat",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "properties": {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "access_by_lua_file": "${APP_PREFIX}/scripts/access.lua", &amp;nbsp;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"proxy_set_header": [
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Host 192.168.0.206",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "Origin http://192.168.0.206"
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ],
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "proxy_pass": {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "schema": "http",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "servers": [
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {"server":"192.168.40.206:11434"}
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ],
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "url": "/api/chat"
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; &amp;nbsp; },
&amp;nbsp; &amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "path": "/ollama-app",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "properties": {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "__access_control": "true", 
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "alias": "${APP_PREFIX}/static/",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "try_files": "$uri $uri/ /ollama-app/index.html"
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; ]
&amp;nbsp; }
}


&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;app_schema.json 示例&lt;br&gt; 应用需要连接第三方组件时，组件的配置通过 json 文件描述配置项，门户管理模块将根据 json 内容动态生成配置页面。该配置使用 formily (阿里巴巴表单框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fformilyjs.org%2F" target="_blank"&gt;https://formilyjs.org/&lt;/a&gt;) 定义的格式。 以下示例文件为连接 redis 组件时需提供的 json 文件。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    "redis_host": {
        "type": "string",
        "x-component": "Input",
        "x-component-props": {
            "placeholder": "请输入 ip 地址"
        },
        "x-decorator": "Form.Item",
        "x-decorator-props": {
            "label": "Redis IP",
            "tooltip": "请输入 ip 地址"
        }
    },
    "redis_port": {
        "type": "number",
        "x-component": "InputNumber",
        "x-component-props": {
            "placeholder": "请输入端口号",
            "min": 0,
            "max": 65535
        },
        "x-decorator": "Form.Item",
        "x-decorator-props": {
            "label": "Redis Port",
            "tooltip": "请输入端口号"
        }
    },
    "redis_password": {
        "type": "string",
        "x-component": "Input.Password",
        "x-component-props": {
            "placeholder": "请输入，密码"
        },
        "x-decorator": "Form.Item",
        "x-decorator-props": {
            "label": "Redis 密码",
            "tooltip": "请输入密码"
        }
    }
}



&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4. Demo 应用完整实例&lt;/h2&gt; 
&lt;h3&gt;a. 通过 ftp 获取到 demo 应用包&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2Fcases%2Fnjet_portal%2Fftp.tmlake.com" target="_blank"&gt;ftp.tmlake.com&lt;/a&gt;&lt;br&gt; 目录： /OpenNjet/Software/v3.2.2-portal&lt;br&gt; 文件： demo_app_1.0.2.npk&lt;/p&gt; 
&lt;h3&gt;b. 使用默认管理员账号 agw_admin /****** 登录 /portal&lt;/h3&gt; 
&lt;p&gt;&lt;img alt="" height="473" src="https://oscimg.oschina.net/oscnet/up-90b64286f130065e401aafc262e64d8a63c.png" width="828" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;c. 添加 demo 应用&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;在应用管理中，选择新增，添加获取的 demo_app_1.0.2.npk, 并点击确认&lt;br&gt; &lt;img alt="" height="403" src="https://oscimg.oschina.net/oscnet/up-74132c3765bd3e076b713b3594e31cc2036.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;成功后，应用管理页面将出现 demo 应用的条目&lt;/span&gt;&lt;br&gt; &lt;img alt="" height="291" src="https://oscimg.oschina.net/oscnet/up-d046f5dd8476abbe99d7e72b7c6b91aa41d.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;d. 为用户添加用户/组/角色&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;添加一个 demo 用户角色&lt;br&gt; &lt;img alt="" height="389" src="https://oscimg.oschina.net/oscnet/up-dc1584bc1a527fb8264f1b910c92e18b8e7.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;添加一个 demo 用户组&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;&lt;img alt="" height="386" src="https://oscimg.oschina.net/oscnet/up-6cb8a602364807628ba2f61b7535fdcce93.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;为这个组分配角色&lt;/span&gt;&lt;br&gt; &lt;img alt="" height="340" src="https://oscimg.oschina.net/oscnet/up-629e14cdbe83d75b2f4f52dc5994f7f793e.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" height="470" src="https://oscimg.oschina.net/oscnet/up-6712ce985aaf4f38446286a9f1f30c5405c.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;添加一个 user1 用户，并指定 domain 为 「demo」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" height="540" src="https://oscimg.oschina.net/oscnet/up-85d0418338f2a1046e2fa6abe9cd6656ec0.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;为这个用户分配组&lt;/span&gt;&lt;br&gt; &lt;img alt="" height="361" src="https://oscimg.oschina.net/oscnet/up-8e05d33ef94fc4717e072ca9b038a305ca8.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="500" src="https://oscimg.oschina.net/oscnet/up-4fd2fe5a506a97333930938cff6c9597e67.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;e. 编辑应用的授权&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;在应用管理列表中点击 demo 的授权&lt;br&gt; &lt;img alt="" height="324" src="https://oscimg.oschina.net/oscnet/up-604171afe88c704ba56f4142dd09981c520.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;该应用只有一个访问地址，选择后点击授权，在弹出的窗口下拉框中选择"demoUserRole"&lt;/span&gt;&lt;br&gt; &lt;img alt="" height="460" src="https://oscimg.oschina.net/oscnet/up-278c912f13145bb652cd5cd8d39cda54952.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;f. 使用刚创建的普通用户账号登录 /portal&lt;/h3&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" height="423" src="https://oscimg.oschina.net/oscnet/up-b9fb454d110707137e2acbfa401c8769432.png" width="974" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;应用列表中显示出我们刚刚部署的 demo 应用&lt;/span&gt;&lt;br&gt; &lt;img alt="" height="356" src="https://oscimg.oschina.net/oscnet/up-859d8d18885c7d84eb0a33ff2f6975c5502.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#555555"&gt;点击应用图标后，跳转到应用的页面&lt;/span&gt;&lt;br&gt; &lt;img alt="" height="299" src="https://oscimg.oschina.net/oscnet/up-c339336df13139c0f650b22103ac13934c1.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;该 demo 应用只是简单的一些页面 Tab, 展示的也只是一些测试数据&lt;/p&gt; 
&lt;h2&gt;5. 后续改进&lt;/h2&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;目前部署的应用有新版本需要升级时，需要在应用管理中删除应用后，重新上传。后续将继续优化门户管理模块，提供应用的版本管理及回滚功能。&lt;/p&gt; 
&lt;h2&gt;6. 参考&lt;/h2&gt; 
&lt;h3&gt;a. 使用到的 API&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;API Gateway: 用户/组/权限的增删改查，api group 创建，oas3.0 格式文档导入，应用部署接口&lt;br&gt; &lt;a href="https://gitee.com/njet-rd/njet/blob/master/doc/swagger/helper_api_gateway.yaml"&gt;https://gitee.com/njet-rd/njet/blob/master/doc/swagger/helper_api_gateway.yaml&lt;/a&gt;&lt;br&gt; 动态 Location API: 动态添加及删除 Location&lt;br&gt; &lt;a href="https://gitee.com/njet-rd/njet/blob/master/doc/swagger/helper_dy_loc.yaml"&gt;https://gitee.com/njet-rd/njet/blob/master/doc/swagger/helper_dy_loc.yaml&lt;/a&gt;&lt;br&gt; 动态 Upstream API: 动态添加及删除 Upsteam&lt;br&gt; &lt;a href="https://gitee.com/njet-rd/njet/blob/master/doc/swagger/helper_dyn_http_ups.yaml"&gt;https://gitee.com/njet-rd/njet/blob/master/doc/swagger/helper_dyn_http_ups.yaml&lt;/a&gt;\&lt;/p&gt; 
&lt;h3&gt;b. Demo 应用包的下载&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2Fcases%2Fnjet_portal%2Fftp.tmlake.com" target="_blank"&gt;ftp.tmlake.com&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;\&lt;br&gt; 目录： /OpenNjet/Software/v3.2.2-portal&lt;br&gt; 文件： demo_app_1.0.2.npk&lt;/p&gt; 
&lt;h3&gt;c. NJet 版本及 Portal 获取及安装&lt;/h3&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;NJet 版本需要 &amp;gt; 3.2.2&lt;br&gt; Portal 门户管理模块获取：&lt;br&gt; 地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2Fcases%2Fnjet_portal%2Fftp.tmlake.com" target="_blank"&gt;ftp.tmlake.com&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;目录： /OpenNjet/Software/v3.2.2-portal/&lt;br&gt; 文件： portal_1.0.2.npk , ssh_remote_mod.so&lt;br&gt; Portal 门户管理模块安装：&lt;br&gt; 修改配置 /usr/local/njet/conf/njet.conf&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;worker_processes auto;

cluster_name njet;
node_name node1;

error_log logs/error.log error;

helper ctrl modules/njt_helper_ctrl_module.so conf/njet_ctrl.conf;
helper broker modules/njt_helper_broker_module.so;

load_module modules/njt_agent_dynlog_module.so;  
load_module modules/njt_dyn_ssl_module.so;
load_module modules/njt_http_vtsc_module.so;
load_module modules/njt_http_location_module.so;
load_module modules/njt_http_lua_module.so;
load_module modules/njt_http_dyn_upstream_module.so;
load_module modules/njt_http_dyn_server_module.so;  
load_module modules/njt_http_token_sync_module.so;
load_module modules/njt_http_upstream_member_module.so;
load_module modules/njt_http_dyn_lua_module.so;

events {
    worker_connections  1024;
}

shared_slab_pool_size  100m;   
http {
    token_sync zone=token:4M sync_time=5s clean_time=10s;
    dyn_kv_conf conf/iot-work.conf;
    include mime.types;
    access_log off;
    vhost_traffic_status_zone;

    lua_package_path "$prefix/lualib/lib/?.lua;$prefix/modules/?.lua;$prefix/apps/?.lua;;";
    lua_package_cpath "$prefix/lualib/clib/?.so;;";
    init_by_lua_block {
        local _=require("lor.index")
        local _=require("lsqlite3complete")
    }
    server {
        listen       8080;
        error_page 401 =302 /portal;
        client_max_body_size 1000m; 
        location / {
           root html;
        }
        location /icons/ {
            alias /usr/local/njet/apps/__icons/;
            try_files $uri =404;
       }
    }
}


&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;load_module modules/njt_http_sendmsg_module.so;
load_module modules/njt_ctrl_config_api_module.so; 
load_module modules/njt_helper_health_check_module.so;
load_module modules/njt_http_upstream_api_module.so; 
load_module modules/njt_http_location_api_module.so;
load_module modules/njt_doc_module.so;
load_module modules/njt_http_vtsd_module.so;
load_module modules/njt_http_lua_module.so;
load_module modules/njt_http_dyn_upstream_module.so;
load_module modules/njt_http_dyn_upstream_api_module.so;
load_module modules/njt_http_dyn_server_api_module.so; 
load_module modules/njt_http_upload_module.so;

error_log logs/error_ctrl.log error;

events {
    worker_connections  1024;
}

http {
    dyn_kv_conf conf/ctrl_kv.conf;
    lua_package_path "$prefix/lualib/lib/?.lua;$prefix/modules/?.lua;;";
    lua_package_cpath "$prefix/lualib/clib/?.so;;";
    init_by_lua_block {
        local _=require("lor.index")
        local _=require("lsqlite3complete")
    }
    include mime.types;
    access_log off;
    server {
        client_max_body_size 1000m;  
        listen       8081;

        location / {
            return 200 "njet control panel\n";
        }

        location /api {
            dyn_module_api;  
        }
        
        location /doc {
            doc_api;
        }
        
        location /metrics {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }

        location /api_gateway {
           access_by_lua_block {
              local ac=require("api_gateway.access.control")
              local access=ac.new("/api_gateway")
              access:check()
           }
           content_by_lua_block {
              local api_gateway=require("api_gateway")
              api_gateway.main()
           }
        }
    }
}


&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;拷贝 ssh_remote_mod.so&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo cp ssh_remote_mod.so /usr/local/njet/lualib/clib/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;重启 njet&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo systemctl stop njet
sudo systemctl start njet     


&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:start"&gt;将下载后的 portal_1.0.2.npk 文件上传到 njet 主机上，并且主机上安装 curl 及 jq 命令行工具&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NJET_SITE="http://localhost:8081"

PORTAL_FILE=$(curl -k -s -F "file=@portal_1.0.2.npk"  "$NJET_SITE/api/v1/upload" |jq -r '.file')

TOKEN=$(curl -k -X POST -d '{"login_data":{"username": "agw_admin", "password": "********"}}' -s "$NJET_SITE/api_gateway/auth/login" | jq -r '.token')

curl -X 'POST' \
  "$NJET_SITE/api_gateway/deploy/app" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d "{\"uploaded_file\": \"$PORTAL_FILE\"}"&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style="background-color:#f6f6f6; color:#333333"&gt;&lt;span&gt;NJet&lt;span&gt;&amp;nbsp;&lt;/span&gt;应用引擎通过内核重构实现了独特的运行时&lt;strong&gt;动态配置加载&lt;/strong&gt;能力，是&lt;strong&gt;新一代高性能 Web 应用引擎&lt;/strong&gt;。NJet 拥有高性能数据面处理能力，将集群、高可用、主动健康检查、声明式 API 等多种辅助功能，通过 NJet 独特的副驾驶 CoPilot 服务框架调度，从而方便功能扩展，隔离管理 / 控制功能对数据面的影响，NJet 应用引擎性能超过 CNCF 推荐 Envoy 应用引擎的三倍。&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#f8f8f8; color:#666666"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fnjet.org.cn%252Fmailman%252Flistinfo" target="_blank"&gt;邮件组&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2Fmailman%2Flistinfo" target="_blank"&gt;&lt;span style="background-color:#f8f8f8; color:#666666"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style="background-color:#f6f6f6; color:#333333"&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2F" target="_blank"&gt;官网&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354653</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354653</guid>
      <pubDate>Sun, 11 May 2025 09:21:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>如何以 MLOps 保障时效表达稳定性</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;h1&gt;一、背景&lt;/h1&gt; 
&lt;p&gt;消费者选择电商平台进行购物，除了独特的商品，购物体验也越来越成为消费者衡量平台的重要标准。如何帮助客户快速的检索到自己想要购买的商品，如何让客户买到性价比最高的商品，如何帮助客户在更短的时间内收到购买的商品，这些都是平台为消费者提供的重要服务。笔者在订单履约时效项目的参与过程中，主要负责通过算法，帮助平台提升订单履约率和准确率。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//6d9c0787cf0c148664e456ed72af1e16.jpg" alt="背景 1.jpg" referrerpolicy="no-referrer"&gt; &lt;img src="https://oscimg.oschina.net/oscnet//bdf5fe41611ebedf368e369a4e62903b.jpg" alt="背景 2.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;我们先来直观感受一下时效对体验的影响。从上面 2 张图，我们能够看到，右图订单的交付时效比较长，客户对订单支付意愿就会大大降低，有行业专业人士分析，时效表达多一天，影响的 GMV 就达千万级，可见时效表达越短对应的收益越大，但也会给供应链履约带来更大的成本。从运营的角度，如果想要给消费者更短时效的体验，但却超越了供应链当前的履约能力（比如告知消费者 1 天送达，实际是 3 天），则会带来大量客诉，在得物平台因为有"晚到必赔"规则，会额外增加超时赔付优惠券的负担，引发资损。所以在得物做时效表达，需要同时兼顾时效的准确率（告知消费者 1 天送达，实际也是 1 天）和履约率（告知消费者 1 天送达，实际不超过 1 天）。&lt;/p&gt; 
&lt;p&gt;在我们长期探索过程中，模型逐渐经历了统计模型、ML 模型、DL 模型的演化。商业环境上也经历了恶劣天气、春节、大促等各种极端场景的考验，算法模型也在一次次的挑战中，变得越来越坚实，并从手工操作逐步实现自动化流程。为了让流程更加高效、稳定，我们引入了 MLOps 的理念，本文抛砖引玉，与大家一起聊聊，我们在结合 MLOps 应用的心路历程，期待能与大家碰撞出思维的火花。&lt;/p&gt; 
&lt;h1&gt;二、什么是 MLOps&lt;/h1&gt; 
&lt;p&gt;附：MLOps 方法论： &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fml-ops.org%2Fcontent%2Fmlops-principles" target="_blank"&gt;https://ml-ops.org/content/mlops-principles&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;MLOps 的核心理念&lt;/h2&gt; 
&lt;p&gt;随着算法模型在工业界的应用越来越深，越来越广，业界逐渐实践出一些标准，让我们能更高效、更稳定、低成本且长久地管理模型的整个生命周期， 涉及模型训练、模型发布、灰度或 AB，及模型的长期监控等等。&lt;/p&gt; 
&lt;p&gt;其核心理念，主要有以下 7 个方面的模型管理规范：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Versioning， 数据、模型、代码等是否有版本记录，是否能便捷地回溯；&lt;/li&gt; 
 &lt;li&gt;Testing， 数据、特征、模型的生成是否有逻辑校验；代码是否有单元测试等；&lt;/li&gt; 
 &lt;li&gt;Automation，数据、特征的生成是否有自动调度，模型训练、搜参是否自动，代码提交合并是否 CI/CD；&lt;/li&gt; 
 &lt;li&gt;Reproducibility，基于 Versioning 的保障，是否能在任意时间复现历史某次模型预测结果；&lt;/li&gt; 
 &lt;li&gt;Deployment，发布在生产、AB、陪跑等环境，是否能保证入参一致性，代码一致性；&lt;/li&gt; 
 &lt;li&gt;Monitoring，模型精度下降是否能感知，数据漂移、数据泄露等是否会被发现；&lt;/li&gt; 
 &lt;li&gt;Documentation &amp;amp; Project Structure， 文档、项目结构是否具备可读性，结构性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;MLOps 核心理念落地关键问题&lt;/h2&gt; 
&lt;p&gt;MLOps 的核心理念，应用到业务的过程，并不是一个完全由机器完成，全自动化的过程，而是需要业务团队根据实际业务的情况，不断调整入参，调整模型的过程，会涉及大量的人与机器的交互。因此，如何将这些核心理念应用到具体的业务中，我们需要思考 2 个方面的问题：&lt;/p&gt; 
&lt;h3&gt;算法模型在设计过程中，要保障业务执行的效果&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;模型复现问题：预测模型是如何生成的，如果模型丢失了，能否重新训练找回丢失的模型？&lt;/li&gt; 
 &lt;li&gt;线上一致性问题，线上时效表达时，订单是由哪个模型预测的？同样的入参给到同一个模型预测，是否保持幂等？ 发布新模型时，如何保障模型上线后的效果符合预期？&lt;/li&gt; 
 &lt;li&gt;模型快速升级问题：线上指标下降了，模型更新流程需要多少人工介入？更新频次的增加，是否带来人工成本线性增长？&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;如何降低业务使用算法模型的门槛&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;运营模型的门槛是否可以降低？&lt;/li&gt; 
 &lt;li&gt;业务、产品是否能配置化地训练、选择自己需要的模型？&lt;/li&gt; 
 &lt;li&gt;是否能让更多样化的业务决策能落地，获得更好的业务收益呢？&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;三、MLOps 关键理念的实践--时效仿真产品&lt;/h1&gt; 
&lt;p&gt;基于上述的思考，我们设计并开发了时效仿真产品，并将 MLOps 的理念融入其中。&lt;/p&gt; 
&lt;h2&gt;模型的可复现性&lt;/h2&gt; 
&lt;p&gt;对于模型训练环节来说，训练集、代码版本和模型参数是三个非常重要的因素。其中代码版本、模型超参可以通过 git 和数据库控制， 比较容易忽略的是训练集的状态，我们通过数据分层和业务日期隔离两种方法确保了训练集的可追溯性。&lt;/p&gt; 
&lt;h3&gt;数据分层，保障数据版本一致性&lt;/h3&gt; 
&lt;p&gt;如下图所示，在训练环节，时效仿真产品的用户可以圈选任意天的订单用作训练。同样圈选了下列日期的样本，站在不同日期训练是不一样的。比如站在 20240903 和 20240902，那么对于 20240901 支付的训练样本，20240903 会比 20240902 多一批已签收订单进入模型训练。越近期的数据越能反映履约网络的变化，一般 20240903 训练得到的模型预测会更准一点。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//d572e90e86b01efbb06d59b115709418.jpg" alt="模型 1.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;时效仿真产品-训练样本的圈选&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//a04dfdd7ea4cc9a0f7289d304abcc0ea.jpg" alt="模型 2.jpg" referrerpolicy="no-referrer"&gt; &lt;em&gt;数据分层&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;这就说明了圈选同样支付日期的订单做训练样本，因为训练日期不同导致已签收订单不同，进而影响实际进入模型训练的样本不同。&lt;/p&gt; 
&lt;p&gt;针对这个问题，我们做了数据分层，如上右图所示，数仓会将每日订单的最新状态更新完毕， 用户发起仿真任务后，服务端按需取对应订单，通过仿真任务 ID 作为分区，落到训练集和预测集表。随后通过 AI 计算平台调起训练、预测任务，同样传入仿真任务 ID，训练预测任务取相应分区。这样日后需要重新训练，我们能保证同一个仿真任务得到的数据是一样的。&lt;/p&gt; 
&lt;h3&gt;业务日期隔离，防止数据泄露问题&lt;/h3&gt; 
&lt;p&gt;数据分层虽然保障了数据版本的一致性，但时效场景因其特殊性，我们仍可能遇到数据泄露的问题。如下图所示，按经验订单平均在 4 天内能被签收，但是数据上从 20240830 开始订单的签收时间延长了，因为 20240902 是台风摩羯登陆的日子，受到台风天气的影响，签收时间也发生了变化。&lt;/p&gt; 
&lt;p&gt;针对 20240830~20240901 期间的支付订单，做订单签收时长的时效预测，有一部分订单会在台风前签收，有一部分会在台风后签收，在台风到来前后训练得到的模型是完全不同的，预测的结果也是不同的。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在台风前训练，模型平均预测时间就是 4 天，&lt;/li&gt; 
 &lt;li&gt;在台风后训练，模型就会预测时间偏长。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;如果台风结束后模型没及时调整，那整个时效表达的准确性就会大打折扣，不仅会破坏模型的可复现性，对模型准确性也造成了影响。我们做过测算，在不加干预情况下，台风后预测样本履约率会大幅上升 (+2.3pt)，T 日准确率大幅折损 (-30.82pt)，模型表达过于保守。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//107df891e8de02dcd6a07c867333918f.jpg" alt="数据泄露 1.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;同支付订单，签收区间示意图&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;如何解决呢？&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;对于可复现性，我们在后台记录了每个仿真任务的执行业务日期， 根据业务执行日期来判断，模型可以看到哪些天已签收订单做训练数据， 这个场景里只要把业务日期固定在台风前，那不管是哪天训练的模型，其效果都是一样的。&lt;/li&gt; 
 &lt;li&gt;对于准确性而言，我们希望让模型训练正常日期，预测正常时长，台风、暴雪等异常情况通过 bcp（Business Continuity Planning）加时来保障，台风过后指标能迅速回归正常。基于此，我们在时效仿真产品里设计了订单圈选时间类型，可以按支付或应履约日期来圈选，台风情况就按应履约圈选台风前的样本即可，如下左图。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//b70c836a299b0d2427bdd55e5ba4d367.jpg" alt="台风.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;通过上述的产品设计，我们能保证模型在任意时间训练，任意历史状态下看到的数据都是一致的，为模型可复现性打下了基础。每个模型训练完成后，除了保存模型文件，我们也会记录代码版本、特征、后处理策略等模型必要参数。&lt;/p&gt; 
&lt;h2&gt;线上的一致性保障&lt;/h2&gt; 
&lt;p&gt;当我们得到理想的模型及仿真结果后，接下去要确保安全地上线，如何能确保也是知易行难。仿真可以失败无数次，只要有一次成功就可以，上线却不容许那么多次失败，最好是一次成功。&lt;/p&gt; 
&lt;p&gt;在时效场景里更特殊的是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;随着时间的推移我们的履约网络能力是一个动态变化的过程，相应地模型也需要长期频繁的更新。&lt;/li&gt; 
 &lt;li&gt;每次模型上线后，其效果一般要等订单走完支付到签收的生命周期后才能回收效果，一般今天上线的模型，下周才知道线上效果如何。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;那么如何保障模型每次更新都是可靠的，通过一段时间的探索，我们找到了模型可靠性三步曲，依靠&lt;strong&gt;流量回放、流程保障和自动发布&lt;/strong&gt;来保障线上模型的效果。&lt;/p&gt; 
&lt;h3&gt;流量回放，确保仿真入参和线上入参一致性，提升模型准确率&lt;/h3&gt; 
&lt;p&gt;我们经常会遇到模型仿真效果很好，但线上陪跑就掉很多精度，排查后发现仿真和线上陪跑的入参存在不一致的情况。比如卖家发货地址、承运商等信息，在支付的时候存在不确定性，线上有入参补齐逻辑，比如用子模型预测，或拿历史众数填充；但仿真时这些信息已成历史，落在表里的是真实数据了。这就导致了线上、线下的入参不一致。&lt;/p&gt; 
&lt;p&gt;服务端同学为此建设了坚实的流量回放能力。平台不同的业务流程，各环节的预测是不同的。以相对复杂的现货流程为例，需要预测商家发货、头程运输、库内作业和尾程运输，理论上每一段都可以用不同的模型来预测，每一段预测入参都可能不一样。服务端同学设计的统一流量回放能力保障了在每一段的入参、出参、调用模型版本都记录在案，做到了任意订单的可追溯。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4cff6ab40712418eeb61ada8d2aac7bd.jpg" alt="业务流程.jpg" referrerpolicy="no-referrer"&gt; &lt;em&gt;复杂的业务流程&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//043b093c887e5b5d7b0c11d9c8d85a3e.jpg" alt="流量回放.jpg" referrerpolicy="no-referrer"&gt; &lt;em&gt;统一的流量回放&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;对应到模型训练、仿真环节， 我们用真实数据做训练， 用线上实际入参来仿真，这样最大化地保障模型精度，减少了仿真与上线之间的精度损失。&lt;/p&gt; 
&lt;h3&gt;流程保障，取得模型稳定性和准确性之间的平衡，最大化业务效果&lt;/h3&gt; 
&lt;p&gt;网络履约能力会受到多种事件变化因素的影响，根据事件因素的特点，大致可分为临时性变化和长久性变化。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;临时性变化：比如台风恶劣天气、两会管控、春节打烊等事件触发，事件开始时履约能力急剧变差，事件结束后马上又恢复；&lt;/li&gt; 
 &lt;li&gt;长久性变化：比如承运商班次调整、仓网变化等，其影响时间较长。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;临时性变化不应该放入模型训练， 长久性变化应该让模型去学习，并且越早学习到表达就越准。&lt;/p&gt; 
&lt;p&gt;如何判断是临时性还是长久性变化呢？如果不加约束，尽量用最新数据训练，难以排除临时性变化影响的样本，这样在事件结束后模型表达会偏保守，如上文的台风后陪跑，会损失指标的稳定性。如果加以约束，用履约已完成的订单做训练，这样可以通过履约时长等统计数据来判断是否属临时性异常，可以减少异常样本的干扰，但也会损失一定准确性。&lt;/p&gt; 
&lt;p&gt;与产品同学反复沟通了方案后，最终站在业务效果最大化的角度，我们选择在稳定性和准确性之间取其平衡，每周会定时启动较新样本仿真，选其中较优模型进入陪跑，待部分签收后决策是否选择模型上线，详细流程如下图。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//b5317de402611fcc7f86753e4b587df8.jpg" alt="流程保障.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;模型自动发布，确保模型落地效果&lt;/h3&gt; 
&lt;p&gt;模型的发布涉及到一系列流程，流程中所做的配置和操作，对模型效果会有较大的影响。因此，模型的发布也是非常重要的环节。但模型发布，一般需要等一周后，有部分订单签收，才能看到实际的结果，存在滞后性。在早期曾发生过多起，因为模型发布流程问题，导致模型效果打了折扣，比如新特征模型取错了线上 Redis 特征名、Ark 开关配置错误、模型更新后部分服务器 sdk 未升级等等。基于此，我们建立了模型自动发布流程，将线上逻辑不符合预期的情况提前反映出来。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;梳理了模型发布流程图，将发布流程标准化，如下左图所示；&lt;/li&gt; 
 &lt;li&gt;取消发布流程中的手动操作，改为系统自动操作，同时沉淀了 SLA；&lt;/li&gt; 
 &lt;li&gt;接入了模型上线审批流：陪跑回收到符合预期的效果后，需要由业务方决策选用哪个模型上线，模型的上线，将直接决定业务运营的效果和管理成本，为此我们也接入了审批流，如下右图所示；&lt;/li&gt; 
 &lt;li&gt;建立离线陪跑相同模型的方法来验证线上、仿真预测的一致性，离线陪跑的订单及入参通过流量回放获得，两边对比预测结果是否一致；&lt;/li&gt; 
 &lt;li&gt;建立旧模型反向陪跑：尤其模型有新特征或新逻辑的情况下，未来的网络履约能力可能存在较大的波动，如果旧模型直接下线，网络履约能力波动带来的影响将很难，需要有旧模型的陪跑，才能确定是线上逻辑问题，还是网络履约能力变化问题。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//d3285d9b3a5185e6e9b8372c8efd40dd.jpg" alt="发布流程.jpg" referrerpolicy="no-referrer"&gt; &lt;em&gt;发布流程&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//6aebbcb90903a605333cd4c7f8c731ed.jpg" alt="上线审批流.jpg" referrerpolicy="no-referrer"&gt; &lt;em&gt;上线审批流&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;良好的自动化离不开合理的自动化流程设计，Automation 作为 MLOps 的重要模块，帮助我们较好的解决了手动操作带来的风险和人工成本，在流量回放的一致性验证、模型仿真陪跑流程、发布自动化三方面做的自动化为我们日常低成本运营带来了很大帮助。&lt;/p&gt; 
&lt;h2&gt;模型落地标准化、产品化、自动化，降低业务落地门槛&lt;/h2&gt; 
&lt;p&gt;在模型线上表达比较稳定之后，公司希望在不同的业务场景尝试模型的应用，比如经济型快递独立模型、周末独立模型、支付和应履约模型等，不同的场景应用目的虽然不同，但其底层基础流程大致相同，为了能够让业务根据不同的管理诉求，能够灵活的调整模型训练集，我们跟时效工程、算法工程团队合作，借助 AI 计算平台的调度能力，结合自研的 faas，将模型训练、仿真做成了完全可自助的产品。其大致流程如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//9d4b606717b23674d7c073e939bf4f10.jpg" alt="模型落地.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在产品前端，用户可以按需选择不同的样本，选择灵活性非常大，可以按不同周期、承运商、类目、订单类型、线路等等各种维度来圈选需要训练或仿真的订单。服务端在接受训练、仿真请求后，按需生成训练集和预测集，再调度 AI 计算平台执行相应任务。这里我们通过 faas 解耦与仿真逻辑解析层隔离的方式支撑了产品灵活性和底层架构稳定性。&lt;/p&gt; 
&lt;h3&gt;faas 解耦，提升算法维护模型的灵活性&lt;/h3&gt; 
&lt;p&gt;如下左图，没有 faas，调用 KubeAI 的逻辑非常深地耦合在服务端的代码里，算法同学想要调整这部分配置，就需要服务端同学改代码去发版；&lt;/p&gt; 
&lt;p&gt;如下右图，有了 faas，服务端只需要关心调用了哪个 function，关键的入参是什么就可以了，其调用如右图。 镜像版本、启动命令、模板 ID 的更新就解耦给到算法同学去维护了，增加了算法迭代灵活性的同时，保障了服务端接口的稳定性。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e300fa0487f34b9539272ba0640f2b5f.jpg" alt="服务器耦合.jpg" referrerpolicy="no-referrer"&gt; &lt;em&gt;服务端耦合过多调用 AI 计算平台代码&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//a6a3468c4394b440ae1b532d83bf342e.jpg" alt="服务端只关心.jpg" referrerpolicy="no-referrer"&gt; &lt;em&gt;服务端只关心调用 function 和入参&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;仿真逻辑解析层隔离，计算任务原子化，适配多种业务场景&lt;/h3&gt; 
&lt;p&gt;业务的需求往往是复杂的，灵活的，多变的，比如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;增加多种业务类型如品牌直发、现货；&lt;/li&gt; 
 &lt;li&gt;批量训练、预测多个模型择优，不同模型对应不同特征、超参等，最后将较优模型注册到仿真产品；&lt;/li&gt; 
 &lt;li&gt;支持多种预测目标，如支付-签收、支付-到仓、发货-签收等不同模型。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;面对业务多变的需求，我们需要让计算任务具有原子性，稳定的特点。我们选择在 AI 计算平台实际执行的任务中增加解析层和后处理层的方法，与用户的需求交互，按需生成不同的配置、启动命令来调用 pipline，中间执行的 pipline 是一直稳定的。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//9d851028f283ca2e4be3642dbe462c42.jpg" alt="pipline.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;如此，我们将工程与算法的交互做了良好的解耦，让工程与算法各司其职；让底层稳定下来，解析层灵动起来。时效仿真产品就变得更敏捷，整个模型的训练、预测可以更高效、自动地运转。&lt;/p&gt; 
&lt;p&gt;目前，模型的仿真已经基本不需要算法同学介入，极大的解放了研发团队在模型探索业务应用和模型更新上的精力，减少了研发在持续维护模型上的成本。&lt;/p&gt; 
&lt;h2&gt;业务应用效果&lt;/h2&gt; 
&lt;p&gt;综上所述，在保证模型效果的同时，将模型的应用门槛降低，使得产品业务等非研发同学也能参与进模型的应用上来，借助其业务的敏感性和专业性，可以在更多的业务场景中创造进一步价值。&lt;/p&gt; 
&lt;p&gt;本期我们将为大家介绍，业务在模型使用中，两个比较典型的创新方法，一个是时效 AB 方法，带来了较好的货币化收益，一个是新特征挖掘，显著提升了模型准确率两个典型案例。&lt;/p&gt; 
&lt;h3&gt;时效 AB，货币化收益明显&lt;/h3&gt; 
&lt;p&gt;得物非常重视消费者的购物体验，在时效上，也制定了赔付策略，为用户提供订单时效保障，超时则提供赔付补偿。这套策略提升了客户订单的转化，留存，但也对时效的保障提出了更高的要求，不仅要考虑时效的准确性，还需要兼顾赔付成本和 GMV 收益。如果时效表达过于激进，可能会促转化提高 GMV，但同时增大了订单超时的风险，造成晚到必赔及客诉成本， 表达保守则反之。&lt;/p&gt; 
&lt;p&gt;那收益和成本之间的平衡点在哪儿呢？&lt;/p&gt; 
&lt;p&gt;产品同学由此牵头做了 AB 实验，通过仿真产品，我们得到多组履约率和准确率不同的组合，在不同用户 AB 过程中找到了收益和成本之间的平衡点。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//ead5ebfe83b4e7a13d7c87fb8fbd1756.jpg" alt="收益成本平衡.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;新特征挖掘，显著提升模型准确性&lt;/h3&gt; 
&lt;p&gt;业务产品在运营管理中发现，相对日常，周末、节假日期间，部分商家、承运商的网络履约能力会有一定波动，模型预测准确度也会受到影响。&lt;/p&gt; 
&lt;p&gt;分析后发现，网络履约能力的波动可以由一系列统计指标来刻画，比如昨日支付单量、昨日未揽收单量比例等。那这些指标能否让模型感知到呢？&lt;/p&gt; 
&lt;p&gt;通过仿真产品测算得到这些指标作为新特征，模型可以显著提升准确率，上线后也能保持相应优势，使得平台在周末、节假日期间也能提供高质量履约服务。&lt;/p&gt; 
&lt;p&gt;通过产品化降低的使用门槛，我们也期望未来会有更多有意思的场景与产品业务同学共同挖掘，创造更大的价值！&lt;/p&gt; 
&lt;h1&gt;五、延展 scale 的思考&lt;/h1&gt; 
&lt;p&gt;经过近 1 年的建设，供应链算法团队和时效团队配合紧密做了完善的工程建设。但从长远来看，供应链未来会有越来越多的场景要复用同样的能力，从短期来看，当前合作模式也存在一定局限。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;算法模型发布灵活性要求更高，预处理、后处理变动灵活，而业务代码又期望稳定。&lt;/li&gt; 
 &lt;li&gt;模型运营上对算法可见度较低，模型版本记录、当前上线陪跑了哪些模型对算法无法有效感知。&lt;/li&gt; 
 &lt;li&gt;模型推理耦合在业务应用里，对机器成本提高了要求。业务逻辑对机器配置要求低，但因为算法模型对机器要求配置高，所以拉高了业务域的机器成本，不便运维降本。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;因此在最近供应链算法工程小分队成立了，并且与 AI 计算平台团队强强联合，希望把业务域逻辑和算法逻辑解耦开来，让算法同学能更好地干预、运维模型，让更多场景可以低成本地接入 MLOps 标准。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4e2e78ee529420fc927815058d506107.jpg" alt="MLops 标准.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;如上图所示，让 AI 负责底层调度，供应链工程负责抽象公共能力，供应链算法和业务开发团队灵活地在各种场景落地。希望在不久的将来，我们有更多更好的故事可以与诸位分享，也欢迎各位业界大佬能加入我们团队！&lt;/p&gt; 
&lt;p&gt;文 / 凡飞&lt;/p&gt; 
&lt;p&gt;关注得物技术，每周更新技术干货&lt;/p&gt; 
&lt;p&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/p&gt; 
&lt;p&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/16686495</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/16686495</guid>
      <pubDate>Sun, 11 May 2025 09:11:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>英国拟投资 10 亿英镑推动人工智能发展</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;英国首相斯塔默在 9 日举办的伦敦科技周开幕式上说，将投资 10 亿英镑（1 英镑约合 1.35 美元），将英国的算力提升 20 倍，大幅提升人工智能基础设施，推动英国从人工智能技术接受者转变为制造者，确保人工智能大幅改善公共服务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;斯塔默说，英国将建造更多实验室、数据中心，以更快速度推进人工智能技术发展。2023 年，英国人工智能行业增速是其他经济领域的 30 倍。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;除大力投资建设相关基础设施外，斯塔默还宣布，英国将与 11 家大型企业合作，以期在未来五年培训 750 万名人工智能从业人员。英国还将推出新的「科技优先培训计划」，这意味着多达 100 万年轻人将接受科技技能培训，人工智能技术培训将贯穿英国教育体系。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;美国英伟达公司总裁兼首席执行官黄仁勋当天在开幕式上表示，英伟达计划在英国布里斯托尔打造人工智能实验室。斯塔默说，此举将有助于推动英国西南地区的就业和发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;一年一度的伦敦科技周是英国政府支持的大规模科技盛会。主办方表示，本届科技周将迎来 125 个国家和地区的约 3 万名与会者。（新华社）&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354644</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354644</guid>
      <pubDate>Sun, 11 May 2025 08:58:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>马斯克称用 Grok AI 技术优化 𝕏 平台的内容推荐系统</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;6 月 10 日，埃隆・马斯克在&amp;nbsp;&lt;span&gt;𝕏&amp;nbsp;&lt;/span&gt;&lt;span&gt;平台上发布了一系列推文，宣布引入 Grok AI 技术，以优化&amp;nbsp;&lt;/span&gt;&lt;span style="color:#0f1419"&gt;𝕏&amp;nbsp;&lt;/span&gt;&lt;span&gt;平台的内容推荐系统。这一举措旨在提升平台的整体内容质量，让更多优质内容得到展示。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;马斯克在推文中表示：「如果你对将先进 AI 应用于&amp;nbsp;&lt;span&gt;𝕏&amp;nbsp;&lt;/span&gt;&lt;span&gt;平台的内容推荐系统感兴趣，请加入我们！正确地实现这一目标对于提升人类的集体智慧至关重要。」&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/164022_d5Yj_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;他进一步&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Felonmusk%2Fstatus%2F1932144751371038919" target="_blank"&gt;解释道&lt;/a&gt;，&lt;strong&gt;随着推荐算法更多地使用 Grok AI，用户将开始在自己的信息流中看到更多来自小型账号的优质内容&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;这一消息引发了广泛关注，许多用户和内容创作者对这一变化表示期待，认为这将为平台带来更多的多样性和创新。同时，也有部分用户担心算法调整可能带来的不确定性，希望平台能够确保推荐内容的质量和多样性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354637</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354637</guid>
      <pubDate>Sun, 11 May 2025 08:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OmniTools —— 自托管的强大网页工具集合</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                            &lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OmniTools，这是一款自托管的 Web 应用，提供各种在线工具来简化日常任务。无论是编写代码、处理图片/视频、PDF 还是处理数字，OmniTools 都能满足你的需求。这里是&lt;a href="https://omnitools.app/"&gt;演示&lt;/a&gt;网站。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;无广告，无追踪，只需通过浏览器即可快速访问实用工具。&lt;/span&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;所有文件均在客户端完全处理：所有内容都不会离开你的设备。此外，Docker 镜像非常轻量，仅 28MB，可快速部署并轻松实现自托管。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height="580" src="https://static.oschina.net/uploads/space/2025/0609/154328_gGI0_4252687.png" width="1203" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/omni-tools</link>
      <guid isPermaLink="false">https://www.oschina.net/p/omni-tools</guid>
      <pubDate>Sun, 11 May 2025 08:34:00 GMT</pubDate>
    </item>
    <item>
      <title>苹果 WWDC 25 视觉智能 AI 升级开放，微美全息以多模态模型驱动场景革新提升竞争力</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;6 月 10 日消息，苹果召开 WWDC 2025 全球开发者大会，更新了全产品线的软件系统，包括 iOS、VisionOS、tvOS、WatchOS、iPadOS、MacOS 等，首次进行了命名以及视觉化的两大统一。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
       &lt;img src="https://oscimg.oschina.net/oscnet//05cf88114ab3892d47bdab673ad84b1e.png" width="719" referrerpolicy="no-referrer"&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;AI 方面宣布的最大消息是苹果确认计划向开发者开放 Apple Intelligence 基础模型，将允许应用程序开发者使用底层的 Apple Intelligence 技术编写自己的软件和功能。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
       &lt;img src="https://oscimg.oschina.net/oscnet//677d6dd42f53c728bbceaeb21923dedd.png" width="683" referrerpolicy="no-referrer"&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;另外，在发布会上，苹果为旗下操作系统引入了全新的视觉化设计，名为 Liquid Glass，这是苹果首次推出各系统通用的设计，也让视觉效果更加和谐统一。苹果的 Liquid Glass 的全新操作系统界面，称这是该公司迄今为止最全面的设计更新。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
       &lt;img src="https://oscimg.oschina.net/oscnet//e00afd42b0cb7daa7dbfff7b4f8c8c01.png" width="662" referrerpolicy="no-referrer"&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;行业方面，以大模型为核心的人工智能技术飞速发展，成为推动经济发展的新引擎。从技术方向来看，AI（人工智能）大模型正朝着多模态、专业化、通用化以及大小模型协同的方向发展。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;多模态大模型能够处理多种模态的数据，实现更加复杂的智能任务；专业化大模型针对特定行业或领域的需求进行定制和优化；通用化大模型旨在实现跨领域的智能应用；而大小模型协同是未来 AI 大模型发展的重要方向之一。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;此外，科技巨头同业陆续已展开军备竞赛，如 Meta 主要依赖自主研发与开源策略推进 AI 技术发展，微软向 OpenAI 注资逾 130 亿美元，谷歌母公司 Alphabet 则向竞争对手 Anthropic 投入数十亿美元。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
       &lt;img src="https://oscimg.oschina.net/oscnet//fd4afefc670aed4059aeba94b8a0130b.png" width="719" referrerpolicy="no-referrer"&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;与此同时，资料显示，微美全息（WIMI.US）作为 AI 多模态技术领域的领先企业，通过技术创新与生态布局，正在加速 AI 大模型在多个行业的深度应用。当前，微美全息通过多模态技术重构影视、广告等内容生产流程，并与金融、汽车、教育等行业合作定制解决方案，具有独特的技术路线和应用场景，能够在 AI 领域实现持续突破和创新。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;在 AI 竞赛愈发激烈的当下，WWDC 25，是苹果用一场全平台的视觉大换血和 AI 能力的逐步开放，展现了其在 AI 时代的独特选择。不过，与 Google、OpenAI、Anthropic 等对手相比，苹果尚未拿出真正让人惊艳的 AI 杀手锏，所以，接下去其终究能在 AI 趋势下取得一席之地，就请拭目以待。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354619</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354619</guid>
      <pubDate>Sun, 11 May 2025 07:21:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>苹果发布 Containerization：在 macOS 上运行 Linux 容器的 Swift 框架</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                            &lt;p&gt;Containerization 是 Swift 编写的容器运行时，用于在 macOS 上运行 Linux 容器。使用了 Apple 芯片的 Virtualization.framework。&lt;/p&gt;

&lt;p&gt;Containerization 提供的 API 用于：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;管理 OCI 镜像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与远程注册中心交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建并填充 ext4 文件系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与 Netlink 套接字家族交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建针对快速启动时间优化的 Linux 内核&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生成轻量级虚拟机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;管理虚拟机的运行时环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生成并与容器化进程交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 Rosetta 2 在 Apple 芯片上执行 x86_64 进程&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Containerization 框架赋予开发者直接在 Mac 上创建、下载或运行容器镜像的能力，其基于针对 Apple 芯片优化的开源框架构建，能够对容器映像进行安全隔离。&lt;/p&gt;

&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f12698847fd251962a8dabcb596a127209c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/containerization</link>
      <guid isPermaLink="false">https://www.oschina.net/p/containerization</guid>
      <pubDate>Sun, 11 May 2025 07:17:00 GMT</pubDate>
    </item>
    <item>
      <title>拥抱 AI 协同：盈米如何打造开放生态平台的底层逻辑与实践路径</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;近日，由阿里云主办、盈米基金协办的「AI 势能 Tech Day·财富管理专场」闭门研讨会在广州举行。30 家国内顶尖金融机构的大模型专家、技术负责人参加了会议，共同探讨大模型技术在证券、基金、银行等财富管理领域的金融+AI 创新应用与实践，融合「技术突破+业务升级」双重视角，为未来构建开放共享的财富管理新生态探寻对策思路。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;盈米基金联合创始人、副总裁兼技术负责人刘永，副总裁、且慢业务负责人林杰才，高级技术总监梁仲智、吴珂皓以及且慢产品负责人辜腾玉等出席本次会议。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;会上，盈米基金高级技术总监梁仲智发表主题演讲《盈米 AI 开放生态平台——盈米的 AI 协同转型探索》，深度剖析了企业在 AI 革命浪潮下的协同转型路径。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;他系统性地阐述了从 AI 辅助业务到 AI 协同业务，再到 AI 主导业务的演进路径，并分享了盈米基金开放生态平台及盈米 MCP Server 的构建思路与实践成果。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;「AI 协同转型并非只是简单的技术引入，而是一场涉及企业能力认知、组织架构乃至生产关系的深刻变革。其核心在于面向 AI 进行企业能力‘再资产化’，构建开放的协同生态。」梁仲智表示。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;br&gt; &lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//ba60a4ed2e8b35d19610198d41c99b18.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜盈米基金高级技术总监梁仲智发表主题演讲《盈米 AI 开放生态平台——盈米的 AI 协同转型探索》）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;01 AI 协同转型，一场智力领域的"工业革命"&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;在 AI 技术深度赋能金融业的当下，财富管理行业正经历前所未有的智能化变革。梁仲智将这轮 AI 变革浪潮比喻为&lt;strong&gt;继工业革命之后的"智力革命"。&lt;/strong&gt;如果说工业革命用机器替代了体力劳动，实现了大规模自动化生产，那么 AI 革命则将在智力层面实现类似的跨越。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//b68cb56f77c2e35d6f1d1a2b5c7c293a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;他进一步阐述，在 2024 年之前，AI 更多被我们视为高级搜索工具，与业务的融合度并不高。而从今年（2025 年）开始，企业应该要开始推动 AI 的协同转型，即将所有业务的设计、运作全流程都与 AI 协同生产，实现从搜索工具到智力引擎的跨越。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;基于 Scaling Law 这一人工智能领域的核心理论，梁仲智预测，未来 AI 或将主导大部分的业务，而人类则更多扮演一个监督者的角色，这也就意味着之后团队的「智力」生产力将不再受限于人力资源。企业可以将业务的最佳 SOP 进行 Agent 化，仅需投入相应算力资本，就能获得稳定高质量的智力生产力，且这种增长是非线性的。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;以合规审核为例，传统模式下人力投入随审核量线性增加，而通过 AI 固化 SOP 后，审核能力不再受限于人力，只需投入算力即可实现规模化处理。&lt;strong&gt;「我们的目标是从‘车间工人’转变为‘车间主管’，学会驾驭这个新质生产力。」&lt;/strong&gt;梁仲智表示。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;02 AI 协同转型的核心：面向 AI 的企业能力「再资产化」&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;要想实现 AI 协同业务，最关键的是在于让 AI 能够获取企业的数据和调用核心业务接口。为此，梁仲智提出了一个概念——&lt;strong&gt;面向 AI 的企业能力「再资产化」&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//a13c426264b9f02aeea5fe3243ec8b08.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜盈米 AI 开放平台系统）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;对于什么是能力的「再资产化」？他进一步解释道，当前在企业内部其实存在大量分散、未协同的数据和接口，且形式各异、错综复杂。AI 协同转型的首要任务便是将这些孤立的数据和能力进行集中管理，并通过 AI 技术来实现快速、低成本的资产治理。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;梁仲智介绍，许多企业现有的数据和接口最初是为机器而非 AI 设计的，若不经处理 AI 是难以理解其具体含义。因此，所有接口都需要进行集中处理使其对 AI 友好。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;以盈米基金为例，将适合 AI 调用的接口规范通过 prompt 交给 AI，让 AI 自动完成接口的改造，全程无需人工操作。这种 AI 协作的方式极大地提升了效率，使得公司一半的接口在两天内便完成了接入。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;在完成公司的资产治理和接口改造后，盈米将数据、算法、工具、内容、投研、投顾服务等核心能力，通过 MCP 协议和 OpenAPI 协议向 AI 开放。如此一来，在盈米内部各业务团队可便捷地使用这些能力，去赋能特定的业务场景，最终实现与 AI 的深度协同发展。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;作为一家基金投顾公司，同时也是一家金融科技公司，盈米基金不仅是金融 AI 的先行者，更是布道者。在完成企业能力「再资产化」后，盈米在 2025 年 3 月推出了 AI 开放平台，将自身沉淀多年的金融能力、数据和工具对外开放共享，&lt;strong&gt;旨在让更多人能够轻松构建和使用专业级金融 AI 应用，享受 AI 协同与自动化的智能财富管理服务。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;03 AI 协同，为什么会走向对外开放？&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;谈及为何要构建 AI 开放平台，梁仲智举了一个形象的例子来说明这个问题：「设想在未来，我下班开车回家的时候，跟我的智能眼镜说：‘刚发工资，最近有什么投资产品推荐的？’AI 回复：‘我调用了盈米 MCP 的工具查询，结合你目前的情况，我认为 A 产品挺适合。同时我发现你安装了 X 投资 App，但由于它没有提供任何工具，我无法给予你相关推荐，你可以自行打开 APP 查看’。」&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;相较于传统的 APP 操作系统，只能提供应用入口，不能提供直接、具体的服务，这也是我们诟病「人工智能不智能」的原因所在。而未来的 AI 则应该更有自主权和决策权，自身就能灵活决定和操作业务的逻辑和服务的形态。这么一来&lt;strong&gt;，对 AI 开放就变得尤为重要。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;梁仲智认为，「开放」应该具有三重含义：&lt;strong&gt;对内开放、对外开放，以及对 AI 开放。&lt;/strong&gt;对内开放，就是内部赋能，打破部门墙；对外开放，是构建外部的生态系统；而最核心的是对 AI 开放，需要把企业内部所有的东西都向 AI 开放，才能实现真正的 AI 协同转型。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//ddfea33af22308f7f4f241d133de3aeb.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜盈米对外开放的三重含义）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;对于如何构建 AI 开放平台？梁仲智分享道，「盈米 AI 开放平台的底层涵盖了企业数据、交易能力、投研投顾能力等。通过治理和再资产化，这些能力进入 API 层，转化为 AI 可调用和使用的形态。然后，在网关层将这些能力以合适协议（如 MCP 协议）向外暴露。」&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;盈米且慢 MCP Server 作为盈米 AI 开放平台的一部分，已于今年 4 月在阿里云百炼平台首发上线，并陆续入驻了&lt;strong&gt;火山引擎、百度 AI 助手、魔搭社区等主流平台&lt;/strong&gt;。用户也可以在 Cursor、Trae、CherryStudio、Dify 等平台便捷地接入使用。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;盈米且慢 MCP Server&amp;nbsp;首批提供了 30 多个金融工具，涵盖投研、投顾、金融数据等维度，核心能力包括资产诊断与配置、金融资讯与观点、基金数据以及回测和蒙特卡洛测算等投研能力，与 AI 大模型的优势形成互补。&lt;strong&gt;目前已有上千名用户申请使用盈米且慢 MCP 工具。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//5783079b5144c469fb066b550d542520.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜盈米且慢 MCP4 月上线阿里云百炼平台）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;随后，梁仲智分享了几个投顾业务与 AI 协同落地的实践案例。在财富管理领域，因为投顾服务的非标性，不同客户的目标、需求都不一样，要做到千人千面，就需要真人顾问来把关和服务。如果按照过去简单的自动化解决方案，不仅漏损率高，而且转人工服务的几率也大。在实现了投顾业务与 AI 协同之后，效率和服务质量将得到大幅提升。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//f3c52ddd45dcf25746276a9c6fe75b49.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜通过盈米且慢 MCP 生成的资产诊断报告，部分展示｜仅作释义，不作为任何投资建议）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;财务规划报告提效&lt;/strong&gt;：过去，投顾为客户出具一份完整的财务报告平均需要 3 小时。现在，通过将所需数据和 SOP 封装成 MCP 之后供 AI 调用。通过盈米且慢 MCP，只需几句大白话与 AI 协同，3 分钟内即可生成报告初稿，投顾在此基础上再进行个性化调整，确认无误后就能发给特定的客户。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="如图片无法显示，请刷新页面" src="https://oscimg.oschina.net/oscnet//81136abcafea5fcb2a540eec783e01f0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜通过盈米且慢 MCP 生成的基金季度分析报告，部分展示，作者：大白君的奇思妙想｜仅作释义，不作为任何投资建议。）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;基金研究报告自动化&lt;/strong&gt;：研究员过去需要花费数小时才能完成一份全面的基金季度研究报告，如今通过盈米且慢 MCP，在几分钟内即可生成专业的基金研究报告。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//6c03be711ecf324cb938ae9df65f9043.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜且慢 AI 智能助手「AI 小顾」）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;AI 小顾能力再升级&lt;/strong&gt;：基于 Qwen 大模型打造的且慢「AI 小顾」，在接入盈米且慢 MCP 后，AI 小顾的回答准确率大幅提升至 90% 以上，有效降低了客户服务「转人工」的比例。截至目前，且慢「AI 小顾」累计服务超 10 万名用户，解决客户问题超 100 万次。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;04 AI 协同转型带来的深层变革：重塑生产关系&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;当 AI 协同使得生产力极大提升之后，又会如何影响我们的生产关系？&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;梁仲智最后分享了他对 AI 协同转型带来的深层影响的思考。他认为未来在企业的组织结构、工程管理、激励机制和合作生态等方面将进行全面的重构。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//182794e937af9c192eb99c58ef885ca0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;（图｜盈米基金高级技术总监梁仲智发表主题演讲）&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;组织结构调整&lt;/strong&gt;：未来的职场角色可能向两端收缩。一部分人专注于服务 AI，为 AI 提供数据、封装 API；另一部分人则深入业务，直接负责交付结果，中间负责翻译和传话的角色将减少。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;软件工程变革&lt;/strong&gt;：在软件管理方面，文档将成为核心资产，因为代码的生成成本在降低；管理工具和职责分工也将随之重构。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;人才筛选与激励机制调整&lt;/strong&gt;：未来对员工编码技巧的价值可能会下降，而对业务理解和表达能力的要求将会相应提升。同时，员工中可能会出现「超级个体」，这就需要企业及时调整考核激励机制。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;外部合作生态重塑&lt;/strong&gt;：传统 SaaS 服务的价值可能因成本大幅降低而减弱，未来企业考虑合作的重点，应该转向构建面向知识的生态系统以及业务 SOP 的梳理与沉淀。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;05 拥抱 AI 变革，共创智能财富管理新未来&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;综述所述，盈米基金的 AI 协同转型实践，一定程度上为财富管理行业提供了有效的样本。无论是从企业能力「再资产化」，到 AI 开放平台建设；还是从 MCP Server 的率先推出，到投顾服务的效率革命，盈米基金用自身的实际行动诠释了什么是真正的 AI 协同转型。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;而这场"智力革命"的意义是远超技术层面的，它也正在重新定义企业的组织形态和价值创造方式。正如梁仲智所言，我们需要从「车间工人」转变为「车间主管」，学会驾驭 AI 这一「新质生产力」。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;面对这场深刻的 AI 变革，企业需要主动拥抱和积极探索自身与 AI 的协同路径。未来的财富管理行业，必将是人机协同、AI 智能驱动的新生态。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;而这个未来，正在加速到来。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//1efa6c1028ec73d48de35a46fb2d356f.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354617</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354617</guid>
      <pubDate>Sun, 11 May 2025 07:16:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>阿里通义实验室开源检索增强预训练框架 MaskSearch</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;阿里通义实验室&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FjabNf48U-HoN9W648dmX2Q" target="_blank"&gt;发布&lt;/a&gt;并开源了 MaskSearch 预训练框架，声称能让 AI 学会「主动搜索 + 多步推理」，从而更准确、更智能地回答复杂问题。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="385" src="https://oscimg.oschina.net/oscnet/up-66d5bfa06d72ffa4b1078a43c0bdfd45eba.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根据介绍，MaskSearch 的核心在于它提出的一种全新预训练任务——&lt;strong&gt;检索增强掩码预测（RAMP）&lt;/strong&gt;&amp;nbsp;，在这个任务中，模型需要填补句子中的掩码部分，并且必须通过主动搜索和多步推理来完成任务。&lt;/p&gt; 
&lt;p&gt;&lt;img height="403" src="https://oscimg.oschina.net/oscnet/up-fc9d9a6a5fdacfd87e065f2589f2309ab08.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#4a4a4a"&gt;&lt;span&gt;例如，给定一个句子：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;Andrew Barto received his&amp;nbsp;&lt;span&gt;[mask]&lt;/span&gt;&amp;nbsp;with distinction in&amp;nbsp;&lt;span&gt;[mask]&lt;/span&gt;&amp;nbsp;&lt;span style="color:#ca7d37"&gt;from&lt;/span&gt;&amp;nbsp;the University of Michigan in&amp;nbsp;&lt;span style="color:#0e9ce5"&gt;1970&lt;/span&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#4a4a4a"&gt;&lt;span&gt;AI 需要通过搜索引擎查找相关信息，逐步推理出被遮盖的部分。模型首先分析上下文，判断需要查找的信息是「学位类型」和「专业方向」。随后，它调用搜索引擎进行查询，得到关于 Andrew Barto 的相关信息，并从中提取出关键片段：「Andrew Barto, B.S., math, University of Michigan, 1970」。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#4a4a4a"&gt;&lt;span&gt;接着，AI 进行推理整合，最终填补掩码输出完整句子：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style="color:#dd1144"&gt;Andrew&lt;/span&gt;&amp;nbsp;&lt;span style="color:#dd1144"&gt;Barto&lt;/span&gt;&amp;nbsp;received his B.&lt;span&gt;S&lt;/span&gt;.&amp;nbsp;&lt;span style="color:#ca7d37"&gt;with&lt;/span&gt;&amp;nbsp;distinction&amp;nbsp;&lt;span style="color:#ca7d37"&gt;in&lt;/span&gt;&amp;nbsp;math&amp;nbsp;&lt;span style="color:#ca7d37"&gt;from&lt;/span&gt;&amp;nbsp;the&amp;nbsp;&lt;span style="color:#dd1144"&gt;University&lt;/span&gt;&amp;nbsp;&lt;span style="color:#ca7d37"&gt;of&lt;/span&gt;&amp;nbsp;&lt;span style="color:#dd1144"&gt;Michigan&lt;/span&gt;&amp;nbsp;&lt;span style="color:#ca7d37"&gt;in&lt;/span&gt;&amp;nbsp;&lt;span style="color:#0e9ce5"&gt;1970&lt;/span&gt;。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;实验表明，即使是小模型（如 Qwen2.5-1.5B），在经过 MaskSearch 预训练后，也能在多个开放域问答任务中取得显著提升。例如，在 Bamboogle 数据集中性能提升超过 11.78% ，真正做到了「小模型也能挑战大模型」。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="354" src="https://oscimg.oschina.net/oscnet/up-b3ddb53ca899c492045ff28febdbd54f73f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354614</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354614</guid>
      <pubDate>Sun, 11 May 2025 07:03:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>苹果设备端和服务器端基础语言模型的更新</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;本文翻译自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmachinelearning.apple.com%2Fresearch%2Fapple-foundation-models-2025-updates" target="_blank"&gt;https://machinelearning.apple.com/research/apple-foundation-models-2025-updates&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ab638eada802c4871bb91a726b10d31eabc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;借助 Apple Intelligence，我们将在人们每天使用的应用和体验中集成强大的生成式人工智能，同时保护用户的隐私。在 2025 年全球开发者大会（WWDC）上，我们推出了一代全新的语言基础模型，这些模型专门设计用于增强我们最新软件版本中的 Apple Intelligence 特性。我们还推出了新的 Foundation Models 框架，该框架让应用开发者可以直接访问 Apple Intelligence 核心的设备端基础语言模型。&lt;/p&gt; 
&lt;p&gt;我们构建了这些生成模型，以支持我们在各平台中集成的广泛智能功能。这些模型提升了工具使用和推理能力，能够理解图像和文本输入，运行更快且更高效，并且支持 15 种语言。我们的最新基础模型经过优化，可在 Apple 芯片上高效运行，包括一个紧凑型的、约 30 亿参数的模型，以及一个基于服务器的混合专家模型，其架构专为&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsecurity.apple.com%2Fblog%2Fprivate-cloud-compute%2F" target="_blank"&gt;私有云计算&lt;/a&gt;设计。这两个基础模型是苹果为支持我们的用户而创建的更大生成模型家族的一部分。&lt;/p&gt; 
&lt;p&gt;在此概述中，我们详细介绍了我们设计的模型架构、用于训练的数据、所采用的训练配方、用于优化推理的技术，以及与同类模型相比的评估结果。在整个过程中，我们强调了如何在设备和私有云计算上实现速度和效率的提升，同时扩展了能力并提高了质量。最后，在我们持续致力于维护核心价值观的承诺下，我们展示了负责任的人工智能原则如何贯穿整个模型开发过程。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d77e148d22b633cb086c702429e723f9622.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;图 1：苹果基础模型的建模概述&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;模型架构&lt;/h2&gt; 
&lt;p&gt;我们开发了设备端和服务器模型，以满足广泛的表现和部署需求。设备端模型针对效率进行了优化，并针对 Apple 芯片进行了定制，使推理具备低延迟且资源使用极少的特性，而服务器模型则设计用于提供高准确性和可扩展性，以处理更复杂的任务。共同而言，它们构成了一个互补的解决方案集，能够适应多种应用场景。&lt;/p&gt; 
&lt;p&gt;我们通过开发新的模型架构，提高了两种模型的效率。对于端侧模型，我们将完整模型分成两个块，深度比例为 5:3。块 2 的所有键值（KV）缓存都直接与块 1 最终层生成的 KV 缓存共享，从而将 KV 缓存的内存使用量减少了 37.5%，显著提高了首次令牌生成时间。我们还为服务器模型开发了新的架构，引入了并行轨道混合专家（PT-MoE）设计（见&lt;a href="https://www.oschina.net/news/354610/apple-foundation-models-2025-updates#figure2"&gt;图 2&lt;/a&gt;）。该模型由多个较小的 Transformer 组成，称为轨道，这些轨道独立处理令牌，仅在每个轨道块的输入和输出边界进行同步。每个轨道块还具有自己的 MoE 层。结合轨道独立性带来的轨道级并行性，这种设计显著减少了同步开销，使模型能够高效扩展，同时在不牺牲质量的情况下保持低延迟。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0c199164ae8858ba38229a44aa3a9b9c5e2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;图 2：PT-MoE 架构示意图。每个轨道由多个轨道块组成，每个轨道块包含固定数量的 transformer/MoE 层。假设总共有 L 层和轨道块深度 D，那么我们从 2L（张量并行）的同步开销减少到 L/D（轨道并行）。例如，如果 D = 4，PT 可将同步开销减少 87.5%。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;为支持更长的上下文输入，我们设计了一种交错注意力架构，结合滑动窗口局部注意力层、旋转位置嵌入（RoPE）和无位置嵌入（NoPE）的全局注意力层。这种设置提高了长度泛化能力，减少了 KV 缓存大小，并在长上下文推理中保持模型质量。&lt;/p&gt; 
&lt;p&gt;为了启用视觉能力，我们开发了一个在大规模图像数据上训练的视觉编码器。它由一个用于提取丰富特征的视觉主干网络和一个将特征与 LLM 的标记表示对齐的视觉-语言适配器组成。我们使用标准的 Vision Transformer（ViT-g）作为服务器模型，参数量为 10 亿；而用于设备端部署的更高效 ViTDet-L 主干网络参数量为 3 亿。为了进一步有效捕捉并整合局部细节和更广泛的全局上下文，我们在标准的 ViTDet 中添加了一个新颖的注册窗口（RW）机制，使得全局上下文和局部细节都能被有效捕捉。&lt;/p&gt; 
&lt;h2&gt;训练数据&lt;/h2&gt; 
&lt;p&gt;我们相信通过使用多样且高质量的数据来训练我们的模型。这包括我们从出版商处获得许可的数据、从公开可用或开源数据集精心整理的数据，以及由我们的网络爬虫 Applebot 爬取的公开信息。我们在训练基础模型时不会使用用户的私人个人数据或用户交互数据。此外，我们采取措施应用过滤器，以删除某些类别的人口识别信息，并排除粗俗和不安全的内容。&lt;/p&gt; 
&lt;p&gt;此外，我们继续遵循伦理网络爬虫的最佳实践，包括遵循广泛采用的 robots.txt 协议，允许网页发布者选择性地退出其内容被用于训练 Apple 的生成基础模型。网页发布者可以对 Applebot 可以查看的页面以及这些页面如何被使用进行精细控制，同时这些页面仍会出现在 Siri 和 Spotlight 的搜索结果中。&lt;/p&gt; 
&lt;h3&gt;文本数据&lt;/h3&gt; 
&lt;p&gt;尽管如上所述保留了某些排除项，我们继续从由 Applebot 抓取的网络内容中获取我们模型预训练数据的重要部分，这些内容涵盖了数百亿页的网页，涉及广泛的语言、地区和主题。鉴于网络内容的杂乱性，Applebot 采用了先进的抓取策略，以优先获取高质量和多样化的网页内容。特别是，我们专注于捕获高保真度的 HTML 页面，这些页面丰富了数据集，不仅包含文本，还包含结构化的元数据，以对媒体内容与周围文本内容进行对齐。为了提高相关性和质量，系统利用了多种信号，包括基于领域级别的语言识别、主题分布分析以及 URL 路径模式的启发式方法。&lt;/p&gt; 
&lt;p&gt;我们特别注重准确地从文档和现代网站中提取内容。我们通过无头渲染增强了文档集合，实现了全页加载、动态内容交互和 JavaScript 执行，这对于从网页架构中提取数据至关重要。对于依赖动态内容和用户交互的网站，我们启用了完整的页面加载和交互模拟，以可靠地从复杂页面中提取有意义的信息。我们还将在提取流程中整合大型语言模型（LLMs），尤其是在领域特定文档中，因为它们通常比传统基于规则的方法表现更佳。&lt;/p&gt; 
&lt;p&gt;除了先进的爬虫策略，我们还显著扩大了训练数据的规模和多样性，并纳入了大量高质量的通用领域、数学和编程内容。我们还扩展了多语言支持，以支持即将在今年下半年推出的新的语言。&lt;/p&gt; 
&lt;p&gt;我们认为高质量的过滤在整体模型性能中起着关键作用。我们通过减少对过于激进的启发式规则的依赖，并引入更多基于模型的过滤技术，优化了我们的数据过滤流程。通过引入基于模型的信号，我们能够保留更多具有信息量的内容，从而获得更大规模且质量更高的预训练数据集。&lt;/p&gt; 
&lt;h3&gt;图像数据&lt;/h3&gt; 
&lt;p&gt;为了增强我们的模型，并为 Apple Intelligence 功能提供视觉理解能力，我们将在预训练流程中引入图像数据，利用高质量的授权数据以及公开可用的图像数据。&lt;/p&gt; 
&lt;p&gt;使用我们的网页爬虫策略，我们获取了带有对应 alt 文本的图像对。除了过滤以确保符合法律要求外，我们还过滤了数据质量，包括图像与文本的一致性。去重后，这一过程产生了超过 100 亿对高质量的图像-文本对。此外，我们通过保留从爬取文档中原始观察到的文本上下文来创建图像-文本交错数据。在过滤质量和法律合规性后，这产生了 1.75 亿个交错的图像-文本文档，包含超过 5.5 亿张图像。由于网络爬取的图像-文本对通常较短，且往往无法全面描述图像的视觉细节，我们使用合成图像描述数据来提供更丰富的描述。我们开发了一个内部的图像描述模型，能够提供不同细节层次的高质量描述，从关键词到段落级的全面描述，生成了超过 50 亿个图像-描述对，这些数据被用于预训练的各个阶段。&lt;/p&gt; 
&lt;p&gt;为提高模型在文本丰富的视觉理解方面的能力，我们整理了多种文本丰富的数据集，包括通过授权数据、网络爬虫和内部合成方式获取的 PDF、文档、手稿、信息图、表格和图表。我们随后从图像数据中提取文本，并从图像数据中生成转录文本和问答对。&lt;/p&gt; 
&lt;p&gt;我们整理了多种图像-文本数据类型：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;高质量标题数据和基于语义的标题&lt;/strong&gt;：我们使用对比语言-图像预训练（CLIP）模型和光学字符识别（OCR）工具作为过滤器，从上述合成图像标题数据中获取高质量图像。然后，我们使用内部的定位模型对标题中的名词进行定位，并在名词后附加座标，形成基于语义的标题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;表格、图表和图表&lt;/strong&gt;：对于图表和图表，我们首先让内部的 LLM 生成合成数据字段和相应的值，然后让 LLM 编写代码，根据之前合成的数据样本生成各种类型的图表和图表。最后，我们将图表、图表和数据样本输入教师模型，以生成用于模型训练的问答对。对于表格，我们从公开网站中解析表格并将其转换为 markdown，然后使用教师模型生成的图像-markdown 配对以及图像-合成问答对用于模型训练。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;预训练&lt;/h2&gt; 
&lt;p&gt;我们的预训练配方已演进，以扩展 Apple Intelligence 能力，支持更多语言以及更广泛的功能，包括需要图像理解的功能。&lt;/p&gt; 
&lt;p&gt;预训练在多个阶段进行，其中第一个且计算需求最高的阶段仅针对文本模态。我们使用蒸馏损失训练设备端模型，但没有采用大型密集模型作为教师模型并从头开始预训练，而是利用少量最高质量的文本数据，对一个预训练的约 3B 模型中的 64 个专家、每两层混合专家（MoE）进行稀疏升维处理。这将教师模型的训练成本降低了 90%。然而，我们从头开始在 14T 文本标记上训练了稀疏服务器模型。&lt;/p&gt; 
&lt;p&gt;为了更好地支持新语言，我们在这一阶段将文本分词器的词汇量从 10 万扩展到 15 万，仅用 25% 更多的标记，就实现了对许多额外语言的表示质量。为了实现视觉感知，我们使用 CLIP 风格的对比损失训练了设备端和服务器端的视觉编码器，对 60 亿张图像-文本对进行对齐，从而得到了具有良好视觉基础的编码器。&lt;/p&gt; 
&lt;p&gt;在预训练的第二阶段，我们使用一个小的解码器，将视觉编码器与一个视觉-语言适应模块联合训练，利用高质量文本数据、交错的图像-文本数据和领域特定的图像-文本数据，对图像特征与模型表示空间进行对齐。然后，我们利用这些视觉编码器和预训练模型，提升代码、数学、多语言、长上下文理解能力，并通过多个连续的预训练阶段融入图像理解。&lt;/p&gt; 
&lt;p&gt;在持续预训练阶段，我们调整了数据集的混合比例，同时结合经过验证正确的合成数据，以提升代码、数学和多语言能力。随后，我们通过多模态适应引入了视觉理解，而不会损害模型的文本能力。在此阶段，我们从头开始训练了一个视觉-语言适应模块，以连接视觉编码器到两个模型。在最终的持续预训练阶段，我们训练模型以处理显著更长的上下文长度，使用最多 65K 个标记的序列，这些序列来自自然发生的长格式数据、专门针对特定能力设计的合成长格式数据，以及之前预训练轮次中的混合数据。&lt;/p&gt; 
&lt;h2&gt;后训练&lt;/h2&gt; 
&lt;p&gt;与我们在预训练中的方法类似，我们演进我们的后训练流程，以支持语言扩展和视觉理解。&lt;/p&gt; 
&lt;p&gt;我们通过结合人工编写的数据示例和合成数据对监督微调（SFT）进行了扩展，重点提升核心视觉能力。这包括常识知识、推理、文本丰富的图像理解、文本与视觉定位，以及多图像推理。我们进一步通过检索额外图像并合成其对应的提示和响应，来增强视觉 SFT 数据的多样性。&lt;/p&gt; 
&lt;p&gt;我们利用这一 SFT 阶段进一步启用工具使用和多语言支持。我们设计了一种过程监督标注方法，其中标注人员向工具使用代理平台发起查询，返回平台的完整轨迹，包括工具调用细节、相应的执行响应以及最终响应。这使标注人员能够检查模型的预测并纠正错误，从而生成一个树状结构的数据集用于教学。为了扩展到更多语言，我们默认将输出语言与输入语言匹配，但我们也通过创建一个包含多种语言的多样化数据集，启用了提示和响应使用不同语言的选项。&lt;/p&gt; 
&lt;p&gt;我们在 SFT 阶段之后，对设备端模型和服务器端模型均应用了基于人类反馈的强化学习（RLHF）。同时，我们提出了一种基于模型多轮生成奖励方差的新型提示选择算法，用于为 RLHF 训练定制提示数据集。我们的评估结果显示，RLHF 在人类和自动基准测试中均带来了显著提升。此外，尽管我们在 SFT 和 RLHF 阶段均引入了多语言数据，但我们发现 RLHF 在 SFT 基础上提供了显著提升，导致人类评估中的胜败比达到 16:9。&lt;/p&gt; 
&lt;p&gt;为继续提升模型在多语言性能上的质量，我们使用了指令遵循评估（IFEval）和 Alpaca Evals，并以 GPT-4o 作为评判者。我们收集了每种支持语言中由母语者撰写的 1000 个提示。通过仔细的提示微调，我们实现了自动评估与人类评估之间的良好对齐，从而加快了迭代速度。&lt;/p&gt; 
&lt;h2&gt;优化&lt;/h2&gt; 
&lt;p&gt;在过去一年中，我们扩展了 Apple Intelligence 的功能，并在提高推理效率、减少设备端和服务器端模型的功耗的同时，提升了模型的质量。&lt;/p&gt; 
&lt;p&gt;我们使用量化感知训练（QAT）将设备端模型压缩到每权重 2 位（bpw），采用了一种新颖的可学习权重裁剪和权重初始化组合。服务器端模型则使用了一种基于块的纹理压缩方法，称为自适应可扩展纹理压缩（ASTC）。虽然 ASTC 最初是为图形管线开发的，但我们发现它在模型压缩方面也非常有效。ASTC 解压过程在 Apple GPU 中实现了专用硬件组件，使权重解码无需引入额外的计算开销。&lt;/p&gt; 
&lt;p&gt;对于两种模型，我们对嵌入表进行了 4 位量化——对于设备端模型，使用 QAT 与基础权重联合训练；而对于服务器端模型，则使用后训练量化。键值缓存（KV cache）每个权重量化为 8 位。然后，我们使用额外的数据训练低秩适配器，以恢复由于这些压缩步骤而损失的质量。通过这些技术，我们观察到一些轻微的质量退化，甚至有微小的提升，例如，对于设备端模型，在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2210.03057" target="_blank"&gt;MGSM&lt;/a&gt;上出现了约 4.6% 的退化，在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2009.03300" target="_blank"&gt;MMLU&lt;/a&gt;上提升了 1.5%；而对于服务器端模型，在 MGSM 上退化了 2.7%，在 MMLU 上退化了 2.3%。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/144031_zIWy_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;表 1. On-Device 和 Server 基础模型的压缩和比特率。&lt;/p&gt; 
&lt;h2&gt;基础模型框架&lt;/h2&gt; 
&lt;p&gt;新的基础模型框架为开发者提供了访问权限，使他们能够使用搭载在设备上的约 30 亿参数语言模型，开始创建自己可靠、适用于生产的生成式 AI 功能。Apple Intelligence 核心的约 30 亿参数语言基础模型在多种文本任务上表现出色，例如摘要、实体提取、文本理解、细化、简短对话、生成创意内容等。它并非设计成一个用于一般世界知识的聊天机器人。我们鼓励应用开发者使用此框架来构建有助于他们应用的特色功能。&lt;/p&gt; 
&lt;p&gt;我们框架的亮点是一种直观的 Swift 方法，用于受限解码，称为引导生成。通过引导生成，开发者可以直接使用丰富的 Swift 数据结构，只需在 Swift 结构体或枚举上添加一个&lt;code&gt;@Generable&lt;/code&gt;宏注解。这之所以可行，是因为与模型、操作系统和 Swift 编程语言的垂直集成。它始于 Swift 编译器宏，这些宏将开发者定义的类型转换为标准化的输出格式规范。在提示模型时，框架会将响应格式注入提示中，而模型能够理解并遵守该格式，因为其在专门设计的引导生成规范数据集上进行了后训练。接下来，一个操作系统守护进程采用高度优化且互补的受限解码和推测解码实现，以提高推理速度，同时确保模型的输出符合预期格式。基于这些保证，框架能够可靠地从模型输出创建 Swift 类型的实例。这通过让应用开发者编写更简单的代码，而这些代码又由 Swift 类型系统支持，从而简化了开发者的体验。&lt;/p&gt; 
&lt;p&gt;工具调用为开发者提供了定制 ~3B 模型能力的权力，通过创建提供模型特定信息源或服务的工具来实现。&lt;/p&gt; 
&lt;p&gt;框架对工具调用的处理方式基于引导生成。开发者提供简单的 Tool Swift 协议实现，框架会自动且最优地处理并行和串行工具调用可能带来的复杂调用图。模型在工具使用数据上的微调提高了该框架功能的可靠性。&lt;/p&gt; 
&lt;p&gt;我们精心设计了该框架，以帮助应用开发者充分利用设备上的模型。对于需要教会约 3B 模型完全新技能的专用应用场景，我们还提供了一个 Python 工具包，用于训练排名 32 的适配器。由该工具包生成的适配器与基础模型框架完全兼容。然而，适配器必须随着基础模型的新版本重新训练，因此在彻底探索基础模型能力之后，才应在高级应用场景中考虑部署一个适配器。&lt;/p&gt; 
&lt;h2&gt;评估&lt;/h2&gt; 
&lt;p&gt;我们使用人类评估者对我们的设备端和服务器端模型进行了离线质量评估。我们评估了标准的基本语言和推理能力，包括分析推理、头脑风暴、聊天、分类、封闭式问题和回答、编码、创意写作、提取、数学推理、开放式问题和回答、改写、摘要以及工具使用。&lt;/p&gt; 
&lt;p&gt;随着我们模型支持的语言和区域的扩展，我们也扩展了评估任务集，使其具有区域特定性。人类评分者评估模型生成的响应是否听起来符合该区域用户的母语。例如，当一个模型回应来自英国用户的一个英语体育问题时，预期该模型知道「足球」比「足球」更符合当地习惯用语。评分者可以针对模型响应中的多种问题进行标记，包括不当地域化的术语或不自然的短语。区域特定的评估使用了与英语美国区域类似的分类，只是排除了像数学和编程这样的技术领域，这些领域大多本质上是地域无关的。&lt;/p&gt; 
&lt;p&gt;我们发现，我们的设备端模型在所有语言中均表现良好，优于稍大的 Qwen-2.5-3B 模型，并在英语中与较大的 Qwen-3-4B 和 Gemma-3-4B 模型具有竞争力。我们的服务器端模型在与 Llama-4-Scout 模型的对比中表现良好，Llama-4-Scout 的总大小和活跃参数数量与我们的服务器模型相当，但落后于较大的模型，如 Qwen-3-235B 和专有版本的 GPT-4o。&lt;/p&gt; 
&lt;h3&gt;文本响应的人类评估&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/144120_VNv0_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;图 3：在将 Apple 的基准模型与公开可访问模型进行并列评估时，文本响应中被首选的响应比例。结果按 3 个地区组呈现，这是我们观察 Apple Intelligence 国际化方式的一种视角。例如，英语（非美国）包括英国英语、加拿大英语等其他语言。PFIGSCJK 指的是葡萄牙语、法语、意大利语、德语、西班牙语、简体中文、日语和韩语。&lt;/p&gt; 
&lt;p&gt;随着我们的模型支持扩展到图像模态，使用了图像-问题对的评估集来评估图像理解能力。该评估集包含与文本评估集相似的类别，以及图像特定的类别，如信息图，这些类别挑战模型对文本丰富的图像进行推理。我们比较了设备端模型与类似规模的视觉模型，即 InternVL-2.5-4B、Qwen-2.5-VL-3B-Instruct 和 Gemma-3-4B，并将我们的服务器模型与 Llama-4-Scout、Qwen-2.5-VL-32B 和 GPT–4o 进行比较。我们发现，苹果的设备端模型在与较大的 InternVL 和 Qwen 相比时表现良好，在与 Gemma 竞争时也表现出竞争力，而我们的服务器模型在推理 FLOPS 仅为一半的情况下，优于 Qwen-2.5-VL，但落后于 Llama-4-Scout 和 GPT–4o。&lt;/p&gt; 
&lt;h3&gt;图像响应的人类评估&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/144211_J6Df_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;图 4：在将苹果基础模型与可比模型进行图像响应并列评估时，首选响应的比例。&lt;/p&gt; 
&lt;p&gt;除了评估基础模型的通用能力外，还对适配器进行了特征特定的评估。例如，考虑基于适配器的视觉智能功能，该功能可以从传单的图片中创建日历事件。收集了一组覆盖广泛环境设置、相机角度和其他挑战性场景的传单作为评估集。该集用于评估模型准确从传单中提取信息（包括日期和地点）以正确创建日历事件的能力。&lt;/p&gt; 
&lt;h2&gt;负责任的人工智能&lt;/h2&gt; 
&lt;p&gt;Apple Intelligence 是在每一步都基于我们的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finvestor.apple.com%2Four_values%2F" target="_blank"&gt;核心价值观&lt;/a&gt; 设计，并建立在行业领先的隐私保护基础之上。此外，我们还制定了我们的负责任的人工智能原则，以指导我们如何开发人工智能工具，以及支撑这些工具的模型。这些原则体现在使 Apple Intelligence 成为可能的架构的每一个阶段，并连接了功能和工具与专用模型：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;通过智能工具赋能用户：&lt;/strong&gt; 我们识别 AI 可以负责任地用于满足特定用户需求的领域，并创建相应的工具。我们尊重用户如何选择使用这些工具来实现他们的目标。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;代表我们的用户：&lt;/strong&gt; 我们打造深度个性化的产品，目标是真实地代表全球的用户。我们持续努力避免在我们的 AI 工具和模型中延续刻板印象和系统性偏见。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;精心设计：&lt;/strong&gt; 在我们的整个流程中，包括设计、模型训练、特征开发和质量评估等阶段，我们都会采取预防措施，以识别我们的 AI 工具可能被误用或导致潜在危害的方式。我们将通过用户反馈持续监控并主动改进我们的 AI 工具。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;保护隐私：&lt;/strong&gt; 我们通过强大的设备端处理和突破性的基础设施，如私有云计算，来保护用户的隐私。我们在训练基础模型时，不会使用用户的私人个人数据或用户交互数据。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;这些原则指导我们在产品开发周期中的各项工作，影响我们的产品设计、政策、评估和缓解措施。作为苹果对负责任 AI 的承诺的一部分，我们继续识别并缓解使用基础模型固有的风险，例如幻觉和对提示注入的易受性。我们的安全分类法帮助我们识别需要谨慎处理的敏感内容。&lt;/p&gt; 
&lt;p&gt;为评估 Apple Intelligence 的安全性，我们在部署之前评估了基础模型以及每个使用这些模型的功能。对于基础模型，我们结合了内部和外部的人类评估与自动评分，并将我们的模型与外部模型进行比较以进行基准测试。我们构建了针对性的安全性评估数据集，以评估基础模型在摘要、问答和头脑风暴等任务上的表现，特别是在处理高风险和敏感内容时的表现。对于各个功能，我们设计了专注于用户面对风险的数据集，以专门识别不想要或未预期的结果，以及测试质量问题在应用于敏感的特定应用程序内容时可能产生的影响。例如，我们在设计新的基础模型框架和支持资源时特别谨慎，以帮助提高应用程序中生成式 AI 的安全性。该框架通过内置的安全防护措施来确保基本的安全性，以减轻有害的模型输入和输出。为了帮助应用程序设计师和开发者将适合他们应用程序的 AI 安全性纳入考虑，我们创建了教育资料，例如新的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fdesign%2Fhuman-interface-guidelines%2Fgenerative-ai" target="_blank"&gt;生成式 AI 人机界面指南&lt;/a&gt; 以指导负责任的 AI 原则。&lt;/p&gt; 
&lt;p&gt;随着我们向新语言扩展功能，我们也在不同地区和文化中扩展了安全表示，并持续改进以适应我们用户广泛的文化和语言多样性。除了遵守当地的法律和法规外，我们还结合了高质量的外部代表性数据源，与内部和外部的法律、语言和文化专家合作，并审查了以往产品决策的先例，以确保我们的方法在语境中是尊重且相关的。为了设计多语言使用的缓解措施，我们从基础模型层面的多语言预训练对齐开始，然后扩展到针对特定功能的适配器，这些适配器整合了安全对齐数据。此外，我们扩展了我们的防护模型，这些模型旨在拦截有害提示，并在保持多语言适配器的同时，使用语言特定的训练数据。我们还开发了定制数据集，以缓解模型输出中的文化特定风险和偏见及刻板印象。同样，我们通过机器翻译和定向合成数据生成等工具，将我们的评估数据集扩展到多种语言和地域，并由母语者进行完善。最后，我们在各个功能上进行了人工红队测试，以识别每个地区特有的风险。&lt;/p&gt; 
&lt;p&gt;我们持续监控并主动改进我们的功能，借助用户反馈。例如，在图像游乐场中，用户可以通过点击「点赞」或「踩踏」来对生成的图像提供反馈，还可以添加评论。应用程序开发者也可以通过&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fbug-reporting%2F" target="_blank"&gt;反馈助手&lt;/a&gt; 提供反馈。来自用户和开发者的反馈，以及评估数据和其他指标，帮助我们持续改进 Apple Intelligence 功能和模型。&lt;/p&gt; 
&lt;h2&gt;结论&lt;/h2&gt; 
&lt;p&gt;我们非常兴奋地使 Apple Intelligence 核心语言基础模型更加高效和强大，从而解锁一系列集成在我们软件平台中的有用功能，并为全球众多语言的用户带来这些功能。我们还为应用开发者提供了直接访问我们设备上的语言基础模型的新 Foundation Models 框架。应用开发者可以利用无需成本的 AI 推理功能，仅通过几行代码即可实现，从而通过几行代码将文本提取和摘要等能力带入他们的应用中。我们的最新基础模型在每一步都体现了我们的核心价值观，例如我们对隐私的承诺，以及我们的负责任 AI 方法。我们期待在未来的技术报告中分享有关我们语言基础模型更新的更多细节。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354610/apple-foundation-models-2025-updates</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354610/apple-foundation-models-2025-updates</guid>
      <pubDate>Sun, 11 May 2025 06:42:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>美团王兴详解 AI 布局：No Code 平台免费开放，1680 个应用已上线</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在近日于北京美团总部恒电大厦举行的股东大会上，美团创始人王兴&lt;span&gt;首次&lt;/span&gt;系统阐述了公司在人工智能领域的战略布局和发展规划，揭示了美团在 AI 浪潮中的深度思考与大胆实践。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;王兴将美团的 AI 发展划分为不同阶段。早期，公司已在外卖配送的路由和派单系统中应用深度神经网络算法。当前阶段则聚焦于大语言模型及其衍生应用的开发与部署。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;面对 AI 领域的激烈竞争，美团在过去近三年时间里进行了大规模投入。王兴坦言，硬件投入尤其巨大，"卡是很贵的，而且还不好买，机房也得提早准备"。在人才争夺方面，由于&lt;span&gt;顶级&lt;/span&gt;AI 人才极度稀缺，薪酬水平被推至新高，人才获取和保留成为重大挑战。&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;No Code 革命：让非程序员也能编程&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;美团 AI 应用的一大亮点是内部研发的 No Code 平台。该平台让公司两万多名研发人员，包括产品经理、UI 设计师、商业分析师甚至 HR 和财务人员，都能通过 AI 辅助完成编程工作。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;王兴强调，No Code 的核心价值在于实现"0 到 1"的突破，让原本不擅长编程的员工也能独立开发应用。"只要他有想法，AI 能自动帮他生成代码"，这大幅提升了团队整体的创新能力和工作效率。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;目前，美团已将 No Code 平台免费向公众开放，平台上已有 1680 个应用正式发布并可免费使用。&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;理性看待 AI 发展周期：短期高估，长期低估&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;对于 AI 技术的发展前景，王兴指出，人们往往"容易高估一、两年能够发生的变化，但是低估十年发生变化"。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;王兴认为，尽管 ChatGPT 发布至今已两年半，AI 虽取得显著进展，但相比早年智能手机的革命性影响，还未从根本上改变人们的生活方式。然而，从十年维度看，AI 将带来翻天覆地的变化。&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;财务考量：短期承压，长期受益&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;谈及 AI 投入对公司财务表现的影响，王兴明确表示，AI 巨额投入在短期内"不见得那么正向"，需要股东保持耐心。但从长期视角，他坚信科技力量最终能提升生产力，更好地服务于美团"帮大家吃得更好，生活得更好"的使命。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354604</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354604</guid>
      <pubDate>Sun, 11 May 2025 06:26:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>全球首个 AI 芯片设计系统发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;全球首个基于人工智能技术的处理器芯片软硬件全自动设计系统「启蒙」近日正式发布。该系统能实现从芯片硬件到基础软件的全流程自动化设计，意味着实现 AI 设计芯片，而且其设计在多项关键指标上达到人类专家手工设计水平。相关研究成果近日发布于预印本网站 arXiv。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="288" src="https://oscimg.oschina.net/oscnet/up-db5d4d90ec1bfadbda426806d4a67345e79.webp" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;span style="color:#000000"&gt;「启蒙 1 号」实物。图片来自相关公开论文&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在 CPU 自动设计方面，利用「启蒙」系统实现国际首个全自动化设计的 CPU 芯片「启蒙 1 号」，5 小时内完成 32 位 RISC-V CPU 的全部前端设计，性能达到 Intel 486 水平，规模超过 400 万个逻辑门，目前已完成流片。其升级版「启蒙 2 号」为国际首个全自动设计的超标量处理器核，性能达到 ARM Cortex A53 水平，规模扩大至 1700 万个逻辑门。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这项研究有望改变处理器芯片软硬件的设计范式。它不仅能显著减少人工参与、提升设计效率、缩短设计周期，更能针对特定应用场景需求实现快速定制化设计，灵活满足日益多样化的芯片设计需求。&lt;/span&gt;（&lt;span style="color:#000000"&gt;科技日报&lt;/span&gt;）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354601</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354601</guid>
      <pubDate>Sun, 11 May 2025 06:14:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Linux 基金会推出 FAIR 包管理器项目，打造去中心化 WordPress 生态</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Linux 基金会上周&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Flinux-foundation-announces-the-fair-package-manager-project-for-open-source-content-management-system-stability" target="_blank"&gt;宣布&lt;/a&gt;&lt;/u&gt;推出 FAIR 包管理器项目，旨在打造一个去中心化的 WordPress 插件与主题生态系统，该项目意图将控制权归还给网站托管服务商和开发者，被业界广泛认为是回应 WP Engine 争议事件的一项延伸举措。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9818ada8ca862301eb4dd9cf16b05bbd370.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;WordPress 联合创始人 Matthew Mullenweg 去年对竞争对手 WP Engine 发动了攻击，引发了一场至今尚未解决的诉讼。期间他还通过其控制的 WordPress.org 开源项目劫持了 WP Engine 的插件。&lt;/p&gt; 
&lt;p&gt;用于分发 WordPress 插件的 FAIR 包管理器项目试图解决这一问题，它将确保 WordPress 插件不受任何一方的控制。它是中心化 WordPress.org 插件和主题生态系统的去中心化替代，旨在将控制权交还给 WordPress 托管者和开发商。它采用了联邦式开源架构。&lt;/p&gt; 
&lt;h3&gt;FAIR 项目目标&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;去中心化&lt;/strong&gt; ：消除对任何单一来源核心更新、插件、主题和翻译的依赖，实现跨生态系统的联邦化，整合来自任何来源的插件，构建更强大的开源软件供应链。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;增强安全性&lt;/strong&gt; ：减少发送给商业实体的自动浏览器数据传输和遥测数据，促进 WordPress 与欧洲通用数据保护条例的一致性，同时支持现代安全实践，建立供应链安全，包括改进加密安全措施、增强浏览器兼容性检查等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;促进创新与协作&lt;/strong&gt; ：通过提供更多的选项来控制所依赖的工具，促进商业插件开发者、托管商和应用开发者之间的创新，鼓励各方参与贡献，推动 WordPress 生态系统的整体发展。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FAIR 功能和特点&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;即插即用&lt;/strong&gt; ：FAIR 套件管理器可以作为一个即插即用型 WordPress 插件使用，能够平滑替换现有依赖 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FWordPress.org" target="_blank"&gt;WordPress.org&lt;/a&gt; API 的集中式服务架构。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;多种部署方式&lt;/strong&gt; ：托管服务商可通过提供可直接安装在现有 WordPress 站点上的独立插件，或通过 FAIR 官方发行版实现网站的自动部署这两种方式来部署 FAIR 系统。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;增强隐私保护&lt;/strong&gt; ：通过减少不必要的数据传输，提升用户隐私保护水平。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;关于 FAIR 项目的详情，访问 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffairpm" target="_blank"&gt;https://github.com/fairpm&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354583/lf-announces-the-fair-package-manager-project</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354583/lf-announces-the-fair-package-manager-project</guid>
      <pubDate>Sun, 11 May 2025 04:03:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ChatGPT 业绩狂飙，年收入首次突破百亿大关</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在短短三年的时间里，美国人工智能研究公司 OpenAI 凭借其热门聊天机器人 ChatGPT，实现了令人瞩目的业绩，年化经常性收入（ARR）已突破 100 亿美元大关。根据&lt;span&gt;最新&lt;/span&gt;数据显示，OpenAI 的 ARR 去年为约 55 亿美元，这意味着今年增长近 80%。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;ARR 是企业从订阅服务或产品中获得的预期年度收入，尤其适用于评估那些基于订阅模式（如 SaaS 服务）的企业，因为它能反映出企业从现有客户那里获得的稳定和周期性收入。OpenAI 的发言人透露，这一数据不仅包含了消费者产品和 ChatGPT 商业版本的收入，还涵盖了 API 的销售，但并不包括与微软的授权收入和其他大额交易。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="316" src="https://oscimg.oschina.net/oscnet/up-6a5ee1c98aeae2080e11f341b57ef05b7f1.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，OpenAI 目前已拥有 300 万付费商业用户，比 2 月份的 200 万大幅增加。分析人士认为，这一用户增长也为 OpenAI 的高估值提供了支持。目前，OpenAI 的估值大约是其收入的 30 倍，这显示出其投资者对公司未来增长的乐观预期。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;今年 3 月，OpenAI 完成了一轮高达 400 亿美元的融资，这也成为了有史以来&lt;span&gt;最大&lt;/span&gt;的私营科技融资案。值得一提的是，日本软银集团已经取代微软，成为 OpenAI 的&lt;span&gt;第一&lt;/span&gt;大投资者。尽管如此，OpenAI 的首席执行官 Sam Altman 仍强调，微软将继续为其提供强大的计算资源，两者的合作关系依旧稳固。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在技术合作方面，苹果公司在最近的 WWDC 大会上宣布，将把 OpenAI 的图像生成功能整合到自家的 Image Playground 功能中，ChatGPT 将帮助用户进行图像调整。这一举措将进一步推动 OpenAI 的技术在日常生活中的应用。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;尽管 OpenAI 在盈利能力上仍面临挑战，去年其亏损达到约 50 亿美元，但公司设定的目标是在 2029 年实现年收入 1250 亿美元。这需要更多的资金支持与市场扩展，才能实现这一惊人的增长速度。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354580</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354580</guid>
      <pubDate>Sun, 11 May 2025 03:44:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
