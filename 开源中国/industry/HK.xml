<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 繁體中文（香港）</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-hk</language>
    <lastBuildDate>Tue, 26 Aug 2025 12:43:00 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>國務院：建立健全人工智能開源貢獻評價和激勵機制，鼓勵高校將開源貢獻納入學生學分認證和教師成果認定</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;國務院印發《關於深入實施「人工智能+」行動的意見》。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0826/191343_GXhC_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;其中提到，促進開源生態繁榮。支持人工智能開源社區建設，促進模型、工具、數據集等匯聚開放，培育優質開源項目。建立健全人工智能開源貢獻評價和激勵機制，鼓勵高校將開源貢獻納入學生學分認證和教師成果認定。支持企業、高校、科研機構等探索普惠高效的開源應用新模式。加快構建面向全球開放的開源技術體系和社區生態，發展具有國際影響力的開源項目和開發工具等。&lt;/p&gt; 
&lt;p&gt;原文：&lt;em&gt;https://www.gov.cn/zhengce/content/202508/content_7037861.htm&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368606</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368606</guid>
      <pubDate>Tue, 19 Aug 2025 11:14:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>騰訊遊戲發佈 AI 工具集 VISVISE，動畫製作效率提升 8 倍</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在近日舉行的科隆國際遊戲展上，騰訊遊戲正式發佈了名為 VISVISE 的遊戲創作 AI 工具集，該產品旨在大幅提升遊戲美術師的工作效率，減少重複性勞動。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;據介紹，VISVISE 工具集涵蓋動畫製作、模型製作、數字資產管理和智能 NPC 四個核心領域。其中最受關注的是 MotionBlink 動畫生成工具，該工具能夠根據用户輸入的關鍵幀自動補全中間幀，快速生成完整的動畫序列。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;騰訊遊戲技術團隊表示，使用 MotionBlink 工具，原本需要數天時間製作的 10 秒動畫，現在僅需 4 秒即可完成 200 幀動畫的生成，效率提升達到 8 倍。該工具不僅能顯著減輕動畫師的工作負擔，生成的動畫質量也能在某些情況下達到光學動作捕捉的水平。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="211" src="https://oscimg.oschina.net/oscnet/up-66204834e57b0c6dc3f5aaa12b702a8cd61.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;傳統動畫製作流程中，手動補幀通常佔據動畫師大部分工作時間。MotionBlink 的推出有效解決了這一痛點。現場體驗的用户反饋稱，該技術大幅降低了角色動畫製作的門檻，為小型開發團隊和獨立創作者提供了有力的技術支持。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;除 MotionBlink 外，VISVISE 還包含 GoSkinning 工具，專門用於解決 3D 角色蒙皮製作中的效率問題。傳統的蒙皮流程複雜且耗時，而 GoSkinning 通過 AI 技術實現了自動化處理。據測試數據顯示，處理一個包含 2 萬頂點的 3D 模型，使用該工具僅需 30 秒時間，大幅提升了工作效率。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="270" src="https://oscimg.oschina.net/oscnet/up-a489a914edc7b41eb74b895cdf1cb3f2679.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;騰訊遊戲方面表示，VISVISE 工具集的推出不僅是技術層面的突破，更代表了對整個遊戲開發工作流程的重新設計。通過 AI 技術的應用，美術師能夠將更多精力投入到創意設計和藝術創作中，而非繁重的技術操作。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;業內專家認為，隨着 AI 技術在遊戲開發領域的深入應用，傳統的內容製作模式正在發生根本性變化。像 VISVISE 這樣的工具集有望推動整個遊戲行業向更高效、更智能的方向發展。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;目前，騰訊遊戲尚未公佈 VISVISE 工具集的具體發佈時間和使用方式，但表示將繼續優化相關技術，為遊戲開發者提供更完善的 AI 輔助工具。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368600</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368600</guid>
      <pubDate>Tue, 19 Aug 2025 10:26:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌 Chrome 測試新特性：一鍵設為默認瀏覽器並固定至任務欄</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌正在測試一項 Chrome 新特性，用户可以在設置頁面通過 &lt;strong&gt;「一鍵操作」&lt;/strong&gt; 將 Chrome 同時設為 &lt;strong&gt;Windows 11 的默認瀏覽器&lt;/strong&gt; 並 &lt;strong&gt;固定到任務欄上&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c8ad80599c395d70a2597444696015e6f0c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5e646e64658fdffccb2016c1035431da87f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwindowsreport.com%2Fgoogle-preps-one-click-option-to-make-chrome-default-and-pin-it-to-windows-11-taskbar%2F" target="_blank"&gt;根據科技媒體 Windows Report 的報道&lt;/a&gt;，該功能的開發細節已出現在 Chromium 代碼庫中，按鈕文字將改為 「將 Google Chrome 設為默認瀏覽器並固定到任務欄」（&lt;em&gt;「WIP Add option to pin to taskbar in settings.」&amp;nbsp;&lt;/em&gt;），且直接整合到設置頁面，表明該特性並非短期實驗，而是計劃長期保留 。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-97e9429156e4e8c29003511c9ae4be43892.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此前，Mozilla 曾在 Firefox 瀏覽器的安裝階段短暫測試過類似提示，但未長期保留；相比之下，谷歌將功能深度融入瀏覽器設置中，未來可能會穩定上線 。&lt;/p&gt; 
&lt;p&gt;此外，該特性的推出可能與歐盟《數字市場法》有關，該法規要求用户在 Windows 上設置非 Edge 瀏覽器為默認瀏覽器後，除非用户明確拒絕，系統應自動將其固定到任務欄 。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368599</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368599</guid>
      <pubDate>Tue, 19 Aug 2025 10:24:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>微軟發佈免費 VM 轉換工具，支持 VMware 遷移至 Hyper-V</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微軟近日推出免費公測版「VM 轉換工具」，可將 VMware 虛擬機遷移至基於 Hyper-V 的 Windows Server。該工具支持一次遷移最多 10 台虛擬機，兼容 BIOS 與 UEFI 系統，並保留引導配置。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c10d73d298129ec7f5bdbdaeaddfad87663.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;該工具面向因合規或數據治理要求而傾向於本地部署的企業用户，現已發佈於 Windows 管理中心。作為擴展安裝程序，該工具允許在不借助額外代理程序的情況下，完成 VMware 虛擬機向 Hyper-V 環境的遷移。&lt;/p&gt; 
&lt;p&gt;遷移過程分為多個階段：首先連接到現有虛擬化環境，並預檢查關鍵組件和配置，確保遷移條件達標，若發現問題需由 IT 管理員手動修復。隨後，工具利用變更塊跟蹤（CBT）技術創建源虛擬機的副本，並保持其正常運行。&lt;/p&gt; 
&lt;p&gt;在用户確認關機後，工具進行第二次複製，將首次複製以來產生的增量數據同步到目標主機，確保遷移過程無中斷，減少停機時間，並在切換完成後保持系統一致性。&lt;/p&gt; 
&lt;p&gt;該工具一次可遷移多達 10 台虛擬機，並根據固件類型自動映射：BIOS 系統映射為 Hyper-V 的第一代（Generation 1），UEFI 系統映射為第二代（Generation 2），且完整保留引導配置。&lt;/p&gt; 
&lt;p&gt;詳情查看&amp;nbsp;&lt;em&gt;https://learn.microsoft.com/zh-cn/windows-server/manage/windows-admin-center/use/migrate-vmware-to-hyper-v&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368595</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368595</guid>
      <pubDate>Tue, 19 Aug 2025 10:14:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Docker Desktop 修復高危漏洞 CVE-2025-9074</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Docker 近日發佈更新，修復了 Docker Desktop 在 Windows 10/11 和 macOS 版本中存在的一處高危漏洞。該漏洞編號為 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cve.org%2FCVERecord%3Fid%3DCVE-2025-9074" target="_blank"&gt;CVE-2025-9074&lt;/a&gt;，評分高達 9.3/10，利用難度低，風險極高。官方已在 Docker Desktop v4.44.3 中完成修復，建議所有用户立即升級。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0826/180337_8exE_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;問題源於容器可以在無需身份驗證的情況下連接至 192.168.65.7:2375 的 Docker Engine API。攻擊者可藉此繞過隔離機制，直接訪問宿主機文件系統。在驗證實驗中，研究團隊證明瞭任何容器只需發起一個 Web 請求，就能觸發漏洞並全面控制安裝 Docker Desktop 的主機。&lt;/p&gt; 
&lt;p&gt;在 macOS 上，由於系統對應用有額外的文件系統限制，漏洞主要影響 Docker Desktop 的控制權，進一步攻陷整個系統的難度較大。但在 Windows 10/11 環境下，由於缺乏類似的限制，攻擊風險更為嚴重。&lt;/p&gt; 
&lt;p&gt;值得注意的是，Linux 版 Docker Desktop 不受影響，因為其並未通過 TCP 連接依賴 Docker Engine API。要避免風險，用户需儘快升級至 v4.44.3 版本。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://docs.docker.com/desktop/release-notes/#4443&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368593</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368593</guid>
      <pubDate>Tue, 19 Aug 2025 10:03:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>國務院發佈《「人工智能+」行動意見》 2035 年邁入智能社會</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;國務院近日正式印發《&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gov.cn%2Fzhengce%2Fcontent%2F202508%2Fcontent_7037861.htm" target="_blank"&gt;關於深入實施「人工智能+」行動的意見&lt;/a&gt;》，提出明確時間表與發展目標，全面推動人工智能技術賦能經濟社會高質量發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="237" src="https://oscimg.oschina.net/oscnet/up-f8b9dd452974599b0158dc3c5ff04d27931.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;根據《意見》，到 2027 年，我國將率先在 6 大重點領域實現人工智能的廣泛深度融合，新一代智能終端和智能體等核心應用普及率將超過 70%，智能經濟核心產業規模快速增長。同時，人工智能在公共治理領域的應用將顯著增強，開放合作體系日趨完善。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;到 2030 年，人工智能將全面賦能各行業高質量發展，核心應用普及率進一步提升至 90% 以上，智能經濟成為中國經濟新的增長極，帶動技術普惠和創新成果共享。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;展望 2035 年，我國將全面邁入智能經濟與智能社會新階段，人工智能將成為實現社會主義現代化的重要支撐力量。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此次《意見》的發佈，標誌着我國「人工智能+」戰略正式進入系統推進階段，為全球人工智能發展注入中國方案。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368591</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368591</guid>
      <pubDate>Tue, 19 Aug 2025 09:58:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>百度發佈 AI 智能搜索工具「梯子 AI 」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;百度旗下的 AI 搜索 App「Tizzy.ai」完成了前期的測試，正式更名為「梯子 AI」。這款應用發佈於 8 月 10 日，當時名稱仍為「Tizzy.ai」，直到 8 月 21 日更新後改名為「梯子 AI」，版本號也直接從 1.0.0 跳到 1.2.0（官網 https://tizzy.baidu.com/）。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0bf83789061d58fbed4ca9fa0cccf815533.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;「梯子 AI」定位為智能搜索助手，依託多個大模型能力開發而成，主打無廣告智能搜索，整合深度思考、資源檢索及影視娛樂功能（號稱海量資源）。&lt;/p&gt; 
&lt;p&gt;應用描述：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;梯子 AI 是百度融合多個大模型能力開發的 AI 智能搜索工具。提供自動思考和深度思考的雙模式智能引擎，全網分析給出精準答案；打造極簡搜索體驗，搜網址、搜天氣、搜攻略等輸入問題直達結果；提供熱門豐富的海量短劇，無廣告、無會員、流暢播放，打造極致觀劇體驗。&lt;/p&gt; 
 &lt;p&gt;梯子 AI 能幫你做什麼&lt;/p&gt; 
 &lt;p&gt;【AI 雙模智能搜索】支持自動思考與深度思考的雙模式智能引擎，通過全網信息精準分析，結合你的偏好提供個性化答案，搜索結果更高效、更精準。&lt;/p&gt; 
 &lt;p&gt;【極簡的交互體驗】簡潔搜索框，輸入問題直達答案，沒有任何推廣信息，提供極致的搜索體驗。&lt;/p&gt; 
 &lt;p&gt;【豐富的短劇生態】涵蓋都市熱血、玄幻仙俠、逆襲反轉、穿越重生等多種類型，擁有豐富的熱門短劇，暢看無阻。&lt;/p&gt; 
 &lt;p&gt;【沉浸式觀劇體驗】觀看短劇過程無廣告、無會員、加速緩衝，提供邊看邊搜，重新設計每個細節，打造極致的觀劇體驗。&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368590</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368590</guid>
      <pubDate>Tue, 19 Aug 2025 09:55:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>微軟旗下開源文檔數據庫 Do​​cumentDB 加入 Linux 基金會</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;DocumentDB 是微軟基於 PostgreSQL 構建的兼容 MongoDB 的文檔數據庫，目前已用於支持基於 vCore 的 Azure Cosmos DB for MongoDB 實例。今年年初，微軟開源了 DocumentDB，因為它相信一個完全開源、兼容 MongoDB 的文檔數據庫能夠實現。&lt;/p&gt; 
&lt;p&gt;出乎所有人的意料，微軟竟然以最為寬鬆的 MIT 許可證&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcosmosdb%2Fdocumentdb-is-gaining-momentum-in-the-open-source-database-world%2F" target="_blank"&gt;將其開源&lt;/a&gt;，該許可證允許開發者和組織將其無限制地集成到他們的解決方案中。DocumentDB 項目開源一週內，就獲得了 1000 個 GitHub 星標、近 50 個 fork 以及多個 Pull 請求。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-fe1c0989daaba4a35b2f8e816475b799172.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;DocumentDB 因其原生實現的面向文檔的 NoSQL 數據庫而廣受開發者歡迎，它基於 PostgreSQL 框架，支持對 BSON（二進制 JSON）數據類型進行 CRUD（創建、讀取、更新、刪除）操作。此外，DocumentDB 還支持全文搜索、地理空間查詢和矢量搜索。&lt;/p&gt; 
&lt;p&gt;今天，微軟&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.microsoft.com%2Fblog%2F2025%2F08%2F25%2Fdocumentdb-joins-the-linux-foundation%2F" target="_blank"&gt;宣佈&lt;/a&gt;DocumentDB 將成為 Linux 基金會的一部分。微軟希望此舉能夠為 NoSQL 數據庫創建一個開放標準。微軟表示，它致力於與 MongoDB 驅動程序 100% 兼容，以確保文檔數據庫生態系統蓬勃發展。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0826/174814_Mz6m_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Azure Cosmos DB 副總裁 Kirill Gavrylyuk 表示：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;加入 Linux 基金會將為 DocumentDB 創建一個獨立的身份，併為任何數據庫提供商提供一個渠道來為我們的使命做出貢獻。此外，Postgres 繼續被譽為最受歡迎的平台，並將繼續作為項目的支柱。對於 DocumentDB 而言，開源 Postgres 將比 Postgres 的分支版本更受青睞。Linux 基金會將確保 DocumentDB 遵守這些管理原則，以保持一致性。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Linux 基金會對 DocumentDB 項目的治理將確保供應商中立，並維護 DocumentDB 始終堅持 PostgreSQL 優先的承諾。Linux 基金會執行董事 Jim Zemlin 對 DocumentDB 加入基金會感到非常興奮。他&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Flinux-foundation-welcomes-documentdb-to-advance-open-developer-first-nosql-innovation" target="_blank"&gt;表示&lt;/a&gt;：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;DocumentDB 填補了文檔數據庫生態系統中的一個關鍵空白，吸引了眾多貢獻者、用户和擁護者。更令人興奮的是，它為基於文檔的應用程序提供了一個開放標準，就像 SQL 為關係數據庫所做的那樣。通過加入 Linux 基金會，DocumentDB 確保了其開源未來，並助力 NoSQL 數據庫標準和社區驅動的創新開闢了一條新道路。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;通過在 Linux 基金會的治理下，DocumentDB 能夠確保其開源未來並推動社區創新。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368589/ms-documentdb-joins-the-linux-foundation</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368589/ms-documentdb-joins-the-linux-foundation</guid>
      <pubDate>Tue, 19 Aug 2025 09:49:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Fenster - 最精簡的跨平台 GUI 庫</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Fenster /ˈfɛnstɐ/——德語中「window」的意思。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這個庫提供了最簡潔、最實用的跨平台 2D 畫布顯示方式。只需幾行代碼，你就能實現跨平台的鍵盤/鼠標輸入和音頻播放。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;strong&gt;特點：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;具有指定大小和標題的單一應用程序窗口。&lt;/li&gt;
&lt;li&gt;應用程序生命週期和系統事件均自動處理。&lt;/li&gt;
&lt;li&gt;最小 24 位 RGB 幀緩衝區。&lt;/li&gt;
&lt;li&gt;跨平台鍵盤事件（鍵碼）。&lt;/li&gt;
&lt;li&gt;跨平台鼠標事件（X/Y + 鼠標點擊）。&lt;/li&gt;
&lt;li&gt;跨平台計時器具有穩定的 FPS 速率。&lt;/li&gt;
&lt;li&gt;跨平台音頻播放（WinMM、CoreAudio、ALSA）。&lt;/li&gt;
&lt;li&gt;簡單的輪詢 API，無需回調或多線程（如 Arduino/Processing）。&lt;/li&gt;
&lt;li&gt;一個約 300LOC 的 C99 頭文件，易於理解和擴展。&lt;/li&gt;
&lt;li&gt;Go 綁定（&lt;code&gt;import "github.com/zserge/fenster"&lt;/code&gt;，參見&amp;nbsp;&lt;a href="https://pkg.go.dev/github.com/zserge/fenster"&gt;godoc&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;Zig 綁定（參見&amp;nbsp;&lt;a href="https://github.com/zserge/fenster/blob/main/examples/minimal-zig"&gt;examples/minimal-zig&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;Lua 綁定（參見&amp;nbsp;&lt;a href="https://github.com/jonasgeiler/lua-fenster"&gt;https://github.com/jonasgeiler/lua-fenster&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zserge/fenster/blob/main/examples/doom-c"&gt;可以運行 Doom&lt;/a&gt;！&lt;/li&gt;
&lt;/ul&gt;

&lt;p style="text-align:start"&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#59636e"&gt;// main.c&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#cf222e"&gt;#include&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0a3069"&gt;"fenster.h"&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#cf222e"&gt;#define&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;W&lt;/span&gt;&lt;/span&gt; 320
&lt;span&gt;&lt;span style="color:#cf222e"&gt;#define&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;H&lt;/span&gt;&lt;/span&gt; 240
&lt;span&gt;&lt;span style="color:#1f2328"&gt;int&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#6639ba"&gt;main&lt;/span&gt;&lt;/span&gt;() {
  &lt;span&gt;&lt;span style="color:#1f2328"&gt;uint32_t&lt;/span&gt;&lt;/span&gt; &lt;span&gt;buf&lt;/span&gt;[&lt;span&gt;&lt;span style="color:#0550ae"&gt;W&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;*&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;H&lt;/span&gt;&lt;/span&gt;];
  &lt;span&gt;&lt;span style="color:#cf222e"&gt;struct&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#1f2328"&gt;fenster&lt;/span&gt;&lt;/span&gt; &lt;span&gt;f&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; { .&lt;span&gt;&lt;span style="color:#0550ae"&gt;title&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0a3069"&gt;"hello"&lt;/span&gt;&lt;/span&gt;, .&lt;span&gt;&lt;span style="color:#0550ae"&gt;width&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;W&lt;/span&gt;&lt;/span&gt;, .&lt;span&gt;&lt;span style="color:#0550ae"&gt;height&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;H&lt;/span&gt;&lt;/span&gt;, .&lt;span&gt;&lt;span style="color:#0550ae"&gt;buf&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;buf&lt;/span&gt; };
  &lt;span&gt;&lt;span style="color:#6639ba"&gt;fenster_open&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span style="color:#0550ae"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;);
  &lt;span&gt;&lt;span style="color:#cf222e"&gt;while&lt;/span&gt;&lt;/span&gt; (&lt;span&gt;&lt;span style="color:#6639ba"&gt;fenster_loop&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span style="color:#0550ae"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;) &lt;span&gt;&lt;span style="color:#0550ae"&gt;==&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;0&lt;/span&gt;&lt;/span&gt;) {
    &lt;span&gt;&lt;span style="color:#cf222e"&gt;for&lt;/span&gt;&lt;/span&gt; (&lt;span&gt;&lt;span style="color:#1f2328"&gt;int&lt;/span&gt;&lt;/span&gt; &lt;span&gt;i&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;0&lt;/span&gt;&lt;/span&gt;; &lt;span&gt;i&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;W&lt;/span&gt;&lt;/span&gt;; &lt;span&gt;i&lt;/span&gt;&lt;span&gt;&lt;span style="color:#0550ae"&gt;++&lt;/span&gt;&lt;/span&gt;) {
      &lt;span&gt;&lt;span style="color:#cf222e"&gt;for&lt;/span&gt;&lt;/span&gt; (&lt;span&gt;&lt;span style="color:#1f2328"&gt;int&lt;/span&gt;&lt;/span&gt; &lt;span&gt;j&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;0&lt;/span&gt;&lt;/span&gt;; &lt;span&gt;j&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;H&lt;/span&gt;&lt;/span&gt;; &lt;span&gt;j&lt;/span&gt;&lt;span&gt;&lt;span style="color:#0550ae"&gt;++&lt;/span&gt;&lt;/span&gt;) {
        &lt;span&gt;&lt;span style="color:#6639ba"&gt;fenster_pixel&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span style="color:#0550ae"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;, &lt;span&gt;i&lt;/span&gt;, &lt;span&gt;j&lt;/span&gt;) &lt;span&gt;&lt;span style="color:#0550ae"&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#6639ba"&gt;rand&lt;/span&gt;&lt;/span&gt;();
      }
    }
  }
  &lt;span&gt;&lt;span style="color:#6639ba"&gt;fenster_close&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span style="color:#0550ae"&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;);
  &lt;span&gt;&lt;span style="color:#cf222e"&gt;return&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#0550ae"&gt;0&lt;/span&gt;&lt;/span&gt;;
}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;編譯並運行：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;code&gt;# Linux
cc main.c -lX11 -lasound -o main &amp;amp;&amp;amp; ./main
# macOS
cc main.c -framework Cocoa -framework AudioToolbox -o main &amp;amp;&amp;amp; ./main
# windows
cc main.c -lgdi32 -lwinmm -o main.exe &amp;amp;&amp;amp; main.exe&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/fenster</link>
      <guid isPermaLink="false">https://www.oschina.net/p/fenster</guid>
      <pubDate>Tue, 19 Aug 2025 09:46:00 GMT</pubDate>
    </item>
    <item>
      <title>Firefox 帶來 PWA 實驗性實現</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Moziilla 宣佈為 Firefox Windows 用户在 142 版本中帶來一個新的實驗性功能：漸進式 Web 應用（PWA）。該功能自 2018 年 Chrome 70 版本以來，一直就存在於桌面版 Chrome 中。&lt;/p&gt; 
&lt;p&gt;PWA 在 Firefox 中的發展歷程相當坎坷，早在 Firefox 73（Nightly）時期，Mozilla 就嘗試過一個名為 「Site-Specific Browsers（SSB）」 的 PWA 實驗性實現，但這一功能從未完全開發完成，並在 2021 年 1 月被 Mozilla 移除。&lt;/p&gt; 
&lt;p&gt;當時，Mozilla 解釋説，該功能存在 「多個已知問題」，並且保留它會佔用 Firefox 團隊在漏洞排查上的時間。&lt;/p&gt; 
&lt;p&gt;今年 3 月，Mozilla 發佈了 Firefox Nightly 141 版本，重新加入了這一功能，並將其命名為 「Taskbar Tabs」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-7e987d26d0238edd293a1f64eb53f150ab1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8d3309d0755d9440b38d337973c2381c7ca.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Firefox 產品經理 David Rubino 解釋説，這一新的實現方式在設計上有所不同，Web 應用將保留 Firefox 的主要工具欄，包括地址欄、擴展程序和書籤，以確保用户仍然感覺自己是在瀏覽器中。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368586</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368586</guid>
      <pubDate>Tue, 19 Aug 2025 09:43:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>書生髮布 InternVL 3.5 最新視覺全系列模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;書生髮布了最新的視覺模型 InternVL 3.5 全系列模型，從 1B 到 241B 共 8 個尺寸。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-7fb0fd8578a3037d507a1059e08223c437f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根據評測結果，書生 3.5 最高尺寸 241B 在視覺模型裏的表現僅次於商業版的 GPT-5 和 Gemini 2.5 Pro。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-595c729823f646e6dbcd8b05be0bb57277f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-13518e6aab25fa7275c2777b42debccf8de.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;所有模型均已發佈到 Hugging Face&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://huggingface.co/collections/OpenGVLab/internvl35-68ac87bd52ebe953485927fb&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;該模型的技術亮點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cascade Reinforcement Learning（Cascade RL）&lt;/strong&gt;：採用「離線 RL + 在線 RL」兩階段策略，實現更加穩健收斂和精細對齊，從而顯著增強模型的推理能力，在 MMMU 和 MathVista 等任務上表現提升明顯。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Visual Resolution Router（ViR）&lt;/strong&gt;：動態調整視覺 token 的分辨率，兼顧性能與效率，使視覺理解更加靈活高效。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Decoupled Vision-Language Deployment（DvD）&lt;/strong&gt;：將視覺編碼器與語言模型分開部署至不同 GPU，有效平衡資源負載，提升推理速度。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在推理性能提升高達 16.0%（整體推理任務中），同時相較於 InternVL3，實現了&amp;nbsp;&lt;strong&gt;4.05× 的推理速度加速。&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368585</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368585</guid>
      <pubDate>Tue, 19 Aug 2025 09:29:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>騰訊開源 tRPC-Agent-Go：讓 Go 開發者輕鬆構建智能 AI 應用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;騰訊 tRPC 團隊之前開源了 A2A 開發框架 tRPC-A2A-Go 和 MCP 開發框架 tRPC-MCP-Go，現在進一步&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrUcJ_9D1gVrdJUmzZP63zQ" target="_blank"&gt;推出&lt;/a&gt;&amp;nbsp;tRPC-Agent-Go&amp;nbsp;開發框架，實現 Go 語言 AI 生態開發框架的閉環。&lt;/p&gt; 
&lt;p&gt;公告稱，當前主流 Agent 框架（AutoGen、CrewAI 、Agno、ADK 等）大部分都是基於 Python，而&amp;nbsp;Go 在微服務、併發與部署方面有天然優勢，Go 在騰訊內部也有大規模應用，業界基於 Go 語言的 Agent 框架較少，大部分都是編排式的 workflow 框架，缺少真正的「去中心化、可協作、能湧現」的自主多 Agent 能力。tRPC-Agent-Go 直接利用 Go 的高併發與 tRPC 生態，把 LLM 的推理、協商和自適應性帶到 Go 場景，滿足複雜業務對「智能+性能」的雙重需求。&lt;/p&gt; 
&lt;p&gt;tRPC-Agent-Go 採用模塊化架構設計，由多個核心組件組成，組件都可插拔，通過事件驅動機制實現組件間的解耦通信，支持 callback 插入自定義邏輯：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Agent：核心執行單元，負責處理用户輸入並生成響應&lt;/li&gt; 
 &lt;li&gt;Runner：Agent 的執行器，負責管理執行流程，串聯 Session/Memory Service 等能力&lt;/li&gt; 
 &lt;li&gt;Model：支持多種 LLM 模型（OpenAI、DeepSeek 等）&lt;/li&gt; 
 &lt;li&gt;Tool：提供各種工具能力（Function、MCP、DuckDuckGo 等）&lt;/li&gt; 
 &lt;li&gt;Session：管理用户會話狀態和事件&lt;/li&gt; 
 &lt;li&gt;Memory：記錄用户的長期記憶和個性化信息&lt;/li&gt; 
 &lt;li&gt;Knowledge：實現 RAG 知識檢索能力&lt;/li&gt; 
 &lt;li&gt;Planner：提供 Agent 的計劃和推理能力&lt;/li&gt; 
 &lt;li&gt;CodeExecutor：提供 Agent 代碼執行能力，支持 Local，Container 等模式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="357" src="https://oscimg.oschina.net/oscnet/up-95bdd4a5582b1c5df0538b32ab59b27150e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="812" src="https://oscimg.oschina.net/oscnet/up-8a1ddd94dd74790efd81c8792dd5ce17680.webp" width="300" referrerpolicy="no-referrer"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;核心特點&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;多樣化 Agent 系統&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;LLMAgent：基於大語言模型，支持工具調用和推理&lt;/li&gt; 
 &lt;li&gt;ChainAgent：鏈式執行，支持多步驟任務分解&lt;/li&gt; 
 &lt;li&gt;ParallelAgent：並行處理，支持多專家協作&lt;/li&gt; 
 &lt;li&gt;CycleAgent：循環迭代，支持自我優化&lt;/li&gt; 
 &lt;li&gt;GraphAgent：圖工作流，兼容現有編排習慣&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;豐富工具生態&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;內置常用工具&lt;/li&gt; 
 &lt;li&gt;支持 Function、MCP 協議等多種擴展方式&lt;/li&gt; 
 &lt;li&gt;靈活的工具組合和調用策略&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;智能會話管理&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 Redis 和內存存儲的會話持久化&lt;/li&gt; 
 &lt;li&gt;長期記憶和個性化信息保持&lt;/li&gt; 
 &lt;li&gt;RAG 檢索增強生成能力&lt;/li&gt; 
 &lt;li&gt;實時事件驅動架構&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;全鏈路可觀測性&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenTelemetry 全鏈路追蹤和性能監控&lt;/li&gt; 
 &lt;li&gt;可視化調試界面和實時監控&lt;/li&gt; 
 &lt;li&gt;結構化日誌和錯誤追蹤&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368583</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368583</guid>
      <pubDate>Tue, 19 Aug 2025 09:19:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>貨拉拉開源兩款三方庫</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;貨拉拉開源了兩款實用三方庫 —— AspectPro Aop Plugin 和 page-spy-harmony，直擊應用開發過程中「代碼耦合高」「遠程調試難」等高頻痛點。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;在複雜的應用開發過程中，日誌記錄、性能監控、權限校驗等功能雖然往往與核心業務邏輯關係不大，但卻必不可少，但這些功能的代碼散佈於代碼架構的各個角落。這種現象易導致代碼耦合度增高、業務邏輯不夠純粹，不僅降低了代碼的可讀性，也為後期的維護帶來了不小的挑戰。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;針對這一典型問題，貨拉拉推出了輕量級鴻蒙運行時 hook 框架 AspectPro Aop Plugin，並同步開源其編譯時代碼修改插件 aspect-pro-plugin，兩者配合使用可實現任意代碼 hook 操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;AspectPro Aop Plugin 對齊鴻蒙系統的 AOP 能力，開發者無需關心靜態方法限制，即可對如按鈕點擊事件、鏈式構造類方法、不可寫方法等多類行為進行精準 hook，並靈活更改參數與返回值；而 aspect-pro-plugin 則在編譯階段支持多種代碼掃描、替換與導包策略，支持自定義配置規則。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;通過引入 AspectPro Aop Plugin，開發者可將橫切邏輯獨立封裝、與業務代碼解耦，從而顯著提升代碼結構清晰度與維護效率，避免「邏輯混雜」導致的後期維護成本激增問題，提升開發效率與代碼質量。這一工具特別適閤中大型項目中對代碼規範與開發協作要求較高的團隊使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;img height="293" src="https://oscimg.oschina.net/oscnet/up-4888079610c92e960fcf7334fe2f467752e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;遠程可視化調試解決方案 page-spy-harmony 採用客户端-服務端的架構：在應用中集成一個輕量級的設備端 SDK，該 SDK 會在運行時採集關鍵數據；同時，開發者可以通過瀏覽器訪問一個功能豐富的 Web 端控制枱，實時接收並可視化展示來自設備端的數據。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#e6e6e6; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;通過 page-spy-harmony，開發者可以一目瞭然地遠程查看應用的運行時信息，包括詳細的日誌、網絡請求往來以及 AppStorage 中的數據等。這不僅極大地提升了調試效率，還簡化了遠程協作的流程。無論是團隊成員異地協作，還是遠程協助用户或測試人員排查問題，page-spy-harmony 都能提供有力支持，加速問題的定位與修復。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368577</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368577</guid>
      <pubDate>Tue, 19 Aug 2025 08:53:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>比 Cursor 更快更穩定的 Coding Agent？</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;搞了 2 年直播，我也是搞出名堂來了。&lt;/p&gt; 
&lt;p&gt;張宏波説要來我們這裏搞直播，聊一聊 Coding Agent。&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;張宏波是誰？&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;他是編程語言領域的專家，是 OCaml 語言的前核心開發人員，&lt;/span&gt;OCaml 編譯器獲得過 2023 年 ACM SIGPLAN 編程語言軟件獎。&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此外，他還創造了&lt;/span&gt;&lt;span style="color:#000000"&gt;編程語言&lt;/span&gt;&amp;nbsp;&lt;span style="color:#000000"&gt;ReScript，被 Meta、谷歌、育碧、TinyMCE 等多個公司商用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;就這成就，已經值得吹一輩子了吧？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;但張宏波不一樣，他覺得很遺憾。&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;因為 ReScript 具備相當的技術實力，並且遠超一些同行，但是相較於微軟的 TypeScript 或者谷歌的 Dart，ReScript 的影響力遠沒有達到它應有的高度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;他想要打造的，是&lt;span style="background-color:#ffffff; color:#222222"&gt;一款現象級的編程語言&lt;/span&gt;。&lt;/p&gt; 
&lt;p&gt;一直以來，張宏波都不甘平庸。就連他當初考到&lt;span style="background-color:#ffffff; color:#222222"&gt;清華大學電氣工程及自動化系&lt;/span&gt;，都説是因為高考發揮失常才被調劑過去的。他真正想進的，是他一年後&lt;span style="background-color:#ffffff; color:#222222"&gt;成功轉入的清華電子系。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;所以在 2022 年，張宏波結束了他在 Meta 的 5 年職業生涯，來到了&lt;/span&gt;&lt;span&gt;粵港澳大灣區數字經濟研究院（&lt;/span&gt;IDEA 研究院&lt;span&gt;）&lt;/span&gt;組建了基礎軟件中心，從零開始創立了 MoonBit。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;這裏插一句，張宏波加入 IDEA 研究院，源於沈向洋（Harry Shum）拋出的橄欖枝。&lt;/p&gt; 
&lt;p&gt;早年在曾在微軟亞洲研究院實習時，沈向洋就是他的導師，並在實習結束後力薦張宏波前往美國繼續深造。當然，張宏波之後也踏上了前往美國讀博的旅程（後來還有中止讀博一事今天且按下不表）。&lt;/p&gt; 
&lt;p&gt;彼時，沈向洋已經是粵港澳大灣區數字經濟研究院創始人及理事長。張宏波也從當年的學生，成長為獨當一面的頂尖專家。&lt;/p&gt; 
&lt;p&gt;這就不得不感嘆，命運的迴響如此奇妙。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;説回張宏波一手創立的 MoonBit——一個專門為 AI&amp;nbsp; 設計的開源編程語言。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;換句話來説，這個編程語言的目的，是讓 AI 用起來最得心應手、最不容易出錯。&lt;/p&gt; 
&lt;p&gt;現在，大家都在用 AI Coding 工具來寫代碼，但不論用的是 Java，還是 Python，亦或是 Rust 等其他主流編程語言，基本上已經定型了，只能在現有基礎上「嫁接」AI 能力。所以，最終 AI 確實是把代碼寫出來了，但問題是怎麼維護呢？&lt;/p&gt; 
&lt;p&gt;MoonBit 就不一樣。它的語法、類型系統、錯誤處理機制等，在設計之初就深度考慮瞭如何讓 AI 更容易地理解、生成和驗證代碼，從而保證了代碼的可維護性。&lt;/p&gt; 
&lt;p&gt;就連&amp;nbsp;&lt;span style="background-color:#ffffff; color:#222222"&gt;JavaScript 標準委員會聯席主席 Rob Palmer、Vue 和 Vite 之父尤雨溪等知名技術專家都屢次公開誇讚。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;最近，張宏波還帶領團隊，開發了一個 Coding Agent——MoonBit Pilot。據説比&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;&amp;nbsp;Cursor 還更快、更穩定！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="250" src="https://oscimg.oschina.net/oscnet/up-4a9f06ab1db5e6ac343b22234959e7d805f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;這是他&lt;span style="background-color:#ffffff; color:#333333"&gt;從底層設計的一整套 AI 原生的開發者工具，包括編程語言的設計、編譯器、調試器、包管理等，並在各個環節給予大模型最有效的反饋。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;也許你已經發現了，跟&lt;/span&gt;編程語言&amp;nbsp;MoonBit&amp;nbsp; 一樣，也是 AI 原生。&lt;/p&gt; 
&lt;p&gt;所以，MoonBit Pilot 不僅可以生成所有編程語言的代碼，而且針對 MoonBit 編程語言的優勢極大。畢竟，還有誰能比自己人更清楚 MoonBit 嘛！&lt;/p&gt; 
&lt;p&gt;總之，不管是&amp;nbsp;MoonBit ，還是&amp;nbsp;MoonBit Pilot ，聽來都不簡單。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;現在，張宏波用 MoonBit Pilot 等 AI 工具寫 MoonBit。過去一週，他用閒暇時間寫了 309 個高質量的 Commits，實現了相當於過去一個優秀程序員一年的工作量。&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;img height="646" src="https://oscimg.oschina.net/oscnet/up-2658c358aed8eef15d5387c10698412aeeb.png" width="500" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;他是怎麼做到的？&lt;strong&gt;8 月 29 日晚，&lt;/strong&gt;IDEA 研究院基礎軟件中心首席科學家、MoonBit 團隊負責人張宏波，將做客開源中國《技術領航》欄目直播間：&lt;/p&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     講解 AI 原生編程語言 —— MoonBit 的底層設計 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     Coding Agent —— MoonBit Pilot 的最新進展 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     實操演示：MoonBit Pilot 零幹預輔助完成軟件庫 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     大規模代碼重構關鍵：原生語義查找+分段編碼 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     Q&amp;amp;A 環節 （15min） 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   我們還會在直播間，隨機抽取 5 名直播間評論區互動的幸運用户，贈送網頁版 MoonBit Pilot&amp;nbsp;權限哦~ 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;微信掃碼，預約直播：&lt;/strong&gt; 
  &lt;br&gt; &amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img height="8795" src="https://oscimg.oschina.net/oscnet/up-6a5dbdd0dde7efa92a215e410cc36f17215.jpg" width="3402" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;strong&gt;直播福利：&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;福袋抽獎：直播中將有 5 輪抽獎，參與就有機會獲得 OSC T 恤、馬建倉蛇年公仔（限量版）、代碼聖盃、馬克杯、冰箱貼、前沿技術書籍等。&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="up-d0ddd08ceeff2b5526d3def6537a6ac649b.png" height="253" src="https://oscimg.oschina.net/oscnet/up-d0ddd08ceeff2b5526d3def6537a6ac649b.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;hr&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《技術領航》是開源中國 OSCHINA 推出的一檔直播欄目，旨在為&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;開源軟件、商業產品、前沿技術、知名品牌活動等各類項目&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提供一個展示平台，基本上每週五晚上開播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;欄目邀請項目的創始人、核心團隊成員或資深用户作為嘉賓，通過路演式直播分享項目的亮點和經驗，有助於提高項目的知名度，吸引更多的用户和開發者關注。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你手上也有好的項目，想要跟同行交流分享，歡迎聯繫我，欄目隨時開放～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img height="537" src="https://oscimg.oschina.net/oscnet/up-4dd54c1b0b817689ceefa15aa66d79cfae8.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/3859945/blog/18689590</link>
      <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18689590</guid>
      <pubDate>Tue, 19 Aug 2025 08:34:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>谷歌收緊 Android 側載功能，將僅允許通過「開發者驗證」的應用進行安裝</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandroid-developers.googleblog.com%2F2025%2F08%2Felevating-android-security.html" target="_blank"&gt;宣佈&lt;/a&gt;，從 2026 年起，只有通過驗證的開發者發佈的應用才能安裝在認證 Android 設備上。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;從明年開始，Android 將要求所有應用程序必須由經過驗證的開發者進行註冊，用户才能在認證的 Android 設備上安裝這些應用程序。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;所謂「認證 Android 設備」指的是預裝 Google Play Protect 和其他 Google 應用的設備，這些設備需遵循新的開發者驗證流程才能安裝應用。&lt;/p&gt; 
&lt;p&gt;開發者在驗證過程中將需要向谷歌提供以下信息：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;個人開發者：法定全名、地址、電子郵箱和電話號碼。&lt;/li&gt; 
 &lt;li&gt;企業開發者：還需提供網站和 D-U-N-S 編號&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;需要注意的是，這些信息將由谷歌保存用於驗證，但「不會向用户公開」。同時，谷歌提供了專門的 Android Developer Console 來處理這些驗證流程，這與 Play 商店的開發者控制枱有所區別。&lt;/p&gt; 
&lt;p&gt;谷歌表示，來自網絡側載（非 Play 商店）的應用含有的惡意軟件數量是 Play 商店的 50 倍以上，儘管 Play 商店從 2023 年就已要求開發者驗證。這項措施旨在提高開發者的責任感，降低匿名惡意開發者傳播惡意軟件和詐騙行為的機會。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368572</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368572</guid>
      <pubDate>Tue, 19 Aug 2025 08:27:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>老碼農教你：Solon + FastExcel 導出工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; text-align:start"&gt;關於 "Excel 導出" ——POI API 是比較複雜的，CellStyle 能把人調得眼冒金星，大數據量導出時內存飆到 90% 的恐懼至今難忘。直到發現了 FastExcel（前身是 Alibaba 的 EasyExcel），從此打開新世界的大門。今天就把這套 "導出大法" 分享給大家，順便穿插點踩坑經驗。&lt;/p&gt; 
&lt;h2&gt;一、先整合項目環境&lt;/h2&gt; 
&lt;h3&gt;1. 引入依賴&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;首先在 pom.xml 里加依賴，這裏得注意版本兼容性。fastexcel 最新版本移除了 poi 的依賴，大好特好！&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-web&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.5.0&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;

&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;cn.idev.excel&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;fastexcel&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.3.0&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. 創建實體類&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;定義 Excel 裏每一列的數據結構，就像給每個字段安排 "座位"。比如導出用户信息：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; cn.idev.excel.annotation.ExcelProperty;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; cn.idev.excel.annotation.format.DateTimeFormat;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; cn.idev.excel.annotation.write.style.ColumnWidth;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; lombok.Data;

&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.util.Date;

&lt;span style="color:#4078f2"&gt;@Data&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;UserExcelVO&lt;/span&gt; {
    &lt;em&gt;// 這裏是表頭名稱，寬度設置成 20&lt;/em&gt;
    &lt;span style="color:#4078f2"&gt;@ExcelProperty(value = "用户 ID", index = 0)&lt;/span&gt;
    &lt;span style="color:#4078f2"&gt;@ColumnWidth(20)&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; Long userId;

    &lt;em&gt;// 設定日期為"yyyy-MM-dd"格式&lt;/em&gt;
    &lt;span style="color:#4078f2"&gt;@ExcelProperty(value = "註冊時間", index = 1)&lt;/span&gt;
    &lt;span style="color:#4078f2"&gt;@DateTimeFormat("yyyy-MM-dd")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; Date registerTime;

    &lt;em&gt;// 性別要轉換為友好描述&lt;/em&gt;
    &lt;span style="color:#4078f2"&gt;@ExcelProperty(value = "性別", index = 2, converter = SexConverter.class)&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; Integer sex;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;這裏的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@ExcelProperty&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;就像給數據貼標籤，index 是列順序。別標錯號，不然數據錯位時會懷疑人生 —— 筆者曾把金額和年齡的位置搞反，會被財務小姐姐罵得狗血淋頭。&lt;/p&gt; 
&lt;h3&gt;3. 編寫導出工具類：避免重複工作&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;把通用導出邏輯封裝起來，以後每次導出就簡單了。創建 EasyExcelUtils：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; cn.idev.excel.EasyExcel;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.core.handle.Context;

&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.io.IOException;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.net.URLEncoder;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.util.List;

&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;EasyExcelUtils&lt;/span&gt; {
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;exportExcel&lt;/span&gt;&lt;span&gt;(Context ctx,
                                       List&amp;lt;T&amp;gt; dataList,
                                       Class&amp;lt;T&amp;gt; clazz,
                                       String fileName)&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; IOException {
        ctx.contentType(&lt;span style="color:#50a14f"&gt;"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"&lt;/span&gt;);
        ctx.charset(&lt;span style="color:#50a14f"&gt;"utf-8"&lt;/span&gt;);
        &lt;em&gt;// 文件名得處理中文，不然下載下來是亂碼&lt;/em&gt;
        fileName = URLEncoder.encode(fileName, &lt;span style="color:#50a14f"&gt;"UTF-8"&lt;/span&gt;).replaceAll(&lt;span style="color:#50a14f"&gt;"\\+"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"%20"&lt;/span&gt;);
        ctx.headerSet(&lt;span style="color:#50a14f"&gt;"Content-disposition"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"attachment;filename*=utf-8''"&lt;/span&gt; + fileName + &lt;span style="color:#50a14f"&gt;".xlsx"&lt;/span&gt;);

        &lt;em&gt;// 這裏用 EasyExcel.write() 就像啓動一個 Excel 生成器&lt;/em&gt;
        EasyExcel.write(ctx.outputStream(), clazz)
                .sheet(&lt;span style="color:#50a14f"&gt;"數據報表"&lt;/span&gt;)
                .doWrite(dataList);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;二、實戰演練：從 "基礎導出" 到 "高深玩法"&lt;/h2&gt; 
&lt;h3&gt;1. 基礎導出&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.*;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.core.handle.Context;

&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.io.IOException;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; java.util.List;

&lt;span style="color:#4078f2"&gt;@Controller&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;DemoController&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Inject&lt;/span&gt;
    UserService userService;

    &lt;span style="color:#4078f2"&gt;@Get&lt;/span&gt;
    &lt;span style="color:#4078f2"&gt;@Mapping("/exportUser")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;exportUser&lt;/span&gt;&lt;span&gt;(Context ctx)&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; IOException {
        List&amp;lt;UserExcelVO&amp;gt; dataList = userService.getUserListForExport(); &lt;em&gt;// 假設這是從數據庫查的數據&lt;/em&gt;
        EasyExcelUtils.exportExcel(ctx, dataList, UserExcelVO.class, &lt;span style="color:#50a14f"&gt;"用户信息表"&lt;/span&gt;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. 複雜表頭，加一層分類&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;有時候表頭需要多級結構，比如 "用户信息" 下分 "基本信息"" 聯繫方式 "。這時候需要用@ExcelProperty 的數組形式：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; cn.idev.excel.annotation.ExcelProperty;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; lombok.Data;

&lt;span style="color:#4078f2"&gt;@Data&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;ComplexHeaderVO&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@ExcelProperty({"用户信息", "用户 ID"})&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; Long userId;

    &lt;span style="color:#4078f2"&gt;@ExcelProperty({"用户信息", "姓名"})&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; String userName;

    &lt;span style="color:#4078f2"&gt;@ExcelProperty({"聯繫方式", "手機號"})&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; String phone;

    &lt;span style="color:#4078f2"&gt;@ExcelProperty({"聯繫方式", "郵箱"})&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; String email;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. 合併單元格&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;比如導出報表時需要合併相同內容的單元格，這時候得自定義 CellWriteHandler。舉個例子，合併連續相同的部門名稱：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; cn.idev.excel.write.handler.CellWriteHandler;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; cn.idev.excel.write.handler.context.CellWriteHandlerContext;

&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;MergeCellHandler&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;CellWriteHandler&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;afterCellDispose&lt;/span&gt;&lt;span&gt;(CellWriteHandlerContext context)&lt;/span&gt; {
        &lt;em&gt;// 這裏省略具體實現，核心是通過行號和列號判斷是否合併&lt;/em&gt;
        &lt;em&gt;// 就像拼拼圖，找到相同的部分粘在一起&lt;/em&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在導出時註冊這個處理器：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;EasyExcel.write(...)
    .registerWriteHandler(&lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;MergeCellHandler&lt;/span&gt;())
    .doWrite(...);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4. 自定義格式：美化效果&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;比如金額需要顯示成 "¥1,000.00"，日期要顯示成 "2025 年 5 月 29 日"。除了前面提到的 @DateTimeFormat，數值格式可以用 @NumberFormat：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#4078f2"&gt;@ExcelProperty("金額")&lt;/span&gt;
&lt;span style="color:#4078f2"&gt;@NumberFormat("#,##0.00")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;private&lt;/span&gt; Double amount;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;5. 大數據量導出，要避免 OOM&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;當數據量超過 10 萬條時，直接導出會 OOM 的，這時候要用流式處理。FastExcel 貼心地支持分頁導出，分批次寫入：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;EasyExcel.write(ctx.outputStream(), UserExcelVO.class)
    .sheet(&lt;span style="color:#50a14f"&gt;"大數據報表"&lt;/span&gt;)
    .registerWriteHandler(...) &lt;em&gt;// 可選的樣式處理器&lt;/em&gt;
    .doWrite(&lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;AnalysisContext&lt;/span&gt;() -&amp;gt; {
        &lt;em&gt;// 這裏每次調用獲取一頁數據，直到沒有數據為止&lt;/em&gt;
        List&amp;lt;UserExcelVO&amp;gt; pageData = userService.getPageData(analysisContext.readRowHolder().getRowIndex());
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; pageData;
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;三、避坑指南&lt;/h2&gt; 
&lt;h3&gt;1. 註解優先級：別讓 "標籤" 打架&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;@ExcelProperty 可以寫在字段上或方法上，建議統一寫在字段上，不然容易混亂。&lt;/p&gt; 
&lt;h3&gt;2. 樣式設置：別把 Excel 變成 "花臉貓"&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;雖然 FastExcel 支持自定義樣式，但別過度使用，比如給每個單元格設置不同顏色，導出的 Excel 可能打不開。樣式設置要適度，就像化妝，自然美就好。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368571</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368571</guid>
      <pubDate>Tue, 19 Aug 2025 08:19:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>豆包正式上線未成年人保護模式</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;豆包宣佈正式上線未成年人保護模式。家長朋友們輸入密碼，開啓該模式後，推薦視頻、瀏覽第三方網頁、和豆包以外的智能體對話、AI 創作功能將被默認關閉。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#222222"&gt;此前，有網友反饋稱因豆包會在問答結果中提供相應短視頻作為參考，部分兒童可能借此瀏覽視頻內容，分散注意力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="347" src="https://oscimg.oschina.net/oscnet/up-2aa91bbdaff54539d9e6e13d2b0fb2d9314.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;開啓該功能後，翻譯、深入研究等功能仍能正常使用。官方表示，未成年人模式是為家長提供的工具，以方便關閉部分功能，防止小朋友拿到設備後可能的不適當使用。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368569</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368569</guid>
      <pubDate>Tue, 19 Aug 2025 08:15:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>2028 年人形機器人芯片市場有望突破 4800 萬美元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#212121; margin-left:0; margin-right:0; text-align:justify"&gt;TrendForce 集邦諮詢最新研究，英偉達近日新推出的 Jetson Thor 能夠為機器人提供更強的算力支持，有望帶動芯片市場擴容。在 Agility Robotics(敏捷機器人)、Boston Dynamics(波士頓動力)、Amazon(亞馬遜) 等廠商陸續採用與建置生態圈的趨勢下，預估人形機器人芯片市場規模有望於 2028 年突破 4,800 萬美元。&lt;/p&gt; 
&lt;p style="color:#212121; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;TrendForce 集邦諮詢表示，&lt;/span&gt;英偉達&lt;/span&gt;近日推出的 Jetson Thor 被視為機器人的物理智慧核心，以 Blackwell GPU、128 GB 記憶體堆疊出 2070 FP4 TFLOPS AI 算力，是前代 Jetson Orin 的 7.5 倍。這不僅是單純的數字躍升，還是幫助終端本體能即時處理龐大感測數據與大型語言模型 (LLM)，一定程度上讓高階人形機器人真正的看見、思考與行動。&lt;/p&gt; 
&lt;p style="color:#212121; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;img height="273" src="https://oscimg.oschina.net/oscnet/up-3b480094725e5441ad7caf09a3f01e8367c.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#212121; margin-left:0; margin-right:0; text-align:justify"&gt;隨着人形機器人軟硬件技術推陳出新，影響放量關鍵的應用場景仍為產業關注重點。根據國際機器人聯合會 (IFR)2025 年下半年發佈的最新論文，各國人形機器人發展雖依技術、目的有所不同，不過短期多以試點補位為主，中期進入製造與服務規模化，長期可望普及至家庭日常場景，高階 SoC 在此階段的效用更加關鍵。TrendForce 集邦諮詢此前認為，全球人形機器人需待 2032 年前後穩定走入家庭，才能真正放量突破 10 萬台，切合 IFR 提出之階段發展。&lt;/p&gt; 
&lt;p style="color:#212121; margin-left:0; margin-right:0; text-align:justify"&gt;TrendForce 集邦諮詢指出，儘管 NVIDIA Jetson Thor 系列提供強大效能，但其開發套件價格達 3,499 美元，相較於前代 Jetson Orin 的 1,499 美元大幅提高。但因產業趨勢希望通過降低人形機器人價格以利推廣，對於短、中期僅規劃人形機器人執行相對單純作業的廠商而言，一般較平價的芯片即可滿足需求。&lt;/p&gt; 
&lt;p style="color:#212121; margin-left:0; margin-right:0; text-align:justify"&gt;在此前提下，NVIDIA 或將再次善用其軟硬件綁定之優勢，後續為 Jetson Thor 推出更多能發揮其效能之軟件平台，達到縮短開發時間、執行特定任務等之效益，以提升墊高 AI 算力成本的價值。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368561</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368561</guid>
      <pubDate>Tue, 19 Aug 2025 07:51:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Label Studio —— 開源、可配置的數據標註工具</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;Label Studio 開源、可配置的數據標註平台，其目的是使您能夠使用標準化輸出格式的最方便的界面標記不同類型的數據。&lt;/p&gt;

&lt;p&gt;它使團隊能夠使用靈活的 UI 標註各種數據類型，並與機器學習工作流程集成。&lt;/p&gt;

&lt;p&gt;主要功能&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;標註&lt;strong&gt;多種數據類型&lt;/strong&gt;，包括圖像、音頻、文本、HTML、視頻和時間序列數據&lt;/li&gt;
&lt;li&gt;通過簡單的配置系統創建&lt;strong&gt;可定製的標註界面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;支持&lt;strong&gt;多用户協作&lt;/strong&gt;，並具有基於角色的訪問控制&lt;/li&gt;
&lt;li&gt;連接到&lt;strong&gt;各種存儲解決方案&lt;/strong&gt;，包括 S3、GCS、Azure Blob Storage 和本地文件系統&lt;/li&gt;
&lt;li&gt;與&lt;strong&gt;機器學習模型&lt;/strong&gt;集成，進行預標註和主動學習&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0826/154435_qP3p_2720166.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/label-studio</link>
      <guid isPermaLink="false">https://www.oschina.net/p/label-studio</guid>
      <pubDate>Tue, 19 Aug 2025 07:47:00 GMT</pubDate>
    </item>
    <item>
      <title>AI 瀏覽器被曝新型攻擊方式：間接提示詞注入</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;瀏覽器&amp;nbsp;&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;Brave 團隊近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbrave.com%2Fblog%2Fcomet-prompt-injection%2F" target="_blank"&gt;披露&lt;/a&gt;了一類新型安全威脅——&lt;strong&gt;基於&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;&lt;strong&gt;A&lt;/strong&gt;I 瀏覽器的間接提示注入（Indirect Prompt Injection）&lt;/strong&gt;&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;，並演示了該攻擊在 Perplexity Comet 瀏覽器上的真實案例。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0826/153730_NzVw_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;研究人員發現，攻擊者可以在網頁內容（例如 Reddit 評論、PDF 或隱藏文字）中植入惡意指令。當用户通過 Comet 等 AI 瀏覽器插件執行「總結網頁」等操作時，插件會錯誤地將這些指令當作用户輸入來執行。結果，攻擊者可誘導插件讀取用户郵箱、竊取一次性驗證碼（OTP），甚至遠程控制賬户。&lt;/p&gt; 
&lt;p&gt;這類攻擊繞過了傳統 Web 安全機制（如同源策略和 CORS），危害極大，因為 AI 瀏覽器往往擁有與用户相同的登錄權限，意味着銀行、郵箱、雲存儲等敏感服務都可能受到威脅。&lt;/p&gt; 
&lt;p&gt;&lt;img height="507" src="https://static.oschina.net/uploads/space/2025/0826/154036_DVFR_2720166.gif" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Brave 指出，修復此類問題不能僅依賴模型對齊，而需要從架構層面增強防護。包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;區分用户指令與網頁內容&lt;/strong&gt;，避免網頁指令被誤執行；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;增加安全檢查與用户確認&lt;/strong&gt;，對 AI 生成的瀏覽動作進行限制；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;最小權限原則&lt;/strong&gt;，避免 AI 在後台不必要地訪問敏感數據。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;業內人士認為，這一案例揭示了「Agentic 瀏覽器」設計中的根本缺陷，未來 AI 瀏覽器的發展必須在智能與安全之間尋求新的平衡。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368558/comet-prompt-injection</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368558/comet-prompt-injection</guid>
      <pubDate>Tue, 19 Aug 2025 07:41:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
