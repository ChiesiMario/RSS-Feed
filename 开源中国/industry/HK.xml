<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 繁體中文（香港）</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-hk</language>
    <lastBuildDate>Tue, 16 Sep 2025 02:41:48 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>🔥🔥簡單手搓一個智能門禁攝像頭</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2212</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2212</guid>
      <pubDate>Tue, 16 Sep 2025 02:34:46 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI 發佈新編程模型 GPT‑5‑Codex，優化 Agentic Coding 能力</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 今日凌晨推出全新升級的新模型&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fintroducing-upgrades-to-codex%2F" target="_blank"&gt; GPT‑5‑Codex&lt;/a&gt;，這是其在 GPT-5 基礎上專門為軟件工程優化的模型版本，進一步提升了 Codex 中的智能體編程（Agentic Coding）能力。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0916/103044_nL9C_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;官方表示，該版本在代碼審查、功能開發、大規模重構等場景中表現顯著提升，並且「在測試中可連續獨立工作超過 7 小時」。以下是本次升級的主要亮點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;工具全面升級：Codex CLI 全面重新設計，IDE 插件支持 VS Code 等主流環境，與 GitHub 深度集成雲端與本地環境可無縫切換；&lt;/li&gt; 
 &lt;li&gt;代碼審查能力強化：自動在 PR 中發現關鍵漏洞，減少無效評論，並可直接提出並實現修改建議。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0916/103155_65FN_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，GPT‑5‑Codex 已成為 Codex 雲端任務與代碼審查的默認模型，開發者也可通過 Codex CLI 或 IDE 插件在本地使用。與通用版 GPT‑5 相比，新版本在代碼重構任務的準確率從 33.9% 提升至 51.3%，高影響力審查評論比例也從 39.4% 提升至 52.4%。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0916/103208_f98s_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0916/103232_QvKk_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此外，Codex CLI 與 IDE 插件同步升級，支持在終端直接附加截圖、線框圖等設計資料，並可在雲端自動搭建運行環境、執行依賴安裝。官方稱，通過緩存容器等優化，雲端任務完成時間中位數縮短了 90%。&lt;/p&gt; 
&lt;p&gt;目前，Codex 已整合至 ChatGPT Plus、Pro、Business、Edu 與 Enterprise 計劃中，企業用户可按需購買額外額度，API 接入版本也將很快上線。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372453</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372453</guid>
      <pubDate>Tue, 16 Sep 2025 02:33:46 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>宇樹科技發佈開源世界模型-動作架構：UnifoLM-WMA-0</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;宇樹科技正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkrQOGN9hqM0Nye9KfHpThw" target="_blank"&gt;推出&lt;/a&gt;跨多類機器人本體的開源世界模型-動作（WMA）架構 —— UnifoLM-WMA-0。該架構旨在為通用機器人學習提供統一的技術基礎，核心在於一個能夠理解機器人與環境交互物理規律的世界模型。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0916/102333_wzUL_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;該世界模型具備兩大核心功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;仿真引擎：作為交互式仿真器運行，為機器人學習生成合成數據。&lt;/li&gt; 
 &lt;li&gt;策略增強：可與動作頭對接，通過預測未來與物理世界的交互過程，優化決策性能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;模型接收圖像及文本指令，生成與文本指令對應的未來動作視頻。&lt;/p&gt; 
&lt;p&gt;官方介紹，UnifoLM-WMA-0 支持兩種運行模式：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;決策模式：提供機器人與環境物理交互的預測信息，輔助策略生成動作。&lt;/li&gt; 
 &lt;li&gt;仿真模式：基於機器人動作生成高保真環境反饋。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在訓練方面，團隊基於 5 個宇樹科技開源數據集完成模型訓練，測試結果顯示，該模型可根據「當前圖像」及一定數量的「機器人未來動作」實現交互可控生成，並具備長程任務的持續交互生成能力。&lt;/p&gt; 
&lt;p&gt;項目主頁：https://unigen-x.github.io/unifolm-world-model-action.github.io/&lt;br&gt; 開源代碼網址：https://github.com/unitreerobotics/unifolm-world-model-action&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372450/unitreerobotics-unifolm-world-model-action</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372450/unitreerobotics-unifolm-world-model-action</guid>
      <pubDate>Tue, 16 Sep 2025 02:24:46 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 重組機器人團隊劍指「通用機器人」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;OpenAI 正在重返機器人研究領域，這標誌着該公司在中斷五年之後，重新將物理人工智能（AI）作為其核心關注點。《連線》雜誌報道稱，OpenAI 正在招聘專門從事人形機器人研究的人員，旨在通過遠程操作和模擬訓練，打造能夠執行通用任務的機器人。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="283" src="https://oscimg.oschina.net/oscnet/up-f9e16bedff73205d06dc93e1f2c899f753c.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;根據招聘信息，新成立的團隊將專注於傳感和原型設計，其&lt;span&gt;終極&lt;/span&gt;使命是創造「通用機器人，以加速通用人工智能（AGI）的實現。雖然該公司尚未正式確認該項目是否針對人形機器人，但種種跡象表明，其研究方向確實與類人系統緊密相關。新加入的團隊成員包括斯坦福大學研究員李成書 (Chen-Shu Lee)，他曾專注於類人家用機器人的基準測試，進一步印證了這一推測。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;早在 2020 年，OpenAI 曾因訓練數據不足而暫停其機器人研究工作。然而，該公司於今年 1 月再次發佈了多個機器人相關的職位，這表明隨着技術和數據的積累，OpenAI 已準備好重啓這一重要項目，繼續探索物理世界中的 AI 應用。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372449</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372449</guid>
      <pubDate>Tue, 16 Sep 2025 02:20:46 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>網安周開幕｜綠盟大模型能力再獲權威肯定，持續推動 AI 與網絡安全深度融合</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="" height="177" src="https://oscimg.oschina.net/oscnet//00adc33f8c5022b4075b940514844e44.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;9 月 15 日，2025 年國家網絡安全宣傳週的開幕式及一系列重要活動在雲南昆明舉辦。其中，開幕式現場，12387 網絡安全事件報告平台正式啓動。綠盟科技集團黨委書記、董事長兼總裁胡忠華，集團董事、首席技術官、高級副總裁葉曉虎，副總裁陳珂，總裁助理張銘等受邀出席相關活動。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;在網絡安全技術高峯論壇上，國家計算機網絡應急技術處理協調中心發佈了 2025 年人工智能技術賦能網絡安全應用測試結果。&lt;strong&gt;綠盟科技在基於智能體的網絡安全自動化分析響應場景中表現突出，榮獲賽道第二名，並在大模型生成內容安全風險檢測中位列第五&lt;/strong&gt;。這也是繼 2024 年在相關賽道測試中取得優異表現後，公司大模型能力再次在權威測試中得到認可。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="" height="400" src="https://oscimg.oschina.net/oscnet//b6e681bb078c9e2344e4618963a38515.jpg" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;該場景要求參測團隊利用 AI 智能體檢測釣魚郵件、終端異常行為、DNS 隱蔽隧道異常行為，並通過跨域日誌（郵件、終端、DNS）進行關聯分析，識別出完整攻擊鏈，並提出處置方案。綜合指標包括檢測與關聯分析的準確率、漏報率及處置正確性。綠盟科技憑藉智能體驅動的自動化分析與響應能力，實現了從「檢測—分析—研判—處置」的智能化閉環，能夠精準識別複雜攻擊鏈並生成可執行的處置建議，充分展示了公司在智能化安全運營方向的積累。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;深耕「AI+安全」，持續打造大模型能力&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;綠盟科技始終把人工智能作為推動安全能力躍升的重要引擎。2023 年，公司發佈了風雲衞 AI 安全能力平台，率先構建安全垂直領域的大模型體系。該平台融合大模型、小模型與安全知識圖譜，將 AI 能力「原子化」嵌入安全運營體系，覆蓋安全數據分析、威脅情報研判、攻擊鏈追蹤與處置響應等關鍵環節，並已在政府、金融、能源、運營商、科教文衞等重點行業落地應用。平台已通過國家網信辦算法模型雙備案，同時入選世界人工智能大會《2024 大模型典型示範應用案例集》，並通過工信部信通院 AI 安全能力評估。此次在國家網絡安全宣傳週測試中獲獎，既是對風雲衞在智能體應用上的又一次檢驗，也進一步印證了公司在「AI+安全」方向的技術路線和產品實踐的成熟度。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;聚焦技術攻堅，持續拓展應用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;大模型和智能體的快速發展正在改變攻防模式。綠盟科技面向衞星通信、無人機、車聯網、AI 攻防等新興場景持續研發，2025 年發佈十餘款新品，並推出大模型安全治理方案、場景化安全方案、備案評估與紅隊服務等，全面守護用户智能化轉型的可信與安全。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;同時，公司不斷推動傳統產品融入 AI 能力，逐步向智能體方向演進，在安全運營、數據安全、供應鏈安全等場景全面提升能力，讓智能化成為網絡安全建設的堅實底座。面對複雜多變的應用環境，綠盟科技積極推動行業協同與能力互通，適配多種國產化硬件與操作系統，強化與產業鏈上下游合作，確保 AI 安全能力具備彈性、兼容性和可擴展性。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;近日，國務院印發的《關於深入實施「人工智能+」行動的意見》，對人工智能應用安全治理和潛在風險防控提出了更高要求，不僅回應了人工智能快速演進帶來的安全挑戰，也為行業高質量發展明確了方向。綠盟科技將繼續以自主創新為根本，以產業需求為導向，深化人工智能與安全場景結合，服務國家重大任務，支撐產業數字化轉型，推動構建更加智能化、主動化的網絡安全體系，為數字經濟的繁榮發展貢獻力量。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372445</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372445</guid>
      <pubDate>Tue, 16 Sep 2025 02:05:46 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙 NEXT 應用國際化：時間與日期格式化</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-sifou%26ha_sourceId%3D89000235" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-sifou&amp;amp;ha_sourceId=89000235&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）在應用國際化中時間與日期格式化方面的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在全球化的應用場景中，正確處理時間與日期的格式化是提供優質用户體驗的關鍵因素之一。不同地區和語言對於時間與日期的表示方式存在顯著差異，鴻蒙 NEXT 系統提供了豐富的功能來滿足這種多樣化的需求。本文將詳細介紹時間日期格式化選項、相對時間格式化、時間段格式化，以及常見時間日期格式化問題及解決方案，拋磚引玉。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、時間日期格式化選項&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）日期顯示格式（dateStyle）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.格式取值與示例&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;full：顯示完整的日期信息，包括年、月、日、星期。例如，在中文環境下可能顯示為「2023 年 10 月 15 日，星期日」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&amp;nbsp;long：顯示較為詳細的日期，通常包含年、月、日和星期的縮寫。如「2023 年 10 月 15 日，週日」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;&amp;nbsp;medium：顯示適中的日期格式，一般有年、月、日。例如「2023-10-15」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;short：顯示簡潔的日期，可能只包含月、日和年的部分信息。比如「10/15/23」（在某些地區格式）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.根據區域和語言選擇格式&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;開發者可以使用&amp;nbsp;DateTimeFormat&amp;nbsp;類，根據用户所在區域的語言和文化習慣選擇合適的&amp;nbsp;dateStyle&amp;nbsp;進行日期格式化。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="258" src="https://oscimg.oschina.net/oscnet/up-e4f1d0d36e0c54a18f7255c9812c391260d.png" width="1094" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）時間顯示格式（timeStyle）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.格式取值與示例&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;full：顯示完整的時間信息，包括小時、分鐘、秒和時區（如果適用）。例如「中國標準時間 15:30:00」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;long：顯示詳細的時間，包含小時、分鐘、秒和時區標識（如「GMT+8 15:30:00」）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;medium：顯示適中的時間格式，有小時、分鐘和秒。如「15:30:00」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;short：顯示簡潔的時間，可能只包含小時和分鐘。例如「15:30」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.時間格式的區域適應性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同樣，通過&amp;nbsp;DateTimeFormat&amp;nbsp;類，結合區域設置來確定合適的&amp;nbsp;timeStyle。不同地區對於時間格式的偏好不同，有些地區習慣使用 24 小時制，有些則常用 12 小時制並帶有上午/下午標識。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="280" src="https://oscimg.oschina.net/oscnet/up-c8a1304e52749c700f42fb9270f6e49e755.png" width="1316" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）年份顯示格式（year）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.numeric：以完整的數字形式顯示年份，如「2023」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;2 - digit：顯示年份的後兩位數字，例如「23」。這種格式在某些場景下（如顯示文件創建時間的簡略年份）可能會用到，但需要注意其在不同年份範圍下的含義可能不明確，使用時要謹慎。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（四）工作日顯示格式（weekday）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;long：顯示完整的工作日名稱，如「星期一」「Tuesday」等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;short：顯示工作日的縮寫，如「週一」「Tue」等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;narrow：顯示更簡潔的工作日標識，通常是一個字符或簡短的縮寫，例如「一」「T」等。這種格式在空間有限的情況下（如日曆視圖中的小標籤）可能會使用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（五）時制格式（hourCycle）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;h11：表示 11 小時制，用於顯示帶有上午/下午標識的時間，如「下午 3:30」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;h12：與「h11」類似，但在某些地區可能有不同的時間範圍定義（例如，在一些地方中午 12 點可能被視為「12 PM」，而在另一些地方可能被視為「12 AM」）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;h23：23 小時制，用於顯示 0 - 23 小時的時間，如「15:30」（與 24 小時制相同，但在某些情況下可能有不同的語義或用途）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.&amp;nbsp;h24：24 小時制，顯示完整的 24 小時時間格式，如「15:30」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（六）&amp;nbsp;其他格式選項&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.數字分組和小數點格式：&lt;/strong&gt;在顯示日期中的年份、時間中的小時和分鐘等數字時，不同地區可能有不同的數字分組方式（如使用逗號或空格分隔千位）和小數點表示法（如點或逗號）。開發者可以根據區域設置來處理這些格式，以確保數字顯示符合當地習慣。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.日曆類型選擇：&lt;/strong&gt;除了常見的公曆，鴻蒙系統還支持其他日曆類型（如農曆、伊斯蘭曆等），在格式化日期時，可以根據用户的需求和文化背景選擇合適的日曆類型進行顯示。例如，在某些與中國傳統文化相關的應用中，可能需要同時顯示公曆和農曆日期。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、相對時間格式化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）相對時間格式化的概念&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;相對時間格式化用於將一個時間點與另一個時間點之間的時間差轉換為易於理解的文本表示。例如，將「30 秒前」「1 小時後」「昨天」等相對時間概念以用户所在地區的語言習慣進行顯示。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）使用&amp;nbsp;RelativeTimeFormat&amp;nbsp;類進行格式化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.創建格式化對象&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以使用&amp;nbsp;RelativeTimeFormat&amp;nbsp;類的構造函數創建相對時間格式化對象。構造函數支持傳入區域標識符（如「en - GB」「zh - Hans」等）和格式化選項，以定製相對時間的顯示格式。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="124" src="https://oscimg.oschina.net/oscnet/up-27dbb790cfd0773206a6360192f9a15406d.png" width="930" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.格式化相對時間&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;使用&amp;nbsp;format&amp;nbsp;方法對相對時間進行格式化。該方法接受兩個參數，第一個參數是時間差的數值，第二個參數是時間單位（如「day」「hour」「minute」「second」等）。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="84" src="https://oscimg.oschina.net/oscnet/up-73baa4888f0d296f975cab4782c440a7144.png" width="974" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.格式化選項&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;numeric：取值為「always」時，始終顯示數字和時間單位，如「2 days ago」；取值為「auto」時，根據時間差的大小自動選擇顯示方式，例如，對於「昨天」可能顯示為「yesterday」，而對於「3 天前」則顯示為「3 days ago」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;style：取值為「long」時，顯示較為詳細的相對時間格式，如「1 day ago」；取值為「short」時，顯示更簡潔的格式，如「1d ago」；取值為「narrow」時，顯示最簡短的格式，如「-1d」（在某些語言中可能適用）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）相對時間格式化的應用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.消息通知：&lt;/strong&gt;在消息應用中，顯示消息的發送時間與當前時間的相對時間差，使用户能夠快速瞭解消息的時效性。例如，「您有一條新消息，2 小時前發送」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.動態內容更新：&lt;/strong&gt;在社交網絡應用或新聞資訊應用中，顯示動態內容（如評論、點贊等）的相對時間，讓用户知道這些活動的新鮮程度。比如，「此評論於 30 分鐘前發佈」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.任務提醒：&lt;/strong&gt;對於待辦任務或定時提醒，顯示距離任務截止時間或提醒時間的相對時間，方便用户掌握時間進度。例如，「任務將於 1 小時後開始」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、時間段格式化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）時間段格式化的概念&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;時間段格式化是將一段時間範圍（如從一個時間點到另一個時間點）轉換為符合用户所在地區語言習慣的文本表示。例如，將「8:00 - 10:00」「Wednesday - Thursday」等時間段進行格式化顯示。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）使用&amp;nbsp;DateTimeFormat&amp;nbsp;類進行時間段格式化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.創建格式化對象&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;與時間日期格式化類似，使用&amp;nbsp;DateTimeFormat&amp;nbsp;類創建格式化對象，但在這種情況下，通常使用默認的格式設置或根據具體需求進行簡單配置。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="148" src="https://oscimg.oschina.net/oscnet/up-939ae1b2a82f67a07dc7c8dcc8da7a8beca.png" width="938" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.格式化時間段&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;使用&amp;nbsp;formatRange&amp;nbsp;方法對時間段進行格式化。該方法接受兩個&amp;nbsp;Date&amp;nbsp;對象作為參數，分別表示時間段的起始時間和結束時間。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="152" src="https://oscimg.oschina.net/oscnet/up-e659530d7c50127db73978528161f3324a4.png" width="1472" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）時間段格式化的應用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.日程安排&lt;/strong&gt;：在日曆應用或任務管理應用中，顯示日程活動或任務的時間段，讓用户清晰瞭解活動的持續時間。例如，「會議：9:00 - 11:00」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.營業時間顯示：&lt;/strong&gt;在商業應用（如商店、餐廳等）中，顯示營業時間的時間段，方便用户瞭解其營業時段。例如，「營業時間：週一 - 週五 9:00 - 18:00，週六 - 週日 10:00 - 17:00」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.資源預訂：&lt;/strong&gt;在預訂系統（如酒店預訂、會議室預訂等）中，顯示可預訂資源的可用時間段，幫助用户選擇合適的預訂時間。例如，「可預訂時間段：2023-10-15 12:00 - 14:00」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、常見時間日期格式化問題及解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）格式顯示不符合預期&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;應用在不同地區或語言環境下，時間日期的顯示格式與當地習慣不符。例如，在某些地區應該顯示為「DD/MM/YYYY」格式的日期，卻顯示為「MM/DD/YYYY」格式，導致用户誤解。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;仔細檢查&amp;nbsp;DateTimeFormat&amp;nbsp;類的使用，確保根據用户所在區域正確設置了&amp;nbsp;dateStyle、timeStyle、hourCycle&amp;nbsp;等格式選項。同時，要考慮到不同語言和地區對數字分組、小數點等的特殊要求。例如，在處理日期格式時：&lt;/p&gt; 
&lt;p&gt;&lt;img height="210" src="https://oscimg.oschina.net/oscnet/up-2565dfd82f1d601cbb77f022e3c957afb75.png" width="1320" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於時間格式，也要進行類似的檢查和調整，確保時間顯示符合當地習慣。如果應用支持多種語言和地區，進行全面的測試，覆蓋不同的語言和區域組合，以發現並修復格式顯示問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）相對時間格式化不準確&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;相對時間格式化的結果與預期的時間差表示不一致。例如，在某些情況下，「1 小時前」被錯誤地顯示為「59 分鐘前」，或者對於較長時間差的格式化不夠直觀（如「3 天 2 小時前」顯示為不常見的格式）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;檢查&amp;nbsp;RelativeTimeFormat&amp;nbsp;類的使用，確保正確設置了&amp;nbsp;numeric&amp;nbsp;和&amp;nbsp;style&amp;nbsp;等格式化選項。對於時間差的計算，要使用準確的時間計算方法，避免因時間精度問題導致格式化錯誤。例如，在計算時間差時，使用合適的時間單位轉換和四捨五入規則，確保時間差的數值準確。同時，可以參考當地語言的習慣表達方式，對相對時間格式化進行優化，使其更符合用户的預期。例如，在中文環境下，對於「1 天前」「昨天」「前天」等時間差的表示有特定的習慣用法，可以根據時間差的範圍進行相應的調整：&lt;/p&gt; 
&lt;p&gt;&lt;img height="158" src="https://oscimg.oschina.net/oscnet/up-432420e425ba8a7f306c00d2c9022da04fc.png" width="1318" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）時間段格式化錯誤&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在格式化時間段時，出現起始時間和結束時間順序錯誤、格式不清晰或不符合當地習慣等問題。例如，在某些地區習慣將時間段顯示為「起始時間 - 結束時間」，而應用卻顯示為「結束時間 - 起始時間」，或者時間段的日期和時間部分顯示混亂。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;再次確認&amp;nbsp;DateTimeFormat&amp;nbsp;類中&amp;nbsp;formatRange&amp;nbsp;方法的使用，確保傳入的起始時間和結束時間參數正確無誤。根據不同地區的習慣，調整日期和時間的顯示順序以及格式。例如，在處理跨天的時間段時，要明確顯示日期的變化，避免造成混淆。可以參考當地類似應用的時間段顯示方式，進行針對性的優化。例如，在一個全球應用中，對於營業時間的顯示：&lt;/p&gt; 
&lt;p&gt;&lt;img height="206" src="https://oscimg.oschina.net/oscnet/up-6e7ca53de859cfbe827c1edc0f4dda11325.png" width="1776" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（四）夏令時對時間格式化的影響&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在實行夏令時的地區，時間格式化可能出現問題。例如，在夏令時開始或結束時，時間突然跳躍，應用如果沒有正確處理，可能導致時間顯示錯誤或時間段計算不準確。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;鴻蒙系統通常會自動處理夏令時相關的時間調整，但在進行時間格式化時，要確保使用的是系統正確處理後的時間。在處理時間段涉及夏令時期間時，要考慮時間跳躍的情況，正確計算時間段的長度。例如，在計算從夏令時開始前到夏令時開始後的時間段時，要將夏令時的時間調整因素考慮在內。可以通過獲取系統的時區信息和夏令時設置，來輔助進行時間格式化和時間段計算，確保在夏令時期間時間顯示和計算的準確性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（五）多語言混合環境下的時間格式化問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在應用中存在多語言混合顯示的情況下（如界面文本包含多種語言），時間日期格式化可能與周圍文本的語言風格不匹配。例如，在一個包含英文和中文的界面中，時間格式在中文部分顯示為中文習慣格式，而在英文部分卻沒有顯示為相應的英文習慣格式，導致界面顯示不協調。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;根據界面文本的語言環境動態選擇合適的時間日期格式化方式。可以通過檢測周圍文本的語言標識或根據應用當前的語言設置，為不同語言部分的時間日期分別進行格式化。例如，在一個同時顯示中英文的通知消息中：&lt;/p&gt; 
&lt;p&gt;&lt;img height="400" src="https://oscimg.oschina.net/oscnet/up-8638fdd9311d8d333d44a27b2e39e65d736.png" width="1268" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;這樣可以確保在多語言混合環境下，時間日期的顯示與周圍文本的語言風格一致，提高界面的整體協調性和可讀性。同時，要注意處理好不同語言格式之間的分隔和排版，使其在視覺上更加美觀。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（六）時間日期格式化的性能優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在頻繁進行時間日期格式化操作（如在列表中顯示大量帶有時間日期的項目，或者實時更新時間顯示）時，可能會出現性能瓶頸，導致應用響應變慢或卡頓。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;避免在循環或頻繁調用的函數中重複創建&amp;nbsp;DateTimeFormat&amp;nbsp;或&amp;nbsp;RelativeTimeFormat&amp;nbsp;對象。可以將格式化對象緩存起來，在需要時重複使用，減少對象創建和銷燬的開銷。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="270" src="https://oscimg.oschina.net/oscnet/up-426c4acbe177f1bad250d6921628b8507ea.png" width="1032" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於相對時間格式化，如果時間差的計算邏輯較為複雜，可以考慮預先計算並緩存一些常見時間差的格式化結果，在需要時直接使用，避免重複計算。同時，優化時間計算和格式化的算法，儘量減少不必要的計算步驟和資源消耗。例如，在計算相對時間時，如果時間差在一定範圍內（如最近 1 小時內），可以使用簡單的差值計算和固定格式顯示，而對於較長時間差再使用完整的相對時間格式化邏輯，提高性能。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（七）時間日期格式化與後端數據的兼容性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;當應用從後端獲取時間日期數據時，後端數據的格式可能與應用前端的格式化要求不一致，導致在顯示時間日期時出現問題。例如，後端返回的日期格式為「YYYYMMDD」，而前端需要顯示為「DD/MM/YYYY」格式，或者後端使用的時間戳格式與前端處理方式不匹配。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在前端和後端之間建立統一的時間日期格式規範。如果可能的話，後端按照前端能夠直接使用或容易轉換的格式返回時間日期數據。例如，後端可以返回 ISO 8601 格式的日期時間字符串（如「2023 - 10 - 15T15:30:00Z」），前端可以直接使用或進行簡單的轉換。如果後端數據格式無法更改，前端在接收到數據後，進行格式轉換處理，使其符合前端的顯示要求。可以編寫專門的函數來處理後端數據格式到前端格式化要求的轉換。例如，將後端返回的「YYYYMMDD」格式日期轉換為「DD/MM/YYYY」格式：&lt;/p&gt; 
&lt;p&gt;&lt;img height="196" src="https://oscimg.oschina.net/oscnet/up-832b8ea9a024e213db5b59d00dea05d2ddf.png" width="912" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同時，要注意處理時區差異。如果後端和前端處於不同時區，在數據傳輸和處理過程中，明確時區信息，確保時間日期的準確性。可以將時間數據統一轉換為 0 時區標準時間（UTC 或 GMT）進行傳輸，在前端根據用户所在時區進行顯示轉換。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（八）時間日期格式化在低配置設備上的問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在低配置設備上，複雜的時間日期格式化操作可能會消耗過多的系統資源，導致應用運行緩慢甚至出現崩潰。例如，在一些老舊手機或內存較小的設備上，頻繁進行高精度的時間計算和格式化可能會超出設備的處理能力。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在低配置設備上，簡化時間日期格式化的方式。可以提供一些低精度但性能較好的格式化選項，例如，在顯示時間時，只顯示小時和分鐘，而不顯示秒；在顯示日期時，使用更簡潔的格式（如「MM/DD」），減少不必要的計算和顯示內容。根據設備的性能特徵，動態調整時間日期格式化策略。例如，可以檢測設備的內存、CPU 等硬件參數，當設備性能較低時，切換到低配置模式下的格式化方式。同時，優化應用的整體性能，減少其他不必要的資源消耗，為時間日期格式化操作留出更多的系統資源。例如，優化界面渲染、減少不必要的後台任務等，確保應用在低配置設備上能夠穩定運行，時間日期顯示功能正常。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過對這些常見時間日期格式化問題的深入理解和有效解決，我們能夠更好地利用鴻蒙 NEXT 系統的時間日期國際化功能，為用户提供準確、友好、高效的時間日期顯示體驗。在應用開發過程中，注重細節、充分測試、持續優化，是確保時間日期格式化在各種場景下都能正常工作的關鍵。希望本文能夠為鴻蒙系統同僚在處理時間日期格式化方面提供有價值的參考和指導，助力打造出更加出色的國際化應用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-2355d57fd6216e83cf9599dd71df5020cdc.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372442</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372442</guid>
      <pubDate>Tue, 16 Sep 2025 02:00:46 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙高安全性輸入法的實現：基礎模式與完整體驗模式下的輸入法功能適配</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-sifou%26ha_sourceId%3D89000235" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-sifou&amp;amp;ha_sourceId=89000235&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討高安全性輸入法在基礎模式與完整體驗模式下的功能適配技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在當今數字化環境中，用户數據安全至關重要。輸入法作為用户頻繁使用的工具，必須確保在不同模式下既能提供良好的功能體驗，又能保障數據安全。本文將詳細介紹如何在華為鴻蒙 HarmonyOS NEXT 系統（API12）中設計並實現一個輸入法應用，使其能夠完美適配基礎模式與完整體驗模式，包括項目需求分析、架構設計、關鍵技術實現以及共享沙箱數據安全性控制等方面。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、項目需求與架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）安全模式的應用場景分析&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在基礎模式下，輸入法需要嚴格遵守隱私和數據保護規範，禁止訪問可能涉及用户隱私的系統能力，如網絡、短信、定位等。這主要應用於對安全性要求極高的場景，例如企業內部辦公環境，防止用户數據泄露風險。而完整體驗模式則提供更豐富的功能，允許使用網絡和訪問用户數據接口，以提升用户體驗，適用於普通用户日常使用場景。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;我們採用模塊化架構設計，將輸入法功能分為基礎功能模塊和擴展功能模塊。基礎功能模塊在基礎模式和完整體驗模式下均可運行，包括基本的輸入、顯示等功能。擴展功能模塊則根據不同模式進行適配，在基礎模式下被禁用，在完整體驗模式下啓用，如網絡搜索、個性化推薦等功能。同時，引入安全檢測模塊，通過&amp;nbsp;IME Kit&amp;nbsp;的&amp;nbsp;getSecurityMode&amp;nbsp;方法檢測當前運行模式，動態調整輸入法功能。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、基礎模式功能適配&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;（一）使&lt;/span&gt;&lt;span&gt;用&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;getSecurityMode&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;檢查&lt;/span&gt;&lt;span&gt;當前模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在輸入法應用的初始化階段，調用&amp;nbsp;getSecurityMode&amp;nbsp;方法獲取當前安全模式。以下是一個簡單的示例代碼：&lt;/p&gt; 
&lt;p&gt;&lt;img height="266" src="https://oscimg.oschina.net/oscnet/up-15fab686e9447750cc6d24c8c8871371f38.png" width="1076" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）在基礎模式下禁用所有網絡請求與數據傳輸，確保數據隔離&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在基礎模式下，我們需要確保輸入法不進行任何網絡請求，防止數據泄露。可以通過代碼層面的限制來實現，例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="206" src="https://oscimg.oschina.net/oscnet/up-e9c49ff44fb18d57dbdd39f1443bb4e47f8.png" width="832" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;這裏的&amp;nbsp;disableNetworkRequests&amp;nbsp;和&amp;nbsp;isolateData&amp;nbsp;函數需要根據具體的業務邏輯和系統接口來實現，例如可以禁用網絡庫的使用，限制數據訪問權限等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、完整體驗模式的功能擴展&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）啓用網絡和用户數據接口，增強用户體驗&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在完整體驗模式下，我們可以啓用網絡請求來實現一些高級功能，如在線詞庫更新、雲輸入等。同時，可以訪問用户數據接口，根據用户的歷史輸入習慣提供個性化的輸入建議。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="246" src="https://oscimg.oschina.net/oscnet/up-fc7966ac778a6c74d41e8ad7b1a1feea663.png" width="844" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）實現動態模式檢測與切換，確保輸入法在模式切換時調整功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;為了確保輸入法在系統安全模式切換時能夠及時調整功能，我們需要實時監聽模式變化。可以通過註冊模式變化監聽器來實現，例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="270" src="https://oscimg.oschina.net/oscnet/up-e0abc11df9e1220113bb2fcf6ec37aafb25.png" width="892" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、共享沙箱數據的安全性控制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）在基礎模式下實現共享沙箱的只讀訪問&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在基礎模式下，為了防止數據被意外修改或泄露，我們將共享沙箱設置為只讀訪問。可以通過文件系統權限設置或特定的沙箱訪問接口來實現。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="136" src="https://oscimg.oschina.net/oscnet/up-b67b63682cfd13e22ce2571b8f897e961b5.png" width="864" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）在完整體驗模式下，確保數據在共享沙箱中的傳輸安全&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在完整體驗模式下，雖然可以讀寫共享沙箱，但我們仍需確保數據傳輸的安全性。可以採用加密技術對共享沙箱中的數據進行加密存儲和傳輸，例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="202" src="https://oscimg.oschina.net/oscnet/up-2bdaab92e3b89e5b745667212d29aec20c1.png" width="908" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;五、示例代碼與安全架構圖&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）示例代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以下是一個簡化的基礎模式與完整體驗模式的安全代碼示例：&lt;/p&gt; 
&lt;p&gt;&lt;img height="862" src="https://oscimg.oschina.net/oscnet/up-f49e135dbb7eb9621a12144c581937859cb.png" width="956" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="640" src="https://oscimg.oschina.net/oscnet/up-c90f9bbb16e9d8c22570f6711b0e8d6e950.png" width="890" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）安全架構圖與模式檢測&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;安全架構圖：&lt;/p&gt; 
&lt;p&gt;&lt;img height="400" src="https://oscimg.oschina.net/oscnet/up-7fc50cedbb49e9c04410e31c963578eb52c.png" width="1656" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;模式檢測流程圖：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.輸入法應用啓動。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.調用&amp;nbsp;checkSecurityMode&amp;nbsp;函數獲取當前安全模式。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.如果是基礎模式，執行&amp;nbsp;adaptToBasicMode&amp;nbsp;函數進行功能適配；如果是完整體驗模式，執行&amp;nbsp;adaptToFullMode 函數。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.註冊&amp;nbsp;securityModeChange&amp;nbsp;監聽器，實時監聽模式變化。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;5.當系統安全模式發生變化時，監聽器觸發，根據新的模式再次執行相應的適配函數。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上設計與實現，我們成功打造了一個高安全性的輸入法應用，能夠在基礎模式和完整體驗模式下穩定運行，保障用户數據安全的同時提供良好的功能體驗。在實際開發中，還可以進一步優化安全機制、增加更多安全檢測點以及完善功能適配細節等。希望本文能夠為鴻蒙系統輸入法開發中的安全相關工作提供有益的參考和借鑑。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-707fb43adf4bd43106b6d0edb6054c4d144.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372438</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372438</guid>
      <pubDate>Tue, 16 Sep 2025 01:58:46 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙 NEXT 應用本地化：多語言社交應用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-sifou%26ha_sourceId%3D89000235" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-sifou&amp;amp;ha_sourceId=89000235&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）在開發多語言社交應用方面的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、應用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;開發一個支持多語言社交功能的移動應用，用户可以發佈和分享信息，並進行互動交流。這個應用旨在打破語言障礙，讓全球用户能夠輕鬆地進行社交互動，分享生活點滴和交流想法。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、技術要點&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）使用資源文件管理多語言文本資源&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.資源文件結構&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;採用 JSON 格式的資源文件來管理多語言文本資源，包括用户界面元素、消息內容、表情符號的描述等。例如，可以創建不同的資源文件用於不同的語言，如&amp;nbsp;strings_en.json（英語資源文件）、strings_fr.json（法語資源文件）等。在資源文件中，按照功能模塊進行分類，以便於管理和維護。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;以下是一個資源文件的示例：&lt;/p&gt; 
&lt;p&gt;&lt;img height="372" src="https://oscimg.oschina.net/oscnet/up-ebc71fa516d2417861fc744ced46f629d0f.png" width="958" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.資源加載和使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在應用中，通過代碼加載相應語言的資源文件。可以使用鴻蒙系統提供的資源管理器來獲取資源文件，並根據當前設置的語言環境選擇合適的資源。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="200" src="https://oscimg.oschina.net/oscnet/up-f08cf8aa8512c93847d7bbea25e682d373b.png" width="1018" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）使用國際化 API 處理文本格式化、排序、方向和日期時間顯示&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.文本格式化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;使用國際化 API 對數字、貨幣、日期等進行格式化，以適應不同語言的顯示習慣。例如，可以使用&amp;nbsp;Intl.NumberFormat&amp;nbsp;和&amp;nbsp;Intl.DateTimeFormat&amp;nbsp;來格式化數字和日期。&lt;/p&gt; 
&lt;p&gt;&lt;img height="292" src="https://oscimg.oschina.net/oscnet/up-037f6a01ec047c8e338be8e2520ad797613.png" width="832" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.文本排序&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;根據不同語言的排序規則對用户發佈的內容進行排序。例如，對於中文可以按照拼音順序進行排序，對於英文可以按照字母順序進行排序。在排序時，可以使用字符串的&amp;nbsp;localeCompare&amp;nbsp;方法結合當前語言環境進行排序。&lt;/p&gt; 
&lt;p&gt;&lt;img height="320" src="https://oscimg.oschina.net/oscnet/up-9b619a7b4fdfc33d2f21b7aad7aefdb9dcc.png" width="776" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.方向處理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於從右到左（RTL）語言，如阿拉伯語、希伯來語等，使用國際化 API 進行方向處理，確保界面佈局和文本顯示符合 RTL 語言習慣。可以通過設置文本的&amp;nbsp;textDirection&amp;nbsp;屬性來控制文本的顯示方向。&lt;/p&gt; 
&lt;p&gt;&lt;img height="158" src="https://oscimg.oschina.net/oscnet/up-ad73512d88044f160cf3c6032f1cc96881b.png" width="812" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4.日期時間顯示&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;根據不同語言和地區的習慣顯示日期和時間。可以使用國際化 API 的&amp;nbsp;DateTimeFormat&amp;nbsp;來格式化日期和時間，並根據用户的語言設置選擇合適的格式。&lt;/p&gt; 
&lt;p&gt;&lt;img height="150" src="https://oscimg.oschina.net/oscnet/up-5bce30ae5f68aacc705700b3acefaa5ebb1.png" width="830" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）設計支持多語言輸入和顯示的聊天界面&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.輸入框處理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;為聊天輸入框提供多語言輸入支持，可以使用鴻蒙系統的輸入法框架來實現。確保輸入框能夠正確處理不同語言的字符輸入，並在輸入過程中提供合適的自動完成和糾錯功能。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同時，對於輸入的文本進行實時翻譯或顯示翻譯提示，以便用户在不同語言之間進行交流。可以使用第三方翻譯 API 或集成翻譯功能到應用中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.消息顯示&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在聊天界面中，正確顯示不同語言的消息內容。可以根據消息的語言設置自動調整文本的顯示方向和字體大小，以確保消息能夠清晰可讀。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於包含表情符號的消息，確保表情符號能夠在不同語言環境下正確顯示，並提供相應的描述和翻譯。可以使用 Unicode 表情符號集，併為每個表情符號提供多語言的描述資源。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.滾動和分頁&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;處理聊天界面的滾動和分頁功能，確保在顯示大量消息時能夠流暢滾動，並在加載更多消息時進行正確的分頁處理。考慮不同語言的文本長度差異，可能需要動態調整分頁的大小和位置，以確保用户能夠完整地查看消息歷史。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（四）處理文化差異，例如問候語、表情符號的使用等&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問候語和禮儀&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;根據不同語言和文化的習慣，提供合適的問候語和禮儀表達方式。例如，在英語中可以使用 「Hello」、「Hi」 等問候語，而在中文中可以使用 「你好」、「您好」 等。在應用中，可以根據用户的語言設置自動選擇合適的問候語，並在用户交互過程中遵循相應的禮儀規範。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同時，注意不同文化中對於稱呼、禮貌用語等的差異，確保應用在不同文化環境下都能夠提供恰當的社交體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.表情符號的文化差異&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;表情符號在不同文化中可能有不同的含義和使用習慣。在設計社交應用時，要考慮到這些差異，併為不同語言和文化提供相應的表情符號解釋和翻譯。例如，在某些文化中，某個表情符號可能具有特定的負面含義，而在其他文化中則可能是中性或積極的。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以為表情符號提供多語言的描述資源，並在用户使用表情符號時顯示相應的描述和翻譯，以避免誤解。同時，根據不同文化的喜好和習慣，提供一些特定的表情符號集合或推薦，以增強用户的社交體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.顏色和圖標文化差異&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;顏色和圖標在不同文化中也可能有不同的象徵意義。在應用的界面設計中，要注意選擇合適的顏色和圖標，以避免因文化差異而引起的誤解或不適。例如，在某些文化中，紅色可能象徵着吉祥和幸福，而在其他文化中可能與危險或警告相關。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以進行用户調研和文化研究，瞭解不同文化對於顏色和圖標的喜好和禁忌，以便在應用設計中做出合適的選擇。同時，為不同文化提供可定製的界面主題和圖標集，讓用户可以根據自己的文化背景和喜好進行選擇。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（五）進行本地化測試，確保應用在不同語言和文化環境下正常運行&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.測試計劃&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;制定詳細的本地化測試計劃，包括測試的語言範圍、文化差異、功能模塊等。確定測試的重點和優先級，確保在有限的時間和資源下能夠覆蓋關鍵的本地化問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;例如，可以先測試主要的語言版本和常見的文化差異，然後逐步擴展到其他語言和文化。同時，根據用户反饋和市場需求，不斷調整測試計劃，以確保應用能夠滿足不同用户的需求。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.功能測試&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;針對應用的各個功能模塊，在不同語言和文化環境下進行功能測試。確保用户能夠正常註冊、登錄、發佈消息、添加好友、進行聊天等操作，並且這些操作在不同語言和文化環境下都能夠正確執行。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以使用自動化測試工具和腳本，模擬不同語言和文化環境下的用户操作，以提高測試效率和覆蓋範圍。同時，進行手動測試，以確保應用在實際使用場景下的穩定性和可靠性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.界面測試&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;檢查應用的界面在不同語言和文化環境下的顯示效果。確保界面元素的佈局合理、文本清晰可讀、圖標和顏色符合文化習慣。同時，檢查界面的響應速度和交互效果，確保用户在不同語言和文化環境下都能夠流暢地使用應用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以使用不同分辨率和尺寸的設備進行測試，以確保應用在不同設備上的顯示效果一致。同時，進行用户體驗測試，邀請不同語言和文化背景的用户進行試用，收集他們的反饋和建議，以不斷改進應用的界面設計。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4.文化適應性測試&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;評估應用在不同文化環境下的適應性。檢查問候語、表情符號、顏色和圖標等是否符合當地的文化習慣，以及應用的功能和操作是否符合當地的社交規範。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以進行文化調研和用户訪談，瞭解不同文化背景下的用户需求和期望，以便在應用設計中做出相應的調整。同時，進行跨文化比較測試，邀請來自不同文化背景的用户進行對比測試，以發現文化差異對應用使用的影響，並進行相應的優化。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）使用分層架構，將應用分為數據層、業務邏輯層和表示層&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.數據層&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;負責數據的存儲和管理，包括用户信息、消息內容、好友關係等。可以使用數據庫來存儲數據，並提供相應的數據訪問接口。例如，可以使用 SQLite 數據庫或其他數據庫管理系統來存儲數據，並使用 SQL 查詢語言或對象關係映射（ORM）框架來進行數據訪問。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同時，數據層還可以負責與外部數據源進行數據交換，如通過 RESTful API 從服務器獲取數據或向服務器發送數據。在數據交換過程中，要確保數據的格式和編碼符合多語言和文化的要求，以便在不同系統之間進行正確的數據傳輸。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.業務邏輯層&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;負責處理應用的業務邏輯，包括用户註冊、登錄、消息發送、好友管理等。業務邏輯層可以調用數據層的接口來獲取和存儲數據，並進行相應的業務處理。例如，在用户註冊過程中，業務邏輯層可以驗證用户輸入的信息是否合法，並將用户信息存儲到數據庫中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同時，業務邏輯層還可以負責處理多語言和文化相關的業務邏輯，如根據用户的語言設置選擇合適的資源文件、進行文本翻譯、處理文化差異等。在處理這些業務邏輯時，要確保應用的功能在不同語言和文化環境下都能夠正確執行。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.表示層&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;負責應用的界面顯示和用户交互，包括用户界面的設計、佈局、動畫效果等。表示層可以調用業務邏輯層的接口來獲取數據和執行業務操作，並將結果顯示給用户。例如，在聊天界面中，表示層可以調用業務邏輯層的接口來獲取消息列表，並將消息內容顯示在界面上。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同時，表示層還可以負責處理多語言和文化相關的界面顯示問題，如根據用户的語言設置選擇合適的資源文件、調整界面佈局和字體大小、顯示翻譯提示等。在處理這些界面顯示問題時，要確保應用的界面在不同語言和文化環境下都能夠清晰可讀、美觀大方。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）使用 RESTful API 進行數據交換，支持多語言數據傳輸&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.API 設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;設計 RESTful API 來實現應用與服務器之間的數據交換。API 應該具有良好的可擴展性和可維護性，能夠支持不同類型的數據傳輸和業務操作。例如，可以設計用户註冊、登錄、消息發送、好友管理等 API 接口，並使用 HTTP 方法（如 GET、POST、PUT、DELETE）來表示不同的操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在 API 設計過程中，要考慮多語言數據傳輸的問題。可以使用 JSON 格式來傳輸數據，並在 JSON 中包含語言標識字段，以便服務器能夠根據語言標識選擇合適的資源文件進行響應。例如，可以在 JSON 中添加一個 「language」 字段，用於表示請求或響應的語言環境。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.數據編碼和格式&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在數據傳輸過程中，要確保數據的編碼和格式符合多語言和文化的要求。可以使用 UTF-8 編碼來傳輸文本數據，以支持不同語言的字符集。同時，可以使用國際化日期和時間格式（如 ISO 8601）來傳輸日期和時間數據，以便在不同系統之間進行正確的數據解析。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於包含多語言內容的數據，可以使用特定的格式來表示，如使用 JSON 對象或數組來表示不同語言的文本內容，並在對象或數組中添加語言標識字段。例如，可以使用以下格式來表示多語言的消息內容：&lt;/p&gt; 
&lt;p&gt;&lt;img height="288" src="https://oscimg.oschina.net/oscnet/up-911aa0cf938d2711f818bf4c791c4895c31.png" width="774" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.錯誤處理和響應&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在 API 響應中，要正確處理錯誤情況，並提供清晰的錯誤信息。對於多語言應用，可以使用多語言的錯誤消息來提高用户體驗。例如，可以在 API 響應中添加一個 「error_message」 字段，並根據用户的語言設置選擇合適的錯誤消息進行響應。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;同時，要確保 API 的響應格式和內容在不同語言和文化環境下都能夠被正確解析和處理。可以使用標準化的響應格式，如 JSON 或 XML，並在響應中包含必要的元數據信息，如語言標識、數據類型等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;（三）使用數據庫進行數據存儲，支持多語言數據存儲和檢索&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.數據庫設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;設計數據庫來存儲應用的數據，包括用户信息、消息內容、好友關係等。在數據庫設計過程中，要考慮多語言數據存儲的問題。可以使用支持多語言的數據庫管理系統，如 MySQL、PostgreSQL 等，並在數據庫中添加語言標識字段，以便在存儲和檢索數據時能夠根據語言標識選擇合適的資源文件。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;例如，可以在用户表中添加一個 「language」 字段，用於表示用户的語言設置。在存儲用户信息時，可以根據用户的語言設置選擇合適的資源文件進行存儲，以便在不同語言環境下能夠正確顯示用户信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.數據存儲和檢索&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在存儲和檢索數據時，要確保數據的編碼和格式符合多語言和文化的要求。可以使用 UTF-8 編碼來存儲文本數據，以支持不同語言的字符集。同時，可以使用國際化日期和時間格式來存儲日期和時間數據，以便在不同系統之間進行正確的數據解析。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於包含多語言內容的數據，可以使用特定的存儲方式來提高檢索效率。例如，可以使用 JSON 對象或數組來存儲不同語言的文本內容，並在數據庫中創建相應的索引，以便在檢索數據時能夠快速找到符合條件的記錄。同時，可以使用數據庫的全文搜索功能來支持多語言文本的檢索，以便用户能夠快速找到所需的信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.數據備份和恢復&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;定期備份數據庫中的數據，以防止數據丟失。在備份數據時，要確保備份文件的編碼和格式符合多語言和文化的要求，以便在恢復數據時能夠正確解析和處理。同時，可以使用數據庫管理系統提供的備份工具或第三方備份軟件來進行數據備份，並將備份文件存儲在安全的位置。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在恢復數據時，要確保恢復過程的正確性和完整性。可以使用數據庫管理系統提供的恢復工具或第三方恢復軟件來進行數據恢復，並在恢復過程中進行數據驗證和修復，以確保恢復後的數據能夠正常使用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、總結&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上技術要點和架構設計，我們可以開發出一個功能強大、易於維護和擴展的多語言社交應用。在開發過程中，要注重資源管理、國際化 API 的使用、界面設計、文化差異處理和本地化測試，以確保應用在不同語言和文化環境下都能夠為用户提供優質的社交體驗。同時，要不斷優化應用的性能和用户體驗，根據用户反饋和市場需求進行持續改進，以提高應用的競爭力和用户滿意度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以下是一個總結表格，展示多語言社交應用的關鍵技術和架構設計：&lt;/p&gt; 
&lt;p&gt;&lt;img height="840" src="https://oscimg.oschina.net/oscnet/up-e79241206f47afccd394b65460f6720eba0.png" width="1652" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-ae8922cb430aa6f0981e788adf9dece07c8.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372437</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372437</guid>
      <pubDate>Tue, 16 Sep 2025 01:55:46 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>鴻蒙 NEXT 應用國際化：日曆與曆法處理</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-sifou%26ha_sourceId%3D89000235" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-sifou&amp;amp;ha_sourceId=89000235&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）在應用國際化中日曆與曆法處理方面的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在全球化的應用開發中，正確處理日曆與曆法是滿足不同地區用户需求的重要環節。鴻蒙 NEXT 系統提供了強大的日曆與曆法處理功能，使應用能夠適應多種文化和地區的時間管理習慣。本文將詳細介紹鴻蒙 NEXT 應用支持的日曆類型、如何設置和應用不同日曆，以及處理不同曆法下時間與日期的方法，並探討常見問題及解決方案，拋磚引個玉。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、鴻蒙 NEXT 應用支持的日曆類型&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）公曆（Gregory）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.特點與應用範圍&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;公曆是目前世界上通用的歷法，廣泛應用於全球大部分國家和地區。它以耶穌誕生之年作為元年，平年有 365 天，閏年有 366 天，閏年的判斷規則為能被 4 整除但不能被 100 整除的年份為閏年，此外能被 400 整除的年份也是閏年。公曆的月份和日期設置較為規則，一年分為 12 個月，每月天數相對固定（除 2 月外）。在商務、科學、日常生活等眾多領域，公曆是主要的時間計量標準。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.在鴻蒙 NEXT 應用中的表示與使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在鴻蒙應用中，當獲取系統默認日曆或未指定特定日曆時，通常使用公曆進行時間和日期的處理。例如，在顯示當前日期、安排日程提醒等功能中，默認使用公曆格式。開發者可以通過&amp;nbsp;i18n.getCalendar()&amp;nbsp;方法獲取公曆日曆對象，然後使用該對象進行日期設置、獲取等操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）農曆（Chinese）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.特點與應用範圍&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;農曆是中國傳統曆法，也在東亞一些國家和地區（如韓國、越南等）有一定的使用。農曆是一種陰陽合曆，它以月相變化週期為一個月，一年分為 12 個月或 13 個月（閏月）。農曆中的年份用干支紀年法表示，一個干支週期為 60 年。農曆與農業生產、傳統節日（如春節、中秋節等）密切相關，在文化傳承和民俗活動中具有重要地位。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.在鴻蒙 NEXT 應用中的表示與使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;鴻蒙系統提供了對農曆的支持，開發者可以通過指定「chinese」作為日曆類型來獲取農曆日曆對象。例如，在開發與中國傳統文化相關的應用（如農曆日曆應用、節日提醒應用等）時，可以使用農曆日曆對象獲取農曆日期、節氣等信息。可以通過農曆日曆對象的方法獲取農曆年份（干支紀年）、月份、日期等，方便應用展示農曆相關信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）其他日曆類型&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.佛曆（Buddhist）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;佛曆是部分佛教國家和地區使用的歷法，以釋迦牟尼涅槃後一年為元年。它與公曆有一定的換算關係，在一些佛教文化相關的應用（如寺廟活動安排、佛教節日提醒等）中可能會用到。開發者可以通過指定「buddhist」獲取佛曆日曆對象，進行相應的時間和日期處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.伊斯蘭曆（Islamic_civil、Islamic_tbla、Islamic_umalqu 等）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;伊斯蘭曆是伊斯蘭教國家和地區使用的歷法，有多種類型，如希吉來歷等。伊斯蘭曆以月亮的陰晴圓缺為計算單位，一年約為 354 天或 355 天，與公曆有較大差異。在涉及穆斯林宗教活動、齋月計算等應用場景中，需要使用伊斯蘭曆。開發者可以根據具體需求選擇合適的伊斯蘭曆類型（如「islamic_civil」等）獲取日曆對象，進行相關時間處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.印度歷（Indian）、日本歷（Japanese）、波斯歷（Persian）等&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;這些曆法在各自的國家和地區有特定的應用場景。例如，印度歷在印度的宗教儀式、節日安排等方面有重要作用；日本歷在日本國內一些傳統活動和文化習俗中仍有使用；波斯歷在伊朗等國家有一定的應用。開發者在開發針對這些地區或與這些文化相關的應用時，可能需要使用相應的日曆類型來準確處理時間和日期信息。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、設置和應用不同日曆&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）獲取日曆對象&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.根據指定類型獲取&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;開發者可以使用&amp;nbsp;i18n.getCalendar()&amp;nbsp;方法，傳入相應的日曆類型標識符（如「zh - Hans」表示語言和地區，「gregory」表示公曆）來獲取特定類型的日曆對象。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="168" src="https://oscimg.oschina.net/oscnet/up-3fa85a6fcc3f2be162efe1c2e5214ef6815.png" width="1008" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.根據系統默認獲取&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;如果不指定日曆類型，直接調用&amp;nbsp;i18n.getCalendar()&amp;nbsp;方法將獲取系統默認的日曆對象，通常為用户設備設置的地區所對應的常用日曆類型（如在大多數地區為公曆）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）設置日曆屬性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.日期設置&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;使用日曆對象的&amp;nbsp;setTime()&amp;nbsp;或&amp;nbsp;set()&amp;nbsp;方法可以設置日曆的日期。setTime()&amp;nbsp;方法可以接受一個&amp;nbsp;Date 對象或時間戳作為參數，用於精確設置日曆的時間點。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="144" src="https://oscimg.oschina.net/oscnet/up-4b113937f3c50e153e3fc3947239f65734d.png" width="1084" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;set()&amp;nbsp;方法則可以分別設置年、月、日、時、分、秒等具體的日期和時間分量。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="62" src="https://oscimg.oschina.net/oscnet/up-a5c1df0d2709dded640b722b7973885eb3b.png" width="1036" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.時區設置&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;通過&amp;nbsp;setTimeZone()&amp;nbsp;方法可以設置日曆對象的時區。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="94" src="https://oscimg.oschina.net/oscnet/up-0be3e154bc09417bde70b3b13e000f6497c.png" width="830" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;時區設置對於處理跨時區的時間計算和顯示非常重要，確保應用在不同地區能夠正確顯示與當地時區相符的時間。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.其他屬性設置&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;還可以設置一週的起始日、一年中第一週的最小天數等屬性。例如，使用&amp;nbsp;setFirstDayOfWeek()&amp;nbsp;方法設置一週的起始日（如設置為星期一：calendar.setFirstDayOfWeek(1)），使用&amp;nbsp;setMinimalDaysInFirstWeek()&amp;nbsp;方法設置一年中第一週的最小天數（如設置為 3 天：calendar.setMinimalDaysInFirstWeek(3)）。這些設置可以根據不同地區的習慣和應用需求進行調整。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）使用日曆對象獲取信息&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.獲取日期和時間信息&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以通過日曆對象獲取年、月、日、時、分、秒等具體的日期和時間值。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="220" src="https://oscimg.oschina.net/oscnet/up-425a54deb8c9f9c1d72f0cec188955fbfe4.png" width="1076" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.獲取時區信息&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;使用&amp;nbsp;getTimeZone()&amp;nbsp;方法獲取日曆對象當前的時區設置。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="60" src="https://oscimg.oschina.net/oscnet/up-cdf03a21e9e0f7c14432e7ce56c76a6ef76.png" width="1020" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.獲取本地化名稱和其他屬性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以獲取日曆的本地化名稱，以便在應用中顯示給用户。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="54" src="https://oscimg.oschina.net/oscnet/up-8e5b16d826cbf1a35119651b7a8f07e4550.png" width="1220" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;還可以獲取日曆對象的一週起始日（getFirstDayOfWeek()）、一年中第一週的最小天數（getMinimalDaysInFirstWeek()）等屬性，用於應用的相關邏輯處理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、處理不同曆法下的時間與日期&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）日期轉換&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.公曆與農曆轉換&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在鴻蒙應用中，可以通過獲取公曆和農曆日曆對象，並設置相應的日期，實現公曆與農曆之間的轉換。例如，將公曆日期轉換為農曆日期：&lt;/p&gt; 
&lt;p&gt;&lt;img height="256" src="https://oscimg.oschina.net/oscnet/up-30e0b5b81fa3550f7f1450a1dccd53efce0.png" width="1130" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;反之，也可以將農曆日期轉換為公曆日期，只需將上述步驟中的設置順序顛倒即可。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.其他曆法之間的轉換（如有需要）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於其他曆法之間的轉換，原理類似。首先獲取源曆法和目標曆法的日曆對象，然後通過設置相同的時間點（可以使用時間戳或日期對象），在兩個日曆對象之間進行轉換，並獲取相應的日期和時間信息。但需要注意不同曆法的特點和計算規則，確保轉換的準確性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）時間計算與比較&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.同一曆法下的時間計算&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在同一曆法下，可以使用日曆對象的方法進行時間的加減計算。例如，在公曆日曆中計算當前日期加上 3 天的日期：&lt;/p&gt; 
&lt;p&gt;&lt;img height="264" src="https://oscimg.oschina.net/oscnet/up-f5d062b5a086cb14d181bf7f1ce2f459c7c.png" width="806" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以進行年、月、日、時、分、秒等不同時間單位的計算，根據應用需求靈活運用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.不同曆法下的時間比較&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;當需要比較不同曆法下的時間時，可以先將它們轉換為同一曆法（通常為公曆），然後再進行比較。例如，比較一個農曆日期和一個公曆日期的先後順序：&lt;img height="354" src="https://oscimg.oschina.net/oscnet/up-dfb8d84fc4f0e9b4122fa16636c2fbaec61.png" width="968" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）處理特殊時間點（如閏年、閏月）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.閏年判斷與處理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在公曆中，判斷閏年可以使用日曆對象的方法。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="242" src="https://oscimg.oschina.net/oscnet/up-3c6a191bda85385b68d341c8e7b4448a867.png" width="900" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在應用中，對於涉及閏年的時間計算（如計算一年的天數、每月的天數等），需要根據閏年規則進行特殊處理，以確保計算結果的準確性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.閏月處理（農曆）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;對於農曆中的閏月，在獲取農曆日期時需要注意。例如，獲取農曆月份時，需要判斷是否為閏月以及閏月的情況。可以通過農曆日曆對象的方法來獲取閏月相關信息，如判斷當前年份是否有閏月（hasLeapMonth()），獲取閏月的月份（getLeapMonth()）等。在顯示農曆日期或進行與農曆月份相關的計算時，根據閏月情況進行正確處理，避免出現錯誤。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、常見時間與日期處理問題及解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）時區相關問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;當應用在不同時區運行時，可能出現時間顯示不正確、日程安排時間混亂等問題。例如，用户在一個時區設置的日程提醒，在另一個時區查看時顯示的時間與預期不符；或者在跨時區的服務器通信中，時間數據的傳輸和處理出現錯誤。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;始終使用正確的時區設置。在獲取和顯示時間時，確保日曆對象的時區設置與用户所在時區一致。可以通過獲取系統時區或讓用户手動選擇時區來設置日曆對象的時區。在存儲和傳輸時間數據時，優先使用 0 時區標準時間（UTC 或 GMT），在顯示給用户時再根據用户所在時區進行轉換。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="318" src="https://oscimg.oschina.net/oscnet/up-03279e95c0577c321e9a2559e0986323062.png" width="1014" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）日期格式顯示問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;不同地區對日期格式有不同的偏好，應用可能無法正確顯示符合當地習慣的日期格式。例如，在某些地區習慣使用「DD/MM/YYYY」格式，而應用默認顯示為「YYYY - MM - DD」格式，導致用户理解困難。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;使用&amp;nbsp;DateTimeFormat&amp;nbsp;類來格式化日期顯示。根據用户所在地區的區域標識，選擇合適的日期格式樣式（如&amp;nbsp;dateStyle&amp;nbsp;設置為「full」「long」「medium」「short」等）進行格式化。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="196" src="https://oscimg.oschina.net/oscnet/up-8f6e2e0697a97e105e733f555d52dbb1b04.png" width="1230" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;可以根據用户的語言和地區設置動態調整日期格式，提供良好的用户體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）曆法轉換準確性問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在進行不同曆法之間的轉換時，可能出現轉換結果不準確的情況，例如農曆日期轉換為公曆日期後與實際情況有偏差，或者在處理複雜的歷法規則（如伊斯蘭曆的特殊計算方式）時出現錯誤。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;確保對各種曆法的計算規則有深入的理解，並使用可靠的算法進行轉換。鴻蒙系統提供的日曆處理功能已經經過了一定的測試和優化，但在複雜情況下，開發者可以參考相關的歷法標準和算法文檔，進行額外的驗證和優化。在處理曆法轉換時，進行充分的測試，包括邊界情況（如極端日期、特殊年份等）的測試，確保轉換結果的準確性。例如，對於農曆與公曆的轉換，可以與權威的農曆算法庫或在線轉換工具進行對比測試，驗證轉換結果的正確性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（四）時間計算邊界問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在進行時間計算（如加減天數、月數等）時，可能遇到邊界問題，如計算結果超出了有效範圍（如月份超過 12 或日期超過當月最大天數），導致程序出現錯誤或異常行為。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在進行時間計算前，先進行邊界檢查和處理。例如，在增加月份時，檢查計算後的月份是否超過 12，如果超過則進行相應的年份進位處理；在增加天數時，檢查計算後的日期是否超過當月最大天數，如果超過則進行月份進位和日期調整。可以使用日曆對象提供的方法獲取月份的最大天數（如&amp;nbsp;getActualMaximum()&amp;nbsp;方法），輔助進行邊界處理。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="390" src="https://oscimg.oschina.net/oscnet/up-cbd9d0cee06ec652f7e0b8e26588f578f7b.png" width="884" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（五）夏令時問題（如果涉及相關曆法）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在一些使用夏令時的地區，時間會在特定時間段內進行調整，這可能導致應用在處理時間時出現錯誤。例如，在夏令時開始或結束時，時間突然跳躍，應用如果沒有正確處理，可能會出現日程提醒時間錯誤、時間顯示異常等問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;鴻蒙系統會自動處理夏令時相關的時間調整，開發者需要確保在獲取和顯示時間時，使用的是系統正確處理後的時間。在存儲和傳輸時間數據時，同樣可以使用 0 時區標準時間（UTC 或 GMT），以避免夏令時帶來的影響。如果應用需要在界面上顯示是否處於夏令時狀態，可以通過日曆對象獲取相關信息（如某些日曆對象可能提供判斷當前是否處於夏令時的方法），並告知用户。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="288" src="https://oscimg.oschina.net/oscnet/up-f55cbf4166f46740da796e1956ff888b5da.png" width="872" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（六）本地化日期和時間顯示問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;除了日期格式外，不同地區對於日期和時間的本地化顯示還可能包括其他元素，如工作日名稱（週一至週日在不同語言中的表示）、上午/下午標識（12 小時制下）等。應用可能無法正確顯示這些本地化元素，或者顯示的內容不符合當地習慣。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;使用&amp;nbsp;DateTimeFormat&amp;nbsp;類時，通過設置相關參數來控制本地化元素的顯示。例如，設置&amp;nbsp;weekday&amp;nbsp;參數來顯示正確的工作日名稱（如「long」表示完整名稱，「short」表示縮寫名稱），在 12 小時制下設置&amp;nbsp;hourCycle&amp;nbsp;參數來顯示正確的上午/下午標識（如「h11」或「h12」）。例如：&lt;/p&gt; 
&lt;p&gt;&lt;img height="234" src="https://oscimg.oschina.net/oscnet/up-3dba7641866e37df1d1db232a47b7fd10e6.png" width="1360" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（七）時間和日期的兼容性問題（與舊版本或其他系統）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.問題描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;當應用需要與舊版本的鴻蒙系統或其他操作系統進行數據交互時，可能會遇到時間和日期格式不兼容的問題。例如，舊版本系統可能使用不同的時間戳表示方式，或者對日期格式的支持有限。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在數據傳輸和存儲時，儘量使用標準化的時間格式，如 0 時區標準時間（UTC 或 GMT）的時間戳。在與舊版本系統交互時，進行必要的格式轉換和兼容性處理。可以編寫專門的轉換函數，根據不同系統的特點進行時間和日期格式的轉換。例如，將舊版本系統中的特定日期格式轉換為鴻蒙 NEXT 系統能夠正確處理的格式後再進行後續操作。同時，在應用的更新和迭代過程中，考慮向後兼容性，確保在升級系統後，舊版本用户的數據能夠正常使用。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過對這些常見問題的深入理解和有效解決，開發者能夠更好地利用鴻蒙 NEXT 系統的日曆與曆法處理功能，打造出更加穩定、準確、符合用户需求的國際化應用。在處理時間和日期相關問題時，注重細節、充分測試、參考相關標準和最佳實踐，是確保應用在全球範圍內正常運行的關鍵。希望本文能夠為鴻蒙系統同路人在日曆與曆法處理方面提供有價值的參考和指導，助力應用在國際化道路上順利前行。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-bcc8d6f886dddba7829a0410377125d7e4e.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372434</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372434</guid>
      <pubDate>Tue, 16 Sep 2025 01:47:46 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>HarmonyOS NEXT 智能家居數據同步與管理方案：基於 WLAN 和 BLE 的多設備連接</title>
      <description/>
      <link>https://www.oschina.net/news/372431</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372431</guid>
      <pubDate>Tue, 16 Sep 2025 01:45:46 GMT</pubDate>
    </item>
    <item>
      <title>鴻蒙 NEXT 社交應用中的安全登錄與密碼管理實戰</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-sifou%26ha_sourceId%3D89000235" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-sifou&amp;amp;ha_sourceId=89000235&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截止目前 API12）在開發多語言電商平台方面的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在社交應用的開發中，安全登錄與密碼管理是至關重要的環節，直接關係到用户的隱私和數據安全。本文將以一個鴻蒙 NEXT&amp;nbsp;社交應用為例，詳細闡述如何實現安全登錄與密碼管理功能，涵蓋從項目背景到優化測試的全過程。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、項目背景與目標&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）社交應用需求分析&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;社交應用旨在為用户提供一個便捷的社交平台，用户可以在其中創建個人資料、添加好友、發佈動態、進行聊天等操作。為了實現這些功能，用户需要進行註冊和登錄。註冊時，用户需要提供個人信息，如用户名、密碼、郵箱或手機號碼等；登錄時，用户需要輸入正確的賬號和密碼才能訪問其個人資料和社交功能。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）安全登錄與密碼管理的重要性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在社交應用中，用户的個人信息和社交數據非常敏感，如聊天記錄、照片、好友列表等。如果登錄和密碼管理環節存在安全 xx，可能導致用户賬號被盜用，個人信息泄露，甚至遭受詐騙等風險。因此，確保安全登錄和密碼管理是保護用户權益和維護應用聲譽的關鍵。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、架構設計與技術選型&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）基於 Clean Architecture 的架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.表現層（Presentation Layer）&lt;/strong&gt;&lt;br&gt; 負責與用户進行交互，展示登錄界面、註冊界面、主界面等用户視圖。使用 ArkUI 組件構建界面，確保界面的美觀性和易用性。例如，在登錄界面中，使用 Text 組件顯示標題和提示信息，TextInput 組件用於接收用户輸入的賬號和密碼，Button 組件用於觸發登錄和註冊操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.應用層（Application Layer）&lt;/strong&gt;&lt;br&gt; 作為表現層和領域層之間的橋樑，協調業務邏輯的執行。處理用户的登錄、註冊請求，調用領域層的相應方法進行業務處理，並將處理結果返回給表現層。例如，當用户點擊登錄按鈕時，應用層負責收集用户輸入的賬號和密碼，驗證輸入格式，然後調用領域層的登錄方法進行實際的登錄驗證。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.領域層（Domain Layer）&lt;/strong&gt;&lt;br&gt; 包含社交應用的核心業務邏輯，如用户認證、密碼管理、好友關係處理等。在密碼管理方面，實現密碼的加密、驗證、保存和更新邏輯。領域層不依賴於具體的技術實現，只關注業務規則的實現，確保業務邏輯的獨立性和可測試性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4.數據層（Data Layer）&lt;/strong&gt;&lt;br&gt; 負責數據的存儲和獲取，與數據庫、網絡服務等進行交互。在本案例中，數據層負責存儲用户的賬號密碼、個人資料、好友列表等數據。使用鴻蒙 NEXT&amp;nbsp;的安全存儲 API 對密碼等敏感數據進行加密存儲，確保數據的安全性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）選擇鴻蒙 NEXT&amp;nbsp;安全功能組件&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.密碼自動填充服務&lt;/strong&gt;&lt;br&gt; 利用密碼自動填充服務，為用户提供便捷的登錄體驗。在登錄和註冊界面，根據輸入框的類型（USER_NAME、PASSWORD、NEW_PASSWORD）自動識別並填充已保存的賬號密碼，同時確保填充過程的安全性，通過系統的身份認證機制防止非法填充。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.應用加密&lt;/strong&gt;&lt;br&gt; 應用加密特性用於保護應用代碼和數據的安全。在應用上架時選擇加密，確保應用在設備上安裝和運行時，代碼文件和數據文件處於加密狀態，防止應用被反編譯和數據被竊取。解密密鑰存儲在系統的可信執行環境（TEE）中，增加了密鑰的安全性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、登錄模塊實現&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）界面設計與佈局（使用 ArkUI 組件）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.登錄界面整體佈局採用 Column 組件垂直排列元素。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;頂部使用 Text 組件顯示應用的 logo 和應用名稱，吸引用户注意力並增強品牌識別度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;中間部分包含兩個 TextInput 組件，分別用於輸入用户名和 PWD。設置 placeholder 屬性為提示信息，如「請輸入用户名」和「請輸入密碼」。為了提高用户體驗，密碼輸入框設置 showPasswordIcon 屬性為 true，顯示密碼可見性切換圖標。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;底部使用 Button 組件作為登錄按鈕，設置按鈕的文本為「登錄」，並添加適當的樣式，如背景顏色、邊框半徑等，使其在界面中突出顯示。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在登錄按鈕下方，添加一個 Text 組件用於顯示登錄錯誤信息，初始時隱藏，當登錄失敗時顯示相應的錯誤提示。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）集成密碼自動填充服務&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.在用户名和密碼輸入框的屬性設置中，確保 type 屬性分別為 InputType.USER_NAME 和 InputType.PASSWORD，並且 enableAutoFill 屬性為 true。這使得系統能夠識別輸入框並在合適的時機自動填充賬號密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.檢查輸入框的點擊事件，當用户首次點擊輸入框時，檢查密碼保險箱中是否保存了該應用的賬號密碼。如果有保存，系統自動彈出填充提示，用户選擇填充後，將相應的賬號密碼填充到輸入框中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.在登錄邏輯處理中，如果密碼自動填充成功，直接使用填充的密碼進行登錄驗證，無需用户再次手動輸入密碼，提高登錄效率。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）處理登錄邏輯與驗證&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.當用户點擊登錄按鈕時，首先獲取用户名和密碼輸入框中的值。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.對用户名和密碼進行格式驗證，檢查是否為空值、長度是否符合要求等。如果格式不正確，在界面上顯示相應的錯誤提示信息，阻止登錄流程繼續進行。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.調用領域層的登錄方法，將用户名和密碼傳遞給領域層進行驗證。在領域層中，使用密碼自動填充服務獲取密碼保險箱中保存的密碼（如果有），並與用户輸入的密碼進行比對。如果密碼匹配，進一步與服務器進行通信，驗證賬號的有效性（例如，檢查賬號是否被封禁、是否存在等）。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.根據服務器返回的驗證結果，如果登錄成功，跳轉到應用的主界面；如果登錄失敗，在界面上顯示錯誤信息，提示用户檢查賬號密碼並重試。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、註冊模塊實現&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）強密碼生成與推薦&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.在註冊界面的新密碼輸入框中，設置 passwordRules 屬性，按照密碼自動填充服務的規則指定強密碼生成規則。例如，設置「begin:[upper],special:[yes],len:[maxlen:32,minlen:12]」，要求生成的強密碼以大寫字母開頭，包含特殊字符，長度在 12 - 32 位之間。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.當用户點擊新密碼輸入框時，系統根據指定的規則自動生成一個強密碼，並在輸入框下方顯示推薦的強密碼。用户可以選擇使用推薦的密碼，也可以自行輸入符合要求的密碼。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）密碼保存與更新邏輯&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.當用户完成註冊信息填寫並點擊註冊按鈕時，首先對用户名、密碼等信息進行格式驗證，確保信息的完整性和正確性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.對密碼進行加密處理，使用鴻蒙 NEXT&amp;nbsp;的加密 API（如 hash 函數）將密碼轉換為密文形式。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.將加密後的密碼和用户名等信息保存到密碼保險箱中，以便下次登錄時自動填充。同時，將用户信息發送到服務器進行註冊，服務器存儲用户的註冊信息到數據庫中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4.在後續用户修改密碼時，按照類似的流程。先驗證用户身份（如通過輸入舊密碼進行驗證），然後生成新的加密密碼，更新密碼保險箱中的密碼記錄，並將更新後的密碼信息同步到服務器端的數據庫中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;五、密碼加密與安全存儲&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）應用加密特性的使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.在應用開發完成後，準備上架時，在應用市場的發佈設置中選擇應用加密選項。應用市場會對上架應用進行代碼加密處理，確保應用在設備上安裝後的代碼文件（.abc 文件）處於加密狀態。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.應用在啓動時，系統內核會根據需要對加密的代碼文件進行解密操作，解密後的明文代碼僅存在於內存中，不會存儲到設備上，有效防止了應用被反編譯和代碼被竊取。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）確保密碼數據安全&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.除了應用加密外，在數據層對密碼數據進行單獨的加密存儲。使用安全存儲 API，將密碼以密文形式存儲到本地數據庫或文件系統中。在存儲密碼時，結合用户的唯一標識（如用户名或用户 ID）作為加密密鑰的一部分，增加密碼的安全性，防止不同用户的密碼被同時 XX。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.在密碼傳輸過程中，使用安全的網絡協議（如 HTTPS），確保密碼在客户端和服務器之間傳輸時不被中間人竊取。對服務器端的密碼存儲也進行嚴格的安全措施，如採用加鹽哈希等方式存儲密碼，增加密碼 XX 的難度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;六、優化與測試&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）性能優化策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.減少不必要的計算和資源消耗&lt;/strong&gt;&lt;br&gt; 在密碼驗證和加密過程中，選擇高效的算法和數據結構，避免重複計算和內存浪費。例如，在密碼驗證時，使用哈希函數進行密碼比對，而不是直接比較明文密碼，減少計算量。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.優化界面渲染&lt;/strong&gt;&lt;br&gt; 對登錄和註冊界面進行優化，減少不必要的組件重繪和佈局計算。例如，使用懶加載技術，只在需要時加載和顯示界面元素，提高界面的初始加載速度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.網絡優化&lt;/strong&gt;&lt;br&gt; 在與服務器進行通信時，合理設置網絡請求的超時時間和重試策略，減少因網絡問題導致的用户等待時間。同時，優化數據傳輸格式，減少數據量，提高網絡傳輸效率。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）安全測試與 xx 修復&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.功能測試&lt;/strong&gt;&lt;br&gt; 對登錄、註冊、密碼修改等功能進行全面測試，包括正常流程和邊界情況。例如，測試用户名和密碼的最大長度限制、特殊字符的處理、密碼自動填充的準確性等。確保每個功能在各種情況下都能正常工作，不出現異常或錯誤。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.安全 xx 掃描&lt;/strong&gt;&lt;br&gt; 使用專業的安全掃描工具對應用進行掃描，檢查是否存在常見的安全 xx，如 SQL XX、跨站腳本 XX（XSS）、緩衝區溢出等。及時修復掃描發現的 xx，確保應用的安全性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.模擬 XX 測試&lt;/strong&gt;&lt;br&gt; 模擬各種 XX 場景，如密碼暴力 XX、中間人 XX、惡意軟件注入等，測試應用的安全防護機制是否有效。例如，使用暴力 XX 工具嘗試登錄不同賬號，檢查應用是否能夠檢測並阻止 XX，如限制密碼嘗試次數、鎖定賬號等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4.權限測試&lt;/strong&gt;&lt;br&gt; 檢查應用在獲取系統權限時是否合理，是否存在過度獲取權限的情況。確保密碼管理相關功能在獲取必要權限的同時，不會對用户隱私和設備安全造成威脅。例如，檢查應用是否只在必要時獲取讀取剪貼板權限，並且在使用後及時釋放權限。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過以上實戰案例，我們展示瞭如何在鴻蒙 NEXT&amp;nbsp;社交應用中實現安全登錄與密碼管理功能。從架構設計到功能實現，再到優化測試，每個環節都需要嚴格遵循安全規範，確保用户的密碼和個人信息得到充分保護，同時提供良好的用户體驗。在實際開發中，我們可以根據具體需求進一步擴展和完善這些功能，以滿足社交應用日益增長的安全和用户體驗需求。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-41f24d517b9f9f9b1f75daa41f0021f5081.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372430</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372430</guid>
      <pubDate>Tue, 16 Sep 2025 01:43:46 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>構建基於 HarmonyOS NEXT 的分佈式工業監控系統</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-sifou%26ha_sourceId%3D89000235" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-sifou&amp;amp;ha_sourceId=89000235&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截止目前 API12）的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;工業自動化和智能製造的發展，正推動着設備監控和遠程控制系統的普及。在工業場景中，確保設備實時監控和高效運行對安全和生產效率至關重要。&lt;strong&gt;HarmonyOS NEXT&lt;/strong&gt;&amp;nbsp;提供的&amp;nbsp;&lt;strong&gt;Distributed Service&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Kit&lt;/strong&gt;&amp;nbsp;(分佈式管理服務) 可以為開發者帶來一套高效、可靠的多設備分佈式管理方案。本文將基於 Distributed Service Kit 的核心功能，構建一個&lt;strong&gt;工業設備分佈式監控與遠程控制系統&lt;/strong&gt;，實現對工業設備的實時狀態監控、數據採集和遠程控制。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;需求分析&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在工業環境中，設備的實時監控和遠程控制主要包括以下需求：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;設備狀態監控：確保對設備狀態的實時監控和異常事件的迅速響應，避免生產事故。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;數據採集與傳輸：採集温度、濕度、功率等設備運行參數，並以低延時、高可靠性的方式傳輸到監控中心。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;遠程控制：在監控中心或指定終端設備上控制工廠中的設備，實現設備的啓動、停止和參數調整。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;安全與權限控制：工業系統中的數據通常涉及敏感信息，確保數據加密和權限控制對不同級別用户的訪問限制是必要的。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2. 系統架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;基於 HarmonyOS NEXT&amp;nbsp;的分佈式管理，我們可以設計一個多層次的工業設備監控架構。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.1 架構分層&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="298" src="https://oscimg.oschina.net/oscnet/up-f7445300cd4fa1437b751027d26cdfb6d6c.png" width="1446" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.2 多播數據傳輸方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;多播數據傳輸：為了在工業環境下的多個設備間實現狀態廣播與數據採集，使用 MDNS 服務和多播協議是一種低延時且高效的解決方案。多播數據傳輸方案尤其適用於局域網環境，可以節省網絡帶寬，提高數據同步的實時性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.3 安全與權限控制策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;工業環境中的權限管理相對複雜，分為多個角色和權限等級。具體策略如下：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;角色劃分：操作員、工程師、管理員各自有不同權限，確保在緊急情況或操作失誤時能夠限制對關鍵設備的訪問。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;數據加密：傳輸過程中對數據進行加密，防止外部竊取和數據被改。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;身份驗證：通過 Distributed Service Kit 提供的設備認證機制，在允許訪問前驗證每個設備的合法性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3. 實現方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.1 多設備監控&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在監控系統中，多設備監控功能通過分佈式設備發現、狀態監聽和數據傳輸來實現。以下代碼展示了通過 MDNS 服務發現並監聽各個設備的狀態：&lt;/p&gt; 
&lt;p&gt;&lt;img height="386" src="https://oscimg.oschina.net/oscnet/up-9c7373dec32d011009ed76f753ea6d51208.png" width="968" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;上面的代碼通過 MDNS 服務發現網絡中的設備，並且在&amp;nbsp;serviceFound&amp;nbsp;事件中記錄每個發現的設備。這樣，我們可以實現對設備的實時監控和快速管理。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.2 數據採集與傳輸&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過 Distributed Service Kit 中的 HTTP 請求接口，可以實現數據的採集和傳輸。例如在每個設備上，我們可以部署數據採集的定時任務，將實時數據通過 HTTP 傳輸到主控設備或監控中心：&lt;/p&gt; 
&lt;p&gt;&lt;img height="570" src="https://oscimg.oschina.net/oscnet/up-9f18adb705284f8ff8acc4b9b9aa5b07f02.png" width="1034" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;此代碼展示瞭如何在設備端定時採集併發送數據。通過這種方式，監控中心能夠實時接收到各設備的數據，從而在出現異常時及時響應。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;3.3 遠程指令控制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;遠程指令控制功能在工業監控系統中用於向設備下達操作指令。我們可以通過 HTTP 接口實現遠程設備的控制，如設備啓動、停止等操作。&lt;/p&gt; 
&lt;p&gt;&lt;img height="400" src="https://oscimg.oschina.net/oscnet/up-a8dc822646162e3bae4d6a05334f0152728.png" width="998" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在該示例中，監控中心向指定設備發送遠程指令，通過 JSON 數據傳遞控制參數。設備接收到指令後，根據請求的內容執行對應操作。此功能為工業設備的遠程管理提供了靈活的支持。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4. 穩定性與安全性優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在工業場景下，設備的穩定性和數據安全性尤為重要。為此，我們需要在系統中加入一些針對性優化措施。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4.1 斷網重連機制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;由於工業環境中網絡波動可能頻繁，系統應具備自動斷網重連的功能，以確保在網絡恢復後設備能自動恢復連接。例如，可以在 MDNS 服務和 HTTP 請求中加入重試機制，確保數據發送和狀態監控的穩定性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4.2 數據冗餘與緩存處理&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;為了提高數據的穩定性，我們可以在監控系統中設置數據冗餘。例如，在採集端使用本地緩存存儲未發送的數據，等網絡恢復後再統一發送，避免數據丟失。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;4.3 權限控制與數據加密&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;工業數據涉及高敏感性信息，必須在數據傳輸時加密，以防止外部 XX。可以使用 AES 或 RSA 加密算法確保數據傳輸安全。此外，對關鍵操作如設備啓動、停止設置多重驗證機制，確保系統安全。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;5. 總結&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;藉助&amp;nbsp;HarmonyOS NEXT&amp;nbsp;的 Distributed Service Kit，我們可以在工業環境中實現設備的實時監控與遠程控制。本文通過分層的架構設計、合理的權限管理和數據傳輸方案，構建了一個適用於工業場景的分佈式設備監控系統。不僅實現了對設備狀態的精準控制，還確保了系統的穩定性和安全性。在實際開發中，我們開發者可以根據具體需求進一步優化系統，為工業設備的高效管理與智能化運維提供強大支持。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;HarmonyOS NEXT&amp;nbsp;在工業物聯網的應用場景中具有廣泛潛力，通過對分佈式管理功能的深度利用，可以構建出更多創新性應用，未來可在更多工業場景中持續探索其價值。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-4b27b0ac60bdb6d74b790409e0a7279d674.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372429</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372429</guid>
      <pubDate>Tue, 16 Sep 2025 01:42:46 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>HarmonyOS NEXT 應用性能優化實戰</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;踏入鴻蒙世界的敲門磚，標誌着您在技術征途上的全新起點，提升就業競爭力，獲得行業認可，點亮職業成長先機，快人一步搶佔未來應用開發賽道！&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-sifou%26ha_sourceId%3D89000235" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-sifou&amp;amp;ha_sourceId=89000235&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探討華為鴻蒙 HarmonyOS NEXT 系統（截至目前 API12）中應用性能優化的技術細節，基於實際開發實踐進行總結。主要作為技術分享與交流載體，難免錯漏，歡迎各位同仁提出寶貴意見和問題，以便共同進步。本文為原創內容，任何形式的轉載必須註明出處及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、性能評估指標與工具&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）關鍵性能評估指標&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;CPU 使用率&lt;/strong&gt;&lt;br&gt; CPU 使用率是衡量應用在運行過程中對 CPU 資源佔用情況的重要指標。一個高效的 HarmonyOS NEXT 應用應該在保證功能正常運行的前提下，儘量降低 CPU 使用率。例如，在一個實時通信應用中，如果 CPU 使用率過高，可能會導致通話卡頓、消息發送延遲等問題。正常情況下，應用在空閒狀態時 CPU 使用率應接近 0%，在高負載情況下，如進行復雜計算或大量數據處理時，CPU 使用率也不應長時間超過 80%。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;內存佔用&lt;/strong&gt;&lt;br&gt; 內存佔用直接影響應用的穩定性和響應速度。如果應用佔用過多內存，可能會導致系統頻繁進行內存回收，從而引發卡頓甚至應用崩潰。對於 HarmonyOS NEXT 應用，需要關注其在不同場景下的內存佔用情況，如啓動時、運行一段時間後以及執行特定操作時。一般來説，一個普通應用的內存佔用應該在合理範圍內，例如，小型應用內存佔用應控制在幾十兆以內，大型應用如遊戲或圖形處理應用，內存佔用也應儘量控制在幾百兆以內，避免過度佔用系統資源。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;幀率&lt;/strong&gt;&lt;br&gt; 在涉及動畫或界面交互的應用中，幀率是評估用户體驗的關鍵指標。較高的幀率意味着更流暢的動畫和交互效果。HarmonyOS NEXT 應用應儘量保持穩定的幀率，特別是在遊戲、視頻播放等場景中。理想情況下，幀率應達到 60fps（每秒 60 幀）以上，以提供絲滑的視覺體驗。如果幀率過低，用户會明顯感覺到界面卡頓、動畫不連貫，嚴重影響應用的可用性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）華為提供的性能分析工具及使用方法&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;DevEco Insight&lt;/strong&gt;&lt;br&gt; DevEco Insight 是華為專門為 HarmonyOS NEXT 應用開發提供的性能分析工具。它可以幫助開發者全面瞭解應用的性能狀況。使用方法如下：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;首先，在 DevEco Studio 中打開項目，然後點擊菜單欄中的「Analyze」選項，2.選擇「Insight」啓動工具。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在 DevEco Insight 界面中，可以選擇要分析的設備和應用進程。例如，連接手機設備後，從設備列表中選擇正在運行的目標應用進程。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;工具提供了多種性能分析功能，如 CPU 分析、內存分析、幀率分析等。點擊相應的分析選項卡，即可查看應用在該方面的性能數據。例如，在 CPU 分析選項卡中，可以看到應用各個線程的 CPU 使用率隨時間的變化曲線，通過分析曲線可以找出 CPU 佔用較高的時間段和代碼邏輯。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;HiTrace&lt;br&gt; HiTrace 是另一個強大的性能分析工具，主要用於分佈式應用的性能分析。對於利用 HarmonyOS NEXT 分佈式能力的應用，HiTrace 可以幫助開發者追蹤跨設備任務的執行流程和性能瓶頸。使用步驟如下：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在項目中集成 HiTrace 庫，根據官方文檔進行配置。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;在代碼中使用 HiTrace 提供的 API 標記關鍵代碼段，以便在分析時能夠清晰地看到任務在不同設備間的流轉和耗時情況。例如，在分佈式任務開始和結束的地方分別調用 HiTrace 的開始和結束標記函數。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;啓動應用後，通過命令行工具或在 DevEco Studio 中啓動 HiTrace 分析，查看分佈式任務的性能數據，包括任務在各個設備上的執行時間、數據傳輸時間等，從而找出性能優化的關鍵點。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（三）不同性能分析工具優缺點對比&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;DevEco Insight 的優點和缺點&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;優點：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;集成在開發環境中，使用方便，無需額外安裝複雜的配置環境。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;提供了全面的性能分析功能，涵蓋了 CPU、內存、幀率等多個方面，能夠滿足大多數應用性能分析需求。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;可以實時監測應用性能，開發者可以在應用運行過程中即時查看性能數據，快速定位問題。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;缺點：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;對於分佈式應用的性能分析，雖然可以提供一定的支持，但在跨設備任務追蹤的深度和詳細程度上不如 HiTrace。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;分析大型應用時，可能會佔用一定的系統資源，對應用本身的性能產生一定影響。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;HiTrace 的優點和缺點&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;優點：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;專注於分佈式應用的性能分析，能夠詳細追蹤任務在不同設備間的執行流程，對於優化分佈式應用的性能非常有效。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;可以提供更精準的性能數據，幫助開發者深入瞭解分佈式任務中的性能瓶頸所在。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;缺點：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;使用相對複雜，需要在項目中集成庫並進行代碼標記，對於不熟悉的開發者可能需要一定的學習成本。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;功能相對單一，主要針對分佈式性能分析，如果僅需要分析應用的本地性能，可能不是最佳選擇。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、內存管理與優化策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）內存管理機制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;HarmonyOS NEXT 的內存管理機制旨在高效地分配和回收內存資源，確保應用的穩定運行。它採用了自動內存管理和手動內存管理相結合的方式。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;自動內存管理&lt;/strong&gt;&lt;br&gt; 自動內存管理主要通過垃圾回收（GC）機制實現。當應用中的對象不再被引用時，GC 會自動回收其佔用的內存空間。例如，在一個函數中創建了一個臨時對象，當函數執行完畢後，如果該對象沒有被其他地方引用，GC 就會在適當的時候回收它的內存。這種方式大大減輕了開發者手動管理內存的負擔，但也需要開發者注意對象的引用關係，避免出現內存泄漏。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;手動內存管理（可選）&lt;/strong&gt;&lt;br&gt; 對於一些對性能要求極高或內存使用場景特殊的應用，HarmonyOS NEXT 也提供了手動內存管理的接口。開發者可以手動申請和釋放內存，以更精準地控制內存的使用。但手動內存管理需要開發者具備更高的內存管理技能，否則容易引發內存錯誤。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）內存優化策略及代碼示例&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;對象複用&lt;/strong&gt;&lt;br&gt; 對象複用是一種有效的內存優化策略。例如，在一個列表視圖中，每個列表項的佈局和樣式可能相同。我們可以創建一個對象池，預先創建一定數量的列表項對象，當需要顯示新的列表項時，從對象池中獲取已有的對象，而不是每次都創建新的對象。以下是一個簡單的對象池實現代碼示例（簡化版）：&lt;/p&gt; 
&lt;p&gt;&lt;img height="732" src="https://oscimg.oschina.net/oscnet/up-51b338b5d54d15c149d7b75439c1a5aebe7.png" width="868" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="468" src="https://oscimg.oschina.net/oscnet/up-91641197658c75067171c985df4b87b182d.png" width="842" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在這個示例中，通過對象池實現了列表項對象的複用，減少了頻繁創建和銷燬對象帶來的內存開銷。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;內存泄漏檢測&lt;/strong&gt;&lt;br&gt; 內存泄漏是影響應用性能和穩定性的嚴重問題。HarmonyOS NEXT 提供了一些工具和技術來檢測內存泄漏。例如，在 DevEco Insight 中，可以使用內存分析功能來查看對象的引用關係和內存佔用情況。如果發現某個對象在長時間內一直佔用內存且沒有被釋放，可能存在內存泄漏。另外，開發者也可以在代碼中手動添加一些內存監測邏輯，如記錄對象的創建和銷燬時間，通過對比來判斷是否存在內存泄漏。以下是一個簡單的內存監測代碼片段：&lt;/p&gt; 
&lt;p&gt;&lt;img height="808" src="https://oscimg.oschina.net/oscnet/up-cb1c3cd8e2231430e5d75875fd7df87c91a.png" width="986" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="322" src="https://oscimg.oschina.net/oscnet/up-14061e41e3cca800d8c23988cb4379b13e2.png" width="894" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）內存優化對應用運行效率的影響&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;有效的內存優化可以顯著提高應用的運行效率。通過對象複用，減少了內存分配和回收的次數，降低了 CPU 的負載，使得應用在處理大量數據或頻繁創建對象的場景下能夠更加流暢地運行。例如，在一個圖片加載應用中，如果不進行對象複用，每次加載新圖片都創建新的圖片對象，會導致內存頻繁波動，CPU 使用率升高，應用可能出現卡頓。而採用對象複用後，內存佔用更加穩定，CPU 使用率降低，圖片加載速度更快，用户體驗得到明顯改善。內存泄漏檢測和修復可以避免內存不斷被佔用，防止應用因內存耗盡而崩潰，保證了應用的長期穩定運行。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、啓動速度與響應時間優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）影響啓動速度和響應時間的因素&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;代碼初始化邏輯&lt;/strong&gt;&lt;br&gt; 應用啓動時，需要進行一系列的初始化操作，如加載配置文件、初始化數據庫連接、註冊系統服務等。如果這些初始化邏輯過於複雜或耗時，會嚴重影響啓動速度。例如，一個應用在啓動時需要從網絡加載大量的配置數據，如果沒有進行優化，可能會導致啓動過程卡頓，用户需要等待較長時間才能進入應用主界面。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;資源加載&lt;/strong&gt;&lt;br&gt; 加載圖片、音頻、字體等資源也會佔用啓動時間。如果資源文件過大或加載方式不合理，會使啓動過程變慢。比如，在一個遊戲應用中，如果在啓動時一次性加載所有高清圖片和音效文件，會導致啓動速度明顯下降。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.&amp;nbsp;&lt;strong&gt;主線程阻塞&lt;/strong&gt;&lt;br&gt; 如果在主線程中執行耗時操作，如複雜的計算、網絡請求等，會導致應用響應遲緩。因為主線程負責處理用户界面的更新和交互，一旦被阻塞，用户的操作將無法及時得到響應。例如，在一個電商應用中，如果在主線程中進行商品數據的同步更新，當用户點擊按鈕時，按鈕的響應會延遲，給用户帶來不好的體驗。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）優化方法及代碼示例&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1.&amp;nbsp;&lt;strong&gt;懶加載&lt;/strong&gt;&lt;br&gt; 懶加載是一種延遲加載資源的策略。對於那些不是立即需要的資源，在用到的時候再進行加載。例如，在一個包含多個頁面的應用中，只有當用户切換到某個頁面時，才加載該頁面所需的圖片和數據。以下是一個簡單的懶加載圖片的代碼示例：&lt;/p&gt; 
&lt;p&gt;&lt;img height="692" src="https://oscimg.oschina.net/oscnet/up-563c5d538fb4c74863e25f5db3d6bff0dc1.png" width="1166" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在這個示例中，圖片只有在組件顯示時才會被加載，而不是在應用啓動時就加載所有圖片，從而縮短了啓動時間。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2.&amp;nbsp;&lt;strong&gt;異步任務處理&lt;/strong&gt;&lt;br&gt; 將耗時的任務放在異步線程中執行，避免主線程阻塞。例如，在應用啓動時進行數據初始化，可以使用異步任務來完成。以下是一個使用異步任務進行數據庫初始化的代碼示例：&lt;/p&gt; 
&lt;p&gt;&lt;img height="732" src="https://oscimg.oschina.net/oscnet/up-e57f141e2b13a2cc2a595a5c4604033c620.png" width="898" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通過將數據庫初始化放在異步任務中執行，應用啓動時主線程可以繼續處理其他事務，如顯示啓動界面等，提高了啓動速度和響應速度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）優化前後性能數據對比&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以一個實際的 HarmonyOS NEXT 應用為例，在優化前，應用的啓動時間平均為 3 秒，在進行了懶加載和異步任務處理等優化措施後，啓動時間縮短到了 1.5 秒左右，啓動速度提升了近 50%。在響應時間方面，優化前，點擊按鈕後界面更新的平均延遲時間為 500 毫秒，優化後縮短到了 100 毫秒以內，響應速度明顯加快。這些數據充分説明瞭啓動速度和響應時間優化對於應用性能提升的重要性。希望通過這些優化方法和實際案例，能幫助大家在 HarmonyOS NEXT 應用開發中打造出性能卓越的應用。要是在性能優化過程中遇到啥問題，記得來找我這個「性能優化大師」哦！哈哈！&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（轉載自 51CTO，作者：SameX）&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-a85d61cbdba99262993e266a04798f63325.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372428</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372428</guid>
      <pubDate>Sun, 14 Sep 2025 01:39:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>BentoML 發佈 llm-optimizer，LLM 推理和性能優化開源工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;BentoML 近日發佈了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bentoml.com%2Fblog%2Fannouncing-llm-optimizer" target="_blank"&gt;llm-optimizer&lt;/a&gt;，這是一個用於基準測試和優化 LLM 推理的開源工具。它支持多個推理框架，併兼容任何開源 LLM。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-4e424ad07868e5d205d0e99984f6e8bf1b4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;llm-optimizer 旨在將 LLM 性能優化的繁瑣手動工作自動化。您可以在一個地方運行結構化實驗、應用約束並可視化結果，只需幾個命令即可。&lt;/p&gt; 
&lt;p&gt;使用示例&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;llm-optimizer estimate \
  --model meta-llama/Llama-3.1-8B-Instruct \
  --input-len 1024 \
  --output-len 512 \
  --gpu A100 \
  --num-gpus 2&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;預期輸出&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;=== Configuration ===
Model: meta-llama/Llama-3.1-8B-Instruct
GPU: 2x A100
Precision: fp16
Input/Output: 1024/512 tokens
Target: throughput

Fetching model configuration...
Model: 8029995008.0B parameters, 32 layers

=== Performance Analysis ===
Best Latency (concurrency=1):
  TTFT: 43.1 ms
  ITL: 2.6 ms
  E2E: 1.39 s

Best Throughput (concurrency=512):
  Output: 18873.3 tokens/s
  Input: 23767.8 tokens/s
  Requests: 14.24 req/s
  Bottleneck: Memory

=== Roofline Analysis ===
Hardware Ops/Byte Ratio: 142.5 ops/byte
Prefill Arithmetic Intensity: 52205.5 ops/byte
Decode Arithmetic Intensity: 50.9 ops/byte
Prefill Phase: Compute Bound
Decode Phase: Memory Bound

=== Concurrency Analysis ===
KV Cache Memory Limit: 688 concurrent requests
Prefill Compute Limit: 8 concurrent requests
Decode Capacity Limit: 13 concurrent requests
Theoretical Overall Limit: 8 concurrent requests
Empirical Optimal Concurrency: 16 concurrent requests

=== Tuning Commands ===

--- SGLANG ---
Simple (concurrency + TP/DP):
  llm-optimizer --framework sglang --model meta-llama/Llama-3.1-8B-Instruct --gpus 2 --host 127.0.0.1 --server-args "tp_size*dp_size=[(1, 2), (2, 1)]" --client-args "num_prompts=1000;dataset_name=sharegpt;random_input=1024;random_output=512;num_prompts=1000;max_concurrency=[256, 512, 768]" --output-dir tuning_results --output-json tuning_results/config_1_sglang.json
Advanced (additional parameters):
  llm-optimizer --framework sglang --model meta-llama/Llama-3.1-8B-Instruct --gpus 2 --host 127.0.0.1 --server-args "tp_size*dp_size=[(1, 2), (2, 1)];chunked_prefill_size=[1434, 2048, 2662];schedule_conservativeness=[0.3, 0.6, 1.0];schedule_policy=fcfs" --client-args "num_prompts=1000;dataset_name=sharegpt;random_input=1024;random_output=512;num_prompts=1000;max_concurrency=[256, 512, 768]" --output-dir tuning_results --output-json tuning_results/config_1_sglang.json

--- VLLM ---
Simple (concurrency + TP/DP):
  llm-optimizer --framework vllm --model meta-llama/Llama-3.1-8B-Instruct --gpus 2 --host 127.0.0.1 --server-args "tensor_parallel_size*data_parallel_size=[(1, 2), (2, 1)]" --client-args "num_prompts=1000;dataset_name=sharegpt;random_input=1024;random_output=512;num_prompts=1000;max_concurrency=[256, 512, 768]" --output-dir tuning_results --output-json tuning_results/config_1_vllm.json
Advanced (additional parameters):
  llm-optimizer --framework vllm --model meta-llama/Llama-3.1-8B-Instruct --gpus 2 --host 127.0.0.1 --server-args "tensor_parallel_size*data_parallel_size=[(1, 2), (2, 1)];max_num_batched_tokens=[1024, 1177, 1331]" --client-args "num_prompts=1000;dataset_name=sharegpt;random_input=1024;random_output=512;num_prompts=1000;max_concurrency=[256, 512, 768]" --output-dir tuning_results --output-json tuning_results/config_1_vllm.json&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;該工具解決了 LLM 部署中的一個常見挑戰：在不依賴手動試錯的情況下，為延遲、吞吐量和成本找到最佳配置。llm-optimizer 為探索 LLM 性能景觀提供了一種結構化的方式。它通過實現系統基準和跨可能配置的自動搜索，消除了重複的猜測。&lt;/p&gt; 
&lt;p&gt;開源地址：&lt;em&gt;https://github.com/bentoml/llm-optimizer&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372359/bentoml-llm-optimizer</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372359/bentoml-llm-optimizer</guid>
      <pubDate>Sat, 13 Sep 2025 11:26:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>北京中小學全面開設人工智能通識課</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FecvZHwNwJg6PafacKW5iEg" target="_blank"&gt;據報道&lt;/a&gt;，自 2025 年秋季學期起，北京市 1400 餘所中小學全面開設人工智能通識教育課程，覆蓋 183 萬餘名中小學生，成為全國首個省級全域推進人工智能通識教育的地區。&lt;/p&gt; 
&lt;p&gt;報道稱，課程資源方面，首批覆蓋全學段的 160 套市級課程資源已上線，每套資源包含 15 分鐘左右的核心教學視頻、教學指南及活動任務單；&lt;/p&gt; 
&lt;p&gt;通過「視頻 + 工具 + 任務單」模式滿足教師授課、備課及學生自主學習 3 類場景需求，搭建 AI「課程超市」和「應用超市」，為課堂教學提供基礎支撐。&lt;/p&gt; 
&lt;p&gt;市教委相關負責人表示，北京市將持續優化人工智能教育課程資源，結合教學反饋迭代更新；開展應用示範校評選和優秀案例推廣，形成可複製經驗。&lt;/p&gt; 
&lt;p&gt;同時，負責人還表示，要深化「京娃」系列智能體研發，拓展「AI + 教育」應用場景等，以首批課程資源為起點，力爭將北京中小學人工智能教育打造成全國標杆，真正讓數字技術賦能每一位師生，為培養擔當民族復興大任的時代新人奠定堅實基礎。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372356</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372356</guid>
      <pubDate>Sat, 13 Sep 2025 11:09:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI Evals 新增原生音頻輸入和評估功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 的 Evals 工具現已支持原生音頻輸入和音頻評分，無需文本轉錄即可直接評估模型的音頻響應。這項新功能極大簡化了語音識別和生成模型的評估過程，使得開發者能夠更高效地測試和優化其音頻應用。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9522f36b3f1e768600ee99a85f02e860156.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;通過使用 Evals 的原生音頻支持，用户可以上傳音頻文件，並直接在平台上進行性能評估。這一改進不僅減少了數據處理的複雜性，還提高了評估結果的準確性和可靠性。對於需要頻繁測試和調整音頻模型的開發者來説，這是一個重要的進步。&lt;/p&gt; 
&lt;p&gt;應用場景包括但不限於：智能語音助手的開發與優化、語音識別系統的性能評估，以及音頻內容生成的質量控制。&lt;/p&gt; 
&lt;p&gt;如需瞭解更多關於如何使用 Evals 的新功能，參考官方 Cookbook 指南：&lt;em&gt;https://cookbook.openai.com/examples/evaluation/use-cases/evalsapi_audio_inputs&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372353</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372353</guid>
      <pubDate>Sat, 13 Sep 2025 11:01:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>微軟研究院發佈 RenderFormer，基於 Transformer 的神經渲染模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微軟研究院近日發佈了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2Fresearch%2Fblog%2Frenderformer-how-neural-networks-are-reshaping-3d-rendering%2F" target="_blank"&gt;RenderFormer&lt;/a&gt;，這是一個純機器學習的神經架構，旨在通過機器學習完全替代傳統圖形計算，實現全功能 3D 渲染，無需傳統圖形計算。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-973c5649e34320d01d3888bfd65c9a319d3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-2008d874aeabcfe09955bf61fd0b256737b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;RenderFormer 整體架構如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;雙分支 Transformer 架構：分為視角無關（View-Independent）和視角相關（View-Dependent）兩個階段。視角無關階段通過自注意力機制捕捉陰影、漫反射等全局光照效果；視角相關階段通過交叉注意力機制建模可見性、反射等視角依賴效果。&lt;/li&gt; 
 &lt;li&gt;相對空間位置編碼：創新性地採用改進的旋轉位置編碼（RoPE），基於三角形的 3D 空間位置而非序列索引，保持場景平移不變性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-79adce0f291f87580ef10043c6928fce017.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，RenderFormer 是首個證明神經網絡能學習完整圖形渲染流水線的模型，支持任意 3D 場景和全局光照效果，無需依賴光線追蹤或光柵化技術。它通過三角形令牌（triangle tokens）表示 3D 場景，編碼空間位置、表面法線及材質屬性，結合光線束令牌（ray bundle tokens）處理視角信息，實現端到端渲染。該成果已獲 SIGGRAPH 2025 接收並開源。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://microsoft.github.io/renderformer&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372349</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372349</guid>
      <pubDate>Sat, 13 Sep 2025 10:38:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>亞馬遜雲科技否認大中華區裁員</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;9 月 15 日，有消息稱亞馬遜雲科技（AWS）大中華區計劃裁員，預計將發生在 9 月底至 10 月之間，或涉及超 20% 的員工，目前 AWS 大中華區人員規模不到 1700 人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;對此，亞馬遜雲科技發言人表示：「相關報道嚴重失實，亞馬遜雲科技持續在中國積極招聘人才，為中國企業提供全球領先、安全可靠的雲技術。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;今年 7 月，亞馬遜發佈了 2025 年第二季度財報，二季度營收同比增長 13% 至 1677 億美元；淨利潤 181.64 億美元，與上年同期的 134.85 億美元相比大幅增長 35%；稀釋後每股收益為 1.68 美元。亞馬遜已承諾今年在 AI 領域的投資將高達 1000 億美元。亞馬遜 AWS 雲業務在二季度營收 308.73 億美元，略高於市場預期的 308 億美元，同比增長 17%，增速與上一季度持平。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;AWS 的增速仍低於其主要競爭對手微軟雲和谷歌雲。在電話會上，亞馬遜 CEO 安迪·賈西試圖向分析師保證，和其雲計算競爭對手相比，AWS 一直保持着「相當重要」的領導地位，他對公司 AI 產品的發展感到樂觀：「我們 AWS 領域的業務規模比其他公司的雲業務大得多，我認為第二位的規模約為 AWS 的 65%。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;官網資料顯示，亞馬遜雲科技於 2013 年進入中國，通過本地合作伙伴北京光環新網科技股份有限公司（光環新網）和寧夏西雲數據科技有限公司（西雲數據），提供與全球一致的雲服務體驗和安全級別，API（應用程序接口）、SDK（軟件開發工具包）、CLI（命令行工具）與全球其他地區相同，開發者無需額外適配，即可實現全球化應用部署。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，亞馬遜雲科技在中國雲計算市場面臨激烈的競爭。根據研究機構 Canalys 的報告顯示，2025 年第一季度中國大陸的雲計算支出達到 116 億美元，前三名阿里雲、華為雲和騰訊雲的市場份額分別為 33%、 18% 和 10%，三家巨頭合計佔領了整個中國雲計算市場的 61%。（澎湃新聞）&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372348</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372348</guid>
      <pubDate>Sat, 13 Sep 2025 10:31:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Roo Code 上線遠程連接功能 Roomote Control</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;AI 編程工具 Roo Code 近期推出了名為 &lt;strong&gt;Roomote Control&lt;/strong&gt; 的新功能，旨在提升用户在 VS Code 中的編碼體驗。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0915/181541_VqYx_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Froo_code%2Fstatus%2F1966280158031335625" target="_blank"&gt;據介紹&lt;/a&gt;，Roomote Control 允許用户通過手機或瀏覽器遠程連接和控制本地 VS Code 環境中的 Roo Code。該工具直接在用户的系統上運行，確保代碼庫保持私有和完全安全。&lt;/p&gt; 
&lt;p&gt;用户可以在遠程設備上啓動新任務、選擇模式和模型，所有更新會實時同步回本地 IDE。即使暫時離開，用户也可以讓任務在後台繼續運行，提高工作效率。&lt;/p&gt; 
&lt;p&gt;Roomote Control 作為 Roo Code Pro 訂閲的一部分，提供 14 天的免費試用期，之後每月收費 20 美元。&lt;/p&gt; 
&lt;p&gt;使用方法如下&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;連接步驟&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;在 Roo Code 中導航到 Cloud 菜單並點擊「Connect」。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;登錄 Roo Code 網站並在 IDE 中啓用遠程控制。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在瀏覽器中訪問 Roo Code Cloud，確保遠程切換已啓用。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;功能體驗&lt;/strong&gt;：用户可以在遠程部分查看 IDE 的開放目錄，點擊加號圖標啓動新任務，輸入提示並觀察任務的執行。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通過 Roomote Control，Roo Code 進一步擴展了其作為 AI 驅動的自主編碼代理的功能，使用户能夠隨時隨地高效地管理編碼任務。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372344</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372344</guid>
      <pubDate>Sat, 13 Sep 2025 10:17:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>全球首個 AI 政府部長來了</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;綜合環球網等媒體報道，阿爾巴尼亞總理埃迪·拉馬當地時間 11 日宣佈新內閣名單，&lt;strong&gt;&lt;strong&gt;其中包括任命一個名為「迪埃拉」（在阿爾巴尼亞語中意為「太陽」）的人工智能擔任公共採購部長&lt;/strong&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;&lt;strong&gt;這也使得阿爾巴尼亞成為世界上第一個任命非實體的人工智能擔任政府部長的國家。&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="254" src="https://oscimg.oschina.net/oscnet/up-01dfab898dc0952c33998cbf206a06145f0.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2025 年 5 月，拉馬歷史性地第四次當選阿爾巴尼亞總理。今年夏天，拉馬曾暢想有朝一日該國能有一位數字部長，甚至是一位人工智能總理，不過當時幾乎沒人想到這一天會這麼快到來。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;拉馬在週四宣佈新內閣的講話中表示：「迪埃拉是第一位並非以實體形式存在，而是由人工智能虛擬生成的內閣成員。」&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;拉馬還表示，招標決定權將從各部手中逐步移交給「迪埃拉」，「迪埃拉」將審查政府與私營公司簽訂的每一份招標合同，並客觀評估每一份招標合同的優點。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;拉馬強調，「迪埃拉」將幫助阿爾巴尼亞「成為一個公共招標 100% 沒有腐敗的國家」。長期以來，授予此類合同一直是這個巴爾幹國家腐敗醜聞的根源。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;這種形象對阿爾巴尼亞加入歐盟的夢想造成了打擊。阿爾巴尼亞目前是歐盟的候選國，拉馬希望在 2030 年之前成為歐盟正式成員國，但政治分析人士稱，這一目標過於雄心勃勃。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;拉馬還稱，將有一個專用部門為「迪埃拉」提供支持，並推動人工智能在政府各部門的應用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;不過，阿爾巴尼亞政府並未提供有關「迪埃拉」可能會受到何種人類監督的詳細信息，也沒有就有人可能操縱這個人工智能機器人的風險作出説明。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「迪埃拉」此前已經為阿爾巴尼亞公民所知，她的虛擬形象是一個身穿阿爾巴尼亞傳統服飾的女子，於今年年初在電子平台作為一款人工智能虛擬助手上線，該平台允許公民以數字方式訪問幾乎所有政府服務。「迪埃拉」負責幫助公民和企業獲取政府文件，通過語音指令提供幫助，以及簽發帶有電子印章的文件。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/372341</link>
      <guid isPermaLink="false">https://www.oschina.net/news/372341</guid>
      <pubDate>Sat, 13 Sep 2025 10:11:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
