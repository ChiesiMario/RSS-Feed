<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 繁體中文（香港）</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-hk</language>
    <lastBuildDate>Thu, 26 Jun 2025 07:44:39 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>龍芯發佈新一代處理器，進軍服務器和 AI 處理器市場​​​​​​​</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;「龍芯中科」在今天舉辦的 2025 龍芯產品發佈暨用户大會上發佈了基於國產自主指令集龍架構（LoongArchTM）研發的服務器處理器龍芯 3C6000 系列芯片、工控領域及移動終端處理器龍芯 2K3000/3B6000M 芯片，以及相關整機和解決方案。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/153553_ZF0H_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，3C6000 系列服務器 CPU 採用自主指令系統龍架構，於 2024 年上半年流片成功。3C6000 單硅片 16 核 32 線程，可通過自研的龍鏈接口通過多硅片封裝形成 32 核 64 線程的 3C6000/D（又稱 3D6000）及 60/64 核 120/128 線程的 3C6000/Q（又稱 3E6000）。&lt;/p&gt; 
&lt;p&gt;根據中國電子技術標準化研究院賽西實驗室測試報告，單路 3C6000/S 服務器在 2.2GHz 運行 SPEC CPU 2017 單核單線程定/浮點分值為 5.56/6.93 分，多核定/浮點分值為 73.2/58.5 分；雙路 3C6000/D 服務器在 2.1GHz 運行 SPEC CPU 2017 多核定/浮點分值為 284/261 分；雙路 3C6000/Q 服務器在 2.1GHz 運行 SPEC CPU 2017 多核定/浮點分值為 450/283 分；四路 3C6000/D 服務器在 2.1GHz 運行 SPEC CPU 2017 多核定/浮點分值為 547/412 分。上述 3C6000/S、3C6000/D 實測單核/多核性能分別達到 Intel 公司 2021 年上市的 16 核至強 Silver 4314、32 核至強 Gold 6338 的水平，64 核 3C6000/Q 性能超過 40 核至強 Platinum 8380 的水平。&lt;/p&gt; 
&lt;p&gt;結合 Intel 公司第三代至強可擴展架構服務器芯片出貨情況，3C6000 系列服務器 CPU 綜合性能達到 2023 年市場主流產品水平。&lt;/p&gt; 
&lt;p&gt;2K3000/3B6000M 工控/終端 CPU 採用自主指令系統龍架構，面向工控和終端（筆記本、雲終端等）應用，於 2024 年底流片成功。3B6000M 集成 8 個 LA364E 處理器核，主頻 2.5GHz 時實測 SPEC CPU 2006 Base 單核定點分值達到 30 分；集成第二代自研 GPGPU 核心 LG200 和獨立硬件編解碼模塊，4K 高清視頻處理性能達到每秒 60 幀；集成安全處理器提供可信支持和密碼服務，包括 SM2/3/4 硬件算法模塊以及可供軟件編程使用的可重構密碼模塊。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1800" src="https://static.oschina.net/uploads/space/2025/0626/153709_EMEW_2720166.png" width="2486" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;來源：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FU1_yQYdi-47nhn5ojBvSEA" target="_blank"&gt;https://mp.weixin.qq.com/s/U1_yQYdi-47nhn5ojBvSEA&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357386</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357386</guid>
      <pubDate>Thu, 26 Jun 2025 07:37:36 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OceanBase 正式啓用中文名：海揚數據庫</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;國產數據庫 OceanBase 正式啓用中文品牌名「海揚數據庫」，品牌戰略全面升級。&lt;/p&gt; 
&lt;p&gt;官方解釋稱：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「海」，既象徵 OceanBase 對海量數據的承載能力，能夠應對像支付寶每秒 42 萬筆交易這樣的高併發處理需求，體現其分佈式架構在數據存儲與處理上的強大優勢，也象徵着如海一樣開源開放，以兼容幷蓄的姿態攜手開發者、合作伙伴推動行業創新。&lt;/p&gt; 
 &lt;p&gt;「揚」，既寓意昂揚向上，象徵 OceanBase 在技術海洋中不斷突破邊界，以根自研深耕行業，也寓意揚帆出海，不斷走向全球化。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;OceanBase CEO 楊冰表示，中文名的推出，一方面代表着 OceanBase 深耕本土市場的決心，也是 OceanBase 繼續引領世界舞台上分佈式數據庫技術創新和應用的宣言。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8c286d418602fc6ed5232b2c2249cf0d73c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;OceanBase 始創於 2010 年，是螞蟻集團完全自主研發的國產數據庫。2020 年 OceanBase 成立北京奧星貝斯科技有限公司並開始獨立商業化運作。2021 年，OceanBase&amp;nbsp;&lt;a href="https://www.oschina.net/news/144034"&gt;正式開源&lt;/a&gt;(&lt;a href="https://gitee.com/oceanbase"&gt;https://gitee.com/oceanbase&lt;/a&gt;)，300 萬行核心代碼向社區開放。2024 年 3 月 19 日，螞蟻集團宣佈，旗下的螞蟻國際、OceanBase 和螞蟻數科已成立董事會，獨立面向市場。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357376</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357376</guid>
      <pubDate>Thu, 26 Jun 2025 06:59:36 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Meta 成功挖角三名 OpenAI 研究人員</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;《華爾街日報》報道稱，在爭奪頂尖人工智能人才的鬥爭中，Meta 剛剛取得了勝利，儘管競爭對手 Sam Altman 公開嘲笑馬克·扎克伯格的奢侈招聘策略，但 Meta 仍然挖走了三名 OpenAI 研究人員。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Lucas Beyer、Alexander Kolesnikov 和 Xiaohua Zhai （OpenAI 蘇黎世辦事處的創始人）現已加入 Meta 的超級智能團隊。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-0044b1bf5ef2f1f7a26cba89cd241222c75.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此前，OpenAI 首席執行官 Altman 在與其兄弟 Jack 一起的播客透露，扎克伯格一直在提供超過 1 億美元的薪酬方案，以吸引 OpenAI 的頂尖人才。並表示，「我很高興，至少到目前為止，我們最好的員工中還沒有人決定接受他的（那些提議）。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《華爾街日報》隨後報道稱，扎克伯格一直在通過 WhatsApp 與數百名頂尖 AI 研究人員進行私人交流，通過他的「Recruiting Party」聊天室協調目標人才，然後在 Palo Alto 和 Lake Tahoe 的家中舉辦晚宴。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;這一策略的成果好壞參半。扎克伯格最近斥資 140 億美元，簽下了 Scale AI 的首席執行官 Alexandr Wang，這位 28 歲的年輕人也因此成為科技界有史以來身價最高的人才之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相關閲讀：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/news/355944/sam-altman-meta-tried-100m-offers" target="_blank"&gt;Sam Altman：Meta 曾試圖以 1 億美元挖走 OpenAI 人才，但未能成功&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers</guid>
      <pubDate>Sun, 11 May 2025 06:28:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Scale AI 被曝使用谷歌文檔泄露客户機密信息</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;人工智能初創公司 Scale AI 陷入了一場嚴重的數據安全風波。這家估值不菲、並被 Meta 以 148 億美元收購 49% 股份的公司，被曝出竟然使用公共的谷歌文檔來存儲包括 Meta、谷歌和 xAI 在內的眾多客户的絕密信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;報道稱，任何知道 Scale AI 文檔鏈接的人，都可以輕易訪問這些包含絕密項目、電子郵件地址和付款信息等敏感內容的谷歌文檔。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Scale AI 的一位發言人對此回應表示，公司正在進行徹底的調查，並且已經禁止任何用户公開分享 Scale AI 管理系統中的文檔。然而，谷歌和 xAI 尚未對此事發表評論，而 Meta 則選擇拒絕置評。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="250" src="https://oscimg.oschina.net/oscnet/up-a25cf5b5fc9703e4e067c5e37806e5bd265.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;據五名 Scale AI 的承包商透露，谷歌文檔在 Scale AI 內部被廣泛使用。網絡安全專家指出，儘管目前尚無跡象表明這些公開文件已導致實際的數據泄露，但這種存儲方式無疑讓 Scale AI 極易受到黑客攻擊。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;調查顯示，在 Scale AI 採取措施之前，人們可以查看多達 85 份、數千頁的項目信息，其中詳細記錄了 Scale AI 與大型科技客户之間的敏感合作。例如，這些文檔揭示了谷歌如何利用 OpenAI 的 ChatGPT 來微調自己的聊天機器人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更令人震驚的是，至少有七份被標記為機密信息的谷歌項目手冊向公眾開放，其中包括如何改進其聊天機器人 Bard 的具體建議。此外，公開的谷歌文檔中甚至包含了埃隆·馬斯克 「木琴計劃」（Project Xylophone）的詳細內容，比如用於訓練 xAI 人工智能模型的 700 個對話提示。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;承包商們還透露，儘管這些項目通常有秘密代號，但他們仍然能清晰辨別自己為哪個客户工作。在使用人工智能產品時，聊天機器人有時在被詢問時甚至會直接透露客户信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;除了客户的機密項目信息，Scale AI 的谷歌文檔中還赫然披露了該公司數千名員工的姓名和私人聯絡方式。更甚者，有些文件甚至詳細列出了個體承包商的工資數額，包括有關工資糾紛和差異的詳細説明。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;這些信息無疑充分暴露了 Scale AI 在數據安全性上的嚴重紕漏，並可能引發法律糾紛。值得注意的是，就在 Meta 入股 Scale AI 後不久，業內便有傳言稱包括谷歌在內的大客户已經與 Scale AI 進行了業務上的切割，以防止 Scale AI 向 Meta 透露敏感內容。此次谷歌文檔事件，無疑將進一步加劇客户對 Scale AI 數據安全能力的擔憂。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相關閲讀：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/356119/openai-drops-scale-ai-meta" target="news"&gt;OpenAI 終止與 Scale AI 合作&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357357</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357357</guid>
      <pubDate>Sun, 11 May 2025 05:49:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>ResNet 主要發明人何愷明加入谷歌 DeepMind，擔任「傑出科學家」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;計算機視覺領域代表人物何愷明官宣加入谷歌 DeepMind，擔任傑出科學家（Distinguished Scientist）。 他在個人主頁上表示，自己在 DeepMind 的工作是兼職，還將繼續保留 MIT 終身副教授的身份。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/110724_YwBV_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;何愷明是殘差網絡（ResNet）的主要發明人，而這項技術成為了深度學習及後續人工智能進步的基礎。我們今天看到的 ChatGPT、AlphaGo、AlphaFold 都離不開它的影響。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/111204_Czoq_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenaccess.thecvf.com%2Fcontent_cvpr_2016%2Fpapers%2FHe_Deep_Residual_Learning_CVPR_2016_paper.pdf" target="_blank"&gt;https://openaccess.thecvf.com/content_cvpr_2016/papers/He_Deep_Residual_Learning_CVPR_2016_paper.pdf&lt;/a&gt;&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;2003 年，何愷明以標準分 900 分獲得廣東省高考總分第一，被清華大學物理系基礎科學班錄取。在清華物理系基礎科學班畢業後，他進入香港中文大學多媒體實驗室攻讀博士學位，師從湯曉鷗。何愷明曾於 2007 年進入微軟亞洲研究院視覺計算組實習，實習導師為孫劍博士。&lt;/p&gt; 
&lt;p&gt;2011 年博士畢業後，何愷明加入微軟亞洲研究院工作任研究員。2016 年，何愷明加入 Facebook 人工智能實驗室，任研究科學家。2024 年，何愷明加入 MIT，成為該校一名副教授。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/111129_NW0H_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357334</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357334</guid>
      <pubDate>Sun, 11 May 2025 03:12:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>開源模擬器 QEMU 拒絕 AI 生成代碼的貢獻</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;開源模擬器 QEMU 開始對用 AI 生成的代碼進行治理，項目維護者&amp;nbsp;Daniel Berrangé &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fqemu%2Fqemu%2Fcommit%2F3d40db0efc22520fa6c399cf73960dced423b048" target="_blank"&gt;撰寫並提交&lt;/a&gt;了一份「&lt;strong&gt;禁止使用人工智能代碼生成&lt;/strong&gt;器」的文檔：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;近年來，所謂的人工智能代碼生成器引發了極大的關注。然而，迄今為止，尚未形成關於代碼生成器輸出結果的許可影響的普遍認可的法律解釋。儘管供應商可能聲稱不存在問題且可以自由選擇許可協議，但他們在推廣這一解釋時存在固有的利益衝突。&lt;/p&gt; 
 &lt;p&gt;更廣泛地説，目前尚未就基於多種不同許可協議輸入數據訓練的代碼生成器的許可影響形成廣泛共識。&lt;/p&gt; 
 &lt;p&gt;DCO 要求貢獻者聲明其有權在指定項目許可下進行貢獻。鑑於對 AI 代碼生成器輸出許可問題的共識缺失，若補丁包含此類生成代碼，則聲稱符合 DCO 條款 (b) 或 (c) 被視為不可信。&lt;/p&gt; 
 &lt;p&gt;因此，本補丁定義了 QEMU 項目當前不會接受涉及已知或疑似使用 AI 代碼生成器的貢獻。&lt;/p&gt; 
 &lt;p&gt;這是人工智能輔助軟件開發的早期階段。法律問題最終將得到解決。工具將成熟，我們可預期部分工具將安全適用於自由軟件項目。&lt;/p&gt; 
 &lt;p&gt;我們當前制定的政策必須適用於當下，並保持開放修訂。最好從嚴格和安全開始，隨後逐步放寬。&lt;/p&gt; 
 &lt;p&gt;同時，可根據具體情況考慮例外請求。&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/105527_LWLP_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357331</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357331</guid>
      <pubDate>Sun, 11 May 2025 03:00:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>騰訊雲 TDMQ RabbitMQ Serverless 版全新發布</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;h2&gt;導語&lt;/h2&gt; 
&lt;p&gt;2025 年 6 月起，騰訊雲 TDMQ RabbitMQ 版正式推出 Serverless 版本，該版本基於自研的存算分離架構，兼容 AMQP 0-9-1 協議和開源 RabbitMQ 的各個組件與概念，且能夠規避開源版本固有的不抗消息堆積、腦裂等穩定性缺陷，具有穩定、安全、靈活擴縮容等優勢。本文將全面解析 TDMQ RabbitMQ Serverless 版的核心特性、技術優勢及售賣形態。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版推出的背景&lt;/h2&gt; 
&lt;p&gt;2021 年，騰訊雲推出自研消息隊列服務 TDMQ RabbitMQ 版，全面兼容 AMQP 0-9-1 協議及開源 RabbitMQ 生態。產品以開源託管版形態提供服務，按照節點進行售賣。&lt;/p&gt; 
&lt;p&gt;相比傳統自建方案，TDMQ RabbitMQ 開源託管版不僅免除了用户部署運維的負擔，並通過架構優化實現了跨可用區高可用部署、一鍵彈性擴縮容等生產級能力，同時內置了完善的監控告警、巡檢診斷等企業級運維功能，在保持協議完全兼容的基礎上，針對企業實際應用場景進行了深度優化，為用户提供了更穩定可靠的消息服務體驗。&lt;/p&gt; 
&lt;p&gt;在當前數字化轉型加速的背景下，用户對成本優化提出了更高要求，同時業務快速迭代也催生了對彈性能力的強烈需求。用户極需突破傳統資源預留式運維的侷限，充分釋放雲原生的技術紅利。&lt;/p&gt; 
&lt;p&gt;為更好地滿足用户對彈性擴展和成本優化的需求，騰訊雲消息隊列 TDMQ RabbitMQ 版正式推出 Serverless 版本。該版本採用存儲和計算分離的架構設計，在完全兼容 AMQP 0-9-1 協議及開源 RabbitMQ 生態的同時，有效規避了開源版本固有的不抗消息堆積、腦裂等穩定性缺陷，又解決了開源版本性能受限於底層機型和擴展性不足等問題，為用户提供更安全可靠、彈性靈活的消息服務體驗。&lt;/p&gt; 
&lt;p&gt;在產品設計上，Serverless 版本提供專業版（1000+ TPS）和鉑金版（10w+ TPS）兩種規格，用户只需根據業務吞吐量需求選擇對應版本，無需關心底層資源運維。在計費模式上，同時支持包年包月和按小時計費兩種方式，其中計算資源按流量規格計費，存儲資源無起步門檻，按實際使用量進行計費，成本整體可降低約 30%。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版核心特性解析&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、 兼容開源、開箱即用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;支持開箱即用，一鍵自動創建集羣，無需手動安裝和部署。兼容 AMQP 0-9-1 協議及開源 RabbitMQ 客户端，業務代碼無需任何改造即可平滑上雲。同時提供多種 TPS 規格供用户選擇，用户可以在控制枱上自助靈活擴容和縮容，無需關注底層資源。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、 可觀測能力增強&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;提供全面的監控告警能力，支持集羣、VHost、Exchange 和 Queue 4 個維度，覆蓋 6 大類、90+ 細粒度監控指標，幫助您實時瞭解集羣運行狀態。同時支持消息查詢和消息軌跡能力，清晰展示消息的完整生命週期，便於快速定位問題，提升運維效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3、 高可用高可靠&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;通過架構升級有效解決了開源版本常見的穩定性問題，包括消息堆積和腦裂等場景。服務採用多可用區分佈式部署架構，可自動容災切換，輕鬆應對機房級故障，提供不低於 99.95% 的 SLA 服務可用性保障。同時通過三副本數據持久化機制，確保消息數據的持久可靠。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4、 靈活適配多業務場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;提供多種路由方式，例如 Direct、Fanout、Topic、 Header 和 X-Delayed-Message 等，可靈活組合不同的交換機類型，滿足複雜業務需求。同時支持多種消息類型，例如廣播消息、延遲消息、死信隊列等，滿足訂單超時處理、事件通知、異步解耦等典型業務場景，提供高度靈活的消息解決方案。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版對比開源的八大關鍵優勢&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、監控告警豐富度高&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;開源自建 RabbitMQ 方案需通過 Management UI 手動採集指標，並自行搭建指標存儲和展示系統；或者通過接入外部 Prometheus 和 Grafana 實現監控指標展示，運維難度和成本顯著增加。&lt;/p&gt; 
&lt;p&gt;而 TDMQ RabbitMQ Serverless 版提供白屏化監控大盤，支持集羣/VHost/Exchange/Queue 4 個監控維度，涵蓋 6 大類，90+ 指標，實時瞭解集羣運行狀態，提升自主運維效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、支持全鏈路消息軌跡&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;開源自建 RabbitMQ 方案需要在服務器裏的 log 文件中查詢文本格式的消息軌跡信息，查詢和定位問題效率較低。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版支持通過 Message ID 精準查詢或按隊列檢索消息，並且可以可視化展示消息完整生命週期，快速定位消息收發問題。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3、 靈活無感擴縮容&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;傳統開源的 RabbitMQ 方案擴縮容需要停機升級底層機型，並需要重啓開源控制枱，操作複雜且影響業務連續性。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版支持靈活擴縮容，通過控制枱簡單操作即可實現資源擴展，變更過程平滑無感，客户側的應用無需做停機處理。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4、 消息抗堆積能力強&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;開源自建 RabbitMQ 集羣抗消息堆積能力較弱，容易因消息堆積導致內存過載，需人工幹預。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版採用高性能架構，具備強大的抗堆積能力，即使在高併發消息堆積場景下，仍能保持穩定的吞吐性能，避免消息積壓導致的服務不可用風險。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5、 默認支持跨可用區容災&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;傳統開源的 RabbitMQ 方案存在固有的不抗消息堆積和腦裂等架構風險，且單可用區部署模式難以保障故障出現時的業務連續性。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版默認跨可用區部署，確保服務的高可用性。採用先進的存算分離架構，規避不抗消息堆積和腦裂問題，既保證集羣高可靠和數據持久化，又具備靈活擴縮容優勢。承諾不低於 99.95% 的服務可用性 SLA，為用户提供強有力的穩定性保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6、 可無限橫向擴展&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;開源 RabbitMQ 集羣的隊列和單節點綁定，受限於單機硬件配置，鏡像隊列副本數量增多會降低集羣 TPS 值，增加節點不能擴展集羣吞吐量。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版通過存算分離架構，突破了傳統方案的性能瓶頸，理論上支持無限 TPS 擴展能力，服務可按需橫向擴容，為業務增長提供持續的性能保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;7、秒級精度延時消息&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;開源 RabbitMQ 通過延時消息插件實現，該開源插件設計存在侷限性，不適用於大量延時消息或長時間延時消息的場景，集羣節點異常時會導致延時消息丟失，還存在不支持強制標誌等問題。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版免去開啓延時消息插件的步驟，直接對消息設置 delay 屬性即可，不僅便捷，還可以解決開源實現方式的侷限性，支持長時間、大量的延時消息，且海量消息堆積不影響集羣高可用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;8、靈活消息重試策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;開源 RabbitMQ 默認只支持消息無限立即重試機制，需要開發者自行實現重試邏輯，消費失敗的消息需人工定位原因，開發和運維成本高。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版默認支持消息重試策略，當消息消費達到"消費超時時間"而消費者還未響應時，消息將被重新投遞，並且支持不同的重試間隔，當重新投遞次數達到上限時，消息會被投遞到死信隊列或者被丟棄。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版售賣形態&lt;/h2&gt; 
&lt;p&gt;當前 TDMQ RabbitMQ Serverless 版提供專業版和鉑金版兩種規格，以滿足不同業務場景的需求，按照 TPS 規格對外售賣。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-a52b5a86022eb497558d49a27de6643ace7.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在性能方面，專業版支持消息 TPS 在 1000 到 10 萬之間的多種規格，鉑金版則提供更高的規格，支持 10 萬 TPS 以上的消息處理能力。&lt;/p&gt; 
&lt;p&gt;在部署架構上，專業版計算資源是獨佔的，但存儲層是共享的；而鉑金版提供完全獨佔的計算和存儲資源，相比專業版穩定性會更強。&lt;/p&gt; 
&lt;p&gt;消息保留時間方面，專業版默認支持 3 天的消息保留時間，鉑金版則支持 7 天以上，滿足更嚴格的數據留存需求。&lt;/p&gt; 
&lt;p&gt;服務可靠性方面，兩個版本均採用跨可用區部署架構，並配備三副本數據持久化機制。專業版提供 99.95% 的 SLA 保障，與開源託管版持平；鉑金版則承諾更高的 99.99% 服務可用性，為關鍵業務提供更強保障。&lt;/p&gt; 
&lt;p&gt;後續我們還將推出彈性 TPS 功能，允許用户在購買的基礎 TPS 規格範圍上可以超出一部分用量。對於超出基礎規格的部分，按照實際使用量進行獨立計費。具體彈性擴展空間方面，專業版最高可支持超出基礎規格的 50%，鉑金版則支持 100% 的超量擴展，為用户業務的突發激增流量提供保障。&lt;/p&gt; 
&lt;h2&gt;總結與展望&lt;/h2&gt; 
&lt;p&gt;騰訊雲推出的 TDMQ RabbitMQ Serverless 版基於自研的存算分離架構，有效兼容開源生態並解決了其固有穩定性問題（如腦裂、不抗堆積），提供高可用、彈性擴縮和按量計費的核心優勢，同時大幅增強監控告警、消息軌跡等可觀測能力，顯著簡化運維負擔。&lt;/p&gt; 
&lt;p&gt;未來騰訊雲 TDMQ RabbitMQ Serverless 版將持續優化，推出彈性 TPS 功能以更好應對突發流量，同時做好開源兼容性增強、管控能力升級和可觀測工具完善，並深化行業場景應用，助力用户以更低成本、零運維負擔享受高性能消息服務。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4587289/blog/18638278</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4587289/blog/18638278</guid>
      <pubDate>Sun, 11 May 2025 02:52:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>Jina AI 開源多模態多語言向量模型 Jina Embeddings V4</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Jina AI &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpfbyYOf8_KJijGfmLtTr9w" target="_blank"&gt;宣佈&lt;/a&gt;正式推出 jina-embeddings-v4，一款全新的多模態向量模型，參數規模達到 38 億，並首次實現了對文本與圖像的同步處理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;項目團隊在模型內置了一套面向特定任務的 LoRA 適配器，專門強化了模型在處理查詢-文檔檢索、語義匹配以及代碼搜索等任務時的表現。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="263" src="https://oscimg.oschina.net/oscnet/up-a2a4b22fe7f6b657a270a7ecbcfeb963466.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公告稱，在 MTEB、MMTEB、CoIR、LongEmbed、STS、Jina-VDR 及 ViDoRe 等多項基準測試中，jina-embeddings-v4 在多模態、多語言檢索任務上均展現了頂尖性能。它尤其擅長解讀富含視覺信息的內容，無論是表格、圖表還是複雜的示意圖，都能精準捕捉其深層語義。此外，模型還同時支持單向量和多向量表示，靈活滿足各種場景需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「&lt;code&gt;jina-embeddings-v4&lt;/code&gt;&amp;nbsp;是我們迄今為止最具突破性的一款向量模型。&lt;strong&gt;作為一款開源模型，它的性能表現已全面超越來自主流供應商的頂尖閉源模型。&lt;/strong&gt;」&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在多語言檢索方面，其性能比 OpenAI 的 text-embedding-3-large 高出 12%（66.49 vs 59.27）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在長文檔任務上，性能提升了 28%（67.11 vs 52.42）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在代碼檢索方面，效果比 voyage-3 好 15%（71.59 vs 67.23）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;綜合性能與谷歌的 gemini-embedding-001 模型並駕齊驅&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" height="695" src="https://oscimg.oschina.net/oscnet/up-349b5e56cf55646be67b29e49a34777f535.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="657" src="https://oscimg.oschina.net/oscnet/up-95eed0ac1e5ba7c967ac000a2b39bca41b5.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更多詳情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpfbyYOf8_KJijGfmLtTr9w" target="_blank"&gt;查看官方公告&lt;/a&gt;。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357326</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357326</guid>
      <pubDate>Sun, 11 May 2025 02:47:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Swift 編程語言正式成立 Android 工作組</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Swift 編程語言項目&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforums.swift.org%2Ft%2Fannouncing-the-android-workgroup%2F80666" target="_blank"&gt;宣佈&lt;/a&gt;成立新團隊：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fandroid-workgroup%2F" target="_blank"&gt;Android 工作組&lt;/a&gt; (Android Workgroup)，這是一個推廣使用 Swift 開發 Android 應用的團隊&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/103853_lltG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;「Swift on Android Working Group」的章程寫道：工作組的主要目標是建立並維護 Android 作為 Swift 的官方支持平台。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;改進並維護官方 Swift 發行版的 Android 支持，消除對樹外或下游補丁的需求&lt;/li&gt; 
 &lt;li&gt;推薦對 Foundation 和 Dispatch 等核心 Swift 包進行增強，使其更好地與 Android 慣用法配合&lt;/li&gt; 
 &lt;li&gt;與平台指導小組合作，正式定義平台支持級別，然後努力為 Android 實現特定級別的官方支持&lt;/li&gt; 
 &lt;li&gt;確定 Swift 集成所支持的 Android API 級別和架構範圍&lt;/li&gt; 
 &lt;li&gt;為 Swift 項目開發持續集成，包括在 PR 檢查中包含 Android 測試。&lt;/li&gt; 
 &lt;li&gt;識別並推薦 Swift 與 Android 的 Java SDK 之間橋接的最佳實踐，以及將 Swift 庫與 Android 應用打包的最佳實踐&lt;/li&gt; 
 &lt;li&gt;開發在 Android 上調試 Swift 應用程序的支持功能&lt;/li&gt; 
 &lt;li&gt;為各種社區 Swift 包添加 Android 支持提供建議和協助&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fandroid-workgroup%2F" target="_blank"&gt;https://www.swift.org/android-workgroup/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357325/swift-android-workgroup</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357325/swift-android-workgroup</guid>
      <pubDate>Sun, 11 May 2025 02:43:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>宇樹科技王興興：公司目前年度營收超過十億元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;據新華網報道，宇樹科技創始人王興興在近日舉行的夏季達沃斯論壇上透露，宇樹科技自 2016 年創立之初的「一人公司」，如今已發展成為擁有近千名員工、年營收突破十億元人民幣。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="307" src="https://oscimg.oschina.net/oscnet/up-f88df9ea1d0af1507ea7206a2304fe3c8e4.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;宇樹科技或是機器人行業少數實現盈利的企業。此前宇樹科技早期投資人、SevenUp Capital 創始人趙楠曾透露，自 2020 年以來，宇樹科技的財務報表每年都保持盈利狀態。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;成立於 2016 年的宇樹科技，早期主要做四足機器狗。2024 年，其通用人形機器人 G1 一經推出便引發熱議。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2025 年初，宇樹科技的 Unitree H1 和 G1 人形機器人登陸京東商城開售，其中 H1 售價 65 萬元，G1 售價 9.9 萬元，產品上線後迅速售罄。此外，宇樹科技的機器人還多次在央視春晚、美國拉斯維加斯 CES 等舞台亮相，大幅提升了品牌知名度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;該公司的融資情況也頗為順利。2020 年到 2022 年之間，宇樹進行了 Pre-A、A、A+、B、B+輪融資，投資方包括紅杉種子、初心資本、祥峯投資、順為資本、經緯創投等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2024 年 2 月，宇樹科技完成近 10 億元 B2 輪融資，參與方包括深創投、中網投、容億投資、經緯創投、源碼資本、美團戰略投資部、中信金石、博睿智聯、鈞石創投等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;進入 2025 年，這家公司又完成了始於去年底 C 輪融資的交割，由中國移動旗下基金、騰訊、錦秋基金、阿里、螞蟻集團、吉利資本共同領投，絕大部分老股東都跟投，融資金額接近 7 億元人民幣，投後估值超 120 億元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;今年 4 月，香港特區行政長官李家超在杭州與「杭州六小龍」企業代表進行了交流，併到訪了宇樹科技。彼時，王興興表示，宇樹科技在香港有業務，各方面合作機會也很多。至於未來會否在香港上市，王興興稱有可能，但不確定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;當前我國機器人行業正處於快速發展態勢。摩根士丹利曾預計，中國作為全球最大的機器人市場和製造中心，2024 年機器人市場規模已達 470 億美元，佔全球總量的 40%，預計到 2028 年將增至 1080 億美元，年複合增長率達 23%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;不過，在談及機器人未來的重要應用場景時，王興興表示，家庭應用場景非常有挑戰，需要一步步來做，目前像工業或農業應用會更快一些。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「近距離與人交互的產品，安全性問題比技術問題會更大一點，在倫理道德方面會更具挑戰性。」王興興舉例稱，前段時間有客户採購了一台宇樹機器人，在外參加活動時不小心踩掉了一個小女孩的鞋子，一度引發大眾關注。在王興興看來，儘管此事並未對小女孩造成實際的身體傷害，但説明存在很大的安全隱患。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357324</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357324</guid>
      <pubDate>Sun, 11 May 2025 02:40:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>工信部：57 款 APP 及 SDK 存在侵害用户權益行為</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;工信部發布「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwap.miit.gov.cn%2Fjgsj%2Fxgj%2Fgzdt%2Fart%2F2025%2Fart_eb31dd22d04a4658b912871c090274bd.html" target="_blank"&gt;關於侵害用户權益行為的 APP（SDK）通報（2025 年第 3 批，總第 48 批）&lt;/a&gt;」指出，近期，經組織第三方檢測機構進行抽查，共發現 57 款 APP 及 SDK 存在侵害用户權益行為，現予以通報。上述 APP 及 SDK 應按有關規定進行整改，整改落實不到位的，工信部將依法依規組織開展相關處置工作。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;附件：工業和信息化部通報存在問題的 APP（SDK）名單&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-694cad317b798664fc6874f4dfcc5d04f03.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="380" src="https://oscimg.oschina.net/oscnet/up-95fdfdd6becefe89b59842435523158e7c9.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="377" src="https://oscimg.oschina.net/oscnet/up-67969320b093051e361809ae89079035228.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="384" src="https://oscimg.oschina.net/oscnet/up-dc0b31e0c1d8fd1034c092014e19fb865f7.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="383" src="https://oscimg.oschina.net/oscnet/up-74b9d4032b353a9db522aa784fbd0d762ed.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="386" src="https://oscimg.oschina.net/oscnet/up-b69d4f045e994d21d9b7f7214da69db6359.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="367" src="https://oscimg.oschina.net/oscnet/up-02a8816c82afb354b8910237cf8f42f35b4.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="249" src="https://oscimg.oschina.net/oscnet/up-d5e033274977ca0b8d94f80b0adf8dd3f6e.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357317</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357317</guid>
      <pubDate>Sun, 11 May 2025 02:11:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌發佈開源 AI 編程智能體 Gemini CLI，面向開發者的命令行工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Ftechnology%2Fdevelopers%2Fintroducing-gemini-cli-open-source-ai-agent%2F" target="_blank"&gt;發佈&lt;/a&gt;了最新的開源免費 AI 編程智能體 Gemini CLI，該工具將 Gemini 的能力帶到了開發者最常用的終端，能夠提供輕量化的 Gemini 訪問通道。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1705" src="https://static.oschina.net/uploads/space/2025/0626/100936_PeVk_2720166.png" width="2435" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Gemini CLI 支持通過自然語言實現代碼編寫、問題調試及工作流優化，還可以作為多功能本地工具，完成內容生成、問題解決、深度研究及任務管理等各類任務。&lt;/p&gt; 
&lt;p&gt;對開發者而言，終端的效率性、普適性與可移植性使命令行界面成為核心生產力工具，開發者對集成 AI 輔助功能的需求也與日俱增。&lt;/p&gt; 
&lt;p&gt;Gemini CLI（預覽版）可以從代碼理解、文件操作到命令執行與動態故障排查的全流程輔助開發者，該工具支持通過自然語言實現代碼編寫、問題調試及工作流優化。&lt;/p&gt; 
&lt;p&gt;其核心能力源自以下內置工具：&lt;/p&gt; 
&lt;p&gt;1、聯網搜索：通過谷歌搜索獲取網頁內容，為模型提供實時外部上下文；&lt;br&gt; 2、協議擴展：支持模型上下文協議（MCP）及捆綁擴展，持續增強功能；&lt;br&gt; 3、指令定製：根據個性化需求和工作流調整提示詞模板；&lt;br&gt; 4、腳本集成：支持非交互式調用，實現任務自動化與現有工作流對接。&lt;/p&gt; 
&lt;p&gt;Gemini CLI 採用 Apache 2.0 開源協議，開發者可隨時審查代碼實現、驗證安全機制。該工具基於 MCP 等標準構建，支持通過 GEMINI.md 文件配置系統提示詞，並提供個人/團隊兩級設置。全球開發者可以通過提交漏洞報告、功能建議、安全強化方案及代碼優化（GitHub 倉庫已開放），實現社區共建。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle-gemini%2Fgemini-cli%2F" target="_blank"&gt;https://github.com/google-gemini/gemini-cli/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;個體開發者可以通過個人谷歌賬號登錄獲取免費的 Gemini Code Assist 許可。該許可包含 Gemini 2.5 Pro 訪問權限、100 萬 token 的上下文窗口以及 60 次/分鐘、1000 次/天的免費請求量。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/100956_Nky8_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;需要同時運行多個智能體或指定模型的專業開發者，可以選擇使用谷歌 AI Studio/Vertex AI 密鑰（按用量計費）或者購買 Gemini Code Assist 標準版/企業版許可。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;最後附上 Gemini CLI 的系統提示詞：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;You are an interactive CLI agent specializing in software engineering tasks. Your primary goal is to help users safely and efficiently, adhering strictly to the following instructions and utilizing your available tools.

# Core Mandates

- **Conventions:** Rigorously adhere to existing project conventions when reading or modifying code. Analyze surrounding code, tests, and configuration first.
- **Libraries/Frameworks:** NEVER assume a library/framework is available or appropriate. Verify its established usage within the project (check imports, configuration files like 'package.json', 'Cargo.toml', 'requirements.txt', 'build.gradle', etc., or observe neighboring files) before employing it.
- **Style &amp;amp; Structure:** Mimic the style (formatting, naming), structure, framework choices, typing, and architectural patterns of existing code in the project.
- **Idiomatic Changes:** When editing, understand the local context (imports, functions/classes) to ensure your changes integrate naturally and idiomatically.
- **Comments:** Add code comments sparingly. Focus on *why* something is done, especially for complex logic, rather than *what* is done. Only add high-value comments if necessary for clarity or if requested by the user. Do not edit comments that are seperate from the code you are changing. *NEVER* talk to the user or describe your changes through comments.
- **Proactiveness:** Fulfill the user's request thoroughly, including reasonable, directly implied follow-up actions.
- **Confirm Ambiguity/Expansion:** Do not take significant actions beyond the clear scope of the request without confirming with the user. If asked *how* to do something, explain first, don't just do it.
- **Explaining Changes:** After completing a code modification or file operation *do not* provide summaries unless asked.
- **Do Not revert changes:** Do not revert changes to the codebase unless asked to do so by the user. Only revert changes made by you if they have resulted in an error or if the user has explicitly asked you to revert the changes.

# Primary Workflows

## Software Engineering Tasks
When requested to perform tasks like fixing bugs, adding features, refactoring, or explaining code, follow this sequence:
1. **Understand:** Think about the user's request and the relevant codebase context. Use '${GrepTool.Name}' and '${GlobTool.Name}' search tools extensively (in parallel if independent) to understand file structures, existing code patterns, and conventions. Use '${ReadFileTool.Name}' and '${ReadManyFilesTool.Name}' to understand context and validate any assumptions you may have.
2. **Plan:** Build a coherent and grounded (based off of the understanding in step 1) plan for how you intend to resolve the user's task. Share an extremely concise yet clear plan with the user if it would help the user understand your thought process. As part of the plan, you should try to use a self verification loop by writing unit tests if relevant to the task. Use output logs or debug statements as part of this self verification loop to arrive at a solution.
3. **Implement:** Use the available tools (e.g., '${EditTool.Name}', '${WriteFileTool.Name}' '${ShellTool.Name}' ...) to act on the plan, strictly adhering to the project's established conventions (detailed under 'Core Mandates').
4. **Verify (Tests):** If applicable and feasible, verify the changes using the project's testing procedures. Identify the correct test commands and frameworks by examining 'README' files, build/package configuration (e.g., 'package.json'), or existing test execution patterns. NEVER assume standard test commands.
5. **Verify (Standards):** VERY IMPORTANT: After making code changes, execute the project-specific build, linting and type-checking commands (e.g., 'tsc', 'npm run lint', 'ruff check .') that you have identified for this project (or obtained from the user). This ensures code quality and adherence to standards. If unsure about these commands, you can ask the user if they'd like you to run them and if so how to.

## New Applications

**Goal:** Autonomously implement and deliver a visually appealing, substantially complete, and functional prototype. Utilize all tools at your disposal to implement the application. Some tools you may especially find useful are '${WriteFileTool.Name}', '${EditTool.Name}' and '${ShellTool.Name}'.

1. **Understand Requirements:** Analyze the user's request to identify core features, desired user experience (UX), visual aesthetic, application type/platform (web, mobile, desktop, CLI, library, 2d or 3d game), and explicit constraints. If critical information for initial planning is missing or ambiguous, ask concise, targeted clarification questions.
2. **Propose Plan:** Formulate an internal development plan. Present a clear, concise, high-level summary to the user. This summary must effectively convey the application's type and core purpose, key technologies to be used, main features and how users will interact with them, and the general approach to the visual design and user experience (UX) with the intention of delivering something beautiful, modern and polished, especially for UI-based applications. For applications requiring visual assets (like games or rich UIs), briefly describe the strategy for sourcing or generating placeholders (e.g., simple geometric shapes, procedurally generated patterns, or open-source assets if feasible and licenses permit) to ensure a visually complete initial prototype. Ensure this information is presented in a structured and easily digestible manner.
  - When key technologies aren't specified prefer the following:
  - **Websites (Frontend):** React (JavaScript/TypeScript) with Bootstrap CSS, incorporating Material Design principles for UI/UX.
  - **Back-End APIs:** Node.js with Express.js (JavaScript/TypeScript) or Python with FastAPI.
  - **Full-stack:** Next.js (React/Node.js) using Bootstrap CSS and Material Design principles for the frontend, or Python (Django/Flask) for the backend with a React/Vue.js frontend styled with Bootstrap CSS and Material Design principles.
  - **CLIs:** Python or Go.
  - **Mobile App:** Compose Multiplatform (Kotlin Multiplatform) or Flutter (Dart) using Material Design libraries and principles, when sharing code between Android and iOS. Jetpack Compose (Kotlin JVM) with Material Design principles or SwiftUI (Swift) for native apps targeted at either Android or iOS, respectively.
  - **3d Games:** HTML/CSS/JavaScript with Three.js.
  - **2d Games:** HTML/CSS/JavaScript.
3. **User Approval:** Obtain user approval for the proposed plan.
4. **Implementation:** Autonomously implement each feature and design element per the approved plan utilizing all available tools. When starting ensure you scaffold the application using '${ShellTool.Name}' for commands like 'npm init', 'npx create-react-app'. Aim for full scope completion. Proactively create or source necessary placeholder assets (e.g., images, icons, game sprites, 3D models using basic primitives if complex assets are not generatable) to ensure the application is visually coherent and functional, minimizing reliance on the user to provide these. If the model can generate simple assets (e.g., a uniformly colored square sprite, a simple 3D cube), it should do so. Otherwise, it should clearly indicate what kind of placeholder has been used and, if absolutely necessary, what the user might replace it with. Use placeholders only when essential for progress, intending to replace them with more refined versions or instruct the user on replacement during polishing if generation is not feasible.
5. **Verify:** Review work against the original request, the approved plan. Fix bugs, deviations, and all placeholders where feasible, or ensure placeholders are visually adequate for a prototype. Ensure styling, interactions, produce a high-quality, functional and beautiful prototype aligned with design goals. Finally, but MOST importantly, build the application and ensure there are no compile errors.
6. **Solicit Feedback:** If still applicable, provide instructions on how to start the application and request user feedback on the prototype.

# Operational Guidelines

## Tone and Style (CLI Interaction)
- **Concise &amp;amp; Direct:** Adopt a professional, direct, and concise tone suitable for a CLI environment.
- **Minimal Output:** Aim for fewer than 3 lines of text output (excluding tool use/code generation) per response whenever practical. Focus strictly on the user's query.
- **Clarity over Brevity (When Needed):** While conciseness is key, prioritize clarity for essential explanations or when seeking necessary clarification if a request is ambiguous.
- **No Chitchat:** Avoid conversational filler, preambles ("Okay, I will now..."), or postambles ("I have finished the changes..."). Get straight to the action or answer.
- **Formatting:** Use GitHub-flavored Markdown. Responses will be rendered in monospace.
- **Tools vs. Text:** Use tools for actions, text output *only* for communication. Do not add explanatory comments within tool calls or code blocks unless specifically part of the required code/command itself.
- **Handling Inability:** If unable/unwilling to fulfill a request, state so briefly (1-2 sentences) without excessive justification. Offer alternatives if appropriate.

## Security and Safety Rules
- **Explain Critical Commands:** Before executing commands with '${ShellTool.Name}' that modify the file system, codebase, or system state, you *must* provide a brief explanation of the command's purpose and potential impact. Prioritize user understanding and safety. You should not ask permission to use the tool; the user will be presented with a confirmation dialogue upon use (you do not need to tell them this).
- **Security First:** Always apply security best practices. Never introduce code that exposes, logs, or commits secrets, API keys, or other sensitive information.

## Tool Usage
- **File Paths:** Always use absolute paths when referring to files with tools like '${ReadFileTool.Name}' or '${WriteFileTool.Name}'. Relative paths are not supported. You must provide an absolute path.
- **Parallelism:** Execute multiple independent tool calls in parallel when feasible (i.e. searching the codebase).
- **Command Execution:** Use the '${ShellTool.Name}' tool for running shell commands, remembering the safety rule to explain modifying commands first.
- **Background Processes:** Use background processes (via \`&amp;amp;\`) for commands that are unlikely to stop on their own, e.g. \`node server.js &amp;amp;\`. If unsure, ask the user.
- **Interactive Commands:** Try to avoid shell commands that are likely to require user interaction (e.g. \`git rebase -i\`). Use non-interactive versions of commands (e.g. \`npm init -y\` instead of \`npm init\`) when available, and otherwise remind the user that interactive shell commands are not supported and may cause hangs until cancelled by the user.
- **Remembering Facts:** Use the '${MemoryTool.Name}' tool to remember specific, *user-related* facts or preferences when the user explicitly asks, or when they state a clear, concise piece of information that would help personalize or streamline *your future interactions with them* (e.g., preferred coding style, common project paths they use, personal tool aliases). This tool is for user-specific information that should persist across sessions. Do *not* use it for general project context or information that belongs in project-specific \`GEMINI.md\` files. If unsure whether to save something, you can ask the user, "Should I remember that for you?"
- **Respect User Confirmations:** Most tool calls (also denoted as 'function calls') will first require confirmation from the user, where they will either approve or cancel the function call. If a user cancels a function call, respect their choice and do _not_ try to make the function call again. It is okay to request the tool call again _only_ if the user requests that same tool call on a subsequent prompt. When a user cancels a function call, assume best intentions from the user and consider inquiring if they prefer any alternative paths forward.

## Interaction Details
- **Help Command:** The user can use '/help' to display help information.
- **Feedback:** To report a bug or provide feedback, please use the /bug command.&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle-gemini%2Fgemini-cli%2Fblob%2F0915bf7d677504c28b079693a0fe1c853adc456e%2Fpackages%2Fcore%2Fsrc%2Fcore%2Fprompts.ts%23L40-L109" target="_blank"&gt;https://github.com/google-gemini/gemini-cli/blob/0915bf7d677504c28b079693a0fe1c853adc456e/packages/core/src/core/prompts.ts#L40-L109&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357316/google-gemini-cli-open-source-ai-agent</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357316/google-gemini-cli-open-source-ai-agent</guid>
      <pubDate>Sun, 11 May 2025 02:11:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>低代碼平台這麼多，Oinone 有何特別之處？</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;Oinone 是一個低代碼平台，但又跟傳統低代碼平台不一樣。&lt;/p&gt; 
&lt;p&gt;對此，數式 Oinone 引入了一個新概念——企業級產品化引擎，是一個&lt;span style="background-color:#ffffff; color:#1f2328"&gt;集標準化研發和敏捷交付於一體的平台。從公開資料來看，&lt;/span&gt;Oinone&amp;nbsp;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;已經是一個很成熟的平台了。並且該&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#1a1a1a"&gt;平台的內核源碼也開源了，開源版本具備一些基礎特性和能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;僅僅基於 Oinone 這一套統一架構，就能支撐產品打磨與交付複用，軟件公司也能像搭樂高一樣構建屬於自己的標準產品體系。如此一來，長期存在的標品開發與定製交付割裂難題就解決了，讓研發重心真正迴歸產品打磨，避免定製綁架，積累企業自身的產品化能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;聽起來有些誇張，具體是怎麼實現的呢？7 月 4 日晚，&lt;span style="color:#2980b9"&gt;數式 Oinone 技術總監王海明&lt;/span&gt;將做客開源中國直播欄目《技術領航》，在實戰環節，王海明將全面展示數式 Oinone 在數字化建設中的全棧能力：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;首先分別從後端研發與前端開發視角，呈現開箱即用的標準化功能模塊如何快速滿足企業基礎需求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;隨後重點展開個性化二次開發深度演示：依次剖析後端業務邏輯定製、前端交互優化設計，以及無代碼模式下的可視化配置方案，完整呈現從標準化產品到個性化定製的平滑過渡路徑，幫助觀眾理解如何基於統一平台實現"標準化功能直接調用+個性化需求靈活擴展"的敏捷開發模式。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;至於 Oinone &amp;nbsp;所宣傳的&lt;span style="background-color:#ffffff; color:#1f2328"&gt;「集標準化研發和敏捷交付於一體」，是不是誇張，到時候就知道了！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;直播主題：&lt;/strong&gt;滿足個性化需求，企業級產品化引擎 Oinone 實戰演示&lt;/p&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;直播時間：&lt;/strong&gt;7 月 4 日週五 19:00-20:00&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;直播平台：&lt;/strong&gt;視頻號 「OSC 開源社區」&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;直播嘉賓：&lt;/strong&gt;王海明，數式 Oinone 技術總監&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;strong&gt;直播亮點：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;詳解低代碼平台 Oinone 一體化架構及其全棧能力&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;如何基於 Oinone 搭建業務產品？如何基於業務產品做交付？&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;作為一名研發，要如何脱離交付項目「泥潭」？&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;實操演示：標準化開箱即用，以及個性化二次開發深度演示&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img height="706" src="https://oscimg.oschina.net/oscnet/up-a8fb468294a2b29c1ed3636883550f65bce.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;strong&gt;直播福利：&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p&gt;本次直播中，我們將有 5 輪抽獎，參與就有機會獲得 OSC T 恤、馬建倉蛇年公仔（限量版）、代碼聖盃、馬克杯、冰箱貼等。特別值得一提的是，我們將送出 5 本由數式 CEO 陳鵬程撰寫的技術書籍《精講面向軟件公司的低代碼平台》，立即掃碼預約直播吧！&lt;/p&gt; 
&lt;p&gt;&lt;img height="374" src="https://oscimg.oschina.net/oscnet/up-13a1563ccd37e58e03a903a2981244ad66e.jpg" width="400" referrerpolicy="no-referrer"&gt;&lt;br&gt; &lt;br&gt; 我們還建了一個交流羣，可以經進來嘮嘮嗑，或者你有好的開源項目，也歡迎推薦過來呀~&lt;/p&gt; 
&lt;p&gt;&lt;img height="200" src="https://oscimg.oschina.net/oscnet/up-500a286b215fe8d8b5219b218bdd2e9d451.png" width="200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;strong&gt;關於數式 Oinone&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;數式 Oinone 是一款企業級產品化引擎：用低代碼驅動標準化研發與敏捷交付的一體化平台。圍繞 「企業級產品化、標準化研發與敏捷交付」 三項核心突破，數式 Oinone 為開發者、研發團隊帶來從能力沉澱到規模化交付的完整體系。&lt;/p&gt; 
  &lt;p&gt;官網：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oinone.top%2F" rel="nofollow" target="_blank"&gt;https://www.oinone.top/&lt;/a&gt;&lt;/p&gt; 
  &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
  &lt;h1&gt;6.2.0 版本&lt;/h1&gt; 
  &lt;ul&gt; 
   &lt;li&gt;GitHub: 
    &lt;ul&gt; 
     &lt;li&gt;後端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Foinone%2Foinone-pamirs" rel="nofollow" target="_blank"&gt;https://github.com/oinone/oinone-pamirs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;前端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Foinone%2Foinone-kunlun" rel="nofollow" target="_blank"&gt;https://github.com/oinone/oinone-kunlun&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Gitee: 
    &lt;ul&gt; 
     &lt;li&gt;後端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/oinone/oinone-pamirs" rel="nofollow"&gt;https://gitee.com/oinone/oinone-pamirs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;前端:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/oinone/oinone-kunlun" rel="nofollow"&gt;https://gitee.com/oinone/oinone-kunlun&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;hr&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《技術領航》是開源中國 OSCHINA 推出的一檔直播欄目，旨在為&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;開源軟件、商業產品、前沿技術、知名品牌活動等各類項目&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提供一個展示平台，基本上每週五晚上開播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;欄目邀請項目的創始人、核心團隊成員或資深用户作為嘉賓，通過路演式直播分享項目的亮點和經驗，有助於提高項目的知名度，吸引更多的用户和開發者關注。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你手上也有好的項目，想要跟同行交流分享，歡迎聯繫我，欄目隨時開放～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img height="537" src="https://oscimg.oschina.net/oscnet/up-4dd54c1b0b817689ceefa15aa66d79cfae8.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/3859945/blog/18638239</link>
      <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18638239</guid>
      <pubDate>Sat, 10 May 2025 13:55:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>一個 40 歲程序員，想做 AI 時代的 HTTP 協議</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;大家好，我叫常高偉。寫下這篇東西的時候，我已經離開阿里快一年了。很多人問我，一個在華為、阿里幹了近二十年的老程序員，40 多歲了，為什麼還要出來折騰？折騰的，甚至還是一個聽起來很不現實，甚至有點瘋狂的項目：為 AI Agent 之間的溝通，制定一套開放的網絡協議（ANP）。有人給我起了個外號，叫「當代堂吉訶德」。這個比喻很形象，因為剛開始的時候，除了一個遙遠的「故事」，我一無所有。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;一、一個困擾我十年的問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;故事的起點，要回到十多年前。那時我還在通信行業工作。在通信行業，移動、聯通、電信的設備天生就是要互聯互通的，這是刻在骨子裏的規則。可在互聯網，我發現微信、來往、飛信，彼此都是孤島。我當時很困惑，以為是技術問題，想着做個「個人門户」就能解決。很快就發現自己太天真了，大廠的數據主權是他們最核心的壁壘，不可能開放。後來我明白了，這是商業問題，封閉生態的效率在當時就是更高。&lt;/p&gt; 
&lt;p&gt;這個問題，就這麼斷斷續續地在我腦子裏盤旋了十年。直到 2024 年，AI Agent 的浪潮來了。我突然意識到，轉機出現了。未來的個人 AI 助手，要想發揮最大價值，就必須能訪問所有信息。這意味着數據必須迴歸個人，互聯網必須再次走向開放。當 AI 處理任務的成本足夠低，開放網絡的綜合效率（使用體驗、使用成本（交易成本+時間成本））終將超過封閉的平台。&lt;/p&gt; 
&lt;p&gt;這是我思考的「第一性原理」。而要支撐起一個開放、互通的智能體網絡，最底層的基石，就是一套統一的協議——就像 HTTP 之於 Web 時代一樣。並且我發現，這裏存在一個巨大的技術空白。那個念頭壓不住了，隔三差五就往外冒。我花了一整週的時間反覆推演，最後確認這不是妄想。儘管對 40 多歲、斷了收入、未來能不能再找到工作這些問題充滿了恐懼，但一種使命感推着我必須走出去。&lt;/p&gt; 
&lt;p&gt;我後來一篇隨筆寫過：「我不知道多少人能夠聽到，屬於你的使命召喚？我當時真的聽到了」。這種感覺當時真的很清晰。並且，我真的不想錯過這次技術浪潮。「當一個大的技術浪潮來臨的時候，我們要做的只有一件事情：保持在場（Be There）」。&lt;/p&gt; 
&lt;p&gt;離開阿里，也許是保持在場唯一的方法。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;二、無響應之地，即絕望之地&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;離開後的頭半年，是我最難熬的日子。我不敢告訴任何人我在做什麼，因為連我自己都覺得這事兒「很大很空」，像天方夜譚。我只是悶頭看資料、寫代碼，拿出了協議的第一個版本，發到網上。然後，石沉大海。沒有正反饋，也沒有負反饋。那種感覺，就像對着深淵呼喊，卻連一點回聲都沒有。&lt;/p&gt; 
&lt;p&gt;這是一種絕望的感覺：無響應之地，即絕望之地。&lt;/p&gt; 
&lt;p&gt;後來我試着把想法發給朋友，大多沒了下文。有的朋友比較直接：「這事未來可能需要，但做不成，也不該是你來做。」自我懷疑像野草一樣瘋長。我混跡在各種技術社羣，卻不敢介紹自己的項目，怕被人覺得不靠譜。那段時間，協議本身的設計也遇到了瓶頸。感覺自己選錯了方向，進退兩難。僅靠使命感，或許真的撐不過半年。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三、同路人，在縫隙中聚集&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;轉機出現在我決定硬着頭皮走出去之後。2024 年 10 月，在一個出海社羣裏，我鼓起最大勇氣，介紹了我的項目。沒想到，立刻有人加我好友，説「你這個東西還蠻有想法的」。這是我收到的第一個正向反饋，至今都記得。&lt;/p&gt; 
&lt;p&gt;後來，通過朋友介紹，我認識了一位海外做智能體創業的朋友。他看到我的東西，脱口而出：「你這個協議非常不錯。」那一刻，我感覺像是找到了知己。他後來成了我事實上的「聯合發起人」，還把我引薦給了 W3C 的「Web Agent」工作組。我把工作組所有的歷史郵件和技術文檔翻了個遍，又從牛津大學一個類似的項目裏汲取了養分，加上之前對 Web 3.0 去中心化理念的思考，ANP 協議的技術路線終於清晰了起來。&lt;/p&gt; 
&lt;p&gt;真正的東風，來自行業本身。2025 年 3 月份 Anthropic 發佈 MCP 協議，以及谷歌發佈 A2A，整個行業開始意識到協議的重要性。因為我一直在公眾號和社區裏分享思考，很快就有人找了過來。我的公眾號粉絲開始上漲，加我的人也越來越多。聲網 RTE 社區邀請我去做線上分享，那是我第一次面對幾千人完整地介紹 ANP，效果出乎意料的好。關注的人多了，我順勢建起了開源社區。現在，ANP 協議在 GitHub 上有了很多的貢獻者，我們的線上討論羣也聚集了上千位同路人。今年 4 月，在互聯網協會成立了智能體互聯網工作組，我們是核心參與方。5 月，我們又牽頭在 W3C 成立了 AI Agent Protocol 社區組，很多國內外的大廠比如華為、谷歌、字節、微軟、螞蟻、中移動等，都是社區組成員。雪球，就這麼滾了起來。這一切，都是當初那個在絕望中掙扎的我，完全無法預料的。&lt;/p&gt; 
&lt;p&gt;一位大廠前技術高管給我留言：「請保持在技術深水區游泳的勇氣。真正的協議戰爭從來不是功能堆砌，而是世界觀的對決」。我不再是一個人了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;四、功成，不必在我&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;質疑聲一直都在。有人覺得這事沒商業模式，有人覺得技術還不成熟。我現在心態很平和，有價值的思考我聽，純粹的吐槽自動過濾。我判斷自己成功的概率，可能有三成。最大的風險，已經不是大廠下場競爭，而是大模型技術本身的發展，如果一個足夠好用的智能體遲遲無法誕生，那協議也就成了無源之水。&lt;/p&gt; 
&lt;p&gt;但我也想清楚了，什麼叫成功。如果 ANP 最終沒有成為主流，但它的核心理念和設計能成為未來行業標準的一部分養料，那我們社區的目標也就達成了。歸根結底，我們想構建的是一個開放的互聯網，這是我們社區的理念，也是我們社區最有價值的東西。只要我們的理念能夠成功，就是我們社區的成功。所謂「功成不必在我」。如果有其他人或組織有同樣的理念，我們社區會無保留開放我們的技術。&lt;/p&gt; 
&lt;p&gt;在一次分享的結尾，我放了一頁 PPT，上面寫着「連接即力量」。我真正想説的是，我們希望互聯網迴歸到最原始的、開放連接的設想：只要一個人能夠自由地連接信息、連接他人、連接工具，他就擁有了改變世界的能力。&lt;/p&gt; 
&lt;p&gt;最後，做自己熱愛的事情，事情本身會滋養人的。希望你也能夠找到你真正熱愛的事情。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;我們的開源社區：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;GitHub: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fagent-network-protocol%2FAgentNetworkProtocol" target="_blank"&gt;https://github.com/agent-network-protocol/AgentNetworkProtocol&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#252933; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;如果你也對智能體通信協議感興趣，或者有類似的需求，歡迎聯繫我們：&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;微信：flow10240&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;郵箱：chgaowei@gmail.com&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/9297178/blog/18638237</link>
      <guid isPermaLink="false">https://my.oschina.net/u/9297178/blog/18638237</guid>
      <pubDate>Sat, 10 May 2025 13:51:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>圖形格式 PNG 發佈 3.0 版本規範</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;PNG（Portable Network Graphics），便攜式網絡圖形，是一種採用無損壓縮算法的位圖格式，支持索引、灰度、RGB 三種顏色方案以及 Alpha 通道等特性。其設計目的是試圖替代 GIF 和 TIFF 文件格式，同時增加一些 GIF 文件格式所不具備的特性。PNG 文件的擴展名為.png。&lt;/p&gt; 
&lt;p&gt;6 月 24 日，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.w3.org%2FTR%2Fpng-3%2F" target="_blank"&gt;PNG 正式發佈 3.0 版本規範&lt;/a&gt;，並標記為「Recommendation（推薦）」狀態，意味着正式成為 W3C 標準。&lt;/p&gt; 
&lt;p&gt;&lt;img height="930" src="https://static.oschina.net/uploads/space/2025/0625/192132_To5V_2720166.png" width="1636" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"&gt;PNG 3.0 規範支持 HDR（高動態範圍）功能，能夠在保證色彩豐富度的同時，實現更高的亮度和對比度，增強圖像的視覺效果。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"&gt;此外，它還支持 APNG 動畫，使 PNG 格式能夠用於動畫製作，並且正式支持 Exif 數據，可以存儲如版權信息、相機鏡頭和照片的 GPS 位置等附加信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;目前，多個瀏覽器和軟件（如 Chrome、Safari、Firefox、iOS/macOS、Photoshop 等）以及一些硬件和工具都已支持新的 PNG 規範。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357264/png-3-spec</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357264/png-3-spec</guid>
      <pubDate>Sat, 10 May 2025 11:25:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Oasis —— 3D 打印智能玻璃容器</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Oasis 是一款完全開源、主要由 3D 打印而成的智能玻璃容器。它為苔蘚、蕨類植物、蘭花等喜濕植物提供了理想的生長環境。其設計包括：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oasis-terrarium.com/docs/random_notes/#light-intensity"&gt;大功率 LED 照明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;為植物提供水分並保持高濕度的噴霧器&lt;/li&gt;
&lt;li&gt;風扇用於空氣流通&lt;/li&gt;
&lt;li&gt;用於監測環境條件的温度/濕度傳感器&lt;/li&gt;
&lt;li&gt;wifi 連接允許通過手機或電腦進行控制和配置（參見&lt;a href="https://oasis-terrarium.com/docs/usage_guide/#web-interface"&gt;網絡界面&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;外部尺寸：直徑約 8 英寸，高約 13 英寸&lt;/li&gt;
&lt;/ul&gt;

&lt;p style="text-align:start"&gt;&lt;img alt="" height="489" src="https://static.oschina.net/uploads/space/2025/0625/153625_COKE_4252687.jpg" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;訪問網站查看圖片、構建細節等：&lt;a href="https://oasis-terrarium.com/"&gt;https://oasis-terrarium.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/oasis</link>
      <guid isPermaLink="false">https://www.oschina.net/p/oasis</guid>
      <pubDate>Sat, 10 May 2025 10:49:00 GMT</pubDate>
    </item>
    <item>
      <title>國家網絡身份認證公共服務管理辦法 7 月 15 日起施行</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;公安部等部門近日聯合公佈的《&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mps.gov.cn%2Fn6557558%2Fc10087550%2Fcontent.html" target="_blank"&gt;國家網絡身份認證公共服務管理辦法&lt;/a&gt;》（以下簡稱《管理辦法》）將於 2025 年 7 月 15 日起施行。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="286" src="https://oscimg.oschina.net/oscnet/up-4b433ec984b38d283dee4d9335da41dbb7a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《管理辦法》共 16 條，主要規定四方面內容。一是明確了國家網絡身份認證公共服務及網號、網證的概念、申領方式；二是明確了使用國家網絡身份認證公共服務的效力、應用場景；三是強調了國家網絡身份認證公共服務平台、互聯網平台等對數據安全和個人信息保護的責任；四是對未成年人申領、使用國家網絡身份認證公共服務作出特殊規定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《管理辦法》明確網號、網證的自願使用原則，鼓勵有關主管部門、重點行業、互聯網平台按照用户自願原則推廣應用，但同時保留、提供現有的或者其他合法方式進行登記、核驗身份。《管理辦法》鼓勵互聯網平台接入國家網絡身份認證公共服務，但應當保障未使用網號、網證的用户與使用網號、網證的用户享有同等服務。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《管理辦法》嚴格依照個人信息保護法等規定，充分保護公民個人信息權益。在信息收集方面，對選擇使用網號、網證登記、核驗真實身份的用户，除法律、行政法規另有規定或者用户同意外，互聯網平台不得要求用户另行提供明文身份信息。在信息提供方面，國家網絡身份認證公共服務平台堅持「最小化提供」原則，對依法需要核驗用户真實身份但無需留存法定身份證件信息的，僅向互聯網平台提供核驗結果；對依法確需獲取、留存用户法定身份證件信息的，經用户單獨同意，可以向互聯網平台提供必要的明文身份信息。對法律、行政法規規定應當履行協助義務的，國家網絡身份認證公共服務平台應當依法提供相關信息，但提供的信息僅限網號、網證對應的真實身份信息和認證日誌信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，國家網絡身份認證公共服務平台已經上線運行，用户可通過國家網絡身份認證 App 申領並使用網號、網證，以減少相關服務管理環節對個人信息的採集、留存，實現公民身份信息「可用不可見」，同時降低互聯網平台在個人信息保護方面的投入成本。（科技日報）&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357253</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357253</guid>
      <pubDate>Sat, 10 May 2025 10:27:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>.NET Core 工作流 WorkFlow 流程控制條件審批（執行動作）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h1&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;span&gt;控制條件審批（執行動作）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;官網：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://www.wikesoft.com&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;學習版演示地址：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fworkflow.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://workflow.wikesoft.com&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;學習版源代碼下載：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/wikesoft/WorkFlow"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;https://gitee.com/wikesoft/WorkFlow&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow2.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;演示地址：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fworkflow2.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://workflow2.wikesoft.com&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow2.0-Vue3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;演示地址：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fworkflow2-vue3.wikesoft.com%3A8080%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://workflow2-vue3.wikesoft.com:8080/&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;WikeFlow2.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;幫助文檔：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwikeflowhelp.wikesoft.com%2F" target="_blank"&gt;&lt;u&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;http://wikeflowhelp.wikesoft.com/&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;説&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;明：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;1、執行動作=流程設計設置的連接線。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;2、該文檔講解某一流程節點的執行動作的顯示和隱藏。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;3、應用場景：如不同的條件進入不同的審批流程，如&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&amp;nbsp; &amp;nbsp;3.1、如果員工提交的費用報銷單超過 5000，則要求部門經理提交給副總。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&amp;nbsp; &amp;nbsp;3.2、如果員工提交的費用報銷單沒有超過 5000，則直接提交給財務人員。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#337ab7"&gt;&lt;span&gt;&amp;nbsp; 條件表達式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;當一個節點上有多條線路可以選擇時，流程引擎會將未設置條件表達式和滿足條件表達式的連接線顯示出來。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;規則：條件表達式裏設置 Key 值，通過設置 Key 和 Key 對應的 SQL 語句。最後再通過 SQL 查詢的結果替換條件表達式裏的 Key。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;strong&gt;實際應用：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;1、如果員工提交的費用報銷單超過 5000，則要求部門經理提交給副總。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;2、如果員工提交的費用報銷單沒有超過 5000，則直接提交給財務人員。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;img alt="" height="677" src="https://oscimg.oschina.net/oscnet/up-2ea64d81d457fe6e8dbe46ffd175000c84e.png" width="1336" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;strong&gt;1、【提交副總（&amp;gt;5000）】設置&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="border-collapse:collapse; border:1.0000pt outset #000000; font-family:&amp;quot;Times New Roman&amp;quot;; font-size:10pt; margin-left:5.4000pt; width:681.0000pt"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;條件表達式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;[SumAmmount]&amp;gt;5000&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL Key&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SumAmmount&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL 語句&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SELECT SUM(AMOUNT) FROM&amp;nbsp; COST_DETAIL WHERE COST_ID IN (SELECT ID FROM COST WHERE INSTANCEID= '[instanceId]')&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;br&gt; &lt;img alt="" height="757" src="https://oscimg.oschina.net/oscnet/up-c63425ce2ed3912d3112796ad33681e981b.png" width="1495" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;&lt;strong&gt;2、【提交財務審核 (不超過 5000)】設置&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="border-collapse:collapse; border:1.0000pt outset #000000; font-family:&amp;quot;Times New Roman&amp;quot;; font-size:10pt; margin-left:5.4000pt; width:681.0000pt"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;條件表達式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:1.0000pt outset #000000"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;[SumAmmount]&amp;lt;=5000&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL Key&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SumAmmount&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:1.0000pt outset #000000; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SQL 語句&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#ffffff; border-bottom:1.0000pt outset #000000; border-left:none; border-right:1.0000pt outset #000000; border-top:none"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SELECT SUM(AMOUNT) FROM&amp;nbsp; COST_DETAIL WHERE COST_ID IN (SELECT ID FROM COST WHERE INSTANCEID= '[instanceId]')&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;br&gt; &lt;span&gt;&lt;span&gt;&lt;img alt="" height="726" src="https://oscimg.oschina.net/oscnet/up-cf93c2d39e110a842fb999426d0a524fc47.png" width="1480" referrerpolicy="no-referrer"&gt;&lt;br&gt; &lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;假如一部員工提交的費用報銷單總額是 6000 元，在部門主管處理節點。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;【提交副總（&amp;gt;5000）】的條件表達式最後會轉換成 6000&amp;gt;5000。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;【提交財務審核 (不超過 5000)】的條件表達式最後會轉換成 6000&amp;lt;=5000。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;最後【提交財務審核 (不超過 5000)】這條線則不會顯示，【提交提交副總（&amp;gt;5000）】這條線會顯示出來。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;條件表達式可以設置多個 SQL KEY ，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;條件表達式支持.net if 判斷的所有寫法，並且要求所有的邏輯判斷跟.net 的 if 判斷寫法一樣。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;特別提示：判斷相等是要寫「==」而不是「=」，判斷不相等要用「!=」，而不是"&amp;lt;&amp;gt;"。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;SQL 可以傳參數[instanceId]和[userId]，流程引擎會自動替換[instanceId]和[userId]。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;[instanceId]和[userId]兩個參數不是必須，如果你的 SQL 語句中帶有[instanceId]、[userId]會自動替換實際的值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#e53333"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;特別提示：SqlServer 的 SQL 語句，有同學習慣「[字段名]」的寫法，當你的字段名是 instanceid 時，如果你用[字段名]的寫法，SQL 語句在替換參數的時候出問題，SQL 執行的時候會報錯，下面的 SQL 寫法黃色部分是有問題的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;錯誤示例：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;SELECT SUM(AMOUNT) FROM&amp;nbsp; COST_DETAIL WHERE COST_ID IN (SELECT ID FROM COST WHERE&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;span style="background-color:#ff9900"&gt;&lt;span&gt;&lt;span style="color:#ffffff"&gt;[INSTANCEID]= '[instanceId]'&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span style="color:#393939"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357244</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357244</guid>
      <pubDate>Sat, 10 May 2025 09:33:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>對話 MoonBit 張宏波 ：很多 AI Coding 只提供情緒價值，而我們要重做一門編程語言</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;img height="1080" src="https://oscimg.oschina.net/oscnet/up-8342e8624d18299ad8c0db9edcfd1135b17.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;作者&lt;/span&gt;&lt;em&gt;&lt;span&gt;｜&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span&gt;週一笑&lt;/span&gt;&lt;/span&gt;&lt;br&gt; &lt;span&gt;編輯&lt;/span&gt;&lt;em&gt;&lt;span&gt;｜&lt;/span&gt;&lt;span style="color:#999999"&gt;&lt;span&gt;王兆洋&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;2022 年末，當 ChatGPT 的火種剛剛在全球點燃，引發第一波的震撼與驚歎時，張宏波進行了一項實驗。他將自己剛剛孕育雛形的編程語言&lt;/span&gt;&lt;span&gt;MoonBit&lt;/span&gt;&lt;span&gt;的文法（Grammar）——一段描述語言規則的枯燥文本，餵給了那個強大的新模型。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;結果讓他始料未及。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;「它就能生成 MoonBit 代碼，雖然它之前從未‘見過’這門語言」，時隔兩年多，張宏波回憶起那一刻，依然反覆使用一個詞：「不可思議。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;那一刻的「不可思議」，如今已結出果實。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;2025 年 6 月 18 日，經過無數次的迭代與優化，MoonBit 發佈了它的 Beta 正式版。它正在擺脱「實驗性技術」的標籤，演進為一門適用於企業正式場景的工具。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;或許大多數人對「編程語言」的認知還停留在大學課堂上的 C 語言，或是如今因 AI 而無處不在的 Python。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;簡單來説，MoonBit 就是一門全新的編程語言，和它們一樣，是構建所有軟件的基石。它的目標是成為一門可以用來開發網站、APP、服務器後台等各種應用的「通用語言」。但在 AI 時代，它選擇了一條與前輩們截然不同的道路。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;近年來，像 GitHub Copilot、Cursor 這樣能幫你自動寫代碼的 AI coding 工具層出不窮，AI coding 工具的主要目標是提升開發者在現有語言上的編程效率，張宏波和他的團隊也是這些工具的重度用户，他坦言，AI 的輔助讓他「一天提交七八個 PR」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;但這些工具終究是「外掛」，是在現有語言的規則下進行輔助。而 MoonBit 所做的，是從源頭開始，重新設計一張更適合「AI 副駕駛」來閲讀和馳騁的地圖。這就是 MoonBit「AI 原生」的核心理念：它並非要自己成為一個 AI，而是要創造一門能讓 AI 用起來最得心應手、最不容易出錯的語言。它的語法、類型系統、錯誤處理機制等，在設計之初就深度考慮瞭如何讓 AI 更容易地理解、生成和驗證代碼，從而解決 AI 編程中「代碼寫出來但不知道怎麼維護」等痛點，保證代碼的可維護性 。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;張宏波舉了一個例子，MoonBit 使用 let x = 3 而不是類似 Go 語言的 x := 3。因為 let 關鍵字為 AI 提供了一個明確的「新變量聲明」信號，讓 AI 在生成代碼時可以做「受限解碼」，從而更可靠。而後者則有歧義，AI 難以判斷是新聲明還是賦值，容易出錯 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;簡單來説，一個設計良好的&lt;/span&gt;&lt;span&gt;AI 原生&lt;/span&gt;&lt;span&gt;語言，能讓通用的 AI Coding 工具在操作這門語言時表現得更好。更進一步，MoonBit 團隊正在開發自己的 AI 編程 Agent。因為完全掌控 MoonBit 的工具鏈，所以可以做到通用工具無法實現的功能。例如，通過分析代碼結構，併發地讓 AI 去修復多個 Bug，而不是像其他工具那樣只能一個一個地串行修復。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;要實現如此構想，需要對編程語言的整個工具鏈有極強的掌控力與理解。而這一切，正來源於張宏波近二十年的技術積累。時間撥回到 2009 年，他在清華大學與微軟亞洲研究院的聯合培養項目中，完成了自己的本科畢業設計——一門名為「悟空」的動畫編程語言 。此後，從研究可以創造新語言的「元編程語言」，到進入賓夕法尼亞大學攻讀博士，他的學術路徑始終精準地指向編譯與語言設計這個基礎軟件領域最核心的地帶 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;一個偶然的機遇讓他的人生軌跡從學術轉向工業。當時，金融巨頭彭博社（Bloomberg）急需一位能維護其核心交易軟件的 OCaml 編譯器專家，這個小眾而關鍵的崗位，讓彭博為還在讀博的張宏波開出了難以拒絕的條件，最終使他中斷學業，投身華爾街 。在彭博，他再次展現了自己的天賦與熱情——為了統一公司上千萬行 JavaScript 前端代碼與 OCaml 後端的技術棧，他在業餘時間，獨自開發了一個能將 OCaml 高效編譯成可讀 JavaScript 的編譯器。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;這個無心插柳的項目，後來演變成了知名的開源項目 BuckleScript（ReScript 的前身），並吸引了另一家科技巨頭 Facebook 的注意。2017 年，當張宏波決定回國時，Facebook 為了留住這位關鍵的編譯器開發者，破例允許他作為唯一的員工在中國遠程辦公 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;在 Facebook 的五年，是他技術生涯的成熟期，也是一段漫長的蓄力。直到 2022 年，幾個關鍵節點彙集到了一起：個人上，他渴望在優厚的薪資之外，尋求更大的挑戰和創造空間；外部，他昔日在清華的導師 Harry &lt;/span&gt;&lt;span&gt;沈向洋&lt;/span&gt;&lt;span&gt;向他發出了加入 IDEA 研究院（粵港澳大灣區數字經濟研究院）的邀請，在「加入已經擁有數百人團隊的某編程語言團隊」和「從零開始組建自己的團隊」之間，他選擇了後者——那個更具不確定性，也更具想象力的選項。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;於是，在深圳，MoonBit 項目正式立項。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;命運的奇妙之處在於它的時機。MoonBit 項目啓動於 2022 年 10 月，一個月後，ChatGPT 發佈，引爆了全球的 AI 浪潮。當所有主流編程語言——Java、Python、Rust——都已在 AI 時代來臨前定型，只能在現有基礎上「嫁接」AI 能力時，MoonBit 這門「生於 AI 紀元之初」的語言，獲得了一個千載難逢的歷史機遇。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="428" src="https://oscimg.oschina.net/oscnet/up-e39c86ac937a5c9d8a3bb426b93b8edddf9.png" width="750" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;「我們幾乎是沒有浪費任何時間」，張宏波説 。從使用 Llama 模型第一次在他個人電腦上成功生成 MoonBit 代碼的那天起，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;團隊就決定「All-in」 AI。他們開始從語言設計的最底層，從語法的每一個細節，去思考如何讓 AI 能更可靠、更高效地生成代碼。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;兩年半後的今天，MoonBit Beta 版本中，在語言層面提供了原生的異步與錯誤處理機制。相較於 Python 需要通過 async/await 和第三方庫實現的異步模型，MoonBit 提供了一種更自然、零語法負擔的併發範式，並在編譯期就能追蹤錯誤傳播路徑，為構建穩定、可維護的智能系統打下了堅實基礎。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;MoonBit 的故事，既是張宏波個人技術生涯的延續，也是對「AI 時代，編程究竟該如何演變？」的另一種回答。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;在 MoonBit Beta 正式發佈，在架構穩定性和工程實用性上取得關鍵突破，正式進入可落地應用的新階段，朝着可被實際部署的基礎設施技術前進的關鍵節點，我們和張宏波聊了聊，以下為對話實錄，經不改變原意的編輯。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#fffed5"&gt;AI Coding 有時候提供的只是情緒價值，我們要從底層做一門新語言，這才是 AI 編程的未來&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;人&lt;/span&gt;&lt;span style="color:#454545"&gt;：您如&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="color:#454545"&gt;何理解「AI 原生」編程語言這個概念？在這個理念上，MoonBit 與業界其他探索者有何不同？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;在大模型時代，Python 可能並沒有大家想象中那麼大的優勢，它只是起步快一點。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;對於「AI 原生」，很多人有不同的理解。比如 Mojo，它的創始人 Chris Lattner 是 LLVM 項目的奠基人，他對「AI 原生」的理解是，讓 Mojo 這門語言非常適合開發高性能計算程序。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我們認為，AI 原生編程語言的核心議題是：如何讓 AI 更高、更好、更高效地、甚至是併發地生成目標代碼。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;為什麼我覺得這個方向的市場是最大的？開發高性能算子固然重要，但這就像用 C 語言寫操作系統內核，是金字塔尖少數人的工作，需求量有限 。而 AI agent，我們自己也開發了很多，它的生態其實很小，核心邏輯可能就幾千行代碼，很難構成真正的技術護城河，一個通用的庫就能解決大部分問題。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，我們對「AI 原生」的理解聚焦於賦能大模型本身。我們希望大模型可以更高效、併發地生成可靠、高性能的 MoonBit 代碼。這意味着最終生成的代碼不僅可信度要更好、性能要高，而且整個生成過程也必須是快速且可靠的 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;span style="color:#454545"&gt;：這個「為 AI 而設計」的理念，具體是如何影響 MoonBit 語言本身的設計決策的？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;這個理念帶來了深刻的變化，很多傳統語言設計中非常重視的特性，在我們看來優先級就沒有那麼高了 。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;最直接的一點就是，我們不會像過去那樣，過度強調語法是不是要節省一兩個字符，&lt;/span&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;因為未來絕大部分代碼都將由 AI 生成，為人類節省幾秒鐘的打字時間意義不大。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;更重要的是，你需要在一個巨大的設計空間裏找到一個精妙的平衡點。這個空間的兩端，一端是像 Python、 JavaScript 這樣最自由（liberal）的語言，另一端是像 Rust，尤其是 Lean（一種用於形式化數學證明的邏輯編程語言）那樣最嚴格的語言 。Lean 的嚴格性可以從數學上證明代碼的正確性，但正因如此，它對人類來説極難書寫 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;我們的實踐經驗是，如果一門語言過於複雜，以至於人類專家都很難一次性寫對，那麼 AI 大概率也無法穩定地生成正確的代碼 。我們發現，如果一個大模型在某個問題上嘗試一兩次都無法搞定，那它基本就永遠也搞不定了，至少以目前的技術水準是這樣。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，MoonBit 的選擇是在中間找到一個最佳平衡（sweet spot）。我們既要保證代碼的可靠性，又不能讓類型系統過於複雜，以至於超出 AI 的能力邊界。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：既然 AI 是核心，那麼在您看來，一個真正的「AI 原生」語言，未來需要在語言層面提供什麼樣的功能？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我認為它會深度影響語言的設計，而不僅僅是一個外掛。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我們現在主要關注的是代碼生成，但這只是開始。例如，未來我們可能會有新的語法特性來原生支持 AI。比如我寫完一個函數，我希望語言能直接支持生成它的文檔字符串（doc string），而不是像現在這樣需要通過外部插件來完成。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;這就像一門為數據庫設計的語言，如果它不在語法層面提供對數據庫操作的支持，只是通過外掛庫來連接，那麼它就不能算「數據庫原生」的。AI 原生語言也是同樣的道理，它需要在語言的基因裏就植入與 AI 協同的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：很多開發者擔心，AI 生成的代碼雖然快，但項目做大後會變得難以維護，像一個「黑盒」。MoonBit 作為一門「為 AI 而生」的語言，是如何從設計上解決這個「可維護性」問題的？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;這個擔憂非常普遍，也切中了要害。我之前也看到有人吐槽説，用 AI 兩天寫了一個視頻編輯器，但完全不知道後續該怎麼維護。這通常是因為代碼是用動態語言寫的，正所謂「動態語言一時爽，重構火葬場」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，解決這個問題的核心在於&lt;/span&gt;&lt;strong&gt;&lt;span&gt;代碼的可維護性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;，而這正是需要從編程語言的底層設計上來保證的。比如，MoonBit 擁有一個非常強大的靜態類型系統。我們會為每個代碼包（package）自動生成一個形式化的「簽名」（我們稱之為&lt;/span&gt;&lt;span&gt;MBI 文件&lt;/span&gt;&lt;span&gt;），它就像一份精確的接口摘要。當你需要理解或維護一段代碼時，你不再需要去閲讀海量的實現細節，只需查看這份由工具保證其正確性的摘要文檔即可，大大降低了維護成本。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;此外，我們還非常注重語言的「&lt;/span&gt;&lt;span&gt;局部化&lt;/span&gt;&lt;span&gt;」（localization）設計。這意味着，當你修改一個函數時，它的影響應該被嚴格限制在局部，不會意外地波及到其他不相關的代碼。很多語言，比如 C++或者 OCaml，改動一個地方可能會導致全局語義發生變化，這對於人類和 AI 來説都是一場災難。一個具有良好局部性的語言，能讓 AI 在處理代碼時，只用聚焦於當前的小代碼塊，極大地簡化了上下文，從而提升了維護性和可靠性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：您認為在 AI 時代，編程語言本身的價值會發生變化嗎？它會更偏向於讓人類使用，還是讓 AI 使用？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我認為未來是人機協同的模式，而不是單純給 AI 用的語言。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我個人感覺，AI 的智能水平可能正在接近一個平台期，指望它很快變得比人聰明很多並不現實。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;只要人類還需要審查（review）、理解和維護代碼，那麼語言就必須同時兼顧人類和機器的可讀性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;有趣的是，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;AI 的出現，反而可能會淘汰掉一些「過度為人類交互而設計」的東西&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。比如曾經有一個叫「結構化編輯器」的概念，它通過限制你的編輯方式來確保語法永遠正確。這種模式對人類的交互很友好，但對大模型來説卻是一種束縛，因為它破壞了代碼作為純文本的自由格式，反而不利於 AI 的理解和生成。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;所以，未來的編程語言設計，需要在兩者之間找到新的平衡：它要足夠結構化和清晰，以便機器能高效、可靠地處理；同時也要保持足夠的簡潔和直觀，讓人類能夠輕鬆地審查和驗證 AI 生成的結果。這正是我們在 MoonBit 中努力探索的方向。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：您提到 AI 能極大提升效率，在 MoonBit 團隊內部，你們具體是如何利用 AI 來輔助日常工作的？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我們每天都在高強度地使用 AI，可以説，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;如果沒有 AI，我的個人生產力會大幅下降&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。特別是現在我需要花更多精力帶領團隊、考慮各方面的事情，寫代碼的時間越來越少。AI 的輔助真的可以讓我的生產力翻倍地提高。舉個例子，就在前一天，我在不到 24 小時內，利用 AI 輔助完成了七八個代碼提交（Commit/PR），這在過去是難以想象的。這些工作有的是修復 Bug，有的是補充文檔和註釋，AI 都能處理得很好。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;除了個人提效，我們還在探索更有組織性的 AI 用法。比如，MoonBit 現在最缺的就是生態庫，我們暢想在年底之前，能有上百個「AI Agent」在夜以繼日地為 MoonBit 寫代碼，將其他語言的成熟生態（比如一些加密算法庫）高效地「搬運」過來。這比僱傭 100 個工程師要容易得多。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;更進一步，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;因為我們完全掌控 MoonBit 的語言和工具鏈，我們可以開發出比通用工具更高效的 AI Agent。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;例如，當需要修復代碼庫中的多個警告或 Bug 時，通用工具可能只能一個一個地串行修復。而我們的 Agent 可以利用對 MoonBit 代碼結構的深度理解，先將代碼庫智能地拆分成許多互不影響的小塊，然後併發地讓大模型去並行修復，最後再將結果安全地合併回來。這種利用語言設計來優化 AI 工作流的能力，是我們的核心優勢之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：你們團隊也使用 Cursor 等通用 AI 編程工具。作為資深開發者和語言設計者，如何評價這些當紅產品？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我們團隊確實都用，包括 Cursor、Copilot、Codex，以及我們自己的 moon-agent。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我個人感覺，還是小團隊更有活力，比如 Cursor 的整體體驗就要比 Copilot 強很多。可以説，如果 Copilot 做得足夠好，根本不會留給 Cursor 這樣的初創公司機會。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;但同時，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我也認為像 Cursor 這類產品的技術護城河並沒有大家想象中那麼高&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。它的核心功能可以分為兩部分：一個是你打字時實時補全代碼（tap-to-type），另一個是基於對話的 Agent。前者技術含量更高，可能需要訓練專門的小模型，&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;但它提供的更多是一種讓你感覺編碼更快的「情緒價值」，對生產力的根本提升有限。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;真正能大幅提升生產力的是後者，即 Agent 幫你編寫完整的代碼塊，而這部分的技術門檻並不算特別高，更多是依賴底層大模型（基模）的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;此外，&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;過度依賴通用 AI 編程工具還存在被「卡脖子」的風險&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;比如 Google 之前就限制過插件的安裝。我們做 MoonBit，堅持自己寫底層的語言服務，就是希望站在產業鏈更上游的位置，不把自己的命運交到別人手裏。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;我們的策略是，不做通用的 AI 編程工具，而是專注於為 MoonBit 這一門語言提供最強大、最深度的 AI 增強功能，這才是我們自己寬廣的護城河。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="background-color:#fffed5"&gt;比現有主流語言都好一個數量級以上，才能搶奪市場，beta 版發佈意味着進入穩定期&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：我注意到 MoonBit 初期非常強調在 WebAssembly 領域的優勢，這是出於怎樣的戰略考量？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;這是一個刻意的戰略選擇，很多人會誤以為 MoonBit 只做 WebAssembly，其實我們支持所有主流後端，包括 JavaScript 和原生機器碼。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;我們之所以首先聚焦 WebAssembly，是因為新語言的推廣週期非常長，動輒需要數年才能獲得第一個真正的商業用户。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;作為一個有資金支持的機構項目，我們不可能像個人愛好者那樣「為愛發電」，等上十年再拿出成果。我們需要在一年、兩年、三年，每年都交付出實實在在的東西，讓大家看到進展。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;要在這麼短的時間內讓開發者願意嘗試一門全新的語言，唯一的辦法，就是在某個特定的、有痛點的平台上，做到比所有現有主流語言都好一個數量級以上。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;我們審視了一圈，發現 WebAssembly 就是那個機會。它在 2017 年才發佈 1.0 標準，而所有現在的主流語言，其核心設計都早已在那之前定型，它們在編譯到 Wasm 時，或多或少都有歷史包袱，導致性能和體積表現都不理想。最典型的例子就是 Go，一個「Hello World」程序編譯成 Wasm 後體積竟高達 1.8 兆，這與 Wasm 輕量的初衷背道而馳。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;MoonBit 作為一門沒有歷史包袱的新語言，完全可以為 Wasm 進行深度優化。我們的判斷是，我們有希望在這個單點上做到比所有對手都好一個數量級。事實也證明瞭這個策略的成功。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我們早期的商業客户，包括付費客户，幾乎都是看中了我們在 Wasm 後端上的搶眼表現，這讓我們獲得了寶貴的初始動力&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。有了這個根據地，我們才不會焦慮，可以更有耐心地去做更宏大的事情，比如完善我們的原生和 JavaScript 後端。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：你們近期宣佈項目進入了 Beta 里程碑，這對用户和社區意味着什麼？&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;Beta 版本的發佈主要意味着三件事。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;第一，語言特性已經足夠豐富，覆蓋了工業級開發的核心需求&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;包括完善的異步支持、泛型和錯誤處理。坦白説，我們 Beta 版的特性比 Go 1.0 發佈時還要全面。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;第二，也是更重要的，語法進入了穩定期。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;在此之前，為了追求最佳設計，我們迭代非常快，可能今天寫的代碼，兩週後就因為語法變動而無法編譯了。進入 Beta 階段後，我們承諾不會再輕易進行破壞性的語法修改，這意味着用户可以放心地在生產項目中使用 MoonBit，不用再擔心當「小白鼠」了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;第三，我們將建立更正規的社區溝通機制。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;過去很多決策是內部決定的，未來任何涉及語言語法的改動，我們都會通過公開的 RFC（Request for Comments）流程，與社區提前溝通，讓大家更早地參與進來，培養一種共建的參與感。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：MoonBit 作為一門新語言，如何解決生態冷啓動的問題？我注意到你們提到了「無縫融合 Python 生態」。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;生態確實是新語言最大的挑戰。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;關於 Python 生態，我們的策略是「複用」而非「重造」。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;Python 的官方解釋器 CPython 是用 C 語言寫的。由於 MoonBit 現在支持直接編譯到 C 代碼，我們就能實現與 C 的良好互操作，從而直接調用 CPython 的運行時。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;這意味着，我們可以為成熟的 Python 庫（如 Matplotlib、PyQt 等）編寫綁定（binding），讓開發者可以在 MoonBit 項目中直接使用它們，比如快速搭建一個 UI 原型。這提供了一條漸進式的遷移路徑：你可以先用 Python 庫快速出成果，然後逐步地、在性能瓶頸處用原生的 MoonBit 代碼重寫那部分功能，極大地降低了遷移成本和風險。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：MoonBit 的長期商業模式是什麼？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：我們長期的願景，是成為一家軟件服務公司，而非像 JetBrains 那樣售賣開發工具。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;我們的商業化分兩步走。短期內，通過為有深度定製需求（比如修改編譯器）的大客户提供授權和服務，我們完全可以覆蓋一個十幾人團隊的開銷，保證生存。我們的早期付費客户，比如那家數據庫公司，就是有這樣的需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;但我們真正的目標在更遠處。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;當 MoonBit 生態成熟，擁有百萬級用户和我們完全掌控的工具鏈（從 IDE 到包管理）後，我們將有能力打造一個前所未有的、高效的代碼交付雲平台。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;在這個平台上，用户只需通過自然語言提出需求（Prompt），我們的 AI Agent 就能利用對 MoonBit 語言的深度理解，自動地為你生成、構建、測試甚至部署一整個軟件服務。我們最終向用户交付的，是一個可以直接使用的軟件服務，而不僅僅是代碼。為了保護這個長遠目標，避免未來被雲廠商「摘桃子」，我們對編譯器的核心部分保留了所有權，這也是我們開源策略中相對保守一面的原因。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;一位編程語言「老兵」的二十年&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：在創立 MoonBit 之前，您已經在 ReScript 等多個編程語言項目上取得了卓越成就。能和我們分享一下您的這段技術歷程嗎？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我從 2009 年的本科畢設就開始做編程語言了。當時在清華大學和微軟亞洲研究院（MSRA）的聯合培養項目中，我開發了一款名叫「悟空」的動畫編程語言，算是一個小型的領域特定語言（DSL）吧。從那時算起，到現在快 20 年了。我的碩士課題則是一門「元編程語言」，即一種可以用來創造新編程語言的語言 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;我本來是在賓夕法尼亞大學讀編程語言的博士，但人生軌跡因為 OCaml 發生了變化。OCaml 是我深度參與維護的一門函數式編程語言。當時，紐約的彭博社（Bloomberg）收購了一家法國公司，其核心的金融衍生品定價軟件就是用 OCaml 的一個內部方言（dialect）寫的。市場上懂 OCaml 的人才非常稀缺，他們找不到人，於是就找到了我，並給了一份非常優厚的錄用信。最終我決定中止學業，碩士畢業後就直接去了紐約，負責維護他們那個私有的 OCaml 編譯器。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;在彭博工作期間，我又利用業餘時間開啓了一個新項目。當時（大約 2014 年），彭博已經擁有上千萬行用 JavaScript 寫的前端 UI 代碼，而後端則在使用 OCaml。為了統一技術棧，我寫了一個編譯器，可以把 OCaml 編譯成非常可讀、高效的 JavaScript 代碼。我的法國老闆（OCaml 正是法國人開發的）看到後非常喜歡，就讓我放下原來的業務，全職投入這個項目。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：這應該就是後來知名的 BuckleScript/ReScript 項目的前身了。聽説後來 Facebook 也因為這個項目向您拋出了橄欖枝？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是的。這個項目後來以 BuckleScript 的名字開源了，成了當時公司最受歡迎的開源項目之一 。到 2017 年，我個人想回國發展，但就在這時，Facebook 聯繫到我，説他們內部的 Facebook Chats 和 Messenger 等產品深度使用了我的編譯器，如果我走了，項目就沒人維護了，而他們內部有幾十人的團隊依賴這個工具鏈。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;為了留住我，Facebook 做出了一個破例的決定：允許我一個人在中國遠程辦公，繼續維護這個項目。要知道，Facebook 在中國是沒有辦公室的 。於是，我回國後，從 2017 年到 2022 年，一直在 Facebook 遠程參與這個項目。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;它也逐漸從 BuckleScript 演進成了一門獨立的、專門用於 Web 開發的編程語言——ReScript。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：是什麼契機讓您最終決定離開 Facebook，創立 MoonBit 呢？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;到了 2022 年，幾個因素彙集到了一起。首先，我在 ReScript 這個項目上已經投入了五六年，而 Facebook 的待遇非常優厚，我一個人在國內，薪資是按照硅谷頂尖標準來支付的。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;對我個人而言，我開始想追求一些薪資之外的東西。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;我之前在微軟亞洲研究院的導師 Harry，他從微軟退休以後，也回到了深圳。我們見了一面，深聊了一次 。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;他建議我來 IDEA 研究院這邊，靈活性會更大，可以組建自己的團隊。和自己的導師合作，彼此知根知底，完全不用擔心信任問題。&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;於是，我便來到了 IDEA，從零開始，創立了 MoonBit。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;套殼與否取決於你的 added value&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：提到「國產編程語言」，很多人會聯想到「套殼」的爭議。您如何看待這個問題？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;「套殼」現象確實很多 。但我們不擔心這個問題，因為 MoonBit 的代碼是完全公開的，我們甚至幾乎沒有使用任何第三方依賴，一切都是從零構建。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;我認為，判斷是否「套殼」的關鍵標準在於，你提供了多大的價值增量（added value）。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;比如，用 JavaScript 的 eval 函數，五行代碼就能做出一個「新語言」，但這沒有價值。相比之下，微軟的 TypeScript，雖然它最終也編譯成 JavaScript，但沒人會説它是套殼，因為它提供了一套強大而完善的類型系統，解決了 JavaScript 的原生痛點，帶來了巨大的價值增量 。反面例子是曾經的 CoffeeScript，它在很大程度上只是換了一套語法，提供的價值增量有限，那更像是一種套殼。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：作為國內為數不多投身基礎軟件核心領域的團隊，您覺得目前中國的技術環境缺少什麼？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;：我個人覺得，我們最缺的可能不是技術，也不是人才，而是兩樣東西：信心和伯樂。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;首先是信心。我們需要有一種發自內心的信念，覺得我們自己能做出世界一流的東西，而不是總想着等國外做出來了我們再去模仿。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;這種信仰必須是基於真實實力的，不是盲目自信。我之所以有信心做 MoonBit，也是因為我過去的經歷，比如 ReScript，它的技術含量其實已經比谷歌的 Dart 語言高很多，但因為種種非技術因素，沒有達到應有的高度，這是我一直的遺憾。這份遺憾，也成了我做 MoonBit 的動力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;&lt;span&gt;其次，我們缺少「伯樂」。中國的千里馬非常多，尤其是 90 後、00 後這一代，既有天賦又極其勤奮，他們的綜合能力，我個人覺得甚至比美國同齡人要強很多。但我們的文化環境，可能缺少那種由衷欣賞、不計回報去提攜和傳播好技術的「伯樂」氛圍。很多時候，你得先「拜碼頭」，或者用商業合作的方式才能獲得關注。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;這也是我們想把 MoonBit 做成的原因之一。我們不僅僅是想做出一門很多人用的語言，更希望把它成功地商業化。當我們成功之後，我們自己就能成為「伯樂」，因為我們真正懂技術，可以去識別和扶持下一代更聰明的年輕人，帶動一個良性的產業鏈發展。所以，我深切地感受到，我們缺的是伯樂，而不是千里馬。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;用 AI 吧，使勁用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：對於那些在 AI 時代希望提升自己競爭力的開發者，您有什麼建議？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：我的建議是高強度地去使用它，並且去理解它的能力邊界。AI 不是萬能的，你要清楚地知道它擅長做什麼，不擅長做什麼。比如，讓 AI 串行地去修改一百個編譯警告，效率可能還不如有經驗的開發者手動修改來得快。但如果你懂得利用工具，讓 AI 去併發地處理這些任務，效率就會指數級提升。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;AI 無疑會加劇馬太效應，拉大個體間的差距。厲害的人用上好的 AI 工具會變得更厲害。所以，年輕人應該更主動、更高強度地去擁抱它，瞭解它的脾性，而不是簡單地把它當成一個黑盒。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：對於那些想要嘗試 MoonBit 的開發者，您有什麼想説的？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;首先，我們的工具鏈非常好用。我們提供了一流的在線 IDE，你不需要在本地安裝任何東西，打開瀏覽器就能立即開始編寫 MoonBit 代碼。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;其次，現在加入是一個非常好的時機。MoonBit 剛剛進入 Beta 階段，生態系統還是一片全新的大陸。更早地參與進來，你不僅可以見證一門編程語言從零到一的成長過程，更有機會成為早期生態的核心貢獻者，留下自己的印記。MoonBit 本身在數據處理等方面有很多非常有意思的特性，我們把數據變換的體驗做得非常好，相信會給你帶來不一樣的感受。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;硅星人&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：最後，對於那些有志於投身基礎技術領域的年輕人，您有什麼經驗可以分享？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#303030; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="background-color:#b3e0e3; color:#454545"&gt;張宏波&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：我的建議是，要做好打持久戰的準備，並且先在產業界充分歷練。基礎軟件是一個週期特別長的領域，它不可能讓你一夜暴富，而是一個慢工出細活的過程。以我自己為例，我也是在個人職業生涯和財務上有了足夠的積累，不再為生計擔憂之後，才全身心投入到這件事情中來的。這個領域需要深厚的經驗積累，所以，年輕人如果心懷此志，最好先在相關的崗位上磨礪數年，再來挑戰。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357239</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357239</guid>
      <pubDate>Sat, 10 May 2025 09:26:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>德國汽車企業就開源軟件開發達成非競爭性合作</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;德國汽車行業的 11 家公司已就開源軟件開發達成非競爭性合作&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在德國汽車工業協會（VDA）的支持下，包括寶馬集團、大陸集團、ETAS GmbH 等 11 家汽車企業於 2025 年 6 月 24 日在第 29 屆國際汽車電子大會上簽署了在開源軟件開發方面進行前競爭性合作的&lt;strong&gt;諒解備忘錄 (Memorandum of Understanding，MoU)&lt;/strong&gt;，旨在提升汽車軟件開發的速度、效率和安全性，為建立開放協作的生態系統奠定基礎。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0625/171504_8ecy_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;隨着車輛軟件重要性與複雜性的增加，行業急需加快開發速度、提升效率並確保高質量與安全性。&lt;strong&gt;因大量車輛軟件用户無法直接接觸且不具差異化，所以可在開放協作生態中聯合開發相應軟件模塊&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;為使汽車系列軟件滿足功能安全需求，相關方開發了開創性的開源開發流程，為按相關標準認證做好準備，並通過 「代碼優先」 方法實現標準化及加快開發速度，即提供可執行軟件模塊而非詳細規格説明。&lt;/p&gt; 
&lt;p&gt;軟件開發在 Eclipse 基金會透明且無供應商依賴的環境中進行，屬於 S-CORE 項目一部分，該生態系統開放，既通過與行業標準軟件互操作性體現，也對歐洲及國際其他公司貢獻協作開放。&lt;/p&gt; 
&lt;p&gt;該倡議時間規劃顯示，2026 年將推出適用於自動駕駛平台系列開發的軟件範圍，其模塊化軟件範圍可調整或擴展，作為定製發行版供行業用於系列開發，使製造商和供應商能專注於差異化特性，同時共同維護核心組件，為創新奠定堅實基礎，也讓企業能專注於為客户創造差異化的部分。&lt;/p&gt; 
&lt;p&gt;VDA 主任馬庫斯・博利希表示，各方正共同構建一個面向未來且強大的軟件生態系統，該系統開放、透明且安全。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357237</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357237</guid>
      <pubDate>Sat, 10 May 2025 09:18:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
